   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"waypoints.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.stateGetPositionEnu_i,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	stateGetPositionEnu_i:
  25              	.LFB71:
  26              		.file 1 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: degrees*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   uint32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i *ltp_def)
 441:./state.h     **** {
 442:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 443:./state.h     ****   /* convert to float */
 444:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 445:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 446:./state.h     ****   HIGH_RES_RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 447:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 448:./state.h     **** 
 449:./state.h     ****   /* clear bits for all local frame representations */
 450:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 451:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 453:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 454:./state.h     **** 
 455:./state.h     ****   state.ned_initialized_i = TRUE;
 456:./state.h     ****   state.ned_initialized_f = TRUE;
 457:./state.h     **** }
 458:./state.h     **** 
 459:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 460:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f *utm_def)
 461:./state.h     **** {
 462:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 463:./state.h     ****   state.utm_initialized_f = TRUE;
 464:./state.h     **** 
 465:./state.h     ****   /* clear bits for all local frame representations */
 466:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 467:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 468:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 469:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 470:./state.h     **** }
 471:./state.h     **** /*******************************************************************************
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 474:./state.h     ****  *                                                                             *
 475:./state.h     ****  ******************************************************************************/
 476:./state.h     **** 
 477:./state.h     **** /************* declaration of transformation functions ************/
 478:./state.h     **** extern void stateCalcPositionEcef_i(void);
 479:./state.h     **** extern void stateCalcPositionNed_i(void);
 480:./state.h     **** extern void stateCalcPositionEnu_i(void);
 481:./state.h     **** extern void stateCalcPositionLla_i(void);
 482:./state.h     **** extern void stateCalcPositionUtm_f(void);
 483:./state.h     **** extern void stateCalcPositionEcef_f(void);
 484:./state.h     **** extern void stateCalcPositionNed_f(void);
 485:./state.h     **** extern void stateCalcPositionEnu_f(void);
 486:./state.h     **** extern void stateCalcPositionLla_f(void);
 487:./state.h     **** 
 488:./state.h     **** /*********************** validity test functions ******************/
 489:./state.h     **** 
 490:./state.h     **** /// Test if local coordinates are valid.
 491:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void)
 492:./state.h     **** {
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 495:./state.h     **** }
 496:./state.h     **** 
 497:./state.h     **** /// Test if global coordinates are valid.
 498:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void)
 499:./state.h     **** {
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 501:./state.h     **** }
 502:./state.h     **** 
 503:./state.h     **** /************************ Set functions ****************************/
 504:./state.h     **** 
 505:./state.h     **** /// Set position from ECEF coordinates (int).
 506:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i *ecef_pos)
 507:./state.h     **** {
 508:./state.h     ****   VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 509:./state.h     ****   /* clear bits for all position representations and only set the new one */
 510:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 511:./state.h     **** }
 512:./state.h     **** 
 513:./state.h     **** /// Set position from local NED coordinates (int).
 514:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i *ned_pos)
 515:./state.h     **** {
 516:./state.h     ****   VECT3_COPY(state.ned_pos_i, *ned_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from local ENU coordinates (int).
 522:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i *enu_pos)
 523:./state.h     **** {
 524:./state.h     ****   VECT3_COPY(state.enu_pos_i, *enu_pos);
 525:./state.h     ****   /* clear bits for all position representations and only set the new one */
 526:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 527:./state.h     **** }
 528:./state.h     **** 
 529:./state.h     **** /// Set position from LLA coordinates (int).
 530:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i *lla_pos)
 531:./state.h     **** {
 532:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 533:./state.h     ****   /* clear bits for all position representations and only set the new one */
 534:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 535:./state.h     **** }
 536:./state.h     **** 
 537:./state.h     **** /// Set multiple position coordinates (int).
 538:./state.h     **** static inline void stateSetPosition_i(
 539:./state.h     ****   struct EcefCoor_i *ecef_pos,
 540:./state.h     ****   struct NedCoor_i *ned_pos,
 541:./state.h     ****   struct EnuCoor_i *enu_pos,
 542:./state.h     ****   struct LlaCoor_i *lla_pos)
 543:./state.h     **** {
 544:./state.h     ****   /* clear all status bit */
 545:./state.h     ****   state.pos_status = 0;
 546:./state.h     ****   if (ecef_pos != NULL) {
 547:./state.h     ****     VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 548:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 549:./state.h     ****   }
 550:./state.h     ****   if (ned_pos != NULL) {
 551:./state.h     ****     VECT3_COPY(state.ned_pos_i, *ned_pos);
 552:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 553:./state.h     ****   }
 554:./state.h     ****   if (enu_pos != NULL) {
 555:./state.h     ****     VECT3_COPY(state.enu_pos_i, *enu_pos);
 556:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 557:./state.h     ****   }
 558:./state.h     ****   if (lla_pos != NULL) {
 559:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 560:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 561:./state.h     ****   }
 562:./state.h     **** }
 563:./state.h     **** 
 564:./state.h     **** /// Set position from UTM coordinates (float).
 565:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f *utm_pos)
 566:./state.h     **** {
 567:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 568:./state.h     ****   /* clear bits for all position representations and only set the new one */
 569:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 570:./state.h     **** }
 571:./state.h     **** 
 572:./state.h     **** /// Set position from ECEF coordinates (float).
 573:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f *ecef_pos)
 574:./state.h     **** {
 575:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 576:./state.h     ****   /* clear bits for all position representations and only set the new one */
 577:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 578:./state.h     **** }
 579:./state.h     **** 
 580:./state.h     **** /// Set position from local NED coordinates (float).
 581:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f *ned_pos)
 582:./state.h     **** {
 583:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 584:./state.h     ****   /* clear bits for all position representations and only set the new one */
 585:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 586:./state.h     **** }
 587:./state.h     **** 
 588:./state.h     **** /// Set position from local ENU coordinates (float).
 589:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f *enu_pos)
 590:./state.h     **** {
 591:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 592:./state.h     ****   /* clear bits for all position representations and only set the new one */
 593:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 594:./state.h     **** }
 595:./state.h     **** 
 596:./state.h     **** /// Set position from LLA coordinates (float).
 597:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f *lla_pos)
 598:./state.h     **** {
 599:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 600:./state.h     ****   /* clear bits for all position representations and only set the new one */
 601:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 602:./state.h     **** }
 603:./state.h     **** 
 604:./state.h     **** /// Set multiple position coordinates (float).
 605:./state.h     **** static inline void stateSetPosition_f(
 606:./state.h     ****   struct EcefCoor_f *ecef_pos,
 607:./state.h     ****   struct NedCoor_f *ned_pos,
 608:./state.h     ****   struct EnuCoor_f *enu_pos,
 609:./state.h     ****   struct LlaCoor_f *lla_pos,
 610:./state.h     ****   struct UtmCoor_f *utm_pos)
 611:./state.h     **** {
 612:./state.h     ****   /* clear all status bit */
 613:./state.h     ****   state.pos_status = 0;
 614:./state.h     ****   if (ecef_pos != NULL) {
 615:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 616:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 617:./state.h     ****   }
 618:./state.h     ****   if (ned_pos != NULL) {
 619:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 620:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 621:./state.h     ****   }
 622:./state.h     ****   if (enu_pos != NULL) {
 623:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 624:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 625:./state.h     ****   }
 626:./state.h     ****   if (lla_pos != NULL) {
 627:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 628:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 629:./state.h     ****   }
 630:./state.h     ****   if (utm_pos != NULL) {
 631:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 632:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 633:./state.h     ****   }
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /************************ Get functions ****************************/
 637:./state.h     **** 
 638:./state.h     **** /// Get position in ECEF coordinates (int).
 639:./state.h     **** static inline struct EcefCoor_i *stateGetPositionEcef_i(void)
 640:./state.h     **** {
 641:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I)) {
 642:./state.h     ****     stateCalcPositionEcef_i();
 643:./state.h     ****   }
 644:./state.h     ****   return &state.ecef_pos_i;
 645:./state.h     **** }
 646:./state.h     **** 
 647:./state.h     **** /// Get position in local NED coordinates (int).
 648:./state.h     **** static inline struct NedCoor_i *stateGetPositionNed_i(void)
 649:./state.h     **** {
 650:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I)) {
 651:./state.h     ****     stateCalcPositionNed_i();
 652:./state.h     ****   }
 653:./state.h     ****   return &state.ned_pos_i;
 654:./state.h     **** }
 655:./state.h     **** 
 656:./state.h     **** /// Get position in local ENU coordinates (int).
 657:./state.h     **** static inline struct EnuCoor_i *stateGetPositionEnu_i(void)
 658:./state.h     **** {
  27              		.loc 1 658 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I)) {
  35              		.loc 1 659 0
  36 0002 044B     		ldr	r3, .L4
  37 0004 1B88     		ldrh	r3, [r3]
  38 0006 5B07     		lsls	r3, r3, #29
  39 0008 01D4     		bmi	.L2
 660:./state.h     ****     stateCalcPositionEnu_i();
  40              		.loc 1 660 0
  41 000a FFF7FEFF 		bl	stateCalcPositionEnu_i
  42              	.LVL0:
  43              	.L2:
 661:./state.h     ****   }
 662:./state.h     ****   return &state.enu_pos_i;
 663:./state.h     **** }
  44              		.loc 1 663 0
  45 000e 0248     		ldr	r0, .L4+4
  46 0010 08BD     		pop	{r3, pc}
  47              	.L5:
  48 0012 00BF     		.align	2
  49              	.L4:
  50 0014 00000000 		.word	state
  51 0018 6C000000 		.word	state+108
  52              		.cfi_endproc
  53              	.LFE71:
  55              		.section	.text.pprz_msg_send_WP_MOVED_ENU.constprop.5,"ax",%progbits
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	pprz_msg_send_WP_MOVED_ENU.constprop.5:
  61              	.LFB486:
  62              		.file 2 "/home/lsk/paparazzi/var/include/messages.h"
   1:/home/lsk/paparazzi/var/include/messages.h **** /* Automatically generated by gen_messages from /home/lsk/paparazzi/conf/messages.xml */
   2:/home/lsk/paparazzi/var/include/messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/messages.h **** /* Macros to send and receive messages of class telemetry */
   4:/home/lsk/paparazzi/var/include/messages.h **** #ifndef _VAR_MESSAGES_telemetry_H_
   5:/home/lsk/paparazzi/var/include/messages.h **** #define _VAR_MESSAGES_telemetry_H_
   6:/home/lsk/paparazzi/var/include/messages.h **** #include "subsystems/datalink/transport.h"
   7:/home/lsk/paparazzi/var/include/messages.h **** #include "mcu_periph/link_device.h"
   8:/home/lsk/paparazzi/var/include/messages.h **** #if DOWNLINK
   9:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AUTOPILOT_VERSION 1
  10:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALIVE 2
  11:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PONG 3
  12:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TAKEOFF 4
  13:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ARDRONE_NAVDATA 5
  14:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATTITUDE 6
  15:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IR_SENSORS 7
  16:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS 8
  17:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION_REF 9
  18:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION 10
  19:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_MODE 11
  20:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BAT 12
  21:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_MCU_LINK 13
  22:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CALIBRATION 14
  23:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SETTINGS 15
  24:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DESIRED 16
  25:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_SOL 17
  26:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC_GENERIC 18
  27:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_FORMAT 19
  28:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM 20
  29:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CIRCLE 21
  30:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SEGMENT 22
  31:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SVINFO 25
  32:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG 26
  33:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SURVEY 27
  34:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WC_RSSI 28
  35:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RANGEFINDER 29
  36:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DATALINK_REPORT 30
  37:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DL_VALUE 31
  38:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MARK 32
  39:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYS_MON 33
  40:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR 34
  41:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED 35
  42:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MKK 36
  43:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENERGY 37
  44:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85_CALIB 38
  45:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85 39
  46:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SPEED_LOOP 40
  47:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALT_KALMAN 41
  48:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ESTIMATOR 42
  49:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_ROLL 43
  50:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5534A 44
  51:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PRESSURE 45
  52:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_WORDS 46
  53:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_LLA 47
  54:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CHRONO 48
  55:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_ENU 49
  56:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WINDTURBINE_STATUS_ 50
  57:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC_3CH_ 51
  58:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPPT 52
  59:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_IR_I2C 53
  60:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED 54
  61:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XSENS 55
  62:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_ETS 56
  63:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_ETS 57
  64:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PBN 58
  65:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_LLA 59
  66:/home/lsk/paparazzi/var/include/messages.h **** #define DL_H_CTL_A 60
  67:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_RAW 61
  68:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_VOLTAGE 62
  69:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM_POINT 63
  70:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_INFO 64
  71:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_BARO 65
  72:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_AIRSPEED 66
  73:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLIGHT_BENCHMARK 67
  74:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPL3115_BARO 68
  75:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AOA_ADC 69
  76:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XTEND_RSSI 70
  77:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SUPERBITRF 72
  78:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GX3_INFO 73
  79:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EXPLAIN 74
  80:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_TELEMETRY 75
  81:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_UPDATE 76
  82:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_PREDICT 77
  83:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INV_FILTER 78
  84:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MISSION_STATUS 79
  85:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CROSS_TRACK_ERROR 80
  86:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GENERIC_COM 81
  87:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_SLOT_TM 82
  88:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_STATUS_TM 83
  89:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BMP_STATUS 84
  90:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_STATUS 85
  91:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TMP_STATUS 86
  92:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WIND_INFO_RET 87
  93:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SCP_STATUS 88
  94:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_STATUS 89
  95:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENOSE_STATUS 90
  96:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DPICCO_STATUS 91
  97:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_DEBUG 92
  98:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_STATUS 93
  99:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATUS 94
 100:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATIC 95
 101:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HIH_STATUS 96
 102:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMT_STATUS 97
 103:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GP2Y_STATUS 98
 104:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_SERIAL 99
 105:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPM 100
 106:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC 101
 107:/home/lsk/paparazzi/var/include/messages.h **** #define DL_COMMANDS 102
 108:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FBW_STATUS 103
 109:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC 104
 110:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ACTUATORS 105
 111:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_SHOT 110
 112:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_BOARD_RESULTS 111
 113:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_SERIAL 113
 114:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD 114
 115:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HTM_STATUS 115
 116:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5611 116
 117:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MS5611_COEFF 117
 118:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATMOSPHERE_CHARGE 118
 119:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SOLAR_RADIATION 119
 120:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_TA 120
 121:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RA 121
 122:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RESOLVED 122
 123:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_DEBUG 123
 124:/home/lsk/paparazzi/var/include/messages.h **** #define DL_POTENTIAL 124
 125:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERTICAL_ENERGY 125
 126:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_TCOUPLE 126
 127:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_STATUS 127
 128:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAMERA_SNAPSHOT 128
 129:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIMESTAMP 129
 130:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_FLOAT 130
 131:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_SCALED 131
 132:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_SCALED 132
 133:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SCALED 133
 134:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER 134
 135:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER2 135
 136:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RATE_LOOP 136
 137:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_ALIGNER 137
 138:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_MS45XX 138
 139:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_COR 139
 140:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INT 140
 141:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_INT 141
 142:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_FLOAT 142
 143:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CMD 143
 144:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_INT 144
 145:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERT_LOOP 145
 146:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HOVER_LOOP 146
 147:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_FP 147
 148:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_ADC 148
 149:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_REF_INT 149
 150:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_TUNE_HOVER 150
 151:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_Z 151
 152:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PCAP01_STATUS 152
 153:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEIGER_COUNTER 153
 154:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_REF 154
 155:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_INT 155
 156:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER_INT 156
 157:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_QUAT_INT 157
 158:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_RMAT_INT 158
 159:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_NAV_STATUS 159
 160:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_RADIO_CONTROL 160
 161:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF_EXTENDED 161
 162:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF 162
 163:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEO_MAG 163
 164:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF 164
 165:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_DBG 165
 166:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_GPS 166
 167:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_SONAR 167
 168:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CAM 168
 169:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_REF_QUAT 169
 170:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_XHAT 170
 171:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_Y 171
 172:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_P_DIAG 172
 173:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER 173
 174:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_MEASUREMENT_EULER 174
 175:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WT 175
 176:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_DEBUG 176
 177:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_MSG 177
 178:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_GYRO_BIAS_INT 178
 179:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLOW_AP_OTF 179
 180:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FMS_TIME 180
 181:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOADCELL 181
 182:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLA_DEBUG 182
 183:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_FAULT_STATUS 183
 184:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_SPEEDS 184
 185:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_DEBUG_QUAT 185
 186:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_BUSVOLTS 186
 187:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYSTEM_STATUS 187
 188:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DYNAMIXEL 188
 189:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RMAT_DEBUG 189
 190:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SIMPLE_COMMANDS 190
 191:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VANE_SENSOR 191
 192:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CONTROLLER_GAINS 192
 193:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF 193
 194:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_DEBUG 194
 195:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_ACC_DBG 195
 196:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_MAG_DBG 196
 197:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SENSORS_SCALED 197
 198:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS 198
 199:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_ERROR 199
 200:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO 200
 201:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG 201
 202:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL 202
 203:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_RAW 203
 204:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_RAW 204
 205:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_RAW 205
 206:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SETTINGS 206
 207:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_CURRENT_CALIBRATION 207
 208:/home/lsk/paparazzi/var/include/messages.h **** #define DL_UART_ERRORS 208
 209:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_LP 209
 210:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_PRESSURE 210
 211:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_HS_GYRO 211
 212:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_PASSTHROUGH_STATUS 212
 213:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_VERT 213
 214:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MF_DAQ_STATE 214
 215:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INFO_MSG 215
 216:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BEBOP_ACTUATORS 218
 217:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WEATHER 219
 218:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_TURNTABLE 220
 219:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_RAW 221
 220:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIR_DATA 222
 221:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSL 223
 222:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_SYNC 225
 223:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PERIODIC_TELEMETRY_ERR 226
 224:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIME 227
 225:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTIC_FLOW_EST 228
 226:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_ARDRONE2 230
 227:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_STATUS 231
 228:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STATE_FILTER_STATUS 232
 229:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PX4FLOW 233
 230:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTICFLOW 234
 231:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VISUALTARGET 235
 232:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SONAR 236
 233:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD_FLOAT 237
 234:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_POS_LLH 238
 235:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RPMS 239
 236:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SPEED_POS 240
 237:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RATE_ATTITUDE 241
 238:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_GYRO_BIAS 242
 239:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RANGE_METER 243
 240:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_WIND 244
 241:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_DEBUG 247
 242:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_ACCEL_LTP 248
 243:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOOSE_INS_GPS 249
 244:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AFL_COEFFS 250
 245:/home/lsk/paparazzi/var/include/messages.h **** #define DL_I2C_ERRORS 253
 246:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RDYB_TRAJECTORY 254
 247:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HENRY_GNSS 255
 248:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MSG_telemetry_NB 239
 249:/home/lsk/paparazzi/var/include/messages.h **** 
 250:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AUTOPILOT_VERSION(_trans, _dev, version, nb_desc, desc) pprz_msg_send_AUTOPIL
 251:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AUTOPILOT_VERSION(struct transport_tx *trans, struct link_device *
 252:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 
 253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 /* msg heade
 254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_desc*1 +2 /* msg header overhead */);
 255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AUTOPILOT_VERSION, "
 257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _version);
 258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_desc)
 259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_desc, (void *) _desc);
 260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 261:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 262:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 263:/home/lsk/paparazzi/var/include/messages.h **** }
 264:/home/lsk/paparazzi/var/include/messages.h **** 
 265:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALIVE(_trans, _dev, nb_md5sum, md5sum) pprz_msg_send_ALIVE(&((_trans).trans_t
 266:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALIVE(struct transport_tx *trans, struct link_device *dev, uint8_t
 267:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 
 268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 /* msg heade
 269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_md5sum*1 +2 /* msg header overhead */);
 270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALIVE, "ALIVE");
 272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_md5su
 273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_md5sum, (void *) _md5s
 274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 275:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 277:/home/lsk/paparazzi/var/include/messages.h **** }
 278:/home/lsk/paparazzi/var/include/messages.h **** 
 279:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PONG(_trans, _dev) pprz_msg_send_PONG(&((_trans).trans_tx), &((_dev).device),
 280:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PONG(struct transport_tx *trans, struct link_device *dev, uint8_t 
 281:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header 
 282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header overhead */)
 283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0 +2 /* msg header overhead */);
 284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PONG, "PONG");
 286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 287:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 289:/home/lsk/paparazzi/var/include/messages.h **** }
 290:/home/lsk/paparazzi/var/include/messages.h **** 
 291:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TAKEOFF(_trans, _dev, cpu_time) pprz_msg_send_TAKEOFF(&((_trans).trans_tx), &
 292:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TAKEOFF(struct transport_tx *trans, struct link_device *dev, uint8
 293:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
 294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
 295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
 296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TAKEOFF, "TAKEOFF");
 298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cpu_time);
 299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 302:/home/lsk/paparazzi/var/include/messages.h **** }
 303:/home/lsk/paparazzi/var/include/messages.h **** 
 304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ARDRONE_NAVDATA(_trans, _dev, taille, nu_trame, ax, ay, az, vx, vy, vz, tempe
 305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ARDRONE_NAVDATA(struct transport_tx *trans, struct link_device *de
 306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
 308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+4+2+2+4+2+2+2+2+2
 309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ARDRONE_NAVDATA, "AR
 311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _taille);
 312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nu_trame);
 313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ax);
 314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ay);
 315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _az);
 316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vx);
 317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vy);
 318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vz);
 319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_ac
 320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_gy
 321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ultrasound);
 322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_debut_echo)
 323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_fin_echo);
 324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_association
 325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_distance_ec
 326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_time)
 327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_value
 328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_ref);
 329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nb_echo);
 330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sum_echo);
 331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _gradient);
 332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flag_echo_ini)
 333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_pr
 335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mx);
 336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _my);
 337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mz);
 338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _chksum);
 339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
 340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 341:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 343:/home/lsk/paparazzi/var/include/messages.h **** }
 344:/home/lsk/paparazzi/var/include/messages.h **** 
 345:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATTITUDE(_trans, _dev, phi, psi, theta) pprz_msg_send_ATTITUDE(&((_trans).tra
 346:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATTITUDE(struct transport_tx *trans, struct link_device *dev, uint
 347:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATTITUDE, "ATTITUDE"
 352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
 354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
 355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 356:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 358:/home/lsk/paparazzi/var/include/messages.h **** }
 359:/home/lsk/paparazzi/var/include/messages.h **** 
 360:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IR_SENSORS(_trans, _dev, ir1, ir2, longitudinal, lateral, vertical) pprz_msg_
 361:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IR_SENSORS(struct transport_tx *trans, struct link_device *dev, ui
 362:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* m
 363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* msg header ov
 364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2 +2 /* msg header overhead */);
 365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IR_SENSORS, "IR_SENS
 367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
 368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
 369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _longitudinal);
 370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lateral);
 371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vertical);
 372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 373:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 375:/home/lsk/paparazzi/var/include/messages.h **** }
 376:/home/lsk/paparazzi/var/include/messages.h **** 
 377:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS(_trans, _dev, mode, utm_east, utm_north, course, alt, speed, climb, week,
 378:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS(struct transport_tx *trans, struct link_device *dev, uint8_t a
 379:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4
 380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* m
 381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* msg header overhead */);
 382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS, "GPS");
 384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
 385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
 388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
 390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
 391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
 392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
 393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
 395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 396:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 398:/home/lsk/paparazzi/var/include/messages.h **** }
 399:/home/lsk/paparazzi/var/include/messages.h **** 
 400:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION_REF(_trans, _dev, utm_east, utm_north, utm_zone, ground_alt) pprz_
 401:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION_REF(struct transport_tx *trans, struct link_device *dev
 402:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg
 403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 412:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 414:/home/lsk/paparazzi/var/include/messages.h **** }
 415:/home/lsk/paparazzi/var/include/messages.h **** 
 416:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION(_trans, _dev, cur_block, cur_stage, pos_x, pos_y, dist_wp, dist_ho
 417:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION(struct transport_tx *trans, struct link_device *dev, ui
 418:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +
 419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 432:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 434:/home/lsk/paparazzi/var/include/messages.h **** }
 435:/home/lsk/paparazzi/var/include/messages.h **** 
 436:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPRZ_MODE(_trans, _dev, ap_mode, ap_gaz, ap_lateral, ap_horizontal, if_calib_
 437:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPRZ_MODE(struct transport_tx *trans, struct link_device *dev, uin
 438:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /*
 439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /* msg header 
 440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1 +2 /* msg header overhead */);
 441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPRZ_MODE, "PPRZ_MOD
 443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
 444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_gaz);
 445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_lateral);
 446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_horizontal);
 447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _if_calib_mode);
 448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu1_status);
 449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 450:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 452:/home/lsk/paparazzi/var/include/messages.h **** }
 453:/home/lsk/paparazzi/var/include/messages.h **** 
 454:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BAT(_trans, _dev, throttle, voltage, amps, flight_time, kill_auto_throttle, b
 455:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BAT(struct transport_tx *trans, struct link_device *dev, uint8_t a
 456:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +
 457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +2 /* msg hea
 458:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+2+2+2 +2 /* msg header overhead */);
 459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BAT, "BAT");
 461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
 462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _voltage);
 463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _amps);
 464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
 465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _kill_auto_throt
 466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
 467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
 468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 470:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 472:/home/lsk/paparazzi/var/include/messages.h **** }
 473:/home/lsk/paparazzi/var/include/messages.h **** 
 474:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_MCU_LINK(_trans, _dev, i2c_nb_err, i2c_mcu1_nb_err, ppm_rate) pprz_msg_
 475:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_MCU_LINK(struct transport_tx *trans, struct link_device *dev
 476:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
 477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
 478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
 479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_MCU_LINK, "DEB
 481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_nb_err);
 482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_mcu1_nb_err
 483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
 484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 485:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 487:/home/lsk/paparazzi/var/include/messages.h **** }
 488:/home/lsk/paparazzi/var/include/messages.h **** 
 489:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CALIBRATION(_trans, _dev, climb_sum_err, climb_gaz_submode) pprz_msg_send_CAL
 490:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CALIBRATION(struct transport_tx *trans, struct link_device *dev, u
 491:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg hea
 492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg header overhead
 493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1 +2 /* msg header overhead */);
 494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CALIBRATION, "CALIBR
 496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb_sum_err);
 497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _climb_gaz_submo
 498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 499:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 501:/home/lsk/paparazzi/var/include/messages.h **** }
 502:/home/lsk/paparazzi/var/include/messages.h **** 
 503:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SETTINGS(_trans, _dev, slider_1_val, slider_2_val) pprz_msg_send_SETTINGS(&((
 504:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SETTINGS(struct transport_tx *trans, struct link_device *dev, uint
 505:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SETTINGS, "SETTINGS"
 510:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_1_val);
 511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_2_val);
 512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 513:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 515:/home/lsk/paparazzi/var/include/messages.h **** }
 516:/home/lsk/paparazzi/var/include/messages.h **** 
 517:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DESIRED(_trans, _dev, roll, pitch, course, x, y, altitude, climb, airspeed) p
 518:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DESIRED(struct transport_tx *trans, struct link_device *dev, uint8
 519:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
 520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
 521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DESIRED, "DESIRED");
 524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll);
 525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch);
 526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
 527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
 528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
 529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
 531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 533:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 535:/home/lsk/paparazzi/var/include/messages.h **** }
 536:/home/lsk/paparazzi/var/include/messages.h **** 
 537:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_SOL(_trans, _dev, Pacc, Sacc, PDOP, numSV) pprz_msg_send_GPS_SOL(&((_tran
 538:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_SOL(struct transport_tx *trans, struct link_device *dev, uint8
 539:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg
 540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg header over
 541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+1 +2 /* msg header overhead */);
 542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_SOL, "GPS_SOL");
 544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Pacc);
 545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Sacc);
 546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PDOP);
 547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numSV);
 548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 549:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 551:/home/lsk/paparazzi/var/include/messages.h **** }
 552:/home/lsk/paparazzi/var/include/messages.h **** 
 553:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC_GENERIC(_trans, _dev, val1, val2) pprz_msg_send_ADC_GENERIC(&((_trans).tr
 554:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC_GENERIC(struct transport_tx *trans, struct link_device *dev, u
 555:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
 556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
 557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
 558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC_GENERIC, "ADC_GE
 560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
 561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
 562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 563:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 565:/home/lsk/paparazzi/var/include/messages.h **** }
 566:/home/lsk/paparazzi/var/include/messages.h **** 
 567:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_FORMAT(_trans, _dev, val1, val2) pprz_msg_send_TEST_FORMAT(&((_trans).tr
 568:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_FORMAT(struct transport_tx *trans, struct link_device *dev, u
 569:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg hea
 570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg header overhead
 571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+8+4 +2 /* msg header overhead */);
 572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_FORMAT, "TEST_F
 574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_DOUBLE, DL_FORMAT_SCALAR, 8, (void *) _val1);
 575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _val2);
 576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 577:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 579:/home/lsk/paparazzi/var/include/messages.h **** }
 580:/home/lsk/paparazzi/var/include/messages.h **** 
 581:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM(_trans, _dev, phi, theta, target_x, target_y) pprz_msg_send_CAM(&((_trans
 582:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM(struct transport_tx *trans, struct link_device *dev, uint8_t a
 583:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM, "CAM");
 588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
 589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
 590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_x);
 591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_y);
 592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 595:/home/lsk/paparazzi/var/include/messages.h **** }
 596:/home/lsk/paparazzi/var/include/messages.h **** 
 597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CIRCLE(_trans, _dev, center_east, center_north, radius) pprz_msg_send_CIRCLE(
 598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CIRCLE(struct transport_tx *trans, struct link_device *dev, uint8_
 599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 610:/home/lsk/paparazzi/var/include/messages.h **** }
 611:/home/lsk/paparazzi/var/include/messages.h **** 
 612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SEGMENT(_trans, _dev, segment_east_1, segment_north_1, segment_east_2, segmen
 613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SEGMENT(struct transport_tx *trans, struct link_device *dev, uint8
 614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 624:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 626:/home/lsk/paparazzi/var/include/messages.h **** }
 627:/home/lsk/paparazzi/var/include/messages.h **** 
 628:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SVINFO(_trans, _dev, chn, SVID, Flags, QI, CNO, Elev, Azim) pprz_msg_send_SVI
 629:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SVINFO(struct transport_tx *trans, struct link_device *dev, uint8_
 630:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 
 631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 /* msg heade
 632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1+2 +2 /* msg header overhead */);
 633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SVINFO, "SVINFO");
 635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _chn);
 636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _SVID);
 637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _Flags);
 638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _QI);
 639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _CNO);
 640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _Elev);
 641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _Azim);
 642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 643:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 645:/home/lsk/paparazzi/var/include/messages.h **** }
 646:/home/lsk/paparazzi/var/include/messages.h **** 
 647:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG(_trans, _dev, nb_msg, msg) pprz_msg_send_DEBUG(&((_trans).trans_tx), &(
 648:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG(struct transport_tx *trans, struct link_device *dev, uint8_t
 649:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
 650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
 651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
 652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG, "DEBUG");
 654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
 655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
 656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 657:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 659:/home/lsk/paparazzi/var/include/messages.h **** }
 660:/home/lsk/paparazzi/var/include/messages.h **** 
 661:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SURVEY(_trans, _dev, east, north, west, south) pprz_msg_send_SURVEY(&((_trans
 662:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SURVEY(struct transport_tx *trans, struct link_device *dev, uint8_
 663:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 673:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 675:/home/lsk/paparazzi/var/include/messages.h **** }
 676:/home/lsk/paparazzi/var/include/messages.h **** 
 677:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WC_RSSI(_trans, _dev, raw_level) pprz_msg_send_WC_RSSI(&((_trans).trans_tx), 
 678:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WC_RSSI(struct transport_tx *trans, struct link_device *dev, uint8
 679:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
 680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
 681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
 682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WC_RSSI, "WC_RSSI");
 684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _raw_level);
 685:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 686:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 688:/home/lsk/paparazzi/var/include/messages.h **** }
 689:/home/lsk/paparazzi/var/include/messages.h **** 
 690:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RANGEFINDER(_trans, _dev, range, z_dot, z_dot_sum_err, z_dot_setpoint, z_sum_
 691:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RANGEFINDER(struct transport_tx *trans, struct link_device *dev, u
 692:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 
 693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 /* msg heade
 694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+1 +2 /* msg header overhead */);
 695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RANGEFINDER, "RANGEF
 697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _range);
 698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_sum_err);
 700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_setpoint)
 701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_sum_err);
 702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_setpoint);
 703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _flying);
 704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 705:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 707:/home/lsk/paparazzi/var/include/messages.h **** }
 708:/home/lsk/paparazzi/var/include/messages.h **** 
 709:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DATALINK_REPORT(_trans, _dev, uplink_lost_time, uplink_nb_msgs, downlink_nb_m
 710:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DATALINK_REPORT(struct transport_tx *trans, struct link_device *de
 711:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* m
 712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* msg header ov
 713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1 +2 /* msg header overhead */);
 714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DATALINK_REPORT, "DA
 716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_lost_ti
 717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_nb_msgs
 718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_nb_ms
 719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_rate)
 720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _downlink_ovrn);
 721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 722:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 724:/home/lsk/paparazzi/var/include/messages.h **** }
 725:/home/lsk/paparazzi/var/include/messages.h **** 
 726:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DL_VALUE(_trans, _dev, index, value) pprz_msg_send_DL_VALUE(&((_trans).trans_
 727:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DL_VALUE(struct transport_tx *trans, struct link_device *dev, uint
 728:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
 729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
 730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
 731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DL_VALUE, "DL_VALUE"
 733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _index);
 734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _value);
 735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 738:/home/lsk/paparazzi/var/include/messages.h **** }
 739:/home/lsk/paparazzi/var/include/messages.h **** 
 740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MARK(_trans, _dev, ac_id, lat, long) pprz_msg_send_MARK(&((_trans).trans_tx),
 741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MARK(struct transport_tx *trans, struct link_device *dev, uint8_t 
 742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg h
 743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg header overhe
 744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4 +2 /* msg header overhead */);
 745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MARK, "MARK");
 747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
 748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
 749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _long);
 750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 753:/home/lsk/paparazzi/var/include/messages.h **** }
 754:/home/lsk/paparazzi/var/include/messages.h **** 
 755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYS_MON(_trans, _dev, periodic_time, periodic_time_min, periodic_time_max, pe
 756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYS_MON(struct transport_tx *trans, struct link_device *dev, uint8
 757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +
 758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +2 /* msg hea
 759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+1 +2 /* msg header overhead */);
 760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYS_MON, "SYS_MON");
 762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time)
 763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _event_number);
 769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cpu_load);
 770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 771:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 773:/home/lsk/paparazzi/var/include/messages.h **** }
 774:/home/lsk/paparazzi/var/include/messages.h **** 
 775:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR(_trans, _dev, rpm, current) pprz_msg_send_MOTOR(&((_trans).trans_tx), &
 776:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR(struct transport_tx *trans, struct link_device *dev, uint8_t
 777:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
 778:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
 779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
 780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR, "MOTOR");
 782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm);
 783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
 784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 785:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 787:/home/lsk/paparazzi/var/include/messages.h **** }
 788:/home/lsk/paparazzi/var/include/messages.h **** 
 789:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED(_trans, _dev, wp_id, utm_east, utm_north, alt, utm_zone) pprz_msg_se
 790:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED(struct transport_tx *trans, struct link_device *dev, uint
 791:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* msg header ov
 793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4+1 +2 /* msg header overhead */);
 794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 795:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED, "WP_MOVED"
 796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 797:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 798:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 799:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 802:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 804:/home/lsk/paparazzi/var/include/messages.h **** }
 805:/home/lsk/paparazzi/var/include/messages.h **** 
 806:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MKK(_trans, _dev, nr, rpm, current, temp) pprz_msg_send_MKK(&((_trans).trans_
 807:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MKK(struct transport_tx *trans, struct link_device *dev, uint8_t a
 808:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg
 809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg header over
 810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1 +2 /* msg header overhead */);
 811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MKK, "MKK");
 813:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nr);
 814:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rpm);
 815:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _current);
 816:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _temp);
 817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 818:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 820:/home/lsk/paparazzi/var/include/messages.h **** }
 821:/home/lsk/paparazzi/var/include/messages.h **** 
 822:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENERGY(_trans, _dev, bat, amp, energy, power) pprz_msg_send_ENERGY(&((_trans)
 823:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENERGY(struct transport_tx *trans, struct link_device *dev, uint8_
 824:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg
 825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg header over
 826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+4 +2 /* msg header overhead */);
 827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENERGY, "ENERGY");
 829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bat);
 830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amp);
 831:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _power);
 833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 834:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 836:/home/lsk/paparazzi/var/include/messages.h **** }
 837:/home/lsk/paparazzi/var/include/messages.h **** 
 838:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85_CALIB(_trans, _dev, a1, a2, a3, a4, a5, a6, b1, b2, mb, mc, md) pp
 839:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85_CALIB(struct transport_tx *trans, struct link_device *d
 840:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* m
 842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
 843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85_CALIB, "B
 845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a1);
 846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a2);
 847:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a3);
 848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a4);
 849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a5);
 850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a6);
 851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b1);
 852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b2);
 853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mb);
 854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mc);
 855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _md);
 856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 859:/home/lsk/paparazzi/var/include/messages.h **** }
 860:/home/lsk/paparazzi/var/include/messages.h **** 
 861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85(_trans, _dev, UT, UP, P, T, MSL) pprz_msg_send_BARO_BMP85(&((_tran
 862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85(struct transport_tx *trans, struct link_device *dev, ui
 863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
 864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
 865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
 866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85, "BARO_BM
 868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
 869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
 870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _P);
 871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _T);
 872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _MSL);
 873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 874:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 876:/home/lsk/paparazzi/var/include/messages.h **** }
 877:/home/lsk/paparazzi/var/include/messages.h **** 
 878:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SPEED_LOOP(_trans, _dev, ve_set_point, ve, vn_set_point, vn, north_sp, east_s
 879:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SPEED_LOOP(struct transport_tx *trans, struct link_device *dev, ui
 880:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
 882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SPEED_LOOP, "SPEED_L
 885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve_set_point);
 886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve);
 887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn_set_point);
 888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn);
 889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north_sp);
 890:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east_sp);
 891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 892:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 894:/home/lsk/paparazzi/var/include/messages.h **** }
 895:/home/lsk/paparazzi/var/include/messages.h **** 
 896:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALT_KALMAN(_trans, _dev, p00, p01, p10, p11) pprz_msg_send_ALT_KALMAN(&((_tra
 897:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALT_KALMAN(struct transport_tx *trans, struct link_device *dev, ui
 898:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALT_KALMAN, "ALT_KAL
 903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p00);
 904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p01);
 905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p10);
 906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p11);
 907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 910:/home/lsk/paparazzi/var/include/messages.h **** }
 911:/home/lsk/paparazzi/var/include/messages.h **** 
 912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ESTIMATOR(_trans, _dev, z, z_dot) pprz_msg_send_ESTIMATOR(&((_trans).trans_tx
 913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ESTIMATOR(struct transport_tx *trans, struct link_device *dev, uin
 914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ESTIMATOR, "ESTIMATO
 919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
 920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 922:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 924:/home/lsk/paparazzi/var/include/messages.h **** }
 925:/home/lsk/paparazzi/var/include/messages.h **** 
 926:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_ROLL(_trans, _dev, p, phi, phi_sp) pprz_msg_send_TUNE_ROLL(&((_trans).tr
 927:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_ROLL(struct transport_tx *trans, struct link_device *dev, uin
 928:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_ROLL, "TUNE_ROL
 933:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
 934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 935:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_sp);
 936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 937:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 939:/home/lsk/paparazzi/var/include/messages.h **** }
 940:/home/lsk/paparazzi/var/include/messages.h **** 
 941:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5534A(_trans, _dev, pressure, temp, alt) pprz_msg_send_BARO_MS5534A(&(
 942:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5534A(struct transport_tx *trans, struct link_device *dev, 
 943:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
 944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
 945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
 946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5534A, "BARO_
 948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
 950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 952:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 954:/home/lsk/paparazzi/var/include/messages.h **** }
 955:/home/lsk/paparazzi/var/include/messages.h **** 
 956:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PRESSURE(_trans, _dev, airspeed_adc, airspeed, altitude_adc, altitude) pprz_m
 957:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PRESSURE(struct transport_tx *trans, struct link_device *dev, uint
 958:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PRESSURE, "PRESSURE"
 963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_adc);
 964:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude_adc);
 966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 968:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 970:/home/lsk/paparazzi/var/include/messages.h **** }
 971:/home/lsk/paparazzi/var/include/messages.h **** 
 972:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_WORDS(_trans, _dev, w1, w2, w3, w4) pprz_msg_send_BARO_WORDS(&((_trans).
 973:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_WORDS(struct transport_tx *trans, struct link_device *dev, ui
 974:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_WORDS, "BARO_WO
 979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w1);
 980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w2);
 981:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w3);
 982:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w4);
 983:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 984:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 986:/home/lsk/paparazzi/var/include/messages.h **** }
 987:/home/lsk/paparazzi/var/include/messages.h **** 
 988:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_LLA(_trans, _dev, wp_id, lat, lon, alt) pprz_msg_send_WP_MOVED_LLA(&
 989:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_LLA(struct transport_tx *trans, struct link_device *dev, 
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_LLA, "WP_MO
 995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
 998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1000:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1002:/home/lsk/paparazzi/var/include/messages.h **** }
1003:/home/lsk/paparazzi/var/include/messages.h **** 
1004:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CHRONO(_trans, _dev, tag, time) pprz_msg_send_CHRONO(&((_trans).trans_tx), &(
1005:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CHRONO(struct transport_tx *trans, struct link_device *dev, uint8_
1006:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
1007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
1008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
1009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CHRONO, "CHRONO");
1011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tag);
1012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time);
1013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1014:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1016:/home/lsk/paparazzi/var/include/messages.h **** }
1017:/home/lsk/paparazzi/var/include/messages.h **** 
1018:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_ENU(_trans, _dev, wp_id, east, north, up) pprz_msg_send_WP_MOVED_ENU
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
  63              		.loc 2 1019 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 8
  66              		@ frame_needed = 0, uses_anonymous_args = 0
  67              	.LVL1:
  68 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  69              		.cfi_def_cfa_offset 36
  70              		.cfi_offset 4, -36
  71              		.cfi_offset 5, -32
  72              		.cfi_offset 6, -28
  73              		.cfi_offset 7, -24
  74              		.cfi_offset 8, -20
  75              		.cfi_offset 9, -16
  76              		.cfi_offset 10, -12
  77              		.cfi_offset 11, -8
  78              		.cfi_offset 14, -4
1020:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
  79              		.loc 2 1020 0
  80 0004 3D4C     		ldr	r4, .L10
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
  81              		.loc 2 1019 0
  82 0006 85B0     		sub	sp, sp, #20
  83              		.cfi_def_cfa_offset 56
  84              		.loc 2 1020 0
  85 0008 D4F82851 		ldr	r5, [r4, #296]
  86 000c D4F80CB1 		ldr	fp, [r4, #268]
  87 0010 4FF00109 		mov	r9, #1
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
  88              		.loc 2 1019 0
  89 0014 8246     		mov	r10, r0
  90 0016 0E46     		mov	r6, r1
  91 0018 1F46     		mov	r7, r3
  92              		.loc 2 1020 0
  93 001a 0F21     		movs	r1, #15
  94              	.LVL2:
  95 001c 8DF80F90 		strb	r9, [sp, #15]
  96 0020 D4F80831 		ldr	r3, [r4, #264]
  97              	.LVL3:
  98 0024 2846     		mov	r0, r5
  99              	.LVL4:
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
 100              		.loc 2 1019 0
 101 0026 9046     		mov	r8, r2
 102              	.LVL5:
 103              		.loc 2 1020 0
 104 0028 9847     		blx	r3
 105              	.LVL6:
 106 002a 3549     		ldr	r1, .L10+4
 107              	.LVL7:
 108 002c 0246     		mov	r2, r0
 109 002e 2846     		mov	r0, r5
 110 0030 D847     		blx	fp
 111              	.LVL8:
 112 0032 0028     		cmp	r0, #0
 113 0034 58D0     		beq	.L7
1021:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 114              		.loc 2 1021 0
 115 0036 D4F82851 		ldr	r5, [r4, #296]
 116 003a D4F80831 		ldr	r3, [r4, #264]
 117 003e D4F824B1 		ldr	fp, [r4, #292]
 118 0042 2846     		mov	r0, r5
 119 0044 0F21     		movs	r1, #15
 120 0046 9847     		blx	r3
 121              	.LVL9:
 122 0048 2D49     		ldr	r1, .L10+4
 123              	.LVL10:
 124 004a 0246     		mov	r2, r0
 125 004c 2846     		mov	r0, r5
 126 004e D847     		blx	fp
 127              	.LVL11:
1022:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 128              		.loc 2 1022 0
 129 0050 D4F81831 		ldr	r3, [r4, #280]
 130 0054 D4F82801 		ldr	r0, [r4, #296]
 131 0058 2949     		ldr	r1, .L10+4
 132              	.LVL12:
 133 005a 0F22     		movs	r2, #15
 134 005c 9847     		blx	r3
 135              	.LVL13:
1023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 136              		.loc 2 1023 0
 137 005e 0DF10F03 		add	r3, sp, #15
 138 0062 0193     		str	r3, [sp, #4]
 139 0064 D4F81051 		ldr	r5, [r4, #272]
 140 0068 D4F82801 		ldr	r0, [r4, #296]
 141 006c 2449     		ldr	r1, .L10+4
 142              	.LVL14:
 143 006e CDF80090 		str	r9, [sp]
 144 0072 0222     		movs	r2, #2
 145 0074 0023     		movs	r3, #0
 146 0076 A847     		blx	r5
 147              	.LVL15:
1024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_ENU, "WP_MO
 148              		.loc 2 1024 0
 149 0078 3123     		movs	r3, #49
 150 007a 0093     		str	r3, [sp]
 151 007c 214B     		ldr	r3, .L10+8
 152 007e 0193     		str	r3, [sp, #4]
 153 0080 D4F81451 		ldr	r5, [r4, #276]
 154 0084 D4F82801 		ldr	r0, [r4, #296]
 155 0088 1D49     		ldr	r1, .L10+4
 156              	.LVL16:
 157 008a 0222     		movs	r2, #2
 158 008c 0023     		movs	r3, #0
 159 008e A847     		blx	r5
 160              	.LVL17:
1025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 161              		.loc 2 1025 0
 162 0090 D4F81051 		ldr	r5, [r4, #272]
 163 0094 D4F82801 		ldr	r0, [r4, #296]
 164 0098 1949     		ldr	r1, .L10+4
 165              	.LVL18:
 166 009a 0222     		movs	r2, #2
 167 009c 0023     		movs	r3, #0
 168 009e 8DE80006 		stmia	sp, {r9, r10}
 169 00a2 A847     		blx	r5
 170              	.LVL19:
1026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
 171              		.loc 2 1026 0
 172 00a4 0425     		movs	r5, #4
 173 00a6 8DE86000 		stmia	sp, {r5, r6}
 174 00aa D4F82801 		ldr	r0, [r4, #296]
 175 00ae D4F81061 		ldr	r6, [r4, #272]
 176              	.LVL20:
 177 00b2 1349     		ldr	r1, .L10+4
 178              	.LVL21:
 179 00b4 0722     		movs	r2, #7
 180 00b6 0023     		movs	r3, #0
 181 00b8 B047     		blx	r6
 182              	.LVL22:
1027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
 183              		.loc 2 1027 0
 184 00ba 8DE82001 		stmia	sp, {r5, r8}
 185 00be D4F82801 		ldr	r0, [r4, #296]
 186 00c2 0F49     		ldr	r1, .L10+4
 187              	.LVL23:
 188 00c4 D4F81061 		ldr	r6, [r4, #272]
 189 00c8 0722     		movs	r2, #7
 190 00ca 0023     		movs	r3, #0
 191 00cc B047     		blx	r6
 192              	.LVL24:
1028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
 193              		.loc 2 1028 0
 194 00ce 8DE8A000 		stmia	sp, {r5, r7}
 195 00d2 0023     		movs	r3, #0
 196 00d4 D4F81051 		ldr	r5, [r4, #272]
 197 00d8 D4F82801 		ldr	r0, [r4, #296]
 198 00dc 0849     		ldr	r1, .L10+4
 199              	.LVL25:
 200 00de 0722     		movs	r2, #7
 201 00e0 A847     		blx	r5
 202              	.LVL26:
1029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 203              		.loc 2 1029 0
 204 00e2 D4F81C31 		ldr	r3, [r4, #284]
 205 00e6 01E0     		b	.L9
 206              	.LVL27:
 207              	.L7:
 208              	.LBB6:
 209              	.LBB7:
1030:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 210              		.loc 2 1031 0
 211 00e8 D4F82031 		ldr	r3, [r4, #288]
 212              	.LVL28:
 213              	.L9:
 214 00ec D4F82801 		ldr	r0, [r4, #296]
 215 00f0 0349     		ldr	r1, .L10+4
 216              	.LVL29:
 217 00f2 9847     		blx	r3
 218              	.LVL30:
 219              	.LBE7:
 220              	.LBE6:
1032:/home/lsk/paparazzi/var/include/messages.h **** }
 221              		.loc 2 1032 0
 222 00f4 05B0     		add	sp, sp, #20
 223              		@ sp needed
 224 00f6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 225              	.LVL31:
 226              	.L11:
 227 00fa 00BF     		.align	2
 228              	.L10:
 229 00fc 00000000 		.word	pprz_tp
 230 0100 2C010000 		.word	uart5+300
 231 0104 00000000 		.word	.LC2
 232              		.cfi_endproc
 233              	.LFE486:
 235              		.section	.text.waypoint_is_global,"ax",%progbits
 236              		.align	1
 237              		.global	waypoint_is_global
 238              		.thumb
 239              		.thumb_func
 241              	waypoint_is_global:
 242              	.LFB458:
 243              		.file 3 "subsystems/navigation/waypoints.c"
   1:subsystems/navigation/waypoints.c **** /*
   2:subsystems/navigation/waypoints.c ****  * Copyright (C) 2015 Felix Ruess <felix.ruess@gmail.com>
   3:subsystems/navigation/waypoints.c ****  *
   4:subsystems/navigation/waypoints.c ****  * This file is part of paparazzi.
   5:subsystems/navigation/waypoints.c ****  *
   6:subsystems/navigation/waypoints.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:subsystems/navigation/waypoints.c ****  * it under the terms of the GNU General Public License as published by
   8:subsystems/navigation/waypoints.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:subsystems/navigation/waypoints.c ****  * any later version.
  10:subsystems/navigation/waypoints.c ****  *
  11:subsystems/navigation/waypoints.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:subsystems/navigation/waypoints.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:subsystems/navigation/waypoints.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:subsystems/navigation/waypoints.c ****  * GNU General Public License for more details.
  15:subsystems/navigation/waypoints.c ****  *
  16:subsystems/navigation/waypoints.c ****  * You should have received a copy of the GNU General Public License
  17:subsystems/navigation/waypoints.c ****  * along with paparazzi; see the file COPYING.  If not, see
  18:subsystems/navigation/waypoints.c ****  * <http://www.gnu.org/licenses/>.
  19:subsystems/navigation/waypoints.c ****  */
  20:subsystems/navigation/waypoints.c **** 
  21:subsystems/navigation/waypoints.c **** /**
  22:subsystems/navigation/waypoints.c ****  * @file subsystems/navigation/waypoints.c
  23:subsystems/navigation/waypoints.c ****  *
  24:subsystems/navigation/waypoints.c ****  */
  25:subsystems/navigation/waypoints.c **** 
  26:subsystems/navigation/waypoints.c **** #include "subsystems/navigation/waypoints.h"
  27:subsystems/navigation/waypoints.c **** #include "state.h"
  28:subsystems/navigation/waypoints.c **** #include "subsystems/datalink/downlink.h"
  29:subsystems/navigation/waypoints.c **** #include "generated/flight_plan.h"
  30:subsystems/navigation/waypoints.c **** 
  31:subsystems/navigation/waypoints.c **** const uint8_t nb_waypoint = NB_WAYPOINT;
  32:subsystems/navigation/waypoints.c **** struct Waypoint waypoints[NB_WAYPOINT];
  33:subsystems/navigation/waypoints.c **** 
  34:subsystems/navigation/waypoints.c **** /** initialize global and local waypoints */
  35:subsystems/navigation/waypoints.c **** void waypoints_init(void)
  36:subsystems/navigation/waypoints.c **** {
  37:subsystems/navigation/waypoints.c ****   struct EnuCoor_f wp_tmp_float[NB_WAYPOINT] = WAYPOINTS_ENU;
  38:subsystems/navigation/waypoints.c ****   struct LlaCoor_i wp_tmp_lla_i[NB_WAYPOINT] = WAYPOINTS_LLA_WGS84;
  39:subsystems/navigation/waypoints.c ****   /* element in array is TRUE if absolute/global waypoint */
  40:subsystems/navigation/waypoints.c ****   bool_t is_global[NB_WAYPOINT] = WAYPOINTS_GLOBAL;
  41:subsystems/navigation/waypoints.c ****   uint8_t i = 0;
  42:subsystems/navigation/waypoints.c ****   for (i = 0; i < nb_waypoint; i++) {
  43:subsystems/navigation/waypoints.c ****     /* clear all flags */
  44:subsystems/navigation/waypoints.c ****     waypoints[i].flags = 0;
  45:subsystems/navigation/waypoints.c ****     /* init waypoint as global LLA or local ENU */
  46:subsystems/navigation/waypoints.c ****     if (is_global[i]) {
  47:subsystems/navigation/waypoints.c ****       waypoint_set_global_flag(i);
  48:subsystems/navigation/waypoints.c ****       waypoint_set_lla(i, &wp_tmp_lla_i[i]);
  49:subsystems/navigation/waypoints.c ****     } else {
  50:subsystems/navigation/waypoints.c ****       waypoint_set_enu(i, &wp_tmp_float[i]);
  51:subsystems/navigation/waypoints.c ****     }
  52:subsystems/navigation/waypoints.c ****   }
  53:subsystems/navigation/waypoints.c **** }
  54:subsystems/navigation/waypoints.c **** 
  55:subsystems/navigation/waypoints.c **** bool_t waypoint_is_global(uint8_t wp_id)
  56:subsystems/navigation/waypoints.c **** {
 244              		.loc 3 56 0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              	.LVL32:
  57:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 250              		.loc 3 57 0
 251 0000 0928     		cmp	r0, #9
 252 0002 06D8     		bhi	.L14
  58:subsystems/navigation/waypoints.c ****     return bit_is_set(waypoints[wp_id].flags, WP_FLAG_GLOBAL);
 253              		.loc 3 58 0
 254 0004 2823     		movs	r3, #40
 255 0006 5843     		muls	r0, r3, r0
 256              	.LVL33:
 257 0008 034B     		ldr	r3, .L15
 258 000a 185C     		ldrb	r0, [r3, r0]	@ zero_extendqisi2
 259 000c 00F00100 		and	r0, r0, #1
 260 0010 7047     		bx	lr
 261              	.LVL34:
 262              	.L14:
  59:subsystems/navigation/waypoints.c ****   }
  60:subsystems/navigation/waypoints.c ****   return FALSE;
 263              		.loc 3 60 0
 264 0012 0020     		movs	r0, #0
 265              	.LVL35:
  61:subsystems/navigation/waypoints.c **** }
 266              		.loc 3 61 0
 267 0014 7047     		bx	lr
 268              	.L16:
 269 0016 00BF     		.align	2
 270              	.L15:
 271 0018 00000000 		.word	.LANCHOR0
 272              		.cfi_endproc
 273              	.LFE458:
 275              		.section	.text.waypoint_set_global_flag,"ax",%progbits
 276              		.align	1
 277              		.global	waypoint_set_global_flag
 278              		.thumb
 279              		.thumb_func
 281              	waypoint_set_global_flag:
 282              	.LFB459:
  62:subsystems/navigation/waypoints.c **** 
  63:subsystems/navigation/waypoints.c **** void waypoint_set_global_flag(uint8_t wp_id)
  64:subsystems/navigation/waypoints.c **** {
 283              		.loc 3 64 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		@ link register save eliminated.
 288              	.LVL36:
  65:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 289              		.loc 3 65 0
 290 0000 0928     		cmp	r0, #9
 291 0002 06D8     		bhi	.L17
  66:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_GLOBAL);
 292              		.loc 3 66 0
 293 0004 2822     		movs	r2, #40
 294 0006 034B     		ldr	r3, .L19
 295 0008 5043     		muls	r0, r2, r0
 296              	.LVL37:
 297 000a 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 298 000c 42F00102 		orr	r2, r2, #1
 299 0010 1A54     		strb	r2, [r3, r0]
 300              	.L17:
 301 0012 7047     		bx	lr
 302              	.L20:
 303              		.align	2
 304              	.L19:
 305 0014 00000000 		.word	.LANCHOR0
 306              		.cfi_endproc
 307              	.LFE459:
 309              		.section	.text.waypoint_clear_global_flag,"ax",%progbits
 310              		.align	1
 311              		.global	waypoint_clear_global_flag
 312              		.thumb
 313              		.thumb_func
 315              	waypoint_clear_global_flag:
 316              	.LFB460:
  67:subsystems/navigation/waypoints.c ****   }
  68:subsystems/navigation/waypoints.c **** }
  69:subsystems/navigation/waypoints.c **** 
  70:subsystems/navigation/waypoints.c **** void waypoint_clear_global_flag(uint8_t wp_id)
  71:subsystems/navigation/waypoints.c **** {
 317              		.loc 3 71 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321              		@ link register save eliminated.
 322              	.LVL38:
  72:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 323              		.loc 3 72 0
 324 0000 0928     		cmp	r0, #9
 325 0002 06D8     		bhi	.L21
  73:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_GLOBAL);
 326              		.loc 3 73 0
 327 0004 2822     		movs	r2, #40
 328 0006 034B     		ldr	r3, .L23
 329 0008 5043     		muls	r0, r2, r0
 330              	.LVL39:
 331 000a 1A5C     		ldrb	r2, [r3, r0]	@ zero_extendqisi2
 332 000c 22F00102 		bic	r2, r2, #1
 333 0010 1A54     		strb	r2, [r3, r0]
 334              	.L21:
 335 0012 7047     		bx	lr
 336              	.L24:
 337              		.align	2
 338              	.L23:
 339 0014 00000000 		.word	.LANCHOR0
 340              		.cfi_endproc
 341              	.LFE460:
 343              		.section	.text.waypoint_get_x,"ax",%progbits
 344              		.align	1
 345              		.global	waypoint_get_x
 346              		.thumb
 347              		.thumb_func
 349              	waypoint_get_x:
 350              	.LFB461:
  74:subsystems/navigation/waypoints.c ****   }
  75:subsystems/navigation/waypoints.c **** }
  76:subsystems/navigation/waypoints.c **** 
  77:subsystems/navigation/waypoints.c **** float waypoint_get_x(uint8_t wp_id)
  78:subsystems/navigation/waypoints.c **** {
 351              		.loc 3 78 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356              	.LVL40:
  79:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 357              		.loc 3 79 0
 358 0000 0928     		cmp	r0, #9
 359 0002 05D8     		bhi	.L27
  80:subsystems/navigation/waypoints.c ****     return waypoints[wp_id].enu_f.x;
 360              		.loc 3 80 0
 361 0004 034B     		ldr	r3, .L28
 362 0006 2822     		movs	r2, #40
 363 0008 02FB0030 		mla	r0, r2, r0, r3
 364              	.LVL41:
 365 000c 0069     		ldr	r0, [r0, #16]	@ float
 366 000e 7047     		bx	lr
 367              	.LVL42:
 368              	.L27:
  81:subsystems/navigation/waypoints.c ****   }
  82:subsystems/navigation/waypoints.c ****   return 0.f;
 369              		.loc 3 82 0
 370 0010 0020     		movs	r0, #0
 371              	.LVL43:
  83:subsystems/navigation/waypoints.c **** }
 372              		.loc 3 83 0
 373 0012 7047     		bx	lr
 374              	.L29:
 375              		.align	2
 376              	.L28:
 377 0014 00000000 		.word	.LANCHOR0
 378              		.cfi_endproc
 379              	.LFE461:
 381              		.section	.text.waypoint_get_y,"ax",%progbits
 382              		.align	1
 383              		.global	waypoint_get_y
 384              		.thumb
 385              		.thumb_func
 387              	waypoint_get_y:
 388              	.LFB462:
  84:subsystems/navigation/waypoints.c **** 
  85:subsystems/navigation/waypoints.c **** float waypoint_get_y(uint8_t wp_id)
  86:subsystems/navigation/waypoints.c **** {
 389              		.loc 3 86 0
 390              		.cfi_startproc
 391              		@ args = 0, pretend = 0, frame = 0
 392              		@ frame_needed = 0, uses_anonymous_args = 0
 393              		@ link register save eliminated.
 394              	.LVL44:
  87:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 395              		.loc 3 87 0
 396 0000 0928     		cmp	r0, #9
 397 0002 05D8     		bhi	.L32
  88:subsystems/navigation/waypoints.c ****     return waypoints[wp_id].enu_f.y;
 398              		.loc 3 88 0
 399 0004 034B     		ldr	r3, .L33
 400 0006 2822     		movs	r2, #40
 401 0008 02FB0030 		mla	r0, r2, r0, r3
 402              	.LVL45:
 403 000c 4069     		ldr	r0, [r0, #20]	@ float
 404 000e 7047     		bx	lr
 405              	.LVL46:
 406              	.L32:
  89:subsystems/navigation/waypoints.c ****   }
  90:subsystems/navigation/waypoints.c ****   return 0.f;
 407              		.loc 3 90 0
 408 0010 0020     		movs	r0, #0
 409              	.LVL47:
  91:subsystems/navigation/waypoints.c **** }
 410              		.loc 3 91 0
 411 0012 7047     		bx	lr
 412              	.L34:
 413              		.align	2
 414              	.L33:
 415 0014 00000000 		.word	.LANCHOR0
 416              		.cfi_endproc
 417              	.LFE462:
 419              		.section	.text.waypoint_get_alt,"ax",%progbits
 420              		.align	1
 421              		.global	waypoint_get_alt
 422              		.thumb
 423              		.thumb_func
 425              	waypoint_get_alt:
 426              	.LFB463:
  92:subsystems/navigation/waypoints.c **** 
  93:subsystems/navigation/waypoints.c **** float waypoint_get_alt(uint8_t wp_id)
  94:subsystems/navigation/waypoints.c **** {
 427              		.loc 3 94 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		@ link register save eliminated.
 432              	.LVL48:
  95:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 433              		.loc 3 95 0
 434 0000 0928     		cmp	r0, #9
 435 0002 05D8     		bhi	.L37
  96:subsystems/navigation/waypoints.c ****     return waypoints[wp_id].enu_f.z;
 436              		.loc 3 96 0
 437 0004 034B     		ldr	r3, .L38
 438 0006 2822     		movs	r2, #40
 439 0008 02FB0030 		mla	r0, r2, r0, r3
 440              	.LVL49:
 441 000c 8069     		ldr	r0, [r0, #24]	@ float
 442 000e 7047     		bx	lr
 443              	.LVL50:
 444              	.L37:
  97:subsystems/navigation/waypoints.c ****   }
  98:subsystems/navigation/waypoints.c ****   return 0.f;
 445              		.loc 3 98 0
 446 0010 0020     		movs	r0, #0
 447              	.LVL51:
  99:subsystems/navigation/waypoints.c **** }
 448              		.loc 3 99 0
 449 0012 7047     		bx	lr
 450              	.L39:
 451              		.align	2
 452              	.L38:
 453 0014 00000000 		.word	.LANCHOR0
 454              		.cfi_endproc
 455              	.LFE463:
 457              		.section	.text.waypoint_globalize,"ax",%progbits
 458              		.align	1
 459              		.global	waypoint_globalize
 460              		.thumb
 461              		.thumb_func
 463              	waypoint_globalize:
 464              	.LFB475:
 100:subsystems/navigation/waypoints.c **** 
 101:subsystems/navigation/waypoints.c **** void waypoint_set_enu_i(uint8_t wp_id, struct EnuCoor_i *enu)
 102:subsystems/navigation/waypoints.c **** {
 103:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 104:subsystems/navigation/waypoints.c ****     memcpy(&waypoints[wp_id].enu_i, enu, sizeof(struct EnuCoor_i));
 105:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 106:subsystems/navigation/waypoints.c ****     ENU_FLOAT_OF_BFP(waypoints[wp_id].enu_f, waypoints[wp_id].enu_i);
 107:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_F);
 108:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 109:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 110:subsystems/navigation/waypoints.c ****   }
 111:subsystems/navigation/waypoints.c **** }
 112:subsystems/navigation/waypoints.c **** 
 113:subsystems/navigation/waypoints.c **** void waypoint_set_enu(uint8_t wp_id, struct EnuCoor_f *enu)
 114:subsystems/navigation/waypoints.c **** {
 115:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 116:subsystems/navigation/waypoints.c ****     memcpy(&waypoints[wp_id].enu_f, enu, sizeof(struct EnuCoor_f));
 117:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 118:subsystems/navigation/waypoints.c ****     ENU_BFP_OF_REAL(waypoints[wp_id].enu_i, waypoints[wp_id].enu_f);
 119:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_F);
 120:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 121:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 122:subsystems/navigation/waypoints.c ****   }
 123:subsystems/navigation/waypoints.c **** }
 124:subsystems/navigation/waypoints.c **** 
 125:subsystems/navigation/waypoints.c **** void waypoint_move_enu_i(uint8_t wp_id, struct EnuCoor_i *new_pos)
 126:subsystems/navigation/waypoints.c **** {
 127:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 128:subsystems/navigation/waypoints.c ****     waypoint_set_enu_i(wp_id, new_pos);
 129:subsystems/navigation/waypoints.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x),
 130:subsystems/navigation/waypoints.c ****                                &(new_pos->y), &(new_pos->z));
 131:subsystems/navigation/waypoints.c ****   }
 132:subsystems/navigation/waypoints.c **** }
 133:subsystems/navigation/waypoints.c **** 
 134:subsystems/navigation/waypoints.c **** /**
 135:subsystems/navigation/waypoints.c ****  * Set only local XY coordinates of waypoint without update altitude.
 136:subsystems/navigation/waypoints.c ****  * @todo: how to handle global waypoints?
 137:subsystems/navigation/waypoints.c ****  */
 138:subsystems/navigation/waypoints.c **** void waypoint_set_xy_i(uint8_t wp_id, int32_t x, int32_t y)
 139:subsystems/navigation/waypoints.c **** {
 140:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 141:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.x = x;
 142:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.y = y;
 143:subsystems/navigation/waypoints.c ****     /* also update ENU float representation */
 144:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.x = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.x);
 145:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.y = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.y);
 146:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 147:subsystems/navigation/waypoints.c ****   }
 148:subsystems/navigation/waypoints.c **** }
 149:subsystems/navigation/waypoints.c **** 
 150:subsystems/navigation/waypoints.c **** void waypoint_set_alt_i(uint8_t wp_id, int32_t alt)
 151:subsystems/navigation/waypoints.c **** {
 152:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 153:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = alt;
 154:subsystems/navigation/waypoints.c ****     /* also update ENU float representation */
 155:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.z);
 156:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 157:subsystems/navigation/waypoints.c ****   }
 158:subsystems/navigation/waypoints.c **** }
 159:subsystems/navigation/waypoints.c **** 
 160:subsystems/navigation/waypoints.c **** void waypoint_set_alt(uint8_t wp_id, float alt)
 161:subsystems/navigation/waypoints.c **** {
 162:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 163:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = alt;
 164:subsystems/navigation/waypoints.c ****     /* also update ENU fixed point representation */
 165:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = POS_BFP_OF_REAL(waypoints[wp_id].enu_f.z);
 166:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 167:subsystems/navigation/waypoints.c ****   }
 168:subsystems/navigation/waypoints.c **** }
 169:subsystems/navigation/waypoints.c **** 
 170:subsystems/navigation/waypoints.c **** void waypoint_set_lla(uint8_t wp_id, struct LlaCoor_i *lla)
 171:subsystems/navigation/waypoints.c **** {
 172:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 173:subsystems/navigation/waypoints.c ****     return;
 174:subsystems/navigation/waypoints.c ****   }
 175:subsystems/navigation/waypoints.c ****   memcpy(&waypoints[wp_id].lla, lla, sizeof(struct LlaCoor_i));
 176:subsystems/navigation/waypoints.c ****   SetBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 177:subsystems/navigation/waypoints.c ****   waypoint_localize(wp_id);
 178:subsystems/navigation/waypoints.c **** }
 179:subsystems/navigation/waypoints.c **** 
 180:subsystems/navigation/waypoints.c **** void waypoint_move_lla(uint8_t wp_id, struct LlaCoor_i *lla)
 181:subsystems/navigation/waypoints.c **** {
 182:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 183:subsystems/navigation/waypoints.c ****     return;
 184:subsystems/navigation/waypoints.c ****   }
 185:subsystems/navigation/waypoints.c ****   waypoint_set_lla(wp_id, lla);
 186:subsystems/navigation/waypoints.c ****   if (waypoint_is_global(wp_id)) {
 187:subsystems/navigation/waypoints.c ****     /* lla->alt is above ellipsoid, WP_MOVED_LLA has hmsl alt */
 188:subsystems/navigation/waypoints.c ****     int32_t hmsl = lla->alt - state.ned_origin_i.lla.alt + state.ned_origin_i.hmsl;
 189:subsystems/navigation/waypoints.c ****     DOWNLINK_SEND_WP_MOVED_LLA(DefaultChannel, DefaultDevice, &wp_id,
 190:subsystems/navigation/waypoints.c ****                                &lla->lat, &lla->lon, &hmsl);
 191:subsystems/navigation/waypoints.c ****   } else {
 192:subsystems/navigation/waypoints.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id,
 193:subsystems/navigation/waypoints.c ****                                &waypoints[wp_id].enu_i.x,
 194:subsystems/navigation/waypoints.c ****                                &waypoints[wp_id].enu_i.y,
 195:subsystems/navigation/waypoints.c ****                                &waypoints[wp_id].enu_i.z);
 196:subsystems/navigation/waypoints.c ****   }
 197:subsystems/navigation/waypoints.c **** }
 198:subsystems/navigation/waypoints.c **** 
 199:subsystems/navigation/waypoints.c **** /** set waypoint latitude/longitude without updating altitude */
 200:subsystems/navigation/waypoints.c **** void waypoint_set_latlon(uint8_t wp_id, struct LlaCoor_i *lla)
 201:subsystems/navigation/waypoints.c **** {
 202:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 203:subsystems/navigation/waypoints.c ****     return;
 204:subsystems/navigation/waypoints.c ****   }
 205:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lat = lla->lat;
 206:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lon = lla->lon;
 207:subsystems/navigation/waypoints.c ****   SetBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 208:subsystems/navigation/waypoints.c ****   waypoint_localize(wp_id);
 209:subsystems/navigation/waypoints.c **** }
 210:subsystems/navigation/waypoints.c **** 
 211:subsystems/navigation/waypoints.c **** /** set waypoint to current location and altitude */
 212:subsystems/navigation/waypoints.c **** void waypoint_set_here(uint8_t wp_id)
 213:subsystems/navigation/waypoints.c **** {
 214:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 215:subsystems/navigation/waypoints.c ****     return;
 216:subsystems/navigation/waypoints.c ****   }
 217:subsystems/navigation/waypoints.c ****   if (waypoint_is_global(wp_id)) {
 218:subsystems/navigation/waypoints.c ****     waypoint_set_lla(wp_id, stateGetPositionLla_i());
 219:subsystems/navigation/waypoints.c ****   } else {
 220:subsystems/navigation/waypoints.c ****     waypoint_set_enu_i(wp_id, stateGetPositionEnu_i());
 221:subsystems/navigation/waypoints.c ****   }
 222:subsystems/navigation/waypoints.c **** }
 223:subsystems/navigation/waypoints.c **** 
 224:subsystems/navigation/waypoints.c **** /** set waypoint to current horizontal location without modifying altitude */
 225:subsystems/navigation/waypoints.c **** void waypoint_set_here_2d(uint8_t wp_id)
 226:subsystems/navigation/waypoints.c **** {
 227:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 228:subsystems/navigation/waypoints.c ****     return;
 229:subsystems/navigation/waypoints.c ****   }
 230:subsystems/navigation/waypoints.c ****   if (waypoint_is_global(wp_id)) {
 231:subsystems/navigation/waypoints.c ****     waypoint_set_latlon(wp_id, stateGetPositionLla_i());
 232:subsystems/navigation/waypoints.c ****   } else {
 233:subsystems/navigation/waypoints.c ****     waypoint_set_xy_i(wp_id, stateGetPositionEnu_i()->x, stateGetPositionEnu_i()->y);
 234:subsystems/navigation/waypoints.c ****   }
 235:subsystems/navigation/waypoints.c **** }
 236:subsystems/navigation/waypoints.c **** 
 237:subsystems/navigation/waypoints.c **** void waypoint_globalize(uint8_t wp_id)
 238:subsystems/navigation/waypoints.c **** {
 465              		.loc 3 238 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 16
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              	.LVL52:
 470 0000 30B5     		push	{r4, r5, lr}
 471              		.cfi_def_cfa_offset 12
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 5, -8
 474              		.cfi_offset 14, -4
 239:subsystems/navigation/waypoints.c ****   if (state.ned_initialized_i) {
 475              		.loc 3 239 0
 476 0002 0C49     		ldr	r1, .L45
 477 0004 91F85C30 		ldrb	r3, [r1, #92]	@ zero_extendqisi2
 238:subsystems/navigation/waypoints.c **** {
 478              		.loc 3 238 0
 479 0008 85B0     		sub	sp, sp, #20
 480              		.cfi_def_cfa_offset 32
 481              		.loc 3 239 0
 482 000a 8BB1     		cbz	r3, .L40
 483              	.LVL53:
 484              	.LBB11:
 485              	.LBB12:
 240:subsystems/navigation/waypoints.c ****     struct EcefCoor_i ecef;
 241:subsystems/navigation/waypoints.c ****     ecef_of_enu_pos_i(&ecef, &state.ned_origin_i, &waypoints[wp_id].enu_i);
 486              		.loc 3 241 0
 487 000c 0A4D     		ldr	r5, .L45+4
 488 000e 2824     		movs	r4, #40
 489 0010 4443     		muls	r4, r0, r4
 490 0012 2A19     		adds	r2, r5, r4
 491 0014 01A8     		add	r0, sp, #4
 492              	.LVL54:
 493 0016 1C31     		adds	r1, r1, #28
 494 0018 0432     		adds	r2, r2, #4
 495 001a FFF7FEFF 		bl	ecef_of_enu_pos_i
 496              	.LVL55:
 242:subsystems/navigation/waypoints.c ****     lla_of_ecef_i(&waypoints[wp_id].lla, &ecef);
 497              		.loc 3 242 0
 498 001e 2819     		adds	r0, r5, r4
 499 0020 1C30     		adds	r0, r0, #28
 500 0022 01A9     		add	r1, sp, #4
 501 0024 FFF7FEFF 		bl	lla_of_ecef_i
 502              	.LVL56:
 243:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 503              		.loc 3 243 0
 504 0028 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 505 002a 43F00803 		orr	r3, r3, #8
 506 002e 2B55     		strb	r3, [r5, r4]
 507              	.L40:
 508              	.LBE12:
 509              	.LBE11:
 244:subsystems/navigation/waypoints.c ****   }
 245:subsystems/navigation/waypoints.c **** }
 510              		.loc 3 245 0
 511 0030 05B0     		add	sp, sp, #20
 512              		@ sp needed
 513 0032 30BD     		pop	{r4, r5, pc}
 514              	.L46:
 515              		.align	2
 516              	.L45:
 517 0034 00000000 		.word	state
 518 0038 00000000 		.word	.LANCHOR0
 519              		.cfi_endproc
 520              	.LFE475:
 522              		.section	.text.waypoint_set_enu_i,"ax",%progbits
 523              		.align	1
 524              		.global	waypoint_set_enu_i
 525              		.thumb
 526              		.thumb_func
 528              	waypoint_set_enu_i:
 529              	.LFB464:
 102:subsystems/navigation/waypoints.c **** {
 530              		.loc 3 102 0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534              	.LVL57:
 103:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 535              		.loc 3 103 0
 536 0000 0928     		cmp	r0, #9
 102:subsystems/navigation/waypoints.c **** {
 537              		.loc 3 102 0
 538 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 539              		.cfi_def_cfa_offset 20
 540              		.cfi_offset 4, -20
 541              		.cfi_offset 5, -16
 542              		.cfi_offset 6, -12
 543              		.cfi_offset 7, -8
 544              		.cfi_offset 14, -4
 102:subsystems/navigation/waypoints.c **** {
 545              		.loc 3 102 0
 546 0004 0446     		mov	r4, r0
 547 0006 0F46     		mov	r7, r1
 103:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 548              		.loc 3 103 0
 549 0008 31D8     		bhi	.L47
 550              	.LVL58:
 551              	.LBB15:
 552              	.LBB16:
 104:subsystems/navigation/waypoints.c ****     memcpy(&waypoints[wp_id].enu_i, enu, sizeof(struct EnuCoor_i));
 553              		.loc 3 104 0
 554 000a 194E     		ldr	r6, .L49
 555 000c 2825     		movs	r5, #40
 556 000e 4543     		muls	r5, r0, r5
 557 0010 7319     		adds	r3, r6, r5
 558 0012 0868     		ldr	r0, [r1]	@ unaligned
 559              	.LVL59:
 560 0014 4968     		ldr	r1, [r1, #4]	@ unaligned
 561              	.LVL60:
 562 0016 1A1D     		adds	r2, r3, #4
 563 0018 03C2     		stmia	r2!, {r0, r1}
 564 001a B868     		ldr	r0, [r7, #8]	@ unaligned
 565 001c 1060     		str	r0, [r2]	@ unaligned
 106:subsystems/navigation/waypoints.c ****     ENU_FLOAT_OF_BFP(waypoints[wp_id].enu_f, waypoints[wp_id].enu_i);
 566              		.loc 3 106 0
 567 001e D3ED017A 		flds	s15, [r3, #4]	@ int
 105:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 568              		.loc 3 105 0
 569 0022 715D     		ldrb	r1, [r6, r5]	@ zero_extendqisi2
 106:subsystems/navigation/waypoints.c ****     ENU_FLOAT_OF_BFP(waypoints[wp_id].enu_f, waypoints[wp_id].enu_i);
 570              		.loc 3 106 0
 571 0024 1A46     		mov	r2, r3
 572 0026 B8EEE77A 		fsitos	s14, s15
 573 002a DFED127A 		flds	s15, .L49+4
 574 002e 52F8080F 		ldr	r0, [r2, #8]!
 575 0032 27EE277A 		fmuls	s14, s14, s15
 576 0036 83ED047A 		fsts	s14, [r3, #16]
 577 003a 07EE100A 		fmsr	s14, r0	@ int
 578 003e B8EEC77A 		fsitos	s14, s14
 109:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 579              		.loc 3 109 0
 580 0042 2046     		mov	r0, r4
 106:subsystems/navigation/waypoints.c ****     ENU_FLOAT_OF_BFP(waypoints[wp_id].enu_f, waypoints[wp_id].enu_i);
 581              		.loc 3 106 0
 582 0044 27EE277A 		fmuls	s14, s14, s15
 583 0048 83ED057A 		fsts	s14, [r3, #20]
 584 004c 92ED017A 		flds	s14, [r2, #4]	@ int
 585 0050 B8EEC77A 		fsitos	s14, s14
 586 0054 67EE277A 		fmuls	s15, s14, s15
 587 0058 C3ED067A 		fsts	s15, [r3, #24]
 108:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 588              		.loc 3 108 0
 589 005c 01F0F103 		and	r3, r1, #241
 590 0060 43F00603 		orr	r3, r3, #6
 591 0064 7355     		strb	r3, [r6, r5]
 592              	.LBE16:
 593              	.LBE15:
 111:subsystems/navigation/waypoints.c **** }
 594              		.loc 3 111 0
 595 0066 BDE8F040 		pop	{r4, r5, r6, r7, lr}
 596              	.LVL61:
 597              	.LBB18:
 598              	.LBB17:
 109:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 599              		.loc 3 109 0
 600 006a FFF7FEBF 		b	waypoint_globalize
 601              	.LVL62:
 602              	.L47:
 603 006e F0BD     		pop	{r4, r5, r6, r7, pc}
 604              	.L50:
 605              		.align	2
 606              	.L49:
 607 0070 00000000 		.word	.LANCHOR0
 608 0074 0000803B 		.word	998244352
 609              	.LBE17:
 610              	.LBE18:
 611              		.cfi_endproc
 612              	.LFE464:
 614              		.section	.text.waypoint_move_enu_i,"ax",%progbits
 615              		.align	1
 616              		.global	waypoint_move_enu_i
 617              		.thumb
 618              		.thumb_func
 620              	waypoint_move_enu_i:
 621              	.LFB466:
 126:subsystems/navigation/waypoints.c **** {
 622              		.loc 3 126 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 8
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              	.LVL63:
 627 0000 13B5     		push	{r0, r1, r4, lr}
 628              		.cfi_def_cfa_offset 16
 629              		.cfi_offset 0, -16
 630              		.cfi_offset 1, -12
 631              		.cfi_offset 4, -8
 632              		.cfi_offset 14, -4
 127:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 633              		.loc 3 127 0
 634 0002 0928     		cmp	r0, #9
 126:subsystems/navigation/waypoints.c **** {
 635              		.loc 3 126 0
 636 0004 0C46     		mov	r4, r1
 637 0006 8DF80700 		strb	r0, [sp, #7]
 127:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 638              		.loc 3 127 0
 639 000a 09D8     		bhi	.L51
 128:subsystems/navigation/waypoints.c ****     waypoint_set_enu_i(wp_id, new_pos);
 640              		.loc 3 128 0
 641 000c FFF7FEFF 		bl	waypoint_set_enu_i
 642              	.LVL64:
 129:subsystems/navigation/waypoints.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id, &(new_pos->x),
 643              		.loc 3 129 0
 644 0010 0DF10700 		add	r0, sp, #7
 645              	.LVL65:
 646 0014 2146     		mov	r1, r4
 647 0016 221D     		adds	r2, r4, #4
 648 0018 04F10803 		add	r3, r4, #8
 649 001c FFF7FEFF 		bl	pprz_msg_send_WP_MOVED_ENU.constprop.5
 650              	.LVL66:
 651              	.L51:
 132:subsystems/navigation/waypoints.c **** }
 652              		.loc 3 132 0
 653 0020 02B0     		add	sp, sp, #8
 654              	.LVL67:
 655              		@ sp needed
 656 0022 10BD     		pop	{r4, pc}
 657              		.cfi_endproc
 658              	.LFE466:
 660              		.section	.text.waypoint_set_enu,"ax",%progbits
 661              		.align	1
 662              		.global	waypoint_set_enu
 663              		.thumb
 664              		.thumb_func
 666              	waypoint_set_enu:
 667              	.LFB465:
 114:subsystems/navigation/waypoints.c **** {
 668              		.loc 3 114 0
 669              		.cfi_startproc
 670              		@ args = 0, pretend = 0, frame = 0
 671              		@ frame_needed = 0, uses_anonymous_args = 0
 672              	.LVL68:
 115:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 673              		.loc 3 115 0
 674 0000 0928     		cmp	r0, #9
 114:subsystems/navigation/waypoints.c **** {
 675              		.loc 3 114 0
 676 0002 70B5     		push	{r4, r5, r6, lr}
 677              		.cfi_def_cfa_offset 16
 678              		.cfi_offset 4, -16
 679              		.cfi_offset 5, -12
 680              		.cfi_offset 6, -8
 681              		.cfi_offset 14, -4
 114:subsystems/navigation/waypoints.c **** {
 682              		.loc 3 114 0
 683 0004 0546     		mov	r5, r0
 684 0006 0E46     		mov	r6, r1
 115:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 685              		.loc 3 115 0
 686 0008 33D8     		bhi	.L53
 116:subsystems/navigation/waypoints.c ****     memcpy(&waypoints[wp_id].enu_f, enu, sizeof(struct EnuCoor_f));
 687              		.loc 3 116 0
 688 000a 2822     		movs	r2, #40
 689 000c 194C     		ldr	r4, .L55
 118:subsystems/navigation/waypoints.c ****     ENU_BFP_OF_REAL(waypoints[wp_id].enu_i, waypoints[wp_id].enu_f);
 690              		.loc 3 118 0
 691 000e DFED1A7A 		flds	s15, .L55+4
 116:subsystems/navigation/waypoints.c ****     memcpy(&waypoints[wp_id].enu_f, enu, sizeof(struct EnuCoor_f));
 692              		.loc 3 116 0
 693 0012 4243     		muls	r2, r0, r2
 694 0014 02F11003 		add	r3, r2, #16
 695 0018 0868     		ldr	r0, [r1]	@ unaligned
 696              	.LVL69:
 697 001a 4968     		ldr	r1, [r1, #4]	@ unaligned
 698              	.LVL70:
 699 001c 2344     		add	r3, r3, r4
 700 001e 03C3     		stmia	r3!, {r0, r1}
 701 0020 B068     		ldr	r0, [r6, #8]	@ unaligned
 702 0022 1860     		str	r0, [r3]	@ unaligned
 117:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 703              		.loc 3 117 0
 704 0024 A318     		adds	r3, r4, r2
 118:subsystems/navigation/waypoints.c ****     ENU_BFP_OF_REAL(waypoints[wp_id].enu_i, waypoints[wp_id].enu_f);
 705              		.loc 3 118 0
 706 0026 93ED047A 		flds	s14, [r3, #16]
 117:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 707              		.loc 3 117 0
 708 002a A05C     		ldrb	r0, [r4, r2]	@ zero_extendqisi2
 118:subsystems/navigation/waypoints.c ****     ENU_BFP_OF_REAL(waypoints[wp_id].enu_i, waypoints[wp_id].enu_f);
 709              		.loc 3 118 0
 710 002c 27EE277A 		fmuls	s14, s14, s15
 711 0030 1946     		mov	r1, r3
 712 0032 BDEEC77A 		ftosizs	s14, s14
 713 0036 83ED017A 		fsts	s14, [r3, #4]	@ int
 714 003a 93ED057A 		flds	s14, [r3, #20]
 715 003e 27EE277A 		fmuls	s14, s14, s15
 716 0042 BDEEC77A 		ftosizs	s14, s14
 717 0046 17EE106A 		fmrs	r6, s14	@ int
 718              	.LVL71:
 719 004a 93ED067A 		flds	s14, [r3, #24]
 720 004e 41F8086F 		str	r6, [r1, #8]!
 721 0052 67EE277A 		fmuls	s15, s14, s15
 120:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 722              		.loc 3 120 0
 723 0056 00F0F103 		and	r3, r0, #241
 118:subsystems/navigation/waypoints.c ****     ENU_BFP_OF_REAL(waypoints[wp_id].enu_i, waypoints[wp_id].enu_f);
 724              		.loc 3 118 0
 725 005a FDEEE77A 		ftosizs	s15, s15
 120:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 726              		.loc 3 120 0
 727 005e 43F00603 		orr	r3, r3, #6
 118:subsystems/navigation/waypoints.c ****     ENU_BFP_OF_REAL(waypoints[wp_id].enu_i, waypoints[wp_id].enu_f);
 728              		.loc 3 118 0
 729 0062 C1ED017A 		fsts	s15, [r1, #4]	@ int
 120:subsystems/navigation/waypoints.c ****     ClearBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 730              		.loc 3 120 0
 731 0066 A354     		strb	r3, [r4, r2]
 121:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 732              		.loc 3 121 0
 733 0068 2846     		mov	r0, r5
 123:subsystems/navigation/waypoints.c **** }
 734              		.loc 3 123 0
 735 006a BDE87040 		pop	{r4, r5, r6, lr}
 121:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 736              		.loc 3 121 0
 737 006e FFF7FEBF 		b	waypoint_globalize
 738              	.LVL72:
 739              	.L53:
 740 0072 70BD     		pop	{r4, r5, r6, pc}
 741              	.L56:
 742              		.align	2
 743              	.L55:
 744 0074 00000000 		.word	.LANCHOR0
 745 0078 00008043 		.word	1132462080
 746              		.cfi_endproc
 747              	.LFE465:
 749              		.section	.text.waypoint_set_xy_i,"ax",%progbits
 750              		.align	1
 751              		.global	waypoint_set_xy_i
 752              		.thumb
 753              		.thumb_func
 755              	waypoint_set_xy_i:
 756              	.LFB467:
 139:subsystems/navigation/waypoints.c **** {
 757              		.loc 3 139 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL73:
 140:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 762              		.loc 3 140 0
 763 0000 0928     		cmp	r0, #9
 139:subsystems/navigation/waypoints.c **** {
 764              		.loc 3 139 0
 765 0002 30B5     		push	{r4, r5, lr}
 766              		.cfi_def_cfa_offset 12
 767              		.cfi_offset 4, -12
 768              		.cfi_offset 5, -8
 769              		.cfi_offset 14, -4
 140:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 770              		.loc 3 140 0
 771 0004 1BD8     		bhi	.L57
 144:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.x = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.x);
 772              		.loc 3 144 0
 773 0006 06EE901A 		fmsr	s13, r1	@ int
 774 000a DFED0D7A 		flds	s15, .L59
 141:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.x = x;
 775              		.loc 3 141 0
 776 000e 0D4B     		ldr	r3, .L59+4
 144:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.x = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.x);
 777              		.loc 3 144 0
 778 0010 B8EEE67A 		fsitos	s14, s13
 141:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.x = x;
 779              		.loc 3 141 0
 780 0014 2825     		movs	r5, #40
 144:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.x = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.x);
 781              		.loc 3 144 0
 782 0016 27EE277A 		fmuls	s14, s14, s15
 145:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.y = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.y);
 783              		.loc 3 145 0
 784 001a 06EE902A 		fmsr	s13, r2	@ int
 141:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.x = x;
 785              		.loc 3 141 0
 786 001e 05FB0033 		mla	r3, r5, r0, r3
 144:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.x = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.x);
 787              		.loc 3 144 0
 788 0022 83ED047A 		fsts	s14, [r3, #16]
 145:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.y = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.y);
 789              		.loc 3 145 0
 790 0026 B8EEE67A 		fsitos	s14, s13
 141:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.x = x;
 791              		.loc 3 141 0
 792 002a 5960     		str	r1, [r3, #4]
 145:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.y = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.y);
 793              		.loc 3 145 0
 794 002c 67EE277A 		fmuls	s15, s14, s15
 142:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.y = y;
 795              		.loc 3 142 0
 796 0030 9A60     		str	r2, [r3, #8]
 145:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.y = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.y);
 797              		.loc 3 145 0
 798 0032 C3ED057A 		fsts	s15, [r3, #20]
 148:subsystems/navigation/waypoints.c **** }
 799              		.loc 3 148 0
 800 0036 BDE83040 		pop	{r4, r5, lr}
 146:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 801              		.loc 3 146 0
 802 003a FFF7FEBF 		b	waypoint_globalize
 803              	.LVL74:
 804              	.L57:
 805 003e 30BD     		pop	{r4, r5, pc}
 806              	.L60:
 807              		.align	2
 808              	.L59:
 809 0040 0000803B 		.word	998244352
 810 0044 00000000 		.word	.LANCHOR0
 811              		.cfi_endproc
 812              	.LFE467:
 814              		.section	.text.waypoint_set_alt_i,"ax",%progbits
 815              		.align	1
 816              		.global	waypoint_set_alt_i
 817              		.thumb
 818              		.thumb_func
 820              	waypoint_set_alt_i:
 821              	.LFB468:
 151:subsystems/navigation/waypoints.c **** {
 822              		.loc 3 151 0
 823              		.cfi_startproc
 824              		@ args = 0, pretend = 0, frame = 0
 825              		@ frame_needed = 0, uses_anonymous_args = 0
 826              	.LVL75:
 152:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 827              		.loc 3 152 0
 828 0000 0928     		cmp	r0, #9
 151:subsystems/navigation/waypoints.c **** {
 829              		.loc 3 151 0
 830 0002 10B5     		push	{r4, lr}
 831              		.cfi_def_cfa_offset 8
 832              		.cfi_offset 4, -8
 833              		.cfi_offset 14, -4
 152:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 834              		.loc 3 152 0
 835 0004 0ED8     		bhi	.L61
 153:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = alt;
 836              		.loc 3 153 0
 837 0006 084A     		ldr	r2, .L63
 155:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.z);
 838              		.loc 3 155 0
 839 0008 07EE901A 		fmsr	s15, r1	@ int
 153:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = alt;
 840              		.loc 3 153 0
 841 000c 2824     		movs	r4, #40
 842 000e 04FB0023 		mla	r3, r4, r0, r2
 155:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.z);
 843              		.loc 3 155 0
 844 0012 FAEECC7A 		vcvt.f32.s32	s15, s15, #8
 153:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = alt;
 845              		.loc 3 153 0
 846 0016 D960     		str	r1, [r3, #12]
 155:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = POS_FLOAT_OF_BFP(waypoints[wp_id].enu_i.z);
 847              		.loc 3 155 0
 848 0018 C3ED067A 		fsts	s15, [r3, #24]
 158:subsystems/navigation/waypoints.c **** }
 849              		.loc 3 158 0
 850 001c BDE81040 		pop	{r4, lr}
 156:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 851              		.loc 3 156 0
 852 0020 FFF7FEBF 		b	waypoint_globalize
 853              	.LVL76:
 854              	.L61:
 855 0024 10BD     		pop	{r4, pc}
 856              	.L64:
 857 0026 00BF     		.align	2
 858              	.L63:
 859 0028 00000000 		.word	.LANCHOR0
 860              		.cfi_endproc
 861              	.LFE468:
 863              		.section	.text.waypoint_set_alt,"ax",%progbits
 864              		.align	1
 865              		.global	waypoint_set_alt
 866              		.thumb
 867              		.thumb_func
 869              	waypoint_set_alt:
 870              	.LFB469:
 161:subsystems/navigation/waypoints.c **** {
 871              		.loc 3 161 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 0
 874              		@ frame_needed = 0, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876              	.LVL77:
 162:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 877              		.loc 3 162 0
 878 0000 0928     		cmp	r0, #9
 161:subsystems/navigation/waypoints.c **** {
 879              		.loc 3 161 0
 880 0002 07EE901A 		fmsr	s15, r1
 162:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 881              		.loc 3 162 0
 882 0006 0FD8     		bhi	.L65
 163:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = alt;
 883              		.loc 3 163 0
 884 0008 084A     		ldr	r2, .L67
 165:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = POS_BFP_OF_REAL(waypoints[wp_id].enu_f.z);
 885              		.loc 3 165 0
 886 000a 9FED097A 		flds	s14, .L67+4
 163:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_f.z = alt;
 887              		.loc 3 163 0
 888 000e 2821     		movs	r1, #40
 889              	.LVL78:
 890 0010 01FB0023 		mla	r3, r1, r0, r2
 891 0014 C3ED067A 		fsts	s15, [r3, #24]
 165:subsystems/navigation/waypoints.c ****     waypoints[wp_id].enu_i.z = POS_BFP_OF_REAL(waypoints[wp_id].enu_f.z);
 892              		.loc 3 165 0
 893 0018 67EE877A 		fmuls	s15, s15, s14
 894              	.LVL79:
 895 001c FDEEE77A 		ftosizs	s15, s15
 896 0020 C3ED037A 		fsts	s15, [r3, #12]	@ int
 166:subsystems/navigation/waypoints.c ****     waypoint_globalize(wp_id);
 897              		.loc 3 166 0
 898 0024 FFF7FEBF 		b	waypoint_globalize
 899              	.LVL80:
 900              	.L65:
 901 0028 7047     		bx	lr
 902              	.L68:
 903 002a 00BF     		.align	2
 904              	.L67:
 905 002c 00000000 		.word	.LANCHOR0
 906 0030 00008043 		.word	1132462080
 907              		.cfi_endproc
 908              	.LFE469:
 910              		.section	.text.waypoint_localize,"ax",%progbits
 911              		.align	1
 912              		.global	waypoint_localize
 913              		.thumb
 914              		.thumb_func
 916              	waypoint_localize:
 917              	.LFB476:
 246:subsystems/navigation/waypoints.c **** 
 247:subsystems/navigation/waypoints.c **** /** update local ENU coordinates from its LLA coordinates */
 248:subsystems/navigation/waypoints.c **** void waypoint_localize(uint8_t wp_id)
 249:subsystems/navigation/waypoints.c **** {
 918              		.loc 3 249 0
 919              		.cfi_startproc
 920              		@ args = 0, pretend = 0, frame = 16
 921              		@ frame_needed = 0, uses_anonymous_args = 0
 922              	.LVL81:
 923 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 924              		.cfi_def_cfa_offset 20
 925              		.cfi_offset 4, -20
 926              		.cfi_offset 5, -16
 927              		.cfi_offset 6, -12
 928              		.cfi_offset 7, -8
 929              		.cfi_offset 14, -4
 250:subsystems/navigation/waypoints.c ****   if (state.ned_initialized_i) {
 930              		.loc 3 250 0
 931 0002 2449     		ldr	r1, .L74
 932 0004 91F85C30 		ldrb	r3, [r1, #92]	@ zero_extendqisi2
 249:subsystems/navigation/waypoints.c **** {
 933              		.loc 3 249 0
 934 0008 85B0     		sub	sp, sp, #20
 935              		.cfi_def_cfa_offset 40
 936              		.loc 3 250 0
 937 000a 002B     		cmp	r3, #0
 938 000c 40D0     		beq	.L69
 939              	.LVL82:
 940              	.LBB22:
 941              	.LBB23:
 251:subsystems/navigation/waypoints.c ****     struct EnuCoor_i enu;
 252:subsystems/navigation/waypoints.c ****     enu_of_lla_point_i(&enu, &state.ned_origin_i, &waypoints[wp_id].lla);
 942              		.loc 3 252 0
 943 000e 224D     		ldr	r5, .L74+4
 944 0010 2824     		movs	r4, #40
 945 0012 4443     		muls	r4, r0, r4
 946 0014 01AE     		add	r6, sp, #4
 947 0016 2A19     		adds	r2, r5, r4
 948 0018 3046     		mov	r0, r6
 949              	.LVL83:
 950 001a 1C31     		adds	r1, r1, #28
 951 001c 1C32     		adds	r2, r2, #28
 952 001e FFF7FEFF 		bl	enu_of_lla_point_i
 953              	.LVL84:
 253:subsystems/navigation/waypoints.c ****     // convert ENU pos from cm to BFP with INT32_POS_FRAC
 254:subsystems/navigation/waypoints.c ****     enu.x = POS_BFP_OF_REAL(enu.x) / 100;
 954              		.loc 3 254 0
 955 0022 019B     		ldr	r3, [sp, #4]
 956 0024 1A02     		lsls	r2, r3, #8
 957 0026 6423     		movs	r3, #100
 958 0028 92FBF3F2 		sdiv	r2, r2, r3
 959 002c 0192     		str	r2, [sp, #4]
 255:subsystems/navigation/waypoints.c ****     enu.y = POS_BFP_OF_REAL(enu.y) / 100;
 960              		.loc 3 255 0
 961 002e 029A     		ldr	r2, [sp, #8]
 962 0030 1202     		lsls	r2, r2, #8
 963 0032 92FBF3F2 		sdiv	r2, r2, r3
 964 0036 0292     		str	r2, [sp, #8]
 256:subsystems/navigation/waypoints.c ****     enu.z = POS_BFP_OF_REAL(enu.z) / 100;
 965              		.loc 3 256 0
 966 0038 039A     		ldr	r2, [sp, #12]
 967 003a 1202     		lsls	r2, r2, #8
 968 003c 92FBF3F3 		sdiv	r3, r2, r3
 969 0040 0393     		str	r3, [sp, #12]
 257:subsystems/navigation/waypoints.c ****     memcpy(&waypoints[wp_id].enu_i, &enu, sizeof(struct EnuCoor_i));
 970              		.loc 3 257 0
 971 0042 96E80700 		ldmia	r6, {r0, r1, r2}
 972 0046 2B19     		adds	r3, r5, r4
 973 0048 1F1D     		adds	r7, r3, #4
 974 004a 87E80700 		stmia	r7, {r0, r1, r2}
 258:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 259:subsystems/navigation/waypoints.c ****     ENU_FLOAT_OF_BFP(waypoints[wp_id].enu_f, waypoints[wp_id].enu_i);
 975              		.loc 3 259 0
 976 004e 07EE900A 		fmsr	s15, r0	@ int
 977 0052 1A46     		mov	r2, r3
 978 0054 B8EEE77A 		fsitos	s14, s15
 979 0058 DFED107A 		flds	s15, .L74+8
 980 005c 52F8080F 		ldr	r0, [r2, #8]!
 258:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_I);
 981              		.loc 3 258 0
 982 0060 295D     		ldrb	r1, [r5, r4]	@ zero_extendqisi2
 983              		.loc 3 259 0
 984 0062 27EE277A 		fmuls	s14, s14, s15
 985 0066 83ED047A 		fsts	s14, [r3, #16]
 986 006a 07EE100A 		fmsr	s14, r0	@ int
 987 006e B8EEC77A 		fsitos	s14, s14
 988 0072 27EE277A 		fmuls	s14, s14, s15
 989 0076 83ED057A 		fsts	s14, [r3, #20]
 990 007a 92ED017A 		flds	s14, [r2, #4]	@ int
 991 007e B8EEC77A 		fsitos	s14, s14
 992 0082 67EE277A 		fmuls	s15, s14, s15
 993 0086 C3ED067A 		fsts	s15, [r3, #24]
 260:subsystems/navigation/waypoints.c ****     SetBit(waypoints[wp_id].flags, WP_FLAG_ENU_F);
 994              		.loc 3 260 0
 995 008a 41F00603 		orr	r3, r1, #6
 996 008e 2B55     		strb	r3, [r5, r4]
 997              	.L69:
 998              	.LBE23:
 999              	.LBE22:
 261:subsystems/navigation/waypoints.c ****   }
 262:subsystems/navigation/waypoints.c **** }
 1000              		.loc 3 262 0
 1001 0090 05B0     		add	sp, sp, #20
 1002              		@ sp needed
 1003 0092 F0BD     		pop	{r4, r5, r6, r7, pc}
 1004              	.L75:
 1005              		.align	2
 1006              	.L74:
 1007 0094 00000000 		.word	state
 1008 0098 00000000 		.word	.LANCHOR0
 1009 009c 0000803B 		.word	998244352
 1010              		.cfi_endproc
 1011              	.LFE476:
 1013              		.section	.text.waypoint_set_lla,"ax",%progbits
 1014              		.align	1
 1015              		.global	waypoint_set_lla
 1016              		.thumb
 1017              		.thumb_func
 1019              	waypoint_set_lla:
 1020              	.LFB470:
 171:subsystems/navigation/waypoints.c **** {
 1021              		.loc 3 171 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL85:
 172:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1026              		.loc 3 172 0
 1027 0000 0928     		cmp	r0, #9
 171:subsystems/navigation/waypoints.c **** {
 1028              		.loc 3 171 0
 1029 0002 70B5     		push	{r4, r5, r6, lr}
 1030              		.cfi_def_cfa_offset 16
 1031              		.cfi_offset 4, -16
 1032              		.cfi_offset 5, -12
 1033              		.cfi_offset 6, -8
 1034              		.cfi_offset 14, -4
 171:subsystems/navigation/waypoints.c **** {
 1035              		.loc 3 171 0
 1036 0004 0246     		mov	r2, r0
 1037 0006 0E46     		mov	r6, r1
 172:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1038              		.loc 3 172 0
 1039 0008 12D8     		bhi	.L76
 1040              	.LVL86:
 1041              	.LBB26:
 1042              	.LBB27:
 175:subsystems/navigation/waypoints.c ****   memcpy(&waypoints[wp_id].lla, lla, sizeof(struct LlaCoor_i));
 1043              		.loc 3 175 0
 1044 000a 0A4D     		ldr	r5, .L78
 1045 000c 2824     		movs	r4, #40
 1046 000e 4443     		muls	r4, r0, r4
 1047 0010 2B19     		adds	r3, r5, r4
 1048 0012 0868     		ldr	r0, [r1]	@ unaligned
 1049              	.LVL87:
 1050 0014 4968     		ldr	r1, [r1, #4]	@ unaligned
 1051              	.LVL88:
 1052 0016 1C33     		adds	r3, r3, #28
 1053 0018 03C3     		stmia	r3!, {r0, r1}
 1054 001a B068     		ldr	r0, [r6, #8]	@ unaligned
 1055 001c 1860     		str	r0, [r3]	@ unaligned
 176:subsystems/navigation/waypoints.c ****   SetBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 1056              		.loc 3 176 0
 1057 001e 2B5D     		ldrb	r3, [r5, r4]	@ zero_extendqisi2
 1058 0020 43F00803 		orr	r3, r3, #8
 1059 0024 2B55     		strb	r3, [r5, r4]
 177:subsystems/navigation/waypoints.c ****   waypoint_localize(wp_id);
 1060              		.loc 3 177 0
 1061 0026 1046     		mov	r0, r2
 1062              	.LBE27:
 1063              	.LBE26:
 178:subsystems/navigation/waypoints.c **** }
 1064              		.loc 3 178 0
 1065 0028 BDE87040 		pop	{r4, r5, r6, lr}
 1066              	.LVL89:
 1067              	.LBB29:
 1068              	.LBB28:
 177:subsystems/navigation/waypoints.c ****   waypoint_localize(wp_id);
 1069              		.loc 3 177 0
 1070 002c FFF7FEBF 		b	waypoint_localize
 1071              	.LVL90:
 1072              	.L76:
 1073 0030 70BD     		pop	{r4, r5, r6, pc}
 1074              	.L79:
 1075 0032 00BF     		.align	2
 1076              	.L78:
 1077 0034 00000000 		.word	.LANCHOR0
 1078              	.LBE28:
 1079              	.LBE29:
 1080              		.cfi_endproc
 1081              	.LFE470:
 1083              		.section	.text.waypoints_init,"ax",%progbits
 1084              		.align	1
 1085              		.global	waypoints_init
 1086              		.thumb
 1087              		.thumb_func
 1089              	waypoints_init:
 1090              	.LFB457:
  36:subsystems/navigation/waypoints.c **** {
 1091              		.loc 3 36 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 256
 1094              		@ frame_needed = 0, uses_anonymous_args = 0
 1095 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1096              		.cfi_def_cfa_offset 20
 1097              		.cfi_offset 4, -20
 1098              		.cfi_offset 5, -16
 1099              		.cfi_offset 6, -12
 1100              		.cfi_offset 7, -8
 1101              		.cfi_offset 14, -4
 1102 0002 C1B0     		sub	sp, sp, #260
 1103              		.cfi_def_cfa_offset 280
  37:subsystems/navigation/waypoints.c ****   struct EnuCoor_f wp_tmp_float[NB_WAYPOINT] = WAYPOINTS_ENU;
 1104              		.loc 3 37 0
 1105 0004 1649     		ldr	r1, .L85
 1106 0006 7822     		movs	r2, #120
 1107 0008 04A8     		add	r0, sp, #16
 1108 000a FFF7FEFF 		bl	memcpy
 1109              	.LVL91:
  40:subsystems/navigation/waypoints.c ****   bool_t is_global[NB_WAYPOINT] = WAYPOINTS_GLOBAL;
 1110              		.loc 3 40 0
 1111 000e 01AE     		add	r6, sp, #4
  38:subsystems/navigation/waypoints.c ****   struct LlaCoor_i wp_tmp_lla_i[NB_WAYPOINT] = WAYPOINTS_LLA_WGS84;
 1112              		.loc 3 38 0
 1113 0010 1449     		ldr	r1, .L85+4
 1114 0012 7822     		movs	r2, #120
 1115 0014 22A8     		add	r0, sp, #136
 1116 0016 FFF7FEFF 		bl	memcpy
 1117              	.LVL92:
  40:subsystems/navigation/waypoints.c ****   bool_t is_global[NB_WAYPOINT] = WAYPOINTS_GLOBAL;
 1118              		.loc 3 40 0
 1119 001a 3046     		mov	r0, r6
 1120 001c 0021     		movs	r1, #0
 1121 001e 0A22     		movs	r2, #10
 1122 0020 FFF7FEFF 		bl	memset
 1123              	.LVL93:
 1124 0024 0024     		movs	r4, #0
 1125              	.LVL94:
 1126              	.L84:
 1127 0026 2822     		movs	r2, #40
  44:subsystems/navigation/waypoints.c ****     waypoints[i].flags = 0;
 1128              		.loc 3 44 0
 1129 0028 0F4B     		ldr	r3, .L85+8
 1130 002a 6243     		muls	r2, r4, r2
 1131 002c 0021     		movs	r1, #0
 1132 002e D154     		strb	r1, [r2, r3]
  46:subsystems/navigation/waypoints.c ****     if (is_global[i]) {
 1133              		.loc 3 46 0
 1134 0030 335D     		ldrb	r3, [r6, r4]	@ zero_extendqisi2
 1135 0032 E5B2     		uxtb	r5, r4
 1136              	.LVL95:
 1137 0034 0C27     		movs	r7, #12
  47:subsystems/navigation/waypoints.c ****       waypoint_set_global_flag(i);
 1138              		.loc 3 47 0
 1139 0036 2846     		mov	r0, r5
  46:subsystems/navigation/waypoints.c ****     if (is_global[i]) {
 1140              		.loc 3 46 0
 1141 0038 43B1     		cbz	r3, .L81
  47:subsystems/navigation/waypoints.c ****       waypoint_set_global_flag(i);
 1142              		.loc 3 47 0
 1143 003a FFF7FEFF 		bl	waypoint_set_global_flag
 1144              	.LVL96:
  48:subsystems/navigation/waypoints.c ****       waypoint_set_lla(i, &wp_tmp_lla_i[i]);
 1145              		.loc 3 48 0
 1146 003e 22AB     		add	r3, sp, #136
 1147 0040 2846     		mov	r0, r5
 1148 0042 07FB0431 		mla	r1, r7, r4, r3
 1149 0046 FFF7FEFF 		bl	waypoint_set_lla
 1150              	.LVL97:
 1151 004a 04E0     		b	.L82
 1152              	.L81:
  50:subsystems/navigation/waypoints.c ****       waypoint_set_enu(i, &wp_tmp_float[i]);
 1153              		.loc 3 50 0
 1154 004c 04AB     		add	r3, sp, #16
 1155 004e 07FB0431 		mla	r1, r7, r4, r3
 1156 0052 FFF7FEFF 		bl	waypoint_set_enu
 1157              	.LVL98:
 1158              	.L82:
 1159 0056 0134     		adds	r4, r4, #1
 1160              	.LVL99:
  42:subsystems/navigation/waypoints.c ****   for (i = 0; i < nb_waypoint; i++) {
 1161              		.loc 3 42 0
 1162 0058 0A2C     		cmp	r4, #10
 1163 005a E4D1     		bne	.L84
  53:subsystems/navigation/waypoints.c **** }
 1164              		.loc 3 53 0
 1165 005c 41B0     		add	sp, sp, #260
 1166              		@ sp needed
 1167 005e F0BD     		pop	{r4, r5, r6, r7, pc}
 1168              	.LVL100:
 1169              	.L86:
 1170              		.align	2
 1171              	.L85:
 1172 0060 00000000 		.word	.LANCHOR1
 1173 0064 78000000 		.word	.LANCHOR1+120
 1174 0068 00000000 		.word	.LANCHOR0
 1175              		.cfi_endproc
 1176              	.LFE457:
 1178              		.section	.text.waypoint_move_lla,"ax",%progbits
 1179              		.align	1
 1180              		.global	waypoint_move_lla
 1181              		.thumb
 1182              		.thumb_func
 1184              	waypoint_move_lla:
 1185              	.LFB471:
 181:subsystems/navigation/waypoints.c **** {
 1186              		.loc 3 181 0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 16
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190              	.LVL101:
 1191 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1192              		.cfi_def_cfa_offset 24
 1193              		.cfi_offset 4, -24
 1194              		.cfi_offset 5, -20
 1195              		.cfi_offset 6, -16
 1196              		.cfi_offset 7, -12
 1197              		.cfi_offset 8, -8
 1198              		.cfi_offset 14, -4
 1199 0004 86B0     		sub	sp, sp, #24
 1200              		.cfi_def_cfa_offset 48
 182:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1201              		.loc 3 182 0
 1202 0006 0928     		cmp	r0, #9
 181:subsystems/navigation/waypoints.c **** {
 1203              		.loc 3 181 0
 1204 0008 0E46     		mov	r6, r1
 1205 000a 8DF80F00 		strb	r0, [sp, #15]
 182:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1206              		.loc 3 182 0
 1207 000e 00F29280 		bhi	.L87
 185:subsystems/navigation/waypoints.c ****   waypoint_set_lla(wp_id, lla);
 1208              		.loc 3 185 0
 1209 0012 FFF7FEFF 		bl	waypoint_set_lla
 1210              	.LVL102:
 186:subsystems/navigation/waypoints.c ****   if (waypoint_is_global(wp_id)) {
 1211              		.loc 3 186 0
 1212 0016 9DF80F40 		ldrb	r4, [sp, #15]	@ zero_extendqisi2
 1213 001a 2046     		mov	r0, r4
 1214 001c FFF7FEFF 		bl	waypoint_is_global
 1215              	.LVL103:
 1216 0020 0028     		cmp	r0, #0
 1217 0022 7CD0     		beq	.L89
 1218              	.LBB33:
 188:subsystems/navigation/waypoints.c ****     int32_t hmsl = lla->alt - state.ned_origin_i.lla.alt + state.ned_origin_i.hmsl;
 1219              		.loc 3 188 0
 1220 0024 454B     		ldr	r3, .L93
 1221 0026 B168     		ldr	r1, [r6, #8]
 1222 0028 1A6B     		ldr	r2, [r3, #48]
 1223              	.LBB34:
 1224              	.LBB35:
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 1225              		.loc 2 990 0
 1226 002a 454C     		ldr	r4, .L93+4
 1227              	.LBE35:
 1228              	.LBE34:
 188:subsystems/navigation/waypoints.c ****     int32_t hmsl = lla->alt - state.ned_origin_i.lla.alt + state.ned_origin_i.hmsl;
 1229              		.loc 3 188 0
 1230 002c 9B6D     		ldr	r3, [r3, #88]
 1231              	.LBB39:
 1232              	.LBB36:
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 1233              		.loc 2 990 0
 1234 002e D4F82871 		ldr	r7, [r4, #296]
 1235 0032 D4F80C81 		ldr	r8, [r4, #268]
 1236              	.LBE36:
 1237              	.LBE39:
 188:subsystems/navigation/waypoints.c ****     int32_t hmsl = lla->alt - state.ned_origin_i.lla.alt + state.ned_origin_i.hmsl;
 1238              		.loc 3 188 0
 1239 0036 8A1A     		subs	r2, r1, r2
 1240 0038 1A44     		add	r2, r2, r3
 1241 003a 0125     		movs	r5, #1
 1242 003c 0592     		str	r2, [sp, #20]
 1243              	.LVL104:
 1244              	.LBB40:
 1245              	.LBB37:
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 1246              		.loc 2 990 0
 1247 003e 0F21     		movs	r1, #15
 1248 0040 8DF81350 		strb	r5, [sp, #19]
 1249              	.LVL105:
 1250 0044 D4F80831 		ldr	r3, [r4, #264]
 1251 0048 3846     		mov	r0, r7
 1252 004a 9847     		blx	r3
 1253              	.LVL106:
 1254 004c 3D49     		ldr	r1, .L93+8
 1255              	.LVL107:
 1256 004e 0246     		mov	r2, r0
 1257 0050 3846     		mov	r0, r7
 1258 0052 C047     		blx	r8
 1259              	.LVL108:
 1260 0054 0028     		cmp	r0, #0
 1261 0056 5BD0     		beq	.L90
 991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 1262              		.loc 2 991 0
 1263 0058 D4F82871 		ldr	r7, [r4, #296]
 1264 005c D4F80831 		ldr	r3, [r4, #264]
 1265 0060 D4F82481 		ldr	r8, [r4, #292]
 1266 0064 3846     		mov	r0, r7
 1267 0066 0F21     		movs	r1, #15
 1268 0068 9847     		blx	r3
 1269              	.LVL109:
 1270 006a 3649     		ldr	r1, .L93+8
 1271              	.LVL110:
 1272 006c 0246     		mov	r2, r0
 1273 006e 3846     		mov	r0, r7
 1274 0070 C047     		blx	r8
 1275              	.LVL111:
 992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 1276              		.loc 2 992 0
 1277 0072 D4F81831 		ldr	r3, [r4, #280]
 1278 0076 D4F82801 		ldr	r0, [r4, #296]
 1279 007a 3249     		ldr	r1, .L93+8
 1280              	.LVL112:
 1281 007c 0F22     		movs	r2, #15
 1282 007e 9847     		blx	r3
 1283              	.LVL113:
 993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1284              		.loc 2 993 0
 1285 0080 0DF11303 		add	r3, sp, #19
 1286 0084 0095     		str	r5, [sp]
 1287 0086 0193     		str	r3, [sp, #4]
 1288 0088 D4F81071 		ldr	r7, [r4, #272]
 1289 008c D4F82801 		ldr	r0, [r4, #296]
 1290 0090 2C49     		ldr	r1, .L93+8
 1291              	.LVL114:
 1292 0092 0222     		movs	r2, #2
 1293 0094 0023     		movs	r3, #0
 1294 0096 B847     		blx	r7
 1295              	.LVL115:
 994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_LLA, "WP_MO
 1296              		.loc 2 994 0
 1297 0098 2F23     		movs	r3, #47
 1298 009a 0093     		str	r3, [sp]
 1299 009c 2A4B     		ldr	r3, .L93+12
 1300 009e 0193     		str	r3, [sp, #4]
 1301 00a0 D4F81471 		ldr	r7, [r4, #276]
 1302 00a4 D4F82801 		ldr	r0, [r4, #296]
 1303 00a8 2649     		ldr	r1, .L93+8
 1304              	.LVL116:
 1305 00aa 0222     		movs	r2, #2
 1306 00ac 0023     		movs	r3, #0
 1307 00ae B847     		blx	r7
 1308              	.LVL117:
 995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 1309              		.loc 2 995 0
 1310 00b0 0DF10F03 		add	r3, sp, #15
 1311              	.LVL118:
 1312 00b4 0193     		str	r3, [sp, #4]
 1313 00b6 0095     		str	r5, [sp]
 1314 00b8 D4F81051 		ldr	r5, [r4, #272]
 1315              	.LVL119:
 1316 00bc D4F82801 		ldr	r0, [r4, #296]
 1317 00c0 2049     		ldr	r1, .L93+8
 1318              	.LVL120:
 1319 00c2 0222     		movs	r2, #2
 1320 00c4 0023     		movs	r3, #0
 1321              	.LVL121:
 1322 00c6 A847     		blx	r5
 1323              	.LVL122:
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 1324              		.loc 2 996 0
 1325 00c8 0425     		movs	r5, #4
 1326 00ca 8DE86000 		stmia	sp, {r5, r6}
 1327 00ce 1D49     		ldr	r1, .L93+8
 1328              	.LVL123:
 1329 00d0 D4F82801 		ldr	r0, [r4, #296]
 1330 00d4 D4F81071 		ldr	r7, [r4, #272]
 1331              	.LBE37:
 1332              	.LBE40:
 189:subsystems/navigation/waypoints.c ****     DOWNLINK_SEND_WP_MOVED_LLA(DefaultChannel, DefaultDevice, &wp_id,
 1333              		.loc 3 189 0
 1334 00d8 2E44     		add	r6, r6, r5
 1335              	.LVL124:
 1336              	.LBB41:
 1337              	.LBB38:
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 1338              		.loc 2 996 0
 1339 00da 0722     		movs	r2, #7
 1340 00dc 0023     		movs	r3, #0
 1341 00de B847     		blx	r7
 1342              	.LVL125:
 997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
 1343              		.loc 2 997 0
 1344 00e0 0095     		str	r5, [sp]
 1345 00e2 0196     		str	r6, [sp, #4]
 1346 00e4 D4F82801 		ldr	r0, [r4, #296]
 1347 00e8 1649     		ldr	r1, .L93+8
 1348              	.LVL126:
 1349 00ea D4F81061 		ldr	r6, [r4, #272]
 1350              	.LVL127:
 1351 00ee 0722     		movs	r2, #7
 1352 00f0 0023     		movs	r3, #0
 1353 00f2 B047     		blx	r6
 1354              	.LVL128:
 998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 1355              		.loc 2 998 0
 1356 00f4 05AB     		add	r3, sp, #20
 1357              	.LVL129:
 1358 00f6 0193     		str	r3, [sp, #4]
 1359 00f8 0095     		str	r5, [sp]
 1360 00fa 0023     		movs	r3, #0
 1361              	.LVL130:
 1362 00fc D4F81051 		ldr	r5, [r4, #272]
 1363 0100 D4F82801 		ldr	r0, [r4, #296]
 1364 0104 0F49     		ldr	r1, .L93+8
 1365              	.LVL131:
 1366 0106 0722     		movs	r2, #7
 1367 0108 A847     		blx	r5
 1368              	.LVL132:
 999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1369              		.loc 2 999 0
 1370 010a D4F81C31 		ldr	r3, [r4, #284]
 1371 010e 01E0     		b	.L92
 1372              	.LVL133:
 1373              	.L90:
1001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1374              		.loc 2 1001 0
 1375 0110 D4F82031 		ldr	r3, [r4, #288]
 1376              	.LVL134:
 1377              	.L92:
 1378 0114 D4F82801 		ldr	r0, [r4, #296]
 1379 0118 0A49     		ldr	r1, .L93+8
 1380              	.LVL135:
 1381 011a 9847     		blx	r3
 1382              	.LVL136:
 1383 011c 0BE0     		b	.L87
 1384              	.LVL137:
 1385              	.L89:
 1386              	.LBE38:
 1387              	.LBE41:
 1388              	.LBE33:
 192:subsystems/navigation/waypoints.c ****     DOWNLINK_SEND_WP_MOVED_ENU(DefaultChannel, DefaultDevice, &wp_id,
 1389              		.loc 3 192 0
 1390 011e 0B4B     		ldr	r3, .L93+16
 1391 0120 2822     		movs	r2, #40
 1392 0122 5443     		muls	r4, r2, r4
 1393 0124 1A19     		adds	r2, r3, r4
 1394 0126 1346     		mov	r3, r2
 1395 0128 111D     		adds	r1, r2, #4
 1396 012a 0DF10F00 		add	r0, sp, #15
 1397              	.LVL138:
 1398 012e 0832     		adds	r2, r2, #8
 1399 0130 0C33     		adds	r3, r3, #12
 1400 0132 FFF7FEFF 		bl	pprz_msg_send_WP_MOVED_ENU.constprop.5
 1401              	.LVL139:
 1402              	.L87:
 197:subsystems/navigation/waypoints.c **** }
 1403              		.loc 3 197 0
 1404 0136 06B0     		add	sp, sp, #24
 1405              		@ sp needed
 1406 0138 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1407              	.LVL140:
 1408              	.L94:
 1409              		.align	2
 1410              	.L93:
 1411 013c 00000000 		.word	state
 1412 0140 00000000 		.word	pprz_tp
 1413 0144 2C010000 		.word	uart5+300
 1414 0148 0D000000 		.word	.LC3
 1415 014c 00000000 		.word	.LANCHOR0
 1416              		.cfi_endproc
 1417              	.LFE471:
 1419              		.section	.text.waypoint_set_here,"ax",%progbits
 1420              		.align	1
 1421              		.global	waypoint_set_here
 1422              		.thumb
 1423              		.thumb_func
 1425              	waypoint_set_here:
 1426              	.LFB473:
 213:subsystems/navigation/waypoints.c **** {
 1427              		.loc 3 213 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              	.LVL141:
 214:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1432              		.loc 3 214 0
 1433 0000 0928     		cmp	r0, #9
 213:subsystems/navigation/waypoints.c **** {
 1434              		.loc 3 213 0
 1435 0002 10B5     		push	{r4, lr}
 1436              		.cfi_def_cfa_offset 8
 1437              		.cfi_offset 4, -8
 1438              		.cfi_offset 14, -4
 213:subsystems/navigation/waypoints.c **** {
 1439              		.loc 3 213 0
 1440 0004 0446     		mov	r4, r0
 214:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1441              		.loc 3 214 0
 1442 0006 16D8     		bhi	.L95
 217:subsystems/navigation/waypoints.c ****   if (waypoint_is_global(wp_id)) {
 1443              		.loc 3 217 0
 1444 0008 FFF7FEFF 		bl	waypoint_is_global
 1445              	.LVL142:
 1446 000c 58B1     		cbz	r0, .L97
 1447              	.LBB44:
 1448              	.LBB45:
 664:./state.h     **** 
 665:./state.h     **** /// Get position in LLA coordinates (int).
 666:./state.h     **** static inline struct LlaCoor_i *stateGetPositionLla_i(void)
 667:./state.h     **** {
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 1449              		.loc 1 668 0
 1450 000e 0A4B     		ldr	r3, .L99
 1451 0010 1B88     		ldrh	r3, [r3]
 1452 0012 1B07     		lsls	r3, r3, #28
 1453 0014 01D4     		bmi	.L98
 669:./state.h     ****     stateCalcPositionLla_i();
 1454              		.loc 1 669 0
 1455 0016 FFF7FEFF 		bl	stateCalcPositionLla_i
 1456              	.LVL143:
 1457              	.L98:
 1458              	.LBE45:
 1459              	.LBE44:
 218:subsystems/navigation/waypoints.c ****     waypoint_set_lla(wp_id, stateGetPositionLla_i());
 1460              		.loc 3 218 0
 1461 001a 2046     		mov	r0, r4
 1462 001c 0749     		ldr	r1, .L99+4
 222:subsystems/navigation/waypoints.c **** }
 1463              		.loc 3 222 0
 1464 001e BDE81040 		pop	{r4, lr}
 218:subsystems/navigation/waypoints.c ****     waypoint_set_lla(wp_id, stateGetPositionLla_i());
 1465              		.loc 3 218 0
 1466 0022 FFF7FEBF 		b	waypoint_set_lla
 1467              	.LVL144:
 1468              	.L97:
 220:subsystems/navigation/waypoints.c ****     waypoint_set_enu_i(wp_id, stateGetPositionEnu_i());
 1469              		.loc 3 220 0
 1470 0026 FFF7FEFF 		bl	stateGetPositionEnu_i
 1471              	.LVL145:
 1472 002a 0146     		mov	r1, r0
 1473 002c 2046     		mov	r0, r4
 222:subsystems/navigation/waypoints.c **** }
 1474              		.loc 3 222 0
 1475 002e BDE81040 		pop	{r4, lr}
 220:subsystems/navigation/waypoints.c ****     waypoint_set_enu_i(wp_id, stateGetPositionEnu_i());
 1476              		.loc 3 220 0
 1477 0032 FFF7FEBF 		b	waypoint_set_enu_i
 1478              	.LVL146:
 1479              	.L95:
 1480 0036 10BD     		pop	{r4, pc}
 1481              	.L100:
 1482              		.align	2
 1483              	.L99:
 1484 0038 00000000 		.word	state
 1485 003c 10000000 		.word	state+16
 1486              		.cfi_endproc
 1487              	.LFE473:
 1489              		.section	.text.waypoint_set_latlon,"ax",%progbits
 1490              		.align	1
 1491              		.global	waypoint_set_latlon
 1492              		.thumb
 1493              		.thumb_func
 1495              	waypoint_set_latlon:
 1496              	.LFB472:
 201:subsystems/navigation/waypoints.c **** {
 1497              		.loc 3 201 0
 1498              		.cfi_startproc
 1499              		@ args = 0, pretend = 0, frame = 0
 1500              		@ frame_needed = 0, uses_anonymous_args = 0
 1501              	.LVL147:
 202:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1502              		.loc 3 202 0
 1503 0000 0928     		cmp	r0, #9
 201:subsystems/navigation/waypoints.c **** {
 1504              		.loc 3 201 0
 1505 0002 30B5     		push	{r4, r5, lr}
 1506              		.cfi_def_cfa_offset 12
 1507              		.cfi_offset 4, -12
 1508              		.cfi_offset 5, -8
 1509              		.cfi_offset 14, -4
 202:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1510              		.loc 3 202 0
 1511 0004 10D8     		bhi	.L101
 205:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lat = lla->lat;
 1512              		.loc 3 205 0
 1513 0006 094A     		ldr	r2, .L103
 1514 0008 0D68     		ldr	r5, [r1]
 206:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lon = lla->lon;
 1515              		.loc 3 206 0
 1516 000a 4968     		ldr	r1, [r1, #4]
 1517              	.LVL148:
 205:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lat = lla->lat;
 1518              		.loc 3 205 0
 1519 000c 2824     		movs	r4, #40
 1520 000e 04FB00F3 		mul	r3, r4, r0
 1521 0012 D418     		adds	r4, r2, r3
 206:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lon = lla->lon;
 1522              		.loc 3 206 0
 1523 0014 2162     		str	r1, [r4, #32]
 207:subsystems/navigation/waypoints.c ****   SetBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 1524              		.loc 3 207 0
 1525 0016 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 205:subsystems/navigation/waypoints.c ****   waypoints[wp_id].lla.lat = lla->lat;
 1526              		.loc 3 205 0
 1527 0018 E561     		str	r5, [r4, #28]
 207:subsystems/navigation/waypoints.c ****   SetBit(waypoints[wp_id].flags, WP_FLAG_LLA_I);
 1528              		.loc 3 207 0
 1529 001a 41F00801 		orr	r1, r1, #8
 1530 001e D154     		strb	r1, [r2, r3]
 209:subsystems/navigation/waypoints.c **** }
 1531              		.loc 3 209 0
 1532 0020 BDE83040 		pop	{r4, r5, lr}
 208:subsystems/navigation/waypoints.c ****   waypoint_localize(wp_id);
 1533              		.loc 3 208 0
 1534 0024 FFF7FEBF 		b	waypoint_localize
 1535              	.LVL149:
 1536              	.L101:
 1537 0028 30BD     		pop	{r4, r5, pc}
 1538              	.L104:
 1539 002a 00BF     		.align	2
 1540              	.L103:
 1541 002c 00000000 		.word	.LANCHOR0
 1542              		.cfi_endproc
 1543              	.LFE472:
 1545              		.section	.text.waypoint_set_here_2d,"ax",%progbits
 1546              		.align	1
 1547              		.global	waypoint_set_here_2d
 1548              		.thumb
 1549              		.thumb_func
 1551              	waypoint_set_here_2d:
 1552              	.LFB474:
 226:subsystems/navigation/waypoints.c **** {
 1553              		.loc 3 226 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 1557              	.LVL150:
 227:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1558              		.loc 3 227 0
 1559 0000 0928     		cmp	r0, #9
 226:subsystems/navigation/waypoints.c **** {
 1560              		.loc 3 226 0
 1561 0002 38B5     		push	{r3, r4, r5, lr}
 1562              		.cfi_def_cfa_offset 16
 1563              		.cfi_offset 3, -16
 1564              		.cfi_offset 4, -12
 1565              		.cfi_offset 5, -8
 1566              		.cfi_offset 14, -4
 226:subsystems/navigation/waypoints.c **** {
 1567              		.loc 3 226 0
 1568 0004 0446     		mov	r4, r0
 227:subsystems/navigation/waypoints.c ****   if (wp_id >= nb_waypoint) {
 1569              		.loc 3 227 0
 1570 0006 1BD8     		bhi	.L105
 230:subsystems/navigation/waypoints.c ****   if (waypoint_is_global(wp_id)) {
 1571              		.loc 3 230 0
 1572 0008 FFF7FEFF 		bl	waypoint_is_global
 1573              	.LVL151:
 1574 000c 58B1     		cbz	r0, .L107
 1575              	.LBB48:
 1576              	.LBB49:
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 1577              		.loc 1 668 0
 1578 000e 0D4B     		ldr	r3, .L109
 1579 0010 1B88     		ldrh	r3, [r3]
 1580 0012 1B07     		lsls	r3, r3, #28
 1581 0014 01D4     		bmi	.L108
 1582              		.loc 1 669 0
 1583 0016 FFF7FEFF 		bl	stateCalcPositionLla_i
 1584              	.LVL152:
 1585              	.L108:
 1586              	.LBE49:
 1587              	.LBE48:
 231:subsystems/navigation/waypoints.c ****     waypoint_set_latlon(wp_id, stateGetPositionLla_i());
 1588              		.loc 3 231 0
 1589 001a 2046     		mov	r0, r4
 1590 001c 0A49     		ldr	r1, .L109+4
 235:subsystems/navigation/waypoints.c **** }
 1591              		.loc 3 235 0
 1592 001e BDE83840 		pop	{r3, r4, r5, lr}
 231:subsystems/navigation/waypoints.c ****     waypoint_set_latlon(wp_id, stateGetPositionLla_i());
 1593              		.loc 3 231 0
 1594 0022 FFF7FEBF 		b	waypoint_set_latlon
 1595              	.LVL153:
 1596              	.L107:
 233:subsystems/navigation/waypoints.c ****     waypoint_set_xy_i(wp_id, stateGetPositionEnu_i()->x, stateGetPositionEnu_i()->y);
 1597              		.loc 3 233 0
 1598 0026 FFF7FEFF 		bl	stateGetPositionEnu_i
 1599              	.LVL154:
 1600 002a 0568     		ldr	r5, [r0]
 1601 002c FFF7FEFF 		bl	stateGetPositionEnu_i
 1602              	.LVL155:
 1603 0030 0346     		mov	r3, r0
 1604 0032 2946     		mov	r1, r5
 1605 0034 2046     		mov	r0, r4
 1606 0036 5A68     		ldr	r2, [r3, #4]
 235:subsystems/navigation/waypoints.c **** }
 1607              		.loc 3 235 0
 1608 0038 BDE83840 		pop	{r3, r4, r5, lr}
 233:subsystems/navigation/waypoints.c ****     waypoint_set_xy_i(wp_id, stateGetPositionEnu_i()->x, stateGetPositionEnu_i()->y);
 1609              		.loc 3 233 0
 1610 003c FFF7FEBF 		b	waypoint_set_xy_i
 1611              	.LVL156:
 1612              	.L105:
 1613 0040 38BD     		pop	{r3, r4, r5, pc}
 1614              	.L110:
 1615 0042 00BF     		.align	2
 1616              	.L109:
 1617 0044 00000000 		.word	state
 1618 0048 10000000 		.word	state+16
 1619              		.cfi_endproc
 1620              	.LFE474:
 1622              		.section	.text.waypoints_localize_all,"ax",%progbits
 1623              		.align	1
 1624              		.global	waypoints_localize_all
 1625              		.thumb
 1626              		.thumb_func
 1628              	waypoints_localize_all:
 1629              	.LFB477:
 263:subsystems/navigation/waypoints.c **** 
 264:subsystems/navigation/waypoints.c **** /** update local ENU coordinates of global waypoints */
 265:subsystems/navigation/waypoints.c **** void waypoints_localize_all(void)
 266:subsystems/navigation/waypoints.c **** {
 1630              		.loc 3 266 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 0
 1633              		@ frame_needed = 0, uses_anonymous_args = 0
 1634              	.LVL157:
 1635 0000 38B5     		push	{r3, r4, r5, lr}
 1636              		.cfi_def_cfa_offset 16
 1637              		.cfi_offset 3, -16
 1638              		.cfi_offset 4, -12
 1639              		.cfi_offset 5, -8
 1640              		.cfi_offset 14, -4
 1641              		.loc 3 266 0
 1642 0002 0024     		movs	r4, #0
 1643              	.LVL158:
 1644              	.L114:
 1645 0004 E5B2     		uxtb	r5, r4
 1646              	.LVL159:
 267:subsystems/navigation/waypoints.c ****   uint8_t i = 0;
 268:subsystems/navigation/waypoints.c ****   for (i = 0; i < nb_waypoint; i++) {
 269:subsystems/navigation/waypoints.c ****     if (waypoint_is_global(i)) {
 1647              		.loc 3 269 0
 1648 0006 2846     		mov	r0, r5
 1649 0008 FFF7FEFF 		bl	waypoint_is_global
 1650              	.LVL160:
 1651 000c 10B1     		cbz	r0, .L112
 270:subsystems/navigation/waypoints.c ****       waypoint_localize(i);
 1652              		.loc 3 270 0
 1653 000e 2846     		mov	r0, r5
 1654 0010 FFF7FEFF 		bl	waypoint_localize
 1655              	.LVL161:
 1656              	.L112:
 1657 0014 0134     		adds	r4, r4, #1
 1658              	.LVL162:
 268:subsystems/navigation/waypoints.c ****   for (i = 0; i < nb_waypoint; i++) {
 1659              		.loc 3 268 0
 1660 0016 0A2C     		cmp	r4, #10
 1661 0018 F4D1     		bne	.L114
 271:subsystems/navigation/waypoints.c ****     }
 272:subsystems/navigation/waypoints.c ****   }
 273:subsystems/navigation/waypoints.c **** }
 1662              		.loc 3 273 0
 1663 001a 38BD     		pop	{r3, r4, r5, pc}
 1664              		.cfi_endproc
 1665              	.LFE477:
 1667              		.section	.text.waypoint_get_lla,"ax",%progbits
 1668              		.align	1
 1669              		.global	waypoint_get_lla
 1670              		.thumb
 1671              		.thumb_func
 1673              	waypoint_get_lla:
 1674              	.LFB478:
 274:subsystems/navigation/waypoints.c **** 
 275:subsystems/navigation/waypoints.c **** /** Get LLA coordinates of waypoint.
 276:subsystems/navigation/waypoints.c ****  * If the waypoint does not have its global coordinates set,
 277:subsystems/navigation/waypoints.c ****  * the LLA representation is computed if the local origin is set.
 278:subsystems/navigation/waypoints.c ****  *
 279:subsystems/navigation/waypoints.c ****  * @param  wp_id waypoint id
 280:subsystems/navigation/waypoints.c ****  * @return pointer to waypoint LLA coordinates, NULL if invalid
 281:subsystems/navigation/waypoints.c ****  */
 282:subsystems/navigation/waypoints.c **** struct LlaCoor_i *waypoint_get_lla(uint8_t wp_id)
 283:subsystems/navigation/waypoints.c **** {
 1675              		.loc 3 283 0
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 0
 1678              		@ frame_needed = 0, uses_anonymous_args = 0
 1679              	.LVL163:
 284:subsystems/navigation/waypoints.c ****   if (wp_id < nb_waypoint) {
 1680              		.loc 3 284 0
 1681 0000 0928     		cmp	r0, #9
 283:subsystems/navigation/waypoints.c **** {
 1682              		.loc 3 283 0
 1683 0002 70B5     		push	{r4, r5, r6, lr}
 1684              		.cfi_def_cfa_offset 16
 1685              		.cfi_offset 4, -16
 1686              		.cfi_offset 5, -12
 1687              		.cfi_offset 6, -8
 1688              		.cfi_offset 14, -4
 283:subsystems/navigation/waypoints.c **** {
 1689              		.loc 3 283 0
 1690 0004 0446     		mov	r4, r0
 1691              		.loc 3 284 0
 1692 0006 10D8     		bhi	.L121
 285:subsystems/navigation/waypoints.c ****     if (!bit_is_set(waypoints[wp_id].flags, WP_FLAG_LLA_I)) {
 1693              		.loc 3 285 0
 1694 0008 2823     		movs	r3, #40
 1695 000a 094A     		ldr	r2, .L122
 1696 000c 03FB00F1 		mul	r1, r3, r0
 1697 0010 1546     		mov	r5, r2
 1698 0012 515C     		ldrb	r1, [r2, r1]	@ zero_extendqisi2
 1699 0014 11F0080F 		tst	r1, #8
 1700 0018 1E46     		mov	r6, r3
 1701 001a 01D1     		bne	.L120
 286:subsystems/navigation/waypoints.c ****       waypoint_globalize(wp_id);
 1702              		.loc 3 286 0
 1703 001c FFF7FEFF 		bl	waypoint_globalize
 1704              	.LVL164:
 1705              	.L120:
 287:subsystems/navigation/waypoints.c ****     }
 288:subsystems/navigation/waypoints.c ****     return &waypoints[wp_id].lla;
 1706              		.loc 3 288 0
 1707 0020 06FB0454 		mla	r4, r6, r4, r5
 1708 0024 04F11C00 		add	r0, r4, #28
 1709 0028 70BD     		pop	{r4, r5, r6, pc}
 1710              	.LVL165:
 1711              	.L121:
 289:subsystems/navigation/waypoints.c ****   }
 290:subsystems/navigation/waypoints.c ****   else {
 291:subsystems/navigation/waypoints.c ****     return NULL;
 1712              		.loc 3 291 0
 1713 002a 0020     		movs	r0, #0
 1714              	.LVL166:
 292:subsystems/navigation/waypoints.c ****   }
 293:subsystems/navigation/waypoints.c **** }
 1715              		.loc 3 293 0
 1716 002c 70BD     		pop	{r4, r5, r6, pc}
 1717              	.L123:
 1718 002e 00BF     		.align	2
 1719              	.L122:
 1720 0030 00000000 		.word	.LANCHOR0
 1721              		.cfi_endproc
 1722              	.LFE478:
 1724              		.global	waypoints
 1725              		.global	nb_waypoint
 1726              		.section	.rodata
 1727              		.align	2
 1728              		.set	.LANCHOR1,. + 0
 1729              	.LC0:
 1730 0000 C3F52442 		.word	1109718467
 1731 0004 7B142B42 		.word	1110119547
 1732 0008 0000A040 		.word	1084227584
 1733 000c 00000000 		.word	0
 1734 0010 00000080 		.word	-2147483648
 1735 0014 0000A040 		.word	1084227584
 1736 0018 EC51B8BD 		.word	-1111993876
 1737 001c 0000A040 		.word	1084227584
 1738 0020 0000A040 		.word	1084227584
 1739 0024 E17AF4BF 		.word	-1074496799
 1740 0028 AE47A1C0 		.word	-1063172178
 1741 002c 0000A040 		.word	1084227584
 1742 0030 66667640 		.word	1081501286
 1743 0034 A4705DC1 		.word	-1050840924
 1744 0038 0000A040 		.word	1084227584
 1745 003c 3D0AE341 		.word	1105398333
 1746 0040 CDCC3EC2 		.word	-1036071731
 1747 0044 0000A040 		.word	1084227584
 1748 0048 E17A8841 		.word	1099463393
 1749 004c 66669AC1 		.word	-1046845850
 1750 0050 0000A040 		.word	1084227584
 1751 0054 3D0A6741 		.word	1097271869
 1752 0058 CDCC21C2 		.word	-1037972275
 1753 005c 0000A040 		.word	1084227584
 1754 0060 52B898C1 		.word	-1046955950
 1755 0064 E17A49C2 		.word	-1035371807
 1756 0068 00000040 		.word	1073741824
 1757 006c 9A99B940 		.word	1085905306
 1758 0070 CDCC2CC1 		.word	-1054028595
 1759 0074 0000A040 		.word	1084227584
 1760              	.LC1:
 1761 0078 736AF719 		.word	435645043
 1762 007c 751AE200 		.word	14817909
 1763 0080 4A1C0300 		.word	203850
 1764 0084 6A5BF719 		.word	435641194
 1765 0088 8506E200 		.word	14812805
 1766 008c 4A1C0300 		.word	203850
 1767 0090 2C5DF719 		.word	435641644
 1768 0094 7A06E200 		.word	14812794
 1769 0098 4A1C0300 		.word	203850
 1770 009c A559F719 		.word	435640741
 1771 00a0 9905E200 		.word	14812569
 1772 00a4 4A1C0300 		.word	203850
 1773 00a8 8D56F719 		.word	435639949
 1774 00ac 6208E200 		.word	14813282
 1775 00b0 4A1C0300 		.word	203850
 1776 00b4 A54AF719 		.word	435636901
 1777 00b8 3E14E200 		.word	14816318
 1778 00bc 4A1C0300 		.word	203850
 1779 00c0 A154F719 		.word	435639457
 1780 00c4 C50EE200 		.word	14814917
 1781 00c8 4A1C0300 		.word	203850
 1782 00cc 314DF719 		.word	435637553
 1783 00d0 810DE200 		.word	14814593
 1784 00d4 4A1C0300 		.word	203850
 1785 00d8 B549F719 		.word	435636661
 1786 00dc 4BFDE100 		.word	14810443
 1787 00e0 92100300 		.word	200850
 1788 00e4 9E57F719 		.word	435640222
 1789 00e8 5309E200 		.word	14813523
 1790 00ec 4A1C0300 		.word	203850
 1791              		.section	.rodata.str1.1,"aMS",%progbits,1
 1792              	.LC2:
 1793 0000 57505F4D 		.ascii	"WP_MOVED_ENU\000"
 1793      4F564544 
 1793      5F454E55 
 1793      00
 1794              	.LC3:
 1795 000d 57505F4D 		.ascii	"WP_MOVED_LLA\000"
 1795      4F564544 
 1795      5F4C4C41 
 1795      00
 1796              		.section	.rodata.nb_waypoint,"a",%progbits
 1799              	nb_waypoint:
 1800 0000 0A       		.byte	10
 1801              		.section	.bss.waypoints,"aw",%nobits
 1802              		.align	2
 1803              		.set	.LANCHOR0,. + 0
 1806              	waypoints:
 1807 0000 00000000 		.space	400
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1807      00000000 
 1808              		.text
 1809              	.Letext0:
 1810              		.file 4 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 1811              		.file 5 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 1812              		.file 6 "/home/lsk/paparazzi/sw/include/std.h"
 1813              		.file 7 "./math/pprz_algebra_int.h"
 1814              		.file 8 "./math/pprz_geodetic_int.h"
 1815              		.file 9 "./math/pprz_algebra_float.h"
 1816              		.file 10 "./math/pprz_geodetic_float.h"
 1817              		.file 11 "./subsystems/navigation/waypoints.h"
 1818              		.file 12 "./math/pprz_orientation_conversion.h"
 1819              		.file 13 "./mcu_periph/link_device.h"
 1820              		.file 14 "./subsystems/datalink/transport.h"
 1821              		.file 15 "./subsystems/datalink/pprz_transport.h"
 1822              		.file 16 "./mcu_periph/sys_time.h"
 1823              		.file 17 "./subsystems/datalink/xbee.h"
 1824              		.file 18 "./mcu_periph/uart.h"
 1825              		.file 19 "./subsystems/datalink/datalink.h"
 1826              		.file 20 "./subsystems/datalink/w5100.h"
 1827              		.file 21 "firmwares/rotorcraft/autopilot.h"
 1828              		.file 22 "./subsystems/settings.h"
 1829              		.file 23 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 waypoints.c
     /tmp/cc3qbbFS.s:20     .text.stateGetPositionEnu_i:00000000 $t
     /tmp/cc3qbbFS.s:24     .text.stateGetPositionEnu_i:00000000 stateGetPositionEnu_i
     /tmp/cc3qbbFS.s:50     .text.stateGetPositionEnu_i:00000014 $d
     /tmp/cc3qbbFS.s:56     .text.pprz_msg_send_WP_MOVED_ENU.constprop.5:00000000 $t
     /tmp/cc3qbbFS.s:60     .text.pprz_msg_send_WP_MOVED_ENU.constprop.5:00000000 pprz_msg_send_WP_MOVED_ENU.constprop.5
     /tmp/cc3qbbFS.s:229    .text.pprz_msg_send_WP_MOVED_ENU.constprop.5:000000fc $d
     /tmp/cc3qbbFS.s:236    .text.waypoint_is_global:00000000 $t
     /tmp/cc3qbbFS.s:241    .text.waypoint_is_global:00000000 waypoint_is_global
     /tmp/cc3qbbFS.s:271    .text.waypoint_is_global:00000018 $d
     /tmp/cc3qbbFS.s:276    .text.waypoint_set_global_flag:00000000 $t
     /tmp/cc3qbbFS.s:281    .text.waypoint_set_global_flag:00000000 waypoint_set_global_flag
     /tmp/cc3qbbFS.s:305    .text.waypoint_set_global_flag:00000014 $d
     /tmp/cc3qbbFS.s:310    .text.waypoint_clear_global_flag:00000000 $t
     /tmp/cc3qbbFS.s:315    .text.waypoint_clear_global_flag:00000000 waypoint_clear_global_flag
     /tmp/cc3qbbFS.s:339    .text.waypoint_clear_global_flag:00000014 $d
     /tmp/cc3qbbFS.s:344    .text.waypoint_get_x:00000000 $t
     /tmp/cc3qbbFS.s:349    .text.waypoint_get_x:00000000 waypoint_get_x
     /tmp/cc3qbbFS.s:377    .text.waypoint_get_x:00000014 $d
     /tmp/cc3qbbFS.s:382    .text.waypoint_get_y:00000000 $t
     /tmp/cc3qbbFS.s:387    .text.waypoint_get_y:00000000 waypoint_get_y
     /tmp/cc3qbbFS.s:415    .text.waypoint_get_y:00000014 $d
     /tmp/cc3qbbFS.s:420    .text.waypoint_get_alt:00000000 $t
     /tmp/cc3qbbFS.s:425    .text.waypoint_get_alt:00000000 waypoint_get_alt
     /tmp/cc3qbbFS.s:453    .text.waypoint_get_alt:00000014 $d
     /tmp/cc3qbbFS.s:458    .text.waypoint_globalize:00000000 $t
     /tmp/cc3qbbFS.s:463    .text.waypoint_globalize:00000000 waypoint_globalize
     /tmp/cc3qbbFS.s:517    .text.waypoint_globalize:00000034 $d
     /tmp/cc3qbbFS.s:523    .text.waypoint_set_enu_i:00000000 $t
     /tmp/cc3qbbFS.s:528    .text.waypoint_set_enu_i:00000000 waypoint_set_enu_i
     /tmp/cc3qbbFS.s:607    .text.waypoint_set_enu_i:00000070 $d
     /tmp/cc3qbbFS.s:615    .text.waypoint_move_enu_i:00000000 $t
     /tmp/cc3qbbFS.s:620    .text.waypoint_move_enu_i:00000000 waypoint_move_enu_i
     /tmp/cc3qbbFS.s:661    .text.waypoint_set_enu:00000000 $t
     /tmp/cc3qbbFS.s:666    .text.waypoint_set_enu:00000000 waypoint_set_enu
     /tmp/cc3qbbFS.s:744    .text.waypoint_set_enu:00000074 $d
     /tmp/cc3qbbFS.s:750    .text.waypoint_set_xy_i:00000000 $t
     /tmp/cc3qbbFS.s:755    .text.waypoint_set_xy_i:00000000 waypoint_set_xy_i
     /tmp/cc3qbbFS.s:809    .text.waypoint_set_xy_i:00000040 $d
     /tmp/cc3qbbFS.s:815    .text.waypoint_set_alt_i:00000000 $t
     /tmp/cc3qbbFS.s:820    .text.waypoint_set_alt_i:00000000 waypoint_set_alt_i
     /tmp/cc3qbbFS.s:859    .text.waypoint_set_alt_i:00000028 $d
     /tmp/cc3qbbFS.s:864    .text.waypoint_set_alt:00000000 $t
     /tmp/cc3qbbFS.s:869    .text.waypoint_set_alt:00000000 waypoint_set_alt
     /tmp/cc3qbbFS.s:905    .text.waypoint_set_alt:0000002c $d
     /tmp/cc3qbbFS.s:911    .text.waypoint_localize:00000000 $t
     /tmp/cc3qbbFS.s:916    .text.waypoint_localize:00000000 waypoint_localize
     /tmp/cc3qbbFS.s:1007   .text.waypoint_localize:00000094 $d
     /tmp/cc3qbbFS.s:1014   .text.waypoint_set_lla:00000000 $t
     /tmp/cc3qbbFS.s:1019   .text.waypoint_set_lla:00000000 waypoint_set_lla
     /tmp/cc3qbbFS.s:1077   .text.waypoint_set_lla:00000034 $d
     /tmp/cc3qbbFS.s:1084   .text.waypoints_init:00000000 $t
     /tmp/cc3qbbFS.s:1089   .text.waypoints_init:00000000 waypoints_init
     /tmp/cc3qbbFS.s:1172   .text.waypoints_init:00000060 $d
     /tmp/cc3qbbFS.s:1179   .text.waypoint_move_lla:00000000 $t
     /tmp/cc3qbbFS.s:1184   .text.waypoint_move_lla:00000000 waypoint_move_lla
     /tmp/cc3qbbFS.s:1411   .text.waypoint_move_lla:0000013c $d
     /tmp/cc3qbbFS.s:1420   .text.waypoint_set_here:00000000 $t
     /tmp/cc3qbbFS.s:1425   .text.waypoint_set_here:00000000 waypoint_set_here
     /tmp/cc3qbbFS.s:1484   .text.waypoint_set_here:00000038 $d
     /tmp/cc3qbbFS.s:1490   .text.waypoint_set_latlon:00000000 $t
     /tmp/cc3qbbFS.s:1495   .text.waypoint_set_latlon:00000000 waypoint_set_latlon
     /tmp/cc3qbbFS.s:1541   .text.waypoint_set_latlon:0000002c $d
     /tmp/cc3qbbFS.s:1546   .text.waypoint_set_here_2d:00000000 $t
     /tmp/cc3qbbFS.s:1551   .text.waypoint_set_here_2d:00000000 waypoint_set_here_2d
     /tmp/cc3qbbFS.s:1617   .text.waypoint_set_here_2d:00000044 $d
     /tmp/cc3qbbFS.s:1623   .text.waypoints_localize_all:00000000 $t
     /tmp/cc3qbbFS.s:1628   .text.waypoints_localize_all:00000000 waypoints_localize_all
     /tmp/cc3qbbFS.s:1668   .text.waypoint_get_lla:00000000 $t
     /tmp/cc3qbbFS.s:1673   .text.waypoint_get_lla:00000000 waypoint_get_lla
     /tmp/cc3qbbFS.s:1720   .text.waypoint_get_lla:00000030 $d
     /tmp/cc3qbbFS.s:1806   .bss.waypoints:00000000 waypoints
     /tmp/cc3qbbFS.s:1799   .rodata.nb_waypoint:00000000 nb_waypoint
     /tmp/cc3qbbFS.s:1727   .rodata:00000000 $d
     /tmp/cc3qbbFS.s:1802   .bss.waypoints:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.1a82a3cc35cb0a04319c41bcf41d2a02
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.waypoints.h.33.b7269a35eabfa0f882237a6392dba465
                           .group:00000000 wm4.pprz_orientation_conversion.h.69.5cce798fefad8bb761767fd414e61db5
                           .group:00000000 wm4.state.h.65.b18954aacb3801ec3e27b4e857d620d3
                           .group:00000000 wm4.modules.h.5.be642dc363672736d1d1e45a75aad0cf
                           .group:00000000 wm4.pprz_algebra_double.h.32.ffddb69f4b2468d251e675e232b5bba1
                           .group:00000000 wm4.modules.h.24.27c8342510f0f30e64a55f4e4778474a
                           .group:00000000 wm4.transport.h.27.9215bbc09b6a8d08d228c20740408d47
                           .group:00000000 wm4.messages.h.9.6fd66bc411dd06866b086a1b57e0f309
                           .group:00000000 wm4.airframe.h.5.1b65f22e2c90217dfc42bdae27fe483a
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.actuators_pwm_arch.h.41.fa66469024778df593e0e3d83e4a3c37
                           .group:00000000 wm4.airframe.h.14.f46e30d413878b482f16a5abf2127a4b
                           .group:00000000 wm4.datalink.h.28.0d234a7c203533b2ec538be3e18eddf4
                           .group:00000000 wm4.dl_protocol.h.5.a12fe27a4b4a3cbb46fbca8acf33e3dd
                           .group:00000000 wm4.datalink.h.46.36a5e0f36fb7d0784f1e7af767537c84
                           .group:00000000 wm4.pprz_transport.h.57.167db0ee96032e142f5d6e570b3339aa
                           .group:00000000 wm4.sys_time.h.31.454ffebb4f6baf6e87ab8a60104a5808
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.xbee24.h.29.a6677f8bcb71d3b07e11290a2de0e179
                           .group:00000000 wm4.xbee.h.41.f36be817f95b74f883aef9324b53817b
                           .group:00000000 wm4.w5100.h.29.d3529bed8de657ab3944b343be960f10
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.downlink.h.76.41034157e32fc9012166fd95ec7418fc
                           .group:00000000 wm4.autopilot.h.30.1cf94259480bc0d46c6419c21a0ca24d
                           .group:00000000 wm4.settings.h.29.dff4b7c685fcd0dfb04f9f8de0a69e75
                           .group:00000000 wm4.flight_plan.h.10.8647a2958f1cd51b9cdfe5b6c12cbd56

UNDEFINED SYMBOLS
stateCalcPositionEnu_i
state
pprz_tp
uart5
ecef_of_enu_pos_i
lla_of_ecef_i
enu_of_lla_point_i
memcpy
memset
stateCalcPositionLla_i
