   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ppm_arch.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ppm_arch_init,"ax",%progbits
  20              		.align	1
  21              		.global	ppm_arch_init
  22              		.thumb
  23              		.thumb_func
  25              	ppm_arch_init:
  26              	.LFB6:
  27              		.file 1 "arch/stm32/subsystems/radio_control/ppm_arch.c"
   1:arch/stm32/subsystems/radio_control/ppm_arch.c **** /*
   2:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * Copyright (C) 2010-2014 The Paparazzi Team
   3:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
   4:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * This file is part of paparazzi.
   5:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
   6:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * it under the terms of the GNU General Public License as published by
   8:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * any later version.
  10:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  11:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * GNU General Public License for more details.
  15:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  16:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * You should have received a copy of the GNU General Public License
  17:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * along with paparazzi; see the file COPYING.  If not, see
  18:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * <http://www.gnu.org/licenses/>.
  19:arch/stm32/subsystems/radio_control/ppm_arch.c ****  */
  20:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  21:arch/stm32/subsystems/radio_control/ppm_arch.c **** /**
  22:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * @file arch/stm32/subsystems/radio_control/ppm_arch.c
  23:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * @ingroup stm32_arch
  24:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  25:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * STM32 ppm decoder.
  26:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  27:arch/stm32/subsystems/radio_control/ppm_arch.c ****  * Input signal either on:
  28:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *  - PA1 TIM2/CH2 (uart1 trig on Lisa/L)  (Servo 6 on Lisa/M)
  29:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *  - PA10 TIM1/CH3 (uart1 trig on Lisa/L) (uart1 rx on Lisa/M)
  30:arch/stm32/subsystems/radio_control/ppm_arch.c ****  *
  31:arch/stm32/subsystems/radio_control/ppm_arch.c ****  */
  32:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  33:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "subsystems/radio_control.h"
  34:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "subsystems/radio_control/ppm.h"
  35:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  36:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include BOARD_CONFIG
  37:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  38:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <libopencm3/stm32/rcc.h>
  39:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <libopencm3/stm32/gpio.h>
  40:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <libopencm3/stm32/timer.h>
  41:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include <libopencm3/cm3/nvic.h>
  42:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  43:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "mcu_periph/gpio.h"
  44:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  45:arch/stm32/subsystems/radio_control/ppm_arch.c **** // for timer_get_frequency
  46:arch/stm32/subsystems/radio_control/ppm_arch.c **** #include "mcu_arch.h"
  47:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  48:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define ONE_MHZ_CLK 1000000
  49:arch/stm32/subsystems/radio_control/ppm_arch.c **** #ifdef NVIC_TIM_IRQ_PRIO
  50:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_IRQ_PRIO  NVIC_TIM_IRQ_PRIO
  51:arch/stm32/subsystems/radio_control/ppm_arch.c **** #else
  52:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_IRQ_PRIO 2
  53:arch/stm32/subsystems/radio_control/ppm_arch.c **** #endif
  54:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  55:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  56:arch/stm32/subsystems/radio_control/ppm_arch.c **** static uint32_t timer_rollover_cnt;
  57:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  58:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  59:arch/stm32/subsystems/radio_control/ppm_arch.c **** #if USE_PPM_TIM2
  60:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  61:arch/stm32/subsystems/radio_control/ppm_arch.c **** PRINT_CONFIG_MSG("Using TIM2 for PPM input.")
  62:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_TIMER           TIM2
  63:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define RCC_TIM_PPM         RCC_TIM2
  64:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  65:arch/stm32/subsystems/radio_control/ppm_arch.c **** #elif USE_PPM_TIM3
  66:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  67:arch/stm32/subsystems/radio_control/ppm_arch.c **** PRINT_CONFIG_MSG("Using TIM3 for PPM input.")
  68:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_TIMER           TIM3
  69:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define RCC_TIM_PPM         RCC_TIM3
  70:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  71:arch/stm32/subsystems/radio_control/ppm_arch.c **** #elif USE_PPM_TIM4
  72:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  73:arch/stm32/subsystems/radio_control/ppm_arch.c **** PRINT_CONFIG_MSG("Using TIM4 for PPM input.")
  74:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_TIMER           TIM4
  75:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define RCC_TIM_PPM         RCC_TIM4
  76:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  77:arch/stm32/subsystems/radio_control/ppm_arch.c **** #elif USE_PPM_TIM5
  78:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  79:arch/stm32/subsystems/radio_control/ppm_arch.c **** PRINT_CONFIG_MSG("Using TIM5 for PPM input.")
  80:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_TIMER           TIM5
  81:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define RCC_TIM_PPM         RCC_TIM5
  82:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  83:arch/stm32/subsystems/radio_control/ppm_arch.c **** #elif USE_PPM_TIM1
  84:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  85:arch/stm32/subsystems/radio_control/ppm_arch.c **** PRINT_CONFIG_MSG("Using TIM1 for PPM input.")
  86:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_TIMER           TIM1
  87:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define RCC_TIM_PPM         RCC_TIM1
  88:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  89:arch/stm32/subsystems/radio_control/ppm_arch.c **** #elif USE_PPM_TIM8
  90:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  91:arch/stm32/subsystems/radio_control/ppm_arch.c **** PRINT_CONFIG_MSG("Using TIM8 for PPM input.")
  92:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define PPM_TIMER           TIM8
  93:arch/stm32/subsystems/radio_control/ppm_arch.c **** #define RCC_TIM_PPM         RCC_TIM8
  94:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  95:arch/stm32/subsystems/radio_control/ppm_arch.c **** #else
  96:arch/stm32/subsystems/radio_control/ppm_arch.c **** #error Unknown PPM input timer configuration.
  97:arch/stm32/subsystems/radio_control/ppm_arch.c **** #endif
  98:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
  99:arch/stm32/subsystems/radio_control/ppm_arch.c **** void ppm_arch_init(void)
 100:arch/stm32/subsystems/radio_control/ppm_arch.c **** {
  28              		.loc 1 100 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 101:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* timer clock enable */
 102:arch/stm32/subsystems/radio_control/ppm_arch.c ****   rcc_periph_clock_enable(RCC_TIM_PPM);
  36              		.loc 1 102 0
  37 0002 4FF40060 		mov	r0, #2048
  38 0006 FFF7FEFF 		bl	rcc_periph_clock_enable
  39              	.LVL0:
 103:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 104:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* GPIO configuration as input capture for timer */
 105:arch/stm32/subsystems/radio_control/ppm_arch.c ****   gpio_setup_pin_af(PPM_GPIO_PORT, PPM_GPIO_PIN, PPM_GPIO_AF, FALSE);
  40              		.loc 1 105 0
  41 000a 0821     		movs	r1, #8
  42 000c 0122     		movs	r2, #1
  43 000e 0023     		movs	r3, #0
  44 0010 2848     		ldr	r0, .L2
  45 0012 FFF7FEFF 		bl	gpio_setup_pin_af
  46              	.LVL1:
 106:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 107:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Time Base configuration */
 108:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_reset(PPM_TIMER);
  47              		.loc 1 108 0
  48 0016 4FF08040 		mov	r0, #1073741824
  49 001a FFF7FEFF 		bl	timer_reset
  50              	.LVL2:
 109:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_set_mode(PPM_TIMER, TIM_CR1_CKD_CK_INT,
  51              		.loc 1 109 0
  52 001e 0021     		movs	r1, #0
  53 0020 0B46     		mov	r3, r1
  54 0022 0A46     		mov	r2, r1
  55 0024 4FF08040 		mov	r0, #1073741824
  56 0028 FFF7FEFF 		bl	timer_set_mode
  57              	.LVL3:
 110:arch/stm32/subsystems/radio_control/ppm_arch.c ****                  TIM_CR1_CMS_EDGE, TIM_CR1_DIR_UP);
 111:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_set_period(PPM_TIMER, 0xFFFF);
  58              		.loc 1 111 0
  59 002c 4FF6FF71 		movw	r1, #65535
  60 0030 4FF08040 		mov	r0, #1073741824
  61 0034 FFF7FEFF 		bl	timer_set_period
  62              	.LVL4:
 112:arch/stm32/subsystems/radio_control/ppm_arch.c ****   uint32_t timer_clk = timer_get_frequency(PPM_TIMER);
  63              		.loc 1 112 0
  64 0038 4FF08040 		mov	r0, #1073741824
  65 003c FFF7FEFF 		bl	timer_get_frequency
  66              	.LVL5:
 113:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_set_prescaler(PPM_TIMER, (timer_clk / (RC_PPM_TICKS_PER_USEC * ONE_MHZ_CLK)) - 1);
  67              		.loc 1 113 0
  68 0040 1D49     		ldr	r1, .L2+4
  69 0042 B0FBF1F1 		udiv	r1, r0, r1
  70 0046 0139     		subs	r1, r1, #1
  71 0048 4FF08040 		mov	r0, #1073741824
  72              	.LVL6:
  73 004c FFF7FEFF 		bl	timer_set_prescaler
  74              	.LVL7:
 114:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 115:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* TIM configuration: Input Capture mode ---------------------
 116:arch/stm32/subsystems/radio_control/ppm_arch.c ****       The Rising edge is used as active edge
 117:arch/stm32/subsystems/radio_control/ppm_arch.c ****    ------------------------------------------------------------ */
 118:arch/stm32/subsystems/radio_control/ppm_arch.c **** #if defined PPM_PULSE_TYPE && PPM_PULSE_TYPE == PPM_PULSE_TYPE_POSITIVE
 119:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_ic_set_polarity(PPM_TIMER, PPM_CHANNEL, TIM_IC_RISING);
  75              		.loc 1 119 0
  76 0050 4FF08040 		mov	r0, #1073741824
  77 0054 0121     		movs	r1, #1
  78 0056 0022     		movs	r2, #0
  79 0058 FFF7FEFF 		bl	timer_ic_set_polarity
  80              	.LVL8:
 120:arch/stm32/subsystems/radio_control/ppm_arch.c **** #elif defined PPM_PULSE_TYPE && PPM_PULSE_TYPE == PPM_PULSE_TYPE_NEGATIVE
 121:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_ic_set_polarity(PPM_TIMER, PPM_CHANNEL, TIM_IC_FALLING);
 122:arch/stm32/subsystems/radio_control/ppm_arch.c **** #else
 123:arch/stm32/subsystems/radio_control/ppm_arch.c **** #error "Unknown PPM_PULSE_TYPE"
 124:arch/stm32/subsystems/radio_control/ppm_arch.c **** #endif
 125:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_ic_set_input(PPM_TIMER, PPM_CHANNEL, PPM_TIMER_INPUT);
  81              		.loc 1 125 0
  82 005c 4FF08040 		mov	r0, #1073741824
  83 0060 0121     		movs	r1, #1
  84 0062 0222     		movs	r2, #2
  85 0064 FFF7FEFF 		bl	timer_ic_set_input
  86              	.LVL9:
 126:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_ic_set_prescaler(PPM_TIMER, PPM_CHANNEL, TIM_IC_PSC_OFF);
  87              		.loc 1 126 0
  88 0068 4FF08040 		mov	r0, #1073741824
  89 006c 0121     		movs	r1, #1
  90 006e 0022     		movs	r2, #0
  91 0070 FFF7FEFF 		bl	timer_ic_set_prescaler
  92              	.LVL10:
 127:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_ic_set_filter(PPM_TIMER, PPM_CHANNEL, TIM_IC_OFF);
  93              		.loc 1 127 0
  94 0074 0022     		movs	r2, #0
  95 0076 4FF08040 		mov	r0, #1073741824
  96 007a 0121     		movs	r1, #1
  97 007c FFF7FEFF 		bl	timer_ic_set_filter
  98              	.LVL11:
 128:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 129:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Enable timer Interrupt(s). */
 130:arch/stm32/subsystems/radio_control/ppm_arch.c ****   nvic_set_priority(PPM_IRQ, PPM_IRQ_PRIO);
  99              		.loc 1 130 0
 100 0080 0221     		movs	r1, #2
 101 0082 1C20     		movs	r0, #28
 102 0084 FFF7FEFF 		bl	nvic_set_priority
 103              	.LVL12:
 131:arch/stm32/subsystems/radio_control/ppm_arch.c ****   nvic_enable_irq(PPM_IRQ);
 104              		.loc 1 131 0
 105 0088 1C20     		movs	r0, #28
 106 008a FFF7FEFF 		bl	nvic_enable_irq
 107              	.LVL13:
 132:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 133:arch/stm32/subsystems/radio_control/ppm_arch.c **** #ifdef PPM_IRQ2
 134:arch/stm32/subsystems/radio_control/ppm_arch.c ****   nvic_set_priority(PPM_IRQ2, PPM_IRQ_PRIO);
 135:arch/stm32/subsystems/radio_control/ppm_arch.c ****   nvic_enable_irq(PPM_IRQ2);
 136:arch/stm32/subsystems/radio_control/ppm_arch.c **** #endif
 137:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 138:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Enable the Capture/Compare and Update interrupt requests. */
 139:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_enable_irq(PPM_TIMER, (PPM_CC_IE | TIM_DIER_UIE));
 108              		.loc 1 139 0
 109 008e 4FF08040 		mov	r0, #1073741824
 110 0092 0521     		movs	r1, #5
 111 0094 FFF7FEFF 		bl	timer_enable_irq
 112              	.LVL14:
 140:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 141:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* Enable capture channel. */
 142:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_ic_enable(PPM_TIMER, PPM_CHANNEL);
 113              		.loc 1 142 0
 114 0098 4FF08040 		mov	r0, #1073741824
 115 009c 0121     		movs	r1, #1
 116 009e FFF7FEFF 		bl	timer_ic_enable
 117              	.LVL15:
 143:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 144:arch/stm32/subsystems/radio_control/ppm_arch.c ****   /* TIM enable counter */
 145:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_enable_counter(PPM_TIMER);
 118              		.loc 1 145 0
 119 00a2 4FF08040 		mov	r0, #1073741824
 120 00a6 FFF7FEFF 		bl	timer_enable_counter
 121              	.LVL16:
 146:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 147:arch/stm32/subsystems/radio_control/ppm_arch.c ****   timer_rollover_cnt = 0;
 122              		.loc 1 147 0
 123 00aa 044B     		ldr	r3, .L2+8
 124 00ac 0022     		movs	r2, #0
 125 00ae 1A60     		str	r2, [r3]
 126 00b0 08BD     		pop	{r3, pc}
 127              	.L3:
 128 00b2 00BF     		.align	2
 129              	.L2:
 130 00b4 00040240 		.word	1073873920
 131 00b8 808D5B00 		.word	6000000
 132 00bc 00000000 		.word	.LANCHOR0
 133              		.cfi_endproc
 134              	.LFE6:
 136              		.section	.text.tim2_isr,"ax",%progbits
 137              		.align	1
 138              		.weak	tim2_isr
 139              		.thumb
 140              		.thumb_func
 142              	tim2_isr:
 143              	.LFB7:
 148:arch/stm32/subsystems/radio_control/ppm_arch.c **** }
 149:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 150:arch/stm32/subsystems/radio_control/ppm_arch.c **** #if USE_PPM_TIM2
 151:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 152:arch/stm32/subsystems/radio_control/ppm_arch.c **** void tim2_isr(void)
 153:arch/stm32/subsystems/radio_control/ppm_arch.c **** {
 144              		.loc 1 153 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148 0000 08B5     		push	{r3, lr}
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 3, -8
 151              		.cfi_offset 14, -4
 154:arch/stm32/subsystems/radio_control/ppm_arch.c ****   if ((TIM2_SR & PPM_CC_IF) != 0) {
 152              		.loc 1 154 0
 153 0002 124B     		ldr	r3, .L8
 154 0004 1A68     		ldr	r2, [r3]
 155 0006 5207     		lsls	r2, r2, #29
 156 0008 0FD5     		bpl	.L5
 157              	.LBB2:
 155:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_clear_flag(TIM2, PPM_CC_IF);
 158              		.loc 1 155 0
 159 000a 4FF08040 		mov	r0, #1073741824
 160 000e 0421     		movs	r1, #4
 161 0010 FFF7FEFF 		bl	timer_clear_flag
 162              	.LVL17:
 156:arch/stm32/subsystems/radio_control/ppm_arch.c **** 
 157:arch/stm32/subsystems/radio_control/ppm_arch.c ****     uint32_t now = timer_get_counter(TIM2) + timer_rollover_cnt;
 163              		.loc 1 157 0
 164 0014 4FF08040 		mov	r0, #1073741824
 165 0018 FFF7FEFF 		bl	timer_get_counter
 166              	.LVL18:
 167 001c 0C4B     		ldr	r3, .L8+4
 168 001e 1B68     		ldr	r3, [r3]
 158:arch/stm32/subsystems/radio_control/ppm_arch.c ****     ppm_decode_frame(now);
 169              		.loc 1 158 0
 170 0020 1844     		add	r0, r0, r3
 171              	.LVL19:
 172              	.LBE2:
 159:arch/stm32/subsystems/radio_control/ppm_arch.c ****   } else if ((TIM2_SR & TIM_SR_UIF) != 0) {
 160:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_rollover_cnt += (1 << 16);
 161:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_clear_flag(TIM2, TIM_SR_UIF);
 162:arch/stm32/subsystems/radio_control/ppm_arch.c ****   }
 163:arch/stm32/subsystems/radio_control/ppm_arch.c **** }
 173              		.loc 1 163 0
 174 0022 BDE80840 		pop	{r3, lr}
 175              	.LBB3:
 158:arch/stm32/subsystems/radio_control/ppm_arch.c ****     ppm_decode_frame(now);
 176              		.loc 1 158 0
 177 0026 FFF7FEBF 		b	ppm_decode_frame
 178              	.LVL20:
 179              	.L5:
 180              	.LBE3:
 159:arch/stm32/subsystems/radio_control/ppm_arch.c ****   } else if ((TIM2_SR & TIM_SR_UIF) != 0) {
 181              		.loc 1 159 0
 182 002a 1B68     		ldr	r3, [r3]
 183 002c DB07     		lsls	r3, r3, #31
 184 002e 0BD5     		bpl	.L4
 160:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_rollover_cnt += (1 << 16);
 185              		.loc 1 160 0
 186 0030 074B     		ldr	r3, .L8+4
 187 0032 1A68     		ldr	r2, [r3]
 188 0034 02F58032 		add	r2, r2, #65536
 189 0038 1A60     		str	r2, [r3]
 161:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_clear_flag(TIM2, TIM_SR_UIF);
 190              		.loc 1 161 0
 191 003a 4FF08040 		mov	r0, #1073741824
 192 003e 0121     		movs	r1, #1
 193              		.loc 1 163 0
 194 0040 BDE80840 		pop	{r3, lr}
 161:arch/stm32/subsystems/radio_control/ppm_arch.c ****     timer_clear_flag(TIM2, TIM_SR_UIF);
 195              		.loc 1 161 0
 196 0044 FFF7FEBF 		b	timer_clear_flag
 197              	.LVL21:
 198              	.L4:
 199 0048 08BD     		pop	{r3, pc}
 200              	.L9:
 201 004a 00BF     		.align	2
 202              	.L8:
 203 004c 10000040 		.word	1073741840
 204 0050 00000000 		.word	.LANCHOR0
 205              		.cfi_endproc
 206              	.LFE7:
 208              		.section	.bss.timer_rollover_cnt,"aw",%nobits
 209              		.align	2
 210              		.set	.LANCHOR0,. + 0
 213              	timer_rollover_cnt:
 214 0000 00000000 		.space	4
 215              		.text
 216              	.Letext0:
 217              		.file 2 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 218              		.file 3 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 219              		.file 4 "/home/lsk/paparazzi/sw/include/std.h"
 220              		.file 5 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
 221              		.file 6 "../ext/libopencm3/include/libopencm3/stm32/common/timer_common_all.h"
 222              		.file 7 "../ext/libopencm3/include/libopencm3/stm32/common/timer_common_f24.h"
 223              		.file 8 "../ext/libopencm3/include/libopencm3/stm32/common/rcc_common_all.h"
 224              		.file 9 "/home/lsk/paparazzi/sw/airborne/arch/stm32/mcu_periph/gpio_arch.h"
 225              		.file 10 "../ext/libopencm3/include/libopencm3/cm3/nvic.h"
 226              		.file 11 "/home/lsk/paparazzi/sw/airborne/arch/stm32/mcu_arch.h"
 227              		.file 12 "./subsystems/radio_control/ppm.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ppm_arch.c
     /tmp/cct2lh6e.s:20     .text.ppm_arch_init:00000000 $t
     /tmp/cct2lh6e.s:25     .text.ppm_arch_init:00000000 ppm_arch_init
     /tmp/cct2lh6e.s:130    .text.ppm_arch_init:000000b4 $d
     /tmp/cct2lh6e.s:137    .text.tim2_isr:00000000 $t
     /tmp/cct2lh6e.s:142    .text.tim2_isr:00000000 tim2_isr
     /tmp/cct2lh6e.s:203    .text.tim2_isr:0000004c $d
     /tmp/cct2lh6e.s:209    .bss.timer_rollover_cnt:00000000 $d
     /tmp/cct2lh6e.s:213    .bss.timer_rollover_cnt:00000000 timer_rollover_cnt
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf
                           .group:00000000 wm4.airframe.h.5.1b65f22e2c90217dfc42bdae27fe483a
                           .group:00000000 wm4.actuators_pwm_arch.h.27.274c2fe245167861139e341fd233f9ea
                           .group:00000000 wm4.airframe.h.14.f46e30d413878b482f16a5abf2127a4b
                           .group:00000000 wm4.paparazzi.h.2.903792c4429b74b43ba66cc0d2531abd
                           .group:00000000 wm4.ppm_arch.h.30.0c8951ed5389d834f3146640146f52ff
                           .group:00000000 wm4.radio.h.5.656a6ddaf975d68fb12fc1808da140b2
                           .group:00000000 wm4.ppm.h.47.0149fce522ef0e315e524566a6409a2a
                           .group:00000000 wm4.radio_control.h.42.d43f9142844e08da852d6ed343ba2de3
                           .group:00000000 wm4.timer_common_all.h.35.b42b09af17c21cc72e25b3b2ba1809d2
                           .group:00000000 wm4.timer_common_f24.h.44.de6aabe29f6c3596e141b760d97b2482
                           .group:00000000 wm4.nvic.h.38.b26077e701ba065ebce4922ce89b9357
                           .group:00000000 wm4.nvic.h.16.68b2cd144a8737a35a31e344912a6e4f
                           .group:00000000 wm4.mcu_arch.h.30.9e61c0408281ef19f3143a9b685c0b7d

UNDEFINED SYMBOLS
rcc_periph_clock_enable
gpio_setup_pin_af
timer_reset
timer_set_mode
timer_set_period
timer_get_frequency
timer_set_prescaler
timer_ic_set_polarity
timer_ic_set_input
timer_ic_set_prescaler
timer_ic_set_filter
nvic_set_priority
nvic_enable_irq
timer_enable_irq
timer_ic_enable
timer_enable_counter
timer_clear_flag
timer_get_counter
ppm_decode_frame
