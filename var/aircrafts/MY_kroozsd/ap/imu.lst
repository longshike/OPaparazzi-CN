   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"imu.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.orientationGetEulers_f,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	orientationGetEulers_f:
  25              	.LFB53:
  26              		.file 1 "./math/pprz_orientation_conversion.h"
   1:./math/pprz_orientation_conversion.h **** /*
   2:./math/pprz_orientation_conversion.h ****  * Copyright (C) 2011-2012 The Paparazzi Team
   3:./math/pprz_orientation_conversion.h ****  *
   4:./math/pprz_orientation_conversion.h ****  * This file is part of paparazzi.
   5:./math/pprz_orientation_conversion.h ****  *
   6:./math/pprz_orientation_conversion.h ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./math/pprz_orientation_conversion.h ****  * it under the terms of the GNU General Public License as published by
   8:./math/pprz_orientation_conversion.h ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./math/pprz_orientation_conversion.h ****  * any later version.
  10:./math/pprz_orientation_conversion.h ****  *
  11:./math/pprz_orientation_conversion.h ****  * paparazzi is distributed in the hope that it will be useful,
  12:./math/pprz_orientation_conversion.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./math/pprz_orientation_conversion.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./math/pprz_orientation_conversion.h ****  * GNU General Public License for more details.
  15:./math/pprz_orientation_conversion.h ****  *
  16:./math/pprz_orientation_conversion.h ****  * You should have received a copy of the GNU General Public License
  17:./math/pprz_orientation_conversion.h ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./math/pprz_orientation_conversion.h ****  * <http://www.gnu.org/licenses/>.
  19:./math/pprz_orientation_conversion.h ****  */
  20:./math/pprz_orientation_conversion.h **** 
  21:./math/pprz_orientation_conversion.h **** /**
  22:./math/pprz_orientation_conversion.h ****  * @file math/pprz_orientation_conversion.h
  23:./math/pprz_orientation_conversion.h ****  * Generic orientation representation and conversions.
  24:./math/pprz_orientation_conversion.h ****  *
  25:./math/pprz_orientation_conversion.h ****  * This file contains the functions to automatically convert between
  26:./math/pprz_orientation_conversion.h ****  * the different representations. They should normally not be used
  27:./math/pprz_orientation_conversion.h ****  * directly and instead the stateGet/Set interfaces used.
  28:./math/pprz_orientation_conversion.h ****  * Also see the @ref math_orientation_representation "Generic Orientation Representation" page.
  29:./math/pprz_orientation_conversion.h ****  *
  30:./math/pprz_orientation_conversion.h ****  * @author Felix Ruess <felix.ruess@gmail.com>
  31:./math/pprz_orientation_conversion.h ****  */
  32:./math/pprz_orientation_conversion.h **** 
  33:./math/pprz_orientation_conversion.h **** /**
  34:./math/pprz_orientation_conversion.h ****  * @addtogroup math
  35:./math/pprz_orientation_conversion.h ****  * @{
  36:./math/pprz_orientation_conversion.h ****  */
  37:./math/pprz_orientation_conversion.h **** 
  38:./math/pprz_orientation_conversion.h **** /**
  39:./math/pprz_orientation_conversion.h ****  * This generic orientation representation consists of a struct, containing the 6 orientation
  40:./math/pprz_orientation_conversion.h ****  * representations, and a status variable. The bits in the status variable indicate  which
  41:./math/pprz_orientation_conversion.h ****  * representations of the orientation are up-to-date.
  42:./math/pprz_orientation_conversion.h ****  *
  43:./math/pprz_orientation_conversion.h ****  * When a getter is used to get a certain representation, the status bit is checked to see if
  44:./math/pprz_orientation_conversion.h ****  * the current value is already available in the desired orientation representation.
  45:./math/pprz_orientation_conversion.h ****  * If the desired representation is not available, it will be calculated.
  46:./math/pprz_orientation_conversion.h ****  *
  47:./math/pprz_orientation_conversion.h ****  * When a setter is used to set a representation, all status bits are cleared, and only the
  48:./math/pprz_orientation_conversion.h ****  * status bit for the set representation is set to one.
  49:./math/pprz_orientation_conversion.h ****  */
  50:./math/pprz_orientation_conversion.h **** 
  51:./math/pprz_orientation_conversion.h **** /**
  52:./math/pprz_orientation_conversion.h ****  * @defgroup math_orientation_representation Generic Orientation Representations
  53:./math/pprz_orientation_conversion.h ****  * @{
  54:./math/pprz_orientation_conversion.h ****  */
  55:./math/pprz_orientation_conversion.h **** 
  56:./math/pprz_orientation_conversion.h **** #ifndef PPRZ_ORIENTATION_CONVERSION_H
  57:./math/pprz_orientation_conversion.h **** #define PPRZ_ORIENTATION_CONVERSION_H
  58:./math/pprz_orientation_conversion.h **** 
  59:./math/pprz_orientation_conversion.h **** #ifdef __cplusplus
  60:./math/pprz_orientation_conversion.h **** extern "C" {
  61:./math/pprz_orientation_conversion.h **** #endif
  62:./math/pprz_orientation_conversion.h **** 
  63:./math/pprz_orientation_conversion.h **** #include "math/pprz_algebra_int.h"
  64:./math/pprz_orientation_conversion.h **** #include "math/pprz_algebra_float.h"
  65:./math/pprz_orientation_conversion.h **** 
  66:./math/pprz_orientation_conversion.h **** #include "std.h"
  67:./math/pprz_orientation_conversion.h **** 
  68:./math/pprz_orientation_conversion.h **** 
  69:./math/pprz_orientation_conversion.h **** #define ORREP_QUAT_I  0  ///< Quaternion (BFP int)
  70:./math/pprz_orientation_conversion.h **** #define ORREP_EULER_I 1  ///< zyx Euler (BFP int)
  71:./math/pprz_orientation_conversion.h **** #define ORREP_RMAT_I  2  ///< Rotation Matrix (BFP int)
  72:./math/pprz_orientation_conversion.h **** #define ORREP_QUAT_F  3  ///< Quaternion (float)
  73:./math/pprz_orientation_conversion.h **** #define ORREP_EULER_F 4  ///< zyx Euler (float)
  74:./math/pprz_orientation_conversion.h **** #define ORREP_RMAT_F  5  ///< Rotation Matrix (float)
  75:./math/pprz_orientation_conversion.h **** 
  76:./math/pprz_orientation_conversion.h **** /*
  77:./math/pprz_orientation_conversion.h ****  * @brief Struct with euler/rmat/quaternion orientation representations in BFP int and float
  78:./math/pprz_orientation_conversion.h ****  */
  79:./math/pprz_orientation_conversion.h **** struct OrientationReps {
  80:./math/pprz_orientation_conversion.h ****   /**
  81:./math/pprz_orientation_conversion.h ****    * Holds the status bits for all orientation representations.
  82:./math/pprz_orientation_conversion.h ****    * When the corresponding bit is set, the representation
  83:./math/pprz_orientation_conversion.h ****    * is already computed.
  84:./math/pprz_orientation_conversion.h ****    */
  85:./math/pprz_orientation_conversion.h ****   uint8_t status;
  86:./math/pprz_orientation_conversion.h **** 
  87:./math/pprz_orientation_conversion.h ****   /**
  88:./math/pprz_orientation_conversion.h ****    * Orientation quaternion.
  89:./math/pprz_orientation_conversion.h ****    * Units: #INT32_QUAT_FRAC
  90:./math/pprz_orientation_conversion.h ****    */
  91:./math/pprz_orientation_conversion.h ****   struct Int32Quat quat_i;
  92:./math/pprz_orientation_conversion.h **** 
  93:./math/pprz_orientation_conversion.h ****   /**
  94:./math/pprz_orientation_conversion.h ****    * Orientation in zyx euler angles.
  95:./math/pprz_orientation_conversion.h ****    * Units: rad in BFP with #INT32_ANGLE_FRAC
  96:./math/pprz_orientation_conversion.h ****    */
  97:./math/pprz_orientation_conversion.h ****   struct Int32Eulers eulers_i;
  98:./math/pprz_orientation_conversion.h **** 
  99:./math/pprz_orientation_conversion.h ****   /**
 100:./math/pprz_orientation_conversion.h ****    * Orientation rotation matrix.
 101:./math/pprz_orientation_conversion.h ****    * Units: rad in BFP with #INT32_TRIG_FRAC
 102:./math/pprz_orientation_conversion.h ****    */
 103:./math/pprz_orientation_conversion.h ****   struct Int32RMat rmat_i;
 104:./math/pprz_orientation_conversion.h **** 
 105:./math/pprz_orientation_conversion.h ****   /**
 106:./math/pprz_orientation_conversion.h ****    * Orientation as quaternion.
 107:./math/pprz_orientation_conversion.h ****    * Units: unit length quaternion
 108:./math/pprz_orientation_conversion.h ****    */
 109:./math/pprz_orientation_conversion.h ****   struct FloatQuat quat_f;
 110:./math/pprz_orientation_conversion.h **** 
 111:./math/pprz_orientation_conversion.h ****   /**
 112:./math/pprz_orientation_conversion.h ****    * Orienation in zyx euler angles.
 113:./math/pprz_orientation_conversion.h ****    * Units: rad
 114:./math/pprz_orientation_conversion.h ****    */
 115:./math/pprz_orientation_conversion.h ****   struct FloatEulers eulers_f;
 116:./math/pprz_orientation_conversion.h **** 
 117:./math/pprz_orientation_conversion.h ****   /**
 118:./math/pprz_orientation_conversion.h ****    * Orientation rotation matrix.
 119:./math/pprz_orientation_conversion.h ****    * Units: rad
 120:./math/pprz_orientation_conversion.h ****    */
 121:./math/pprz_orientation_conversion.h ****   struct FloatRMat   rmat_f;
 122:./math/pprz_orientation_conversion.h **** };
 123:./math/pprz_orientation_conversion.h **** 
 124:./math/pprz_orientation_conversion.h **** /************* declaration of transformation functions ************/
 125:./math/pprz_orientation_conversion.h **** extern void orientationCalcQuat_i(struct OrientationReps *orientation);
 126:./math/pprz_orientation_conversion.h **** extern void orientationCalcRMat_i(struct OrientationReps *orientation);
 127:./math/pprz_orientation_conversion.h **** extern void orientationCalcEulers_i(struct OrientationReps *orientation);
 128:./math/pprz_orientation_conversion.h **** extern void orientationCalcQuat_f(struct OrientationReps *orientation);
 129:./math/pprz_orientation_conversion.h **** extern void orientationCalcRMat_f(struct OrientationReps *orientation);
 130:./math/pprz_orientation_conversion.h **** extern void orientationCalcEulers_f(struct OrientationReps *orientation);
 131:./math/pprz_orientation_conversion.h **** 
 132:./math/pprz_orientation_conversion.h **** 
 133:./math/pprz_orientation_conversion.h **** /*********************** validity test functions ******************/
 134:./math/pprz_orientation_conversion.h **** /// Test if orientations are valid.
 135:./math/pprz_orientation_conversion.h **** static inline bool_t orienationCheckValid(struct OrientationReps *orientation)
 136:./math/pprz_orientation_conversion.h **** {
 137:./math/pprz_orientation_conversion.h ****   return (orientation->status);
 138:./math/pprz_orientation_conversion.h **** }
 139:./math/pprz_orientation_conversion.h **** 
 140:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from quaternion (int).
 141:./math/pprz_orientation_conversion.h **** static inline void orientationSetQuat_i(struct OrientationReps *orientation, struct Int32Quat *quat
 142:./math/pprz_orientation_conversion.h **** {
 143:./math/pprz_orientation_conversion.h ****   QUAT_COPY(orientation->quat_i, *quat);
 144:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 145:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_QUAT_I);
 146:./math/pprz_orientation_conversion.h **** }
 147:./math/pprz_orientation_conversion.h **** 
 148:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from rotation matrix (int).
 149:./math/pprz_orientation_conversion.h **** static inline void orientationSetRMat_i(struct OrientationReps *orientation, struct Int32RMat *rmat
 150:./math/pprz_orientation_conversion.h **** {
 151:./math/pprz_orientation_conversion.h ****   RMAT_COPY(orientation->rmat_i, *rmat);
 152:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 153:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_RMAT_I);
 154:./math/pprz_orientation_conversion.h **** }
 155:./math/pprz_orientation_conversion.h **** 
 156:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from euler angles (int).
 157:./math/pprz_orientation_conversion.h **** static inline void orientationSetEulers_i(struct OrientationReps *orientation, struct Int32Eulers *
 158:./math/pprz_orientation_conversion.h **** {
 159:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_i, *eulers);
 160:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 161:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_I);
 162:./math/pprz_orientation_conversion.h **** }
 163:./math/pprz_orientation_conversion.h **** 
 164:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from quaternion (float).
 165:./math/pprz_orientation_conversion.h **** static inline void orientationSetQuat_f(struct OrientationReps *orientation, struct FloatQuat *quat
 166:./math/pprz_orientation_conversion.h **** {
 167:./math/pprz_orientation_conversion.h ****   QUAT_COPY(orientation->quat_f, *quat);
 168:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 169:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_QUAT_F);
 170:./math/pprz_orientation_conversion.h **** }
 171:./math/pprz_orientation_conversion.h **** 
 172:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from rotation matrix (float).
 173:./math/pprz_orientation_conversion.h **** static inline void orientationSetRMat_f(struct OrientationReps *orientation, struct FloatRMat *rmat
 174:./math/pprz_orientation_conversion.h **** {
 175:./math/pprz_orientation_conversion.h ****   RMAT_COPY(orientation->rmat_f, *rmat);
 176:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 177:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_RMAT_F);
 178:./math/pprz_orientation_conversion.h **** }
 179:./math/pprz_orientation_conversion.h **** 
 180:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from euler angles (float).
 181:./math/pprz_orientation_conversion.h **** static inline void orientationSetEulers_f(struct OrientationReps *orientation, struct FloatEulers *
 182:./math/pprz_orientation_conversion.h **** {
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 184:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 186:./math/pprz_orientation_conversion.h **** }
 187:./math/pprz_orientation_conversion.h **** 
 188:./math/pprz_orientation_conversion.h **** 
 189:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude quaternion (int).
 190:./math/pprz_orientation_conversion.h **** static inline struct Int32Quat *orientationGetQuat_i(struct OrientationReps *orientation)
 191:./math/pprz_orientation_conversion.h **** {
 192:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_QUAT_I)) {
 193:./math/pprz_orientation_conversion.h ****     orientationCalcQuat_i(orientation);
 194:./math/pprz_orientation_conversion.h ****   }
 195:./math/pprz_orientation_conversion.h ****   return &orientation->quat_i;
 196:./math/pprz_orientation_conversion.h **** }
 197:./math/pprz_orientation_conversion.h **** 
 198:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude rotation matrix (int).
 199:./math/pprz_orientation_conversion.h **** static inline struct Int32RMat *orientationGetRMat_i(struct OrientationReps *orientation)
 200:./math/pprz_orientation_conversion.h **** {
 201:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_RMAT_I)) {
 202:./math/pprz_orientation_conversion.h ****     orientationCalcRMat_i(orientation);
 203:./math/pprz_orientation_conversion.h ****   }
 204:./math/pprz_orientation_conversion.h ****   return &orientation->rmat_i;
 205:./math/pprz_orientation_conversion.h **** }
 206:./math/pprz_orientation_conversion.h **** 
 207:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude euler angles (int).
 208:./math/pprz_orientation_conversion.h **** static inline struct Int32Eulers *orientationGetEulers_i(struct OrientationReps *orientation)
 209:./math/pprz_orientation_conversion.h **** {
 210:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_EULER_I)) {
 211:./math/pprz_orientation_conversion.h ****     orientationCalcEulers_i(orientation);
 212:./math/pprz_orientation_conversion.h ****   }
 213:./math/pprz_orientation_conversion.h ****   return &orientation->eulers_i;
 214:./math/pprz_orientation_conversion.h **** }
 215:./math/pprz_orientation_conversion.h **** 
 216:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude quaternion (float).
 217:./math/pprz_orientation_conversion.h **** static inline struct FloatQuat *orientationGetQuat_f(struct OrientationReps *orientation)
 218:./math/pprz_orientation_conversion.h **** {
 219:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_QUAT_F)) {
 220:./math/pprz_orientation_conversion.h ****     orientationCalcQuat_f(orientation);
 221:./math/pprz_orientation_conversion.h ****   }
 222:./math/pprz_orientation_conversion.h ****   return &orientation->quat_f;
 223:./math/pprz_orientation_conversion.h **** }
 224:./math/pprz_orientation_conversion.h **** 
 225:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude rotation matrix (float).
 226:./math/pprz_orientation_conversion.h **** static inline struct FloatRMat *orientationGetRMat_f(struct OrientationReps *orientation)
 227:./math/pprz_orientation_conversion.h **** {
 228:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_RMAT_F)) {
 229:./math/pprz_orientation_conversion.h ****     orientationCalcRMat_f(orientation);
 230:./math/pprz_orientation_conversion.h ****   }
 231:./math/pprz_orientation_conversion.h ****   return &orientation->rmat_f;
 232:./math/pprz_orientation_conversion.h **** }
 233:./math/pprz_orientation_conversion.h **** 
 234:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude euler angles (float).
 235:./math/pprz_orientation_conversion.h **** static inline struct FloatEulers *orientationGetEulers_f(struct OrientationReps *orientation)
 236:./math/pprz_orientation_conversion.h **** {
  27              		.loc 1 236 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 237:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_EULER_F)) {
  36              		.loc 1 237 0
  37 0002 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  38 0004 DB06     		lsls	r3, r3, #27
 236:./math/pprz_orientation_conversion.h **** {
  39              		.loc 1 236 0
  40 0006 0446     		mov	r4, r0
  41              		.loc 1 237 0
  42 0008 01D4     		bmi	.L2
 238:./math/pprz_orientation_conversion.h ****     orientationCalcEulers_f(orientation);
  43              		.loc 1 238 0
  44 000a FFF7FEFF 		bl	orientationCalcEulers_f
  45              	.LVL1:
  46              	.L2:
 239:./math/pprz_orientation_conversion.h ****   }
 240:./math/pprz_orientation_conversion.h ****   return &orientation->eulers_f;
 241:./math/pprz_orientation_conversion.h **** }
  47              		.loc 1 241 0
  48 000e 04F15400 		add	r0, r4, #84
  49 0012 10BD     		pop	{r4, pc}
  50              		.cfi_endproc
  51              	.LFE53:
  53              		.section	.text.send_mag_raw,"ax",%progbits
  54              		.align	1
  55              		.thumb
  56              		.thumb_func
  58              	send_mag_raw:
  59              	.LFB489:
  60              		.file 2 "subsystems/imu.c"
   1:subsystems/imu.c **** /*
   2:subsystems/imu.c ****  * Copyright (C) 2008-2010 The Paparazzi Team
   3:subsystems/imu.c ****  *
   4:subsystems/imu.c ****  * This file is part of paparazzi.
   5:subsystems/imu.c ****  *
   6:subsystems/imu.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:subsystems/imu.c ****  * it under the terms of the GNU General Public License as published by
   8:subsystems/imu.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:subsystems/imu.c ****  * any later version.
  10:subsystems/imu.c ****  *
  11:subsystems/imu.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:subsystems/imu.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:subsystems/imu.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:subsystems/imu.c ****  * GNU General Public License for more details.
  15:subsystems/imu.c ****  *
  16:subsystems/imu.c ****  * You should have received a copy of the GNU General Public License
  17:subsystems/imu.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:subsystems/imu.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:subsystems/imu.c ****  * Boston, MA 02111-1307, USA.
  20:subsystems/imu.c ****  */
  21:subsystems/imu.c **** 
  22:subsystems/imu.c **** /**
  23:subsystems/imu.c ****  * @file subsystems/imu.c
  24:subsystems/imu.c ****  * Inertial Measurement Unit interface.
  25:subsystems/imu.c ****  */
  26:subsystems/imu.c **** 
  27:subsystems/imu.c **** #ifdef BOARD_CONFIG
  28:subsystems/imu.c **** #include BOARD_CONFIG
  29:subsystems/imu.c **** #endif
  30:subsystems/imu.c **** 
  31:subsystems/imu.c **** #include "subsystems/imu.h"
  32:subsystems/imu.c **** #include "state.h"
  33:subsystems/imu.c **** #include "subsystems/abi.h"
  34:subsystems/imu.c **** 
  35:subsystems/imu.c **** #ifdef IMU_POWER_GPIO
  36:subsystems/imu.c **** #include "mcu_periph/gpio.h"
  37:subsystems/imu.c **** 
  38:subsystems/imu.c **** #ifndef IMU_POWER_GPIO_ON
  39:subsystems/imu.c **** #define IMU_POWER_GPIO_ON gpio_set
  40:subsystems/imu.c **** #endif
  41:subsystems/imu.c **** #endif
  42:subsystems/imu.c **** 
  43:subsystems/imu.c **** #if PERIODIC_TELEMETRY
  44:subsystems/imu.c **** #include "subsystems/datalink/telemetry.h"
  45:subsystems/imu.c **** 
  46:subsystems/imu.c **** static void send_accel_raw(struct transport_tx *trans, struct link_device *dev)
  47:subsystems/imu.c **** {
  48:subsystems/imu.c ****   pprz_msg_send_IMU_ACCEL_RAW(trans, dev, AC_ID,
  49:subsystems/imu.c ****                               &imu.accel_unscaled.x, &imu.accel_unscaled.y, &imu.accel_unscaled.z);
  50:subsystems/imu.c **** }
  51:subsystems/imu.c **** 
  52:subsystems/imu.c **** static void send_accel_scaled(struct transport_tx *trans, struct link_device *dev)
  53:subsystems/imu.c **** {
  54:subsystems/imu.c ****   pprz_msg_send_IMU_ACCEL_SCALED(trans, dev, AC_ID,
  55:subsystems/imu.c ****                                  &imu.accel.x, &imu.accel.y, &imu.accel.z);
  56:subsystems/imu.c **** }
  57:subsystems/imu.c **** 
  58:subsystems/imu.c **** static void send_accel(struct transport_tx *trans, struct link_device *dev)
  59:subsystems/imu.c **** {
  60:subsystems/imu.c ****   struct FloatVect3 accel_float;
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
  62:subsystems/imu.c ****   pprz_msg_send_IMU_ACCEL(trans, dev, AC_ID,
  63:subsystems/imu.c ****                           &accel_float.x, &accel_float.y, &accel_float.z);
  64:subsystems/imu.c **** }
  65:subsystems/imu.c **** 
  66:subsystems/imu.c **** static void send_gyro_raw(struct transport_tx *trans, struct link_device *dev)
  67:subsystems/imu.c **** {
  68:subsystems/imu.c ****   pprz_msg_send_IMU_GYRO_RAW(trans, dev, AC_ID,
  69:subsystems/imu.c ****                              &imu.gyro_unscaled.p, &imu.gyro_unscaled.q, &imu.gyro_unscaled.r);
  70:subsystems/imu.c **** }
  71:subsystems/imu.c **** 
  72:subsystems/imu.c **** static void send_gyro_scaled(struct transport_tx *trans, struct link_device *dev)
  73:subsystems/imu.c **** {
  74:subsystems/imu.c ****   pprz_msg_send_IMU_GYRO_SCALED(trans, dev, AC_ID,
  75:subsystems/imu.c ****                                 &imu.gyro.p, &imu.gyro.q, &imu.gyro.r);
  76:subsystems/imu.c **** }
  77:subsystems/imu.c **** 
  78:subsystems/imu.c **** static void send_gyro(struct transport_tx *trans, struct link_device *dev)
  79:subsystems/imu.c **** {
  80:subsystems/imu.c ****   struct FloatRates gyro_float;
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
  82:subsystems/imu.c ****   pprz_msg_send_IMU_GYRO(trans, dev, AC_ID,
  83:subsystems/imu.c ****                          &gyro_float.p, &gyro_float.q, &gyro_float.r);
  84:subsystems/imu.c **** }
  85:subsystems/imu.c **** 
  86:subsystems/imu.c **** static void send_mag_raw(struct transport_tx *trans, struct link_device *dev)
  87:subsystems/imu.c **** {
  61              		.loc 2 87 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 8
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              	.LVL2:
  66 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
  67              		.cfi_def_cfa_offset 40
  68              		.cfi_offset 0, -40
  69              		.cfi_offset 1, -36
  70              		.cfi_offset 2, -32
  71              		.cfi_offset 3, -28
  72              		.cfi_offset 4, -24
  73              		.cfi_offset 5, -20
  74              		.cfi_offset 6, -16
  75              		.cfi_offset 7, -12
  76              		.cfi_offset 8, -8
  77              		.cfi_offset 14, -4
  78              	.LBB11:
  79              	.LBB12:
  80              		.file 3 "/home/lsk/paparazzi/var/include/messages.h"
   1:/home/lsk/paparazzi/var/include/messages.h **** /* Automatically generated by gen_messages from /home/lsk/paparazzi/conf/messages.xml */
   2:/home/lsk/paparazzi/var/include/messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/messages.h **** /* Macros to send and receive messages of class telemetry */
   4:/home/lsk/paparazzi/var/include/messages.h **** #ifndef _VAR_MESSAGES_telemetry_H_
   5:/home/lsk/paparazzi/var/include/messages.h **** #define _VAR_MESSAGES_telemetry_H_
   6:/home/lsk/paparazzi/var/include/messages.h **** #include "subsystems/datalink/transport.h"
   7:/home/lsk/paparazzi/var/include/messages.h **** #include "mcu_periph/link_device.h"
   8:/home/lsk/paparazzi/var/include/messages.h **** #if DOWNLINK
   9:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AUTOPILOT_VERSION 1
  10:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALIVE 2
  11:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PONG 3
  12:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TAKEOFF 4
  13:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ARDRONE_NAVDATA 5
  14:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATTITUDE 6
  15:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IR_SENSORS 7
  16:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS 8
  17:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION_REF 9
  18:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION 10
  19:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_MODE 11
  20:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BAT 12
  21:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_MCU_LINK 13
  22:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CALIBRATION 14
  23:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SETTINGS 15
  24:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DESIRED 16
  25:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_SOL 17
  26:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC_GENERIC 18
  27:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_FORMAT 19
  28:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM 20
  29:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CIRCLE 21
  30:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SEGMENT 22
  31:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SVINFO 25
  32:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG 26
  33:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SURVEY 27
  34:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WC_RSSI 28
  35:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RANGEFINDER 29
  36:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DATALINK_REPORT 30
  37:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DL_VALUE 31
  38:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MARK 32
  39:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYS_MON 33
  40:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR 34
  41:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED 35
  42:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MKK 36
  43:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENERGY 37
  44:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85_CALIB 38
  45:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85 39
  46:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SPEED_LOOP 40
  47:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALT_KALMAN 41
  48:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ESTIMATOR 42
  49:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_ROLL 43
  50:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5534A 44
  51:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PRESSURE 45
  52:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_WORDS 46
  53:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_LLA 47
  54:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CHRONO 48
  55:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_ENU 49
  56:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WINDTURBINE_STATUS_ 50
  57:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC_3CH_ 51
  58:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPPT 52
  59:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_IR_I2C 53
  60:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED 54
  61:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XSENS 55
  62:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_ETS 56
  63:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_ETS 57
  64:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PBN 58
  65:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_LLA 59
  66:/home/lsk/paparazzi/var/include/messages.h **** #define DL_H_CTL_A 60
  67:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_RAW 61
  68:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_VOLTAGE 62
  69:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM_POINT 63
  70:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_INFO 64
  71:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_BARO 65
  72:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_AIRSPEED 66
  73:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLIGHT_BENCHMARK 67
  74:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPL3115_BARO 68
  75:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AOA_ADC 69
  76:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XTEND_RSSI 70
  77:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SUPERBITRF 72
  78:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GX3_INFO 73
  79:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EXPLAIN 74
  80:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_TELEMETRY 75
  81:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_UPDATE 76
  82:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_PREDICT 77
  83:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INV_FILTER 78
  84:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MISSION_STATUS 79
  85:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CROSS_TRACK_ERROR 80
  86:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GENERIC_COM 81
  87:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_SLOT_TM 82
  88:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_STATUS_TM 83
  89:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BMP_STATUS 84
  90:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_STATUS 85
  91:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TMP_STATUS 86
  92:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WIND_INFO_RET 87
  93:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SCP_STATUS 88
  94:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_STATUS 89
  95:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENOSE_STATUS 90
  96:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DPICCO_STATUS 91
  97:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_DEBUG 92
  98:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_STATUS 93
  99:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATUS 94
 100:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATIC 95
 101:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HIH_STATUS 96
 102:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMT_STATUS 97
 103:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GP2Y_STATUS 98
 104:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_SERIAL 99
 105:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPM 100
 106:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC 101
 107:/home/lsk/paparazzi/var/include/messages.h **** #define DL_COMMANDS 102
 108:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FBW_STATUS 103
 109:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC 104
 110:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ACTUATORS 105
 111:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_SHOT 110
 112:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_BOARD_RESULTS 111
 113:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_SERIAL 113
 114:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD 114
 115:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HTM_STATUS 115
 116:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5611 116
 117:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MS5611_COEFF 117
 118:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATMOSPHERE_CHARGE 118
 119:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SOLAR_RADIATION 119
 120:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_TA 120
 121:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RA 121
 122:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RESOLVED 122
 123:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_DEBUG 123
 124:/home/lsk/paparazzi/var/include/messages.h **** #define DL_POTENTIAL 124
 125:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERTICAL_ENERGY 125
 126:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_TCOUPLE 126
 127:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_STATUS 127
 128:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAMERA_SNAPSHOT 128
 129:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIMESTAMP 129
 130:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_FLOAT 130
 131:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_SCALED 131
 132:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_SCALED 132
 133:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SCALED 133
 134:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER 134
 135:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER2 135
 136:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RATE_LOOP 136
 137:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_ALIGNER 137
 138:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_MS45XX 138
 139:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_COR 139
 140:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INT 140
 141:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_INT 141
 142:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_FLOAT 142
 143:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CMD 143
 144:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_INT 144
 145:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERT_LOOP 145
 146:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HOVER_LOOP 146
 147:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_FP 147
 148:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_ADC 148
 149:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_REF_INT 149
 150:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_TUNE_HOVER 150
 151:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_Z 151
 152:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PCAP01_STATUS 152
 153:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEIGER_COUNTER 153
 154:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_REF 154
 155:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_INT 155
 156:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER_INT 156
 157:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_QUAT_INT 157
 158:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_RMAT_INT 158
 159:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_NAV_STATUS 159
 160:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_RADIO_CONTROL 160
 161:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF_EXTENDED 161
 162:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF 162
 163:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEO_MAG 163
 164:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF 164
 165:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_DBG 165
 166:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_GPS 166
 167:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_SONAR 167
 168:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CAM 168
 169:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_REF_QUAT 169
 170:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_XHAT 170
 171:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_Y 171
 172:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_P_DIAG 172
 173:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER 173
 174:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_MEASUREMENT_EULER 174
 175:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WT 175
 176:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_DEBUG 176
 177:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_MSG 177
 178:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_GYRO_BIAS_INT 178
 179:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLOW_AP_OTF 179
 180:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FMS_TIME 180
 181:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOADCELL 181
 182:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLA_DEBUG 182
 183:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_FAULT_STATUS 183
 184:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_SPEEDS 184
 185:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_DEBUG_QUAT 185
 186:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_BUSVOLTS 186
 187:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYSTEM_STATUS 187
 188:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DYNAMIXEL 188
 189:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RMAT_DEBUG 189
 190:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SIMPLE_COMMANDS 190
 191:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VANE_SENSOR 191
 192:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CONTROLLER_GAINS 192
 193:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF 193
 194:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_DEBUG 194
 195:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_ACC_DBG 195
 196:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_MAG_DBG 196
 197:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SENSORS_SCALED 197
 198:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS 198
 199:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_ERROR 199
 200:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO 200
 201:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG 201
 202:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL 202
 203:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_RAW 203
 204:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_RAW 204
 205:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_RAW 205
 206:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SETTINGS 206
 207:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_CURRENT_CALIBRATION 207
 208:/home/lsk/paparazzi/var/include/messages.h **** #define DL_UART_ERRORS 208
 209:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_LP 209
 210:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_PRESSURE 210
 211:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_HS_GYRO 211
 212:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_PASSTHROUGH_STATUS 212
 213:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_VERT 213
 214:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MF_DAQ_STATE 214
 215:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INFO_MSG 215
 216:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BEBOP_ACTUATORS 218
 217:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WEATHER 219
 218:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_TURNTABLE 220
 219:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_RAW 221
 220:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIR_DATA 222
 221:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSL 223
 222:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_SYNC 225
 223:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PERIODIC_TELEMETRY_ERR 226
 224:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIME 227
 225:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTIC_FLOW_EST 228
 226:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_ARDRONE2 230
 227:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_STATUS 231
 228:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STATE_FILTER_STATUS 232
 229:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PX4FLOW 233
 230:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTICFLOW 234
 231:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VISUALTARGET 235
 232:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SONAR 236
 233:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD_FLOAT 237
 234:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_POS_LLH 238
 235:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RPMS 239
 236:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SPEED_POS 240
 237:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RATE_ATTITUDE 241
 238:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_GYRO_BIAS 242
 239:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RANGE_METER 243
 240:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_WIND 244
 241:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_DEBUG 247
 242:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_ACCEL_LTP 248
 243:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOOSE_INS_GPS 249
 244:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AFL_COEFFS 250
 245:/home/lsk/paparazzi/var/include/messages.h **** #define DL_I2C_ERRORS 253
 246:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RDYB_TRAJECTORY 254
 247:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HENRY_GNSS 255
 248:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MSG_telemetry_NB 239
 249:/home/lsk/paparazzi/var/include/messages.h **** 
 250:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AUTOPILOT_VERSION(_trans, _dev, version, nb_desc, desc) pprz_msg_send_AUTOPIL
 251:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AUTOPILOT_VERSION(struct transport_tx *trans, struct link_device *
 252:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 
 253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 /* msg heade
 254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_desc*1 +2 /* msg header overhead */);
 255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AUTOPILOT_VERSION, "
 257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _version);
 258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_desc)
 259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_desc, (void *) _desc);
 260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 261:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 262:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 263:/home/lsk/paparazzi/var/include/messages.h **** }
 264:/home/lsk/paparazzi/var/include/messages.h **** 
 265:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALIVE(_trans, _dev, nb_md5sum, md5sum) pprz_msg_send_ALIVE(&((_trans).trans_t
 266:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALIVE(struct transport_tx *trans, struct link_device *dev, uint8_t
 267:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 
 268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 /* msg heade
 269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_md5sum*1 +2 /* msg header overhead */);
 270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALIVE, "ALIVE");
 272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_md5su
 273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_md5sum, (void *) _md5s
 274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 275:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 277:/home/lsk/paparazzi/var/include/messages.h **** }
 278:/home/lsk/paparazzi/var/include/messages.h **** 
 279:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PONG(_trans, _dev) pprz_msg_send_PONG(&((_trans).trans_tx), &((_dev).device),
 280:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PONG(struct transport_tx *trans, struct link_device *dev, uint8_t 
 281:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header 
 282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header overhead */)
 283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0 +2 /* msg header overhead */);
 284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PONG, "PONG");
 286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 287:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 289:/home/lsk/paparazzi/var/include/messages.h **** }
 290:/home/lsk/paparazzi/var/include/messages.h **** 
 291:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TAKEOFF(_trans, _dev, cpu_time) pprz_msg_send_TAKEOFF(&((_trans).trans_tx), &
 292:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TAKEOFF(struct transport_tx *trans, struct link_device *dev, uint8
 293:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
 294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
 295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
 296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TAKEOFF, "TAKEOFF");
 298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cpu_time);
 299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 302:/home/lsk/paparazzi/var/include/messages.h **** }
 303:/home/lsk/paparazzi/var/include/messages.h **** 
 304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ARDRONE_NAVDATA(_trans, _dev, taille, nu_trame, ax, ay, az, vx, vy, vz, tempe
 305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ARDRONE_NAVDATA(struct transport_tx *trans, struct link_device *de
 306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
 308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+4+2+2+4+2+2+2+2+2
 309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ARDRONE_NAVDATA, "AR
 311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _taille);
 312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nu_trame);
 313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ax);
 314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ay);
 315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _az);
 316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vx);
 317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vy);
 318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vz);
 319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_ac
 320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_gy
 321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ultrasound);
 322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_debut_echo)
 323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_fin_echo);
 324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_association
 325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_distance_ec
 326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_time)
 327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_value
 328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_ref);
 329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nb_echo);
 330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sum_echo);
 331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _gradient);
 332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flag_echo_ini)
 333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_pr
 335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mx);
 336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _my);
 337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mz);
 338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _chksum);
 339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
 340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 341:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 343:/home/lsk/paparazzi/var/include/messages.h **** }
 344:/home/lsk/paparazzi/var/include/messages.h **** 
 345:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATTITUDE(_trans, _dev, phi, psi, theta) pprz_msg_send_ATTITUDE(&((_trans).tra
 346:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATTITUDE(struct transport_tx *trans, struct link_device *dev, uint
 347:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATTITUDE, "ATTITUDE"
 352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
 354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
 355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 356:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 358:/home/lsk/paparazzi/var/include/messages.h **** }
 359:/home/lsk/paparazzi/var/include/messages.h **** 
 360:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IR_SENSORS(_trans, _dev, ir1, ir2, longitudinal, lateral, vertical) pprz_msg_
 361:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IR_SENSORS(struct transport_tx *trans, struct link_device *dev, ui
 362:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* m
 363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* msg header ov
 364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2 +2 /* msg header overhead */);
 365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IR_SENSORS, "IR_SENS
 367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
 368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
 369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _longitudinal);
 370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lateral);
 371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vertical);
 372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 373:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 375:/home/lsk/paparazzi/var/include/messages.h **** }
 376:/home/lsk/paparazzi/var/include/messages.h **** 
 377:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS(_trans, _dev, mode, utm_east, utm_north, course, alt, speed, climb, week,
 378:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS(struct transport_tx *trans, struct link_device *dev, uint8_t a
 379:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4
 380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* m
 381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* msg header overhead */);
 382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS, "GPS");
 384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
 385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
 388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
 390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
 391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
 392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
 393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
 395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 396:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 398:/home/lsk/paparazzi/var/include/messages.h **** }
 399:/home/lsk/paparazzi/var/include/messages.h **** 
 400:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION_REF(_trans, _dev, utm_east, utm_north, utm_zone, ground_alt) pprz_
 401:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION_REF(struct transport_tx *trans, struct link_device *dev
 402:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg
 403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 412:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 414:/home/lsk/paparazzi/var/include/messages.h **** }
 415:/home/lsk/paparazzi/var/include/messages.h **** 
 416:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION(_trans, _dev, cur_block, cur_stage, pos_x, pos_y, dist_wp, dist_ho
 417:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION(struct transport_tx *trans, struct link_device *dev, ui
 418:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +
 419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 432:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 434:/home/lsk/paparazzi/var/include/messages.h **** }
 435:/home/lsk/paparazzi/var/include/messages.h **** 
 436:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPRZ_MODE(_trans, _dev, ap_mode, ap_gaz, ap_lateral, ap_horizontal, if_calib_
 437:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPRZ_MODE(struct transport_tx *trans, struct link_device *dev, uin
 438:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /*
 439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /* msg header 
 440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1 +2 /* msg header overhead */);
 441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPRZ_MODE, "PPRZ_MOD
 443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
 444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_gaz);
 445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_lateral);
 446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_horizontal);
 447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _if_calib_mode);
 448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu1_status);
 449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 450:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 452:/home/lsk/paparazzi/var/include/messages.h **** }
 453:/home/lsk/paparazzi/var/include/messages.h **** 
 454:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BAT(_trans, _dev, throttle, voltage, amps, flight_time, kill_auto_throttle, b
 455:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BAT(struct transport_tx *trans, struct link_device *dev, uint8_t a
 456:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +
 457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +2 /* msg hea
 458:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+2+2+2 +2 /* msg header overhead */);
 459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BAT, "BAT");
 461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
 462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _voltage);
 463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _amps);
 464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
 465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _kill_auto_throt
 466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
 467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
 468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 470:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 472:/home/lsk/paparazzi/var/include/messages.h **** }
 473:/home/lsk/paparazzi/var/include/messages.h **** 
 474:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_MCU_LINK(_trans, _dev, i2c_nb_err, i2c_mcu1_nb_err, ppm_rate) pprz_msg_
 475:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_MCU_LINK(struct transport_tx *trans, struct link_device *dev
 476:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
 477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
 478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
 479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_MCU_LINK, "DEB
 481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_nb_err);
 482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_mcu1_nb_err
 483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
 484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 485:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 487:/home/lsk/paparazzi/var/include/messages.h **** }
 488:/home/lsk/paparazzi/var/include/messages.h **** 
 489:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CALIBRATION(_trans, _dev, climb_sum_err, climb_gaz_submode) pprz_msg_send_CAL
 490:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CALIBRATION(struct transport_tx *trans, struct link_device *dev, u
 491:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg hea
 492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg header overhead
 493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1 +2 /* msg header overhead */);
 494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CALIBRATION, "CALIBR
 496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb_sum_err);
 497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _climb_gaz_submo
 498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 499:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 501:/home/lsk/paparazzi/var/include/messages.h **** }
 502:/home/lsk/paparazzi/var/include/messages.h **** 
 503:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SETTINGS(_trans, _dev, slider_1_val, slider_2_val) pprz_msg_send_SETTINGS(&((
 504:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SETTINGS(struct transport_tx *trans, struct link_device *dev, uint
 505:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SETTINGS, "SETTINGS"
 510:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_1_val);
 511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_2_val);
 512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 513:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 515:/home/lsk/paparazzi/var/include/messages.h **** }
 516:/home/lsk/paparazzi/var/include/messages.h **** 
 517:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DESIRED(_trans, _dev, roll, pitch, course, x, y, altitude, climb, airspeed) p
 518:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DESIRED(struct transport_tx *trans, struct link_device *dev, uint8
 519:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
 520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
 521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DESIRED, "DESIRED");
 524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll);
 525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch);
 526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
 527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
 528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
 529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
 531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 533:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 535:/home/lsk/paparazzi/var/include/messages.h **** }
 536:/home/lsk/paparazzi/var/include/messages.h **** 
 537:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_SOL(_trans, _dev, Pacc, Sacc, PDOP, numSV) pprz_msg_send_GPS_SOL(&((_tran
 538:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_SOL(struct transport_tx *trans, struct link_device *dev, uint8
 539:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg
 540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg header over
 541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+1 +2 /* msg header overhead */);
 542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_SOL, "GPS_SOL");
 544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Pacc);
 545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Sacc);
 546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PDOP);
 547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numSV);
 548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 549:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 551:/home/lsk/paparazzi/var/include/messages.h **** }
 552:/home/lsk/paparazzi/var/include/messages.h **** 
 553:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC_GENERIC(_trans, _dev, val1, val2) pprz_msg_send_ADC_GENERIC(&((_trans).tr
 554:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC_GENERIC(struct transport_tx *trans, struct link_device *dev, u
 555:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
 556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
 557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
 558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC_GENERIC, "ADC_GE
 560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
 561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
 562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 563:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 565:/home/lsk/paparazzi/var/include/messages.h **** }
 566:/home/lsk/paparazzi/var/include/messages.h **** 
 567:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_FORMAT(_trans, _dev, val1, val2) pprz_msg_send_TEST_FORMAT(&((_trans).tr
 568:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_FORMAT(struct transport_tx *trans, struct link_device *dev, u
 569:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg hea
 570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg header overhead
 571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+8+4 +2 /* msg header overhead */);
 572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_FORMAT, "TEST_F
 574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_DOUBLE, DL_FORMAT_SCALAR, 8, (void *) _val1);
 575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _val2);
 576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 577:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 579:/home/lsk/paparazzi/var/include/messages.h **** }
 580:/home/lsk/paparazzi/var/include/messages.h **** 
 581:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM(_trans, _dev, phi, theta, target_x, target_y) pprz_msg_send_CAM(&((_trans
 582:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM(struct transport_tx *trans, struct link_device *dev, uint8_t a
 583:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM, "CAM");
 588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
 589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
 590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_x);
 591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_y);
 592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 595:/home/lsk/paparazzi/var/include/messages.h **** }
 596:/home/lsk/paparazzi/var/include/messages.h **** 
 597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CIRCLE(_trans, _dev, center_east, center_north, radius) pprz_msg_send_CIRCLE(
 598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CIRCLE(struct transport_tx *trans, struct link_device *dev, uint8_
 599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 610:/home/lsk/paparazzi/var/include/messages.h **** }
 611:/home/lsk/paparazzi/var/include/messages.h **** 
 612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SEGMENT(_trans, _dev, segment_east_1, segment_north_1, segment_east_2, segmen
 613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SEGMENT(struct transport_tx *trans, struct link_device *dev, uint8
 614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 624:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 626:/home/lsk/paparazzi/var/include/messages.h **** }
 627:/home/lsk/paparazzi/var/include/messages.h **** 
 628:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SVINFO(_trans, _dev, chn, SVID, Flags, QI, CNO, Elev, Azim) pprz_msg_send_SVI
 629:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SVINFO(struct transport_tx *trans, struct link_device *dev, uint8_
 630:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 
 631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 /* msg heade
 632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1+2 +2 /* msg header overhead */);
 633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SVINFO, "SVINFO");
 635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _chn);
 636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _SVID);
 637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _Flags);
 638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _QI);
 639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _CNO);
 640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _Elev);
 641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _Azim);
 642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 643:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 645:/home/lsk/paparazzi/var/include/messages.h **** }
 646:/home/lsk/paparazzi/var/include/messages.h **** 
 647:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG(_trans, _dev, nb_msg, msg) pprz_msg_send_DEBUG(&((_trans).trans_tx), &(
 648:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG(struct transport_tx *trans, struct link_device *dev, uint8_t
 649:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
 650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
 651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
 652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG, "DEBUG");
 654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
 655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
 656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 657:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 659:/home/lsk/paparazzi/var/include/messages.h **** }
 660:/home/lsk/paparazzi/var/include/messages.h **** 
 661:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SURVEY(_trans, _dev, east, north, west, south) pprz_msg_send_SURVEY(&((_trans
 662:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SURVEY(struct transport_tx *trans, struct link_device *dev, uint8_
 663:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 673:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 675:/home/lsk/paparazzi/var/include/messages.h **** }
 676:/home/lsk/paparazzi/var/include/messages.h **** 
 677:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WC_RSSI(_trans, _dev, raw_level) pprz_msg_send_WC_RSSI(&((_trans).trans_tx), 
 678:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WC_RSSI(struct transport_tx *trans, struct link_device *dev, uint8
 679:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
 680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
 681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
 682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WC_RSSI, "WC_RSSI");
 684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _raw_level);
 685:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 686:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 688:/home/lsk/paparazzi/var/include/messages.h **** }
 689:/home/lsk/paparazzi/var/include/messages.h **** 
 690:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RANGEFINDER(_trans, _dev, range, z_dot, z_dot_sum_err, z_dot_setpoint, z_sum_
 691:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RANGEFINDER(struct transport_tx *trans, struct link_device *dev, u
 692:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 
 693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 /* msg heade
 694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+1 +2 /* msg header overhead */);
 695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RANGEFINDER, "RANGEF
 697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _range);
 698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_sum_err);
 700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_setpoint)
 701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_sum_err);
 702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_setpoint);
 703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _flying);
 704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 705:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 707:/home/lsk/paparazzi/var/include/messages.h **** }
 708:/home/lsk/paparazzi/var/include/messages.h **** 
 709:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DATALINK_REPORT(_trans, _dev, uplink_lost_time, uplink_nb_msgs, downlink_nb_m
 710:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DATALINK_REPORT(struct transport_tx *trans, struct link_device *de
 711:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* m
 712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* msg header ov
 713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1 +2 /* msg header overhead */);
 714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DATALINK_REPORT, "DA
 716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_lost_ti
 717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_nb_msgs
 718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_nb_ms
 719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_rate)
 720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _downlink_ovrn);
 721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 722:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 724:/home/lsk/paparazzi/var/include/messages.h **** }
 725:/home/lsk/paparazzi/var/include/messages.h **** 
 726:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DL_VALUE(_trans, _dev, index, value) pprz_msg_send_DL_VALUE(&((_trans).trans_
 727:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DL_VALUE(struct transport_tx *trans, struct link_device *dev, uint
 728:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
 729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
 730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
 731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DL_VALUE, "DL_VALUE"
 733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _index);
 734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _value);
 735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 738:/home/lsk/paparazzi/var/include/messages.h **** }
 739:/home/lsk/paparazzi/var/include/messages.h **** 
 740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MARK(_trans, _dev, ac_id, lat, long) pprz_msg_send_MARK(&((_trans).trans_tx),
 741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MARK(struct transport_tx *trans, struct link_device *dev, uint8_t 
 742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg h
 743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg header overhe
 744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4 +2 /* msg header overhead */);
 745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MARK, "MARK");
 747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
 748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
 749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _long);
 750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 753:/home/lsk/paparazzi/var/include/messages.h **** }
 754:/home/lsk/paparazzi/var/include/messages.h **** 
 755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYS_MON(_trans, _dev, periodic_time, periodic_time_min, periodic_time_max, pe
 756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYS_MON(struct transport_tx *trans, struct link_device *dev, uint8
 757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +
 758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +2 /* msg hea
 759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+1 +2 /* msg header overhead */);
 760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYS_MON, "SYS_MON");
 762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time)
 763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _event_number);
 769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cpu_load);
 770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 771:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 773:/home/lsk/paparazzi/var/include/messages.h **** }
 774:/home/lsk/paparazzi/var/include/messages.h **** 
 775:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR(_trans, _dev, rpm, current) pprz_msg_send_MOTOR(&((_trans).trans_tx), &
 776:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR(struct transport_tx *trans, struct link_device *dev, uint8_t
 777:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
 778:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
 779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
 780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR, "MOTOR");
 782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm);
 783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
 784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 785:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 787:/home/lsk/paparazzi/var/include/messages.h **** }
 788:/home/lsk/paparazzi/var/include/messages.h **** 
 789:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED(_trans, _dev, wp_id, utm_east, utm_north, alt, utm_zone) pprz_msg_se
 790:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED(struct transport_tx *trans, struct link_device *dev, uint
 791:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* msg header ov
 793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4+1 +2 /* msg header overhead */);
 794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 795:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED, "WP_MOVED"
 796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 797:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 798:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 799:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 802:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 804:/home/lsk/paparazzi/var/include/messages.h **** }
 805:/home/lsk/paparazzi/var/include/messages.h **** 
 806:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MKK(_trans, _dev, nr, rpm, current, temp) pprz_msg_send_MKK(&((_trans).trans_
 807:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MKK(struct transport_tx *trans, struct link_device *dev, uint8_t a
 808:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg
 809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg header over
 810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1 +2 /* msg header overhead */);
 811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MKK, "MKK");
 813:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nr);
 814:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rpm);
 815:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _current);
 816:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _temp);
 817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 818:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 820:/home/lsk/paparazzi/var/include/messages.h **** }
 821:/home/lsk/paparazzi/var/include/messages.h **** 
 822:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENERGY(_trans, _dev, bat, amp, energy, power) pprz_msg_send_ENERGY(&((_trans)
 823:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENERGY(struct transport_tx *trans, struct link_device *dev, uint8_
 824:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg
 825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg header over
 826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+4 +2 /* msg header overhead */);
 827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENERGY, "ENERGY");
 829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bat);
 830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amp);
 831:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _power);
 833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 834:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 836:/home/lsk/paparazzi/var/include/messages.h **** }
 837:/home/lsk/paparazzi/var/include/messages.h **** 
 838:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85_CALIB(_trans, _dev, a1, a2, a3, a4, a5, a6, b1, b2, mb, mc, md) pp
 839:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85_CALIB(struct transport_tx *trans, struct link_device *d
 840:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* m
 842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
 843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85_CALIB, "B
 845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a1);
 846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a2);
 847:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a3);
 848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a4);
 849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a5);
 850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a6);
 851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b1);
 852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b2);
 853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mb);
 854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mc);
 855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _md);
 856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 859:/home/lsk/paparazzi/var/include/messages.h **** }
 860:/home/lsk/paparazzi/var/include/messages.h **** 
 861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85(_trans, _dev, UT, UP, P, T, MSL) pprz_msg_send_BARO_BMP85(&((_tran
 862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85(struct transport_tx *trans, struct link_device *dev, ui
 863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
 864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
 865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
 866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85, "BARO_BM
 868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
 869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
 870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _P);
 871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _T);
 872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _MSL);
 873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 874:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 876:/home/lsk/paparazzi/var/include/messages.h **** }
 877:/home/lsk/paparazzi/var/include/messages.h **** 
 878:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SPEED_LOOP(_trans, _dev, ve_set_point, ve, vn_set_point, vn, north_sp, east_s
 879:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SPEED_LOOP(struct transport_tx *trans, struct link_device *dev, ui
 880:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
 882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SPEED_LOOP, "SPEED_L
 885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve_set_point);
 886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve);
 887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn_set_point);
 888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn);
 889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north_sp);
 890:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east_sp);
 891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 892:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 894:/home/lsk/paparazzi/var/include/messages.h **** }
 895:/home/lsk/paparazzi/var/include/messages.h **** 
 896:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALT_KALMAN(_trans, _dev, p00, p01, p10, p11) pprz_msg_send_ALT_KALMAN(&((_tra
 897:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALT_KALMAN(struct transport_tx *trans, struct link_device *dev, ui
 898:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALT_KALMAN, "ALT_KAL
 903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p00);
 904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p01);
 905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p10);
 906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p11);
 907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 910:/home/lsk/paparazzi/var/include/messages.h **** }
 911:/home/lsk/paparazzi/var/include/messages.h **** 
 912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ESTIMATOR(_trans, _dev, z, z_dot) pprz_msg_send_ESTIMATOR(&((_trans).trans_tx
 913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ESTIMATOR(struct transport_tx *trans, struct link_device *dev, uin
 914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ESTIMATOR, "ESTIMATO
 919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
 920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 922:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 924:/home/lsk/paparazzi/var/include/messages.h **** }
 925:/home/lsk/paparazzi/var/include/messages.h **** 
 926:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_ROLL(_trans, _dev, p, phi, phi_sp) pprz_msg_send_TUNE_ROLL(&((_trans).tr
 927:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_ROLL(struct transport_tx *trans, struct link_device *dev, uin
 928:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_ROLL, "TUNE_ROL
 933:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
 934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 935:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_sp);
 936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 937:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 939:/home/lsk/paparazzi/var/include/messages.h **** }
 940:/home/lsk/paparazzi/var/include/messages.h **** 
 941:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5534A(_trans, _dev, pressure, temp, alt) pprz_msg_send_BARO_MS5534A(&(
 942:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5534A(struct transport_tx *trans, struct link_device *dev, 
 943:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
 944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
 945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
 946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5534A, "BARO_
 948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
 950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 952:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 954:/home/lsk/paparazzi/var/include/messages.h **** }
 955:/home/lsk/paparazzi/var/include/messages.h **** 
 956:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PRESSURE(_trans, _dev, airspeed_adc, airspeed, altitude_adc, altitude) pprz_m
 957:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PRESSURE(struct transport_tx *trans, struct link_device *dev, uint
 958:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PRESSURE, "PRESSURE"
 963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_adc);
 964:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude_adc);
 966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 968:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 970:/home/lsk/paparazzi/var/include/messages.h **** }
 971:/home/lsk/paparazzi/var/include/messages.h **** 
 972:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_WORDS(_trans, _dev, w1, w2, w3, w4) pprz_msg_send_BARO_WORDS(&((_trans).
 973:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_WORDS(struct transport_tx *trans, struct link_device *dev, ui
 974:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_WORDS, "BARO_WO
 979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w1);
 980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w2);
 981:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w3);
 982:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w4);
 983:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 984:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 986:/home/lsk/paparazzi/var/include/messages.h **** }
 987:/home/lsk/paparazzi/var/include/messages.h **** 
 988:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_LLA(_trans, _dev, wp_id, lat, lon, alt) pprz_msg_send_WP_MOVED_LLA(&
 989:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_LLA(struct transport_tx *trans, struct link_device *dev, 
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_LLA, "WP_MO
 995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
 998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1000:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1002:/home/lsk/paparazzi/var/include/messages.h **** }
1003:/home/lsk/paparazzi/var/include/messages.h **** 
1004:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CHRONO(_trans, _dev, tag, time) pprz_msg_send_CHRONO(&((_trans).trans_tx), &(
1005:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CHRONO(struct transport_tx *trans, struct link_device *dev, uint8_
1006:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
1007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
1008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
1009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CHRONO, "CHRONO");
1011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tag);
1012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time);
1013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1014:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1016:/home/lsk/paparazzi/var/include/messages.h **** }
1017:/home/lsk/paparazzi/var/include/messages.h **** 
1018:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_ENU(_trans, _dev, wp_id, east, north, up) pprz_msg_send_WP_MOVED_ENU
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
1020:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
1021:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
1022:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
1023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_ENU, "WP_MO
1025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
1026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
1027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
1028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
1029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1030:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1032:/home/lsk/paparazzi/var/include/messages.h **** }
1033:/home/lsk/paparazzi/var/include/messages.h **** 
1034:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WINDTURBINE_STATUS_(_trans, _dev, ac_id, tb_id, sync_itow, cycle_time) pprz_m
1035:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WINDTURBINE_STATUS_(struct transport_tx *trans, struct link_device
1036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg
1037:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg header over
1038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4 +2 /* msg header overhead */);
1039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WINDTURBINE_STATUS_,
1041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tb_id);
1043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sync_itow);
1044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _cycle_time);
1045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1048:/home/lsk/paparazzi/var/include/messages.h **** }
1049:/home/lsk/paparazzi/var/include/messages.h **** 
1050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC_3CH_(_trans, _dev, throttle_mode, roll, pitch) pprz_msg_send_RC_3CH_(&((_t
1051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC_3CH_(struct transport_tx *trans, struct link_device *dev, uint8
1052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC_3CH_, "RC_3CH_");
1057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle_mode);
1058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _roll);
1059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _pitch);
1060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1061:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1063:/home/lsk/paparazzi/var/include/messages.h **** }
1064:/home/lsk/paparazzi/var/include/messages.h **** 
1065:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPPT(_trans, _dev, nb_values, values) pprz_msg_send_MPPT(&((_trans).trans_tx)
1066:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPPT(struct transport_tx *trans, struct link_device *dev, uint8_t 
1067:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPPT, "MPPT");
1072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1075:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1077:/home/lsk/paparazzi/var/include/messages.h **** }
1078:/home/lsk/paparazzi/var/include/messages.h **** 
1079:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_IR_I2C(_trans, _dev, ir1, ir2, top) pprz_msg_send_DEBUG_IR_I2C(&((_tran
1080:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_IR_I2C(struct transport_tx *trans, struct link_device *dev, 
1081:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
1082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
1083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
1084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_IR_I2C, "DEBUG
1086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
1087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
1088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _top);
1089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1090:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1092:/home/lsk/paparazzi/var/include/messages.h **** }
1093:/home/lsk/paparazzi/var/include/messages.h **** 
1094:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED(_trans, _dev, airspeed, airspeed_sp, airspeed_cnt, groundspeed_sp) p
1095:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED(struct transport_tx *trans, struct link_device *dev, uint
1096:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED, "AIRSPEED"
1101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_sp);
1103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_cnt);
1104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _groundspeed_sp)
1105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1106:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1108:/home/lsk/paparazzi/var/include/messages.h **** }
1109:/home/lsk/paparazzi/var/include/messages.h **** 
1110:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XSENS(_trans, _dev, counter, p, q, r, phi, theta, psi, ax, ay, az, vx, vy, vz
1111:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XSENS(struct transport_tx *trans, struct link_device *dev, uint8_t
1112:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
1113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+1+1+1+1+4+2+1+1 +2 /* m
1115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XSENS, "XSENS");
1117:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _counter);
1118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
1119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
1120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
1121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
1124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
1125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
1126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
1127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vx);
1128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vy);
1129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vz);
1130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
1131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lon);
1132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1134:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _hour);
1135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _min);
1136:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _sec);
1137:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _nanosec);
1138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _year);
1139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _month);
1140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _day);
1141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1142:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1144:/home/lsk/paparazzi/var/include/messages.h **** }
1145:/home/lsk/paparazzi/var/include/messages.h **** 
1146:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_BARO_ETS(&((_trans)
1147:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_ETS(struct transport_tx *trans, struct link_device *dev, uint
1148:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_ETS, "BARO_ETS"
1153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1157:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1159:/home/lsk/paparazzi/var/include/messages.h **** }
1160:/home/lsk/paparazzi/var/include/messages.h **** 
1161:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_AIRSPEED_ETS(&(
1162:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_ETS(struct transport_tx *trans, struct link_device *dev, 
1163:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_ETS, "AIRSP
1168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1172:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1174:/home/lsk/paparazzi/var/include/messages.h **** }
1175:/home/lsk/paparazzi/var/include/messages.h **** 
1176:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PBN(_trans, _dev, airspeed_adc, altitude_adc, airspeed, altitude, airspeed_of
1177:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PBN(struct transport_tx *trans, struct link_device *dev, uint8_t a
1178:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /*
1179:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /* msg header 
1180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+2+2 +2 /* msg header overhead */);
1181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PBN, "PBN");
1183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_adc);
1184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_adc);
1185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
1187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_offse
1188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_offse
1189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1190:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1192:/home/lsk/paparazzi/var/include/messages.h **** }
1193:/home/lsk/paparazzi/var/include/messages.h **** 
1194:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_LLA(_trans, _dev, lat, lon, alt, course, speed, climb, week, itow, mode, 
1195:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_LLA(struct transport_tx *trans, struct link_device *dev, uint8
1196:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1
1197:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg
1198:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg header overhead */);
1199:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_LLA, "GPS_LLA");
1201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
1206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
1207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
1208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
1209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
1211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1212:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1214:/home/lsk/paparazzi/var/include/messages.h **** }
1215:/home/lsk/paparazzi/var/include/messages.h **** 
1216:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_H_CTL_A(_trans, _dev, roll_sum_err, roll_sp, roll_ref, phi, aileron_sp, pitch
1217:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_H_CTL_A(struct transport_tx *trans, struct link_device *dev, uint8
1218:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4
1219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg
1220:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg header overhead */);
1221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1222:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_H_CTL_A, "H_CTL_A");
1223:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sum_err);
1224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sp);
1225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_ref);
1226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _aileron_sp);
1228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sum_err);
1229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sp);
1230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_ref);
1231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _elevator_sp);
1233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1234:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1236:/home/lsk/paparazzi/var/include/messages.h **** }
1237:/home/lsk/paparazzi/var/include/messages.h **** 
1238:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_RAW(_trans, _dev, ch_0, ch_1, ch_2, ch_3, ch_4, ch_5, ch_6, ch_
1239:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_RAW(struct transport_tx *trans, struct link_device *
1240:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_RAW, "
1245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_0);
1246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_1);
1247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_2);
1248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_3);
1249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_4);
1250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_5);
1251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_6);
1252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_7);
1253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_8);
1254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_9);
1255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_10);
1256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_11);
1257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_12);
1258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_13);
1259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_14);
1260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_15);
1261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1262:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1264:/home/lsk/paparazzi/var/include/messages.h **** }
1265:/home/lsk/paparazzi/var/include/messages.h **** 
1266:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_VOLTAGE(_trans, _dev, ch_1_p, ch_1_t, ch_2_p, ch_2_t, ch_3_p, c
1267:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_VOLTAGE(struct transport_tx *trans, struct link_devi
1268:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_VOLTAG
1273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_p);
1274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_t);
1275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_p);
1276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_t);
1277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_p);
1278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_t);
1279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_p);
1280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_t);
1281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_p);
1282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_t);
1283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_p);
1284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_t);
1285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_p);
1286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_t);
1287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd1);
1288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd2);
1289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1292:/home/lsk/paparazzi/var/include/messages.h **** }
1293:/home/lsk/paparazzi/var/include/messages.h **** 
1294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM_POINT(_trans, _dev, cam_point_distance_from_home, cam_point_lat, cam_poin
1295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM_POINT(struct transport_tx *trans, struct link_device *dev, uin
1296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM_POINT, "CAM_POIN
1301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cam_point_dist
1302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lat);
1303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lon);
1304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1307:/home/lsk/paparazzi/var/include/messages.h **** }
1308:/home/lsk/paparazzi/var/include/messages.h **** 
1309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_INFO(_trans, _dev, mode, lat, lon, alt, course, photo_nr, dist, next_dist,
1310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_INFO(struct transport_tx *trans, struct link_device *dev, uint8
1311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4
1312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1
1313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1 +2 /* msg header overhead
1314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_INFO, "DC_INFO");
1316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
1317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
1321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
1322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist);
1323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _next_dist);
1324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_x);
1325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_y);
1326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_angle);
1327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _angle);
1328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _last_block);
1329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _count);
1330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _shutter);
1331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1332:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1334:/home/lsk/paparazzi/var/include/messages.h **** }
1335:/home/lsk/paparazzi/var/include/messages.h **** 
1336:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_BARO(_trans, _dev, pBaroRaw, pBaro, pHomePressure, AltOffset, aktuell, 
1337:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_BARO(struct transport_tx *trans, struct link_device *dev, ui
1338:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 
1339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 /* msg heade
1340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4 +2 /* msg header overhead */);
1341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_BARO, "AMSYS_B
1343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pBaroRaw);
1344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pBaro);
1345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pHomePressure);
1346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AltOffset);
1347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _aktuell);
1348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Over_Ground);
1349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tempBaro);
1350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1353:/home/lsk/paparazzi/var/include/messages.h **** }
1354:/home/lsk/paparazzi/var/include/messages.h **** 
1355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_AIRSPEED(_trans, _dev, asRaw, asPresure, asAirspeed, asAirsFilt, asTemp
1356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_AIRSPEED(struct transport_tx *trans, struct link_device *dev
1357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* m
1358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* msg header ov
1359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4 +2 /* msg header overhead */);
1360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_AIRSPEED, "AMS
1362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _asRaw);
1363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asPresure);
1364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirspeed);
1365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirsFilt);
1366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asTemp);
1367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1368:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1370:/home/lsk/paparazzi/var/include/messages.h **** }
1371:/home/lsk/paparazzi/var/include/messages.h **** 
1372:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLIGHT_BENCHMARK(_trans, _dev, SE_As, SE_Alt, SE_Pos, Err_As, Err_Alt, Err_Po
1373:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLIGHT_BENCHMARK(struct transport_tx *trans, struct link_device *d
1374:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
1375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
1376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
1377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLIGHT_BENCHMARK, "F
1379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_As);
1380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Alt);
1381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Pos);
1382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_As);
1383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Alt);
1384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Pos);
1385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1386:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1388:/home/lsk/paparazzi/var/include/messages.h **** }
1389:/home/lsk/paparazzi/var/include/messages.h **** 
1390:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPL3115_BARO(_trans, _dev, pressure, temp, alt) pprz_msg_send_MPL3115_BARO(&(
1391:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPL3115_BARO(struct transport_tx *trans, struct link_device *dev, 
1392:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
1393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
1394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
1395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPL3115_BARO, "MPL31
1397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
1398:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1401:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1403:/home/lsk/paparazzi/var/include/messages.h **** }
1404:/home/lsk/paparazzi/var/include/messages.h **** 
1405:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AOA_ADC(_trans, _dev, adcVal, AOA) pprz_msg_send_AOA_ADC(&((_trans).trans_tx)
1406:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AOA_ADC(struct transport_tx *trans, struct link_device *dev, uint8
1407:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AOA_ADC, "AOA_ADC");
1412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adcVal);
1413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AOA);
1414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1415:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1417:/home/lsk/paparazzi/var/include/messages.h **** }
1418:/home/lsk/paparazzi/var/include/messages.h **** 
1419:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XTEND_RSSI(_trans, _dev, datalink_time, rssi_fade_margin, duty) pprz_msg_send
1420:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XTEND_RSSI(struct transport_tx *trans, struct link_device *dev, ui
1421:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg h
1422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg header overhe
1423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+1+1 +2 /* msg header overhead */);
1424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XTEND_RSSI, "XTEND_R
1426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _datalink_time)
1427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rssi_fade_margi
1428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _duty);
1429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1430:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1432:/home/lsk/paparazzi/var/include/messages.h **** }
1433:/home/lsk/paparazzi/var/include/messages.h **** 
1434:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SUPERBITRF(_trans, _dev, status, cyrf_status, irq_count, rx_packet_count, tx_
1435:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SUPERBITRF(struct transport_tx *trans, struct link_device *dev, ui
1436:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4
1437:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_
1438:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_mfg_id*1 +2 /* msg header 
1439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SUPERBITRF, "SUPERBI
1441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cyrf_status);
1443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _irq_count);
1444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rx_packet_coun
1445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tx_packet_coun
1446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _transfer_timeo
1447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _resync_count);
1448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _uplink_count);
1449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_count);
1450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing1);
1451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing2);
1452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _bind_mfg_id);
1453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_mfg_i
1454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_mfg_id, (void *) _mfg_
1455:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1456:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1458:/home/lsk/paparazzi/var/include/messages.h **** }
1459:/home/lsk/paparazzi/var/include/messages.h **** 
1460:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GX3_INFO(_trans, _dev, GX3_freq, chksm_error, hdr_error, GX3_chksm) pprz_msg_
1461:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GX3_INFO(struct transport_tx *trans, struct link_device *dev, uint
1462:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GX3_INFO, "GX3_INFO"
1467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _GX3_freq);
1468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _chksm_error);
1469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _hdr_error);
1470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _GX3_chksm);
1471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1472:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1474:/home/lsk/paparazzi/var/include/messages.h **** }
1475:/home/lsk/paparazzi/var/include/messages.h **** 
1476:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EXPLAIN(_trans, _dev, type, id, nb_string, string) pprz_msg_send_EXPLAIN(&((_
1477:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EXPLAIN(struct transport_tx *trans, struct link_device *dev, uint8
1478:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1
1479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1 +2 /* msg h
1480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_string*1 +2 /* msg header overhead */);
1481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EXPLAIN, "EXPLAIN");
1483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _type);
1484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id);
1485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_strin
1486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_string, (void *) _stri
1487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1488:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1490:/home/lsk/paparazzi/var/include/messages.h **** }
1491:/home/lsk/paparazzi/var/include/messages.h **** 
1492:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VIDEO_TELEMETRY(_trans, _dev, blob_x1, blob_y1, blob_x2, blob_y2, blob_x3, bl
1493:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VIDEO_TELEMETRY(struct transport_tx *trans, struct link_device *de
1494:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
1495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
1496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
1497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VIDEO_TELEMETRY, "VI
1499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x1);
1500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y1);
1501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x2);
1502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y2);
1503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x3);
1504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y3);
1505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x4);
1506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y4);
1507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1508:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1510:/home/lsk/paparazzi/var/include/messages.h **** }
1511:/home/lsk/paparazzi/var/include/messages.h **** 
1512:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_UPDATE(_trans, _dev, baro, range_meter) pprz_msg_send_VF_UPDATE(&((_trans)
1513:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_UPDATE(struct transport_tx *trans, struct link_device *dev, uin
1514:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_UPDATE, "VF_UPDAT
1519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro);
1520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _range_meter);
1521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1522:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1524:/home/lsk/paparazzi/var/include/messages.h **** }
1525:/home/lsk/paparazzi/var/include/messages.h **** 
1526:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_PREDICT(_trans, _dev, accel) pprz_msg_send_VF_PREDICT(&((_trans).trans_tx)
1527:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_PREDICT(struct transport_tx *trans, struct link_device *dev, ui
1528:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
1529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
1530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
1531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_PREDICT, "VF_PRED
1533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _accel);
1534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1535:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1537:/home/lsk/paparazzi/var/include/messages.h **** }
1538:/home/lsk/paparazzi/var/include/messages.h **** 
1539:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INV_FILTER(_trans, _dev, quat, phi_inv, theta_inv, psi_inv, Vx_inv, Vy_inv, V
1540:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INV_FILTER(struct transport_tx *trans, struct link_device *dev, ui
1541:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
1544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INV_FILTER, "INV_FIL
1546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat);
1547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_inv);
1548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_inv);
1549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_inv);
1550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vx_inv);
1551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vy_inv);
1552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vz_inv);
1553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Px_inv);
1554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Py_inv);
1555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pz_inv);
1556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_phi);
1557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_theta);
1558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_psi);
1559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_as);
1560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_hb);
1561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
1562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_gps);
1563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1564:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1566:/home/lsk/paparazzi/var/include/messages.h **** }
1567:/home/lsk/paparazzi/var/include/messages.h **** 
1568:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MISSION_STATUS(_trans, _dev, remaining_time, nb_task_list, task_list) pprz_ms
1569:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MISSION_STATUS(struct transport_tx *trans, struct link_device *dev
1570:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*
1571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*1 +2 /* msg 
1572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_task_list*1 +2 /* msg header overhead */);
1573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MISSION_STATUS, "MIS
1575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _remaining_time)
1576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_task_
1577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_task_list, (void *) _t
1578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1579:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1581:/home/lsk/paparazzi/var/include/messages.h **** }
1582:/home/lsk/paparazzi/var/include/messages.h **** 
1583:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CROSS_TRACK_ERROR(_trans, _dev, cross_track_error, cte_int) pprz_msg_send_CRO
1584:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CROSS_TRACK_ERROR(struct transport_tx *trans, struct link_device *
1585:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CROSS_TRACK_ERROR, "
1590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cross_track_err
1591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cte_int);
1592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1595:/home/lsk/paparazzi/var/include/messages.h **** }
1596:/home/lsk/paparazzi/var/include/messages.h **** 
1597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GENERIC_COM(_trans, _dev, lat, lon, alt, gspeed, course, airspeed, vsupply, e
1598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GENERIC_COM(struct transport_tx *trans, struct link_device *dev, u
1599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1
1600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /*
1601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /* msg header overhead */);
1602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GENERIC_COM, "GENERI
1604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _alt);
1607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _gspeed);
1608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed);
1610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _vsupply);
1611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _energy);
1612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle);
1613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
1614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nav_block);
1615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
1616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1617:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1619:/home/lsk/paparazzi/var/include/messages.h **** }
1620:/home/lsk/paparazzi/var/include/messages.h **** 
1621:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_SLOT_TM(_trans, _dev, ac_id, mode, slot_east, slot_north, slot_alt)
1622:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_SLOT_TM(struct transport_tx *trans, struct link_device *
1623:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* m
1624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* msg header ov
1625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4 +2 /* msg header overhead */);
1626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_SLOT_TM, "
1628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_east);
1631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_north);
1632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_alt);
1633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1634:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1636:/home/lsk/paparazzi/var/include/messages.h **** }
1637:/home/lsk/paparazzi/var/include/messages.h **** 
1638:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_STATUS_TM(_trans, _dev, ac_id, leader_id, status) pprz_msg_send_FOR
1639:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_STATUS_TM(struct transport_tx *trans, struct link_device
1640:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_STATUS_TM,
1645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _leader_id);
1647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1649:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1651:/home/lsk/paparazzi/var/include/messages.h **** }
1652:/home/lsk/paparazzi/var/include/messages.h **** 
1653:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BMP_STATUS(_trans, _dev, UP, UT, press, temp) pprz_msg_send_BMP_STATUS(&((_tr
1654:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1655:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BMP_STATUS, "BMP_STA
1660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
1661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
1662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _temp);
1664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1665:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1667:/home/lsk/paparazzi/var/include/messages.h **** }
1668:/home/lsk/paparazzi/var/include/messages.h **** 
1669:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_STATUS(_trans, _dev, itemp_case, temp_case, itemp_obj, temp_obj) pprz_msg
1670:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1671:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg
1672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg header over
1673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+2+4 +2 /* msg header overhead */);
1674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_STATUS, "MLX_STA
1676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_case);
1677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_case);
1678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_obj);
1679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_obj);
1680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1681:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1683:/home/lsk/paparazzi/var/include/messages.h **** }
1684:/home/lsk/paparazzi/var/include/messages.h **** 
1685:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TMP_STATUS(_trans, _dev, itemp, temp) pprz_msg_send_TMP_STATUS(&((_trans).tra
1686:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1687:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TMP_STATUS, "TMP_STA
1692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1695:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1697:/home/lsk/paparazzi/var/include/messages.h **** }
1698:/home/lsk/paparazzi/var/include/messages.h **** 
1699:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WIND_INFO_RET(_trans, _dev, east, north, airspeed) pprz_msg_send_WIND_INFO_RE
1700:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WIND_INFO_RET(struct transport_tx *trans, struct link_device *dev,
1701:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
1702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
1703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
1704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WIND_INFO_RET, "WIND
1706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
1707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
1708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1709:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1710:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1712:/home/lsk/paparazzi/var/include/messages.h **** }
1713:/home/lsk/paparazzi/var/include/messages.h **** 
1714:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SCP_STATUS(_trans, _dev, press, temp) pprz_msg_send_SCP_STATUS(&((_trans).tra
1715:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SCP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1716:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg hea
1717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg header overhead
1718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2 +2 /* msg header overhead */);
1719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SCP_STATUS, "SCP_STA
1721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1724:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1726:/home/lsk/paparazzi/var/include/messages.h **** }
1727:/home/lsk/paparazzi/var/include/messages.h **** 
1728:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_STATUS
1729:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1730:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_STATUS, "SHT_STA
1735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
1736:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
1738:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1739:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1740:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1742:/home/lsk/paparazzi/var/include/messages.h **** }
1743:/home/lsk/paparazzi/var/include/messages.h **** 
1744:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENOSE_STATUS(_trans, _dev, val1, val2, val3, PID, nb_heat, heat) pprz_msg_sen
1745:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENOSE_STATUS(struct transport_tx *trans, struct link_device *dev, 
1746:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat
1747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat*1 +2 /* msg
1748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+nb_heat*1 +2 /* msg header overhead */);
1749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENOSE_STATUS, "ENOSE
1751:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
1752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
1753:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
1754:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PID);
1755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_heat)
1756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_heat, (void *) _heat);
1757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1758:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1760:/home/lsk/paparazzi/var/include/messages.h **** }
1761:/home/lsk/paparazzi/var/include/messages.h **** 
1762:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DPICCO_STATUS(_trans, _dev, humid, temp, fhumid, ftemp) pprz_msg_send_DPICCO_
1763:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DPICCO_STATUS(struct transport_tx *trans, struct link_device *dev,
1764:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DPICCO_STATUS, "DPIC
1769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1774:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1776:/home/lsk/paparazzi/var/include/messages.h **** }
1777:/home/lsk/paparazzi/var/include/messages.h **** 
1778:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_DEBUG(_trans, _dev, mag_xraw, mag_yraw, mag_xcal, mag_ycal, mag_headi
1779:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_DEBUG(struct transport_tx *trans, struct link_device *dev,
1780:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1
1781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1 +2 /* msg h
1782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1+1 +2 /* msg header overhead */);
1783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_DEBUG, "ANTE
1785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_xraw);
1786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_yraw);
1787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_xcal);
1788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_ycal);
1789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_heading);
1790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_magnitude);
1791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_temp);
1792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_distor);
1793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_cal_status)
1794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1797:/home/lsk/paparazzi/var/include/messages.h **** }
1798:/home/lsk/paparazzi/var/include/messages.h **** 
1799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_STATUS(_trans, _dev, azim_sp, elev_sp, id_sp, mode) pprz_msg_send_ANT
1800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_STATUS(struct transport_tx *trans, struct link_device *dev
1801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg
1802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg header over
1803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+1 +2 /* msg header overhead */);
1804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_STATUS, "ANT
1806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _azim_sp);
1807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _elev_sp);
1808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id_sp);
1809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1813:/home/lsk/paparazzi/var/include/messages.h **** }
1814:/home/lsk/paparazzi/var/include/messages.h **** 
1815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATUS(_trans, _dev, time_ticks, throttle, rpm, current, thrust, 
1816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATUS(struct transport_tx *trans, struct link_device 
1817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +
1818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +2 /* msg hea
1819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+2+1 +2 /* msg header overhead */);
1820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATUS, 
1822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time_ticks);
1823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
1824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
1825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _current);
1826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _thrust);
1827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _torque);
1828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _time_s);
1829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1831:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1833:/home/lsk/paparazzi/var/include/messages.h **** }
1834:/home/lsk/paparazzi/var/include/messages.h **** 
1835:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATIC(_trans, _dev, av_rpm, av_thrust, av_current, throttle) ppr
1836:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATIC(struct transport_tx *trans, struct link_device 
1837:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATIC, 
1842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_rpm);
1843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_thrust);
1844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_current);
1845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
1846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1847:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1849:/home/lsk/paparazzi/var/include/messages.h **** }
1850:/home/lsk/paparazzi/var/include/messages.h **** 
1851:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HIH_STATUS(_trans, _dev, humid, fhumid, ftemp) pprz_msg_send_HIH_STATUS(&((_t
1852:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HIH_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1853:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HIH_STATUS, "HIH_STA
1858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1864:/home/lsk/paparazzi/var/include/messages.h **** }
1865:/home/lsk/paparazzi/var/include/messages.h **** 
1866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMT_STATUS(_trans, _dev, light, f_light) pprz_msg_send_TEMT_STATUS(&((_trans
1867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMT_STATUS(struct transport_tx *trans, struct link_device *dev, u
1868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMT_STATUS, "TEMT_S
1873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _light);
1874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f_light);
1875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1876:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1878:/home/lsk/paparazzi/var/include/messages.h **** }
1879:/home/lsk/paparazzi/var/include/messages.h **** 
1880:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GP2Y_STATUS(_trans, _dev, idensity, density) pprz_msg_send_GP2Y_STATUS(&((_tr
1881:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GP2Y_STATUS(struct transport_tx *trans, struct link_device *dev, u
1882:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GP2Y_STATUS, "GP2Y_S
1887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _idensity);
1888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _density);
1889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1892:/home/lsk/paparazzi/var/include/messages.h **** }
1893:/home/lsk/paparazzi/var/include/messages.h **** 
1894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_SHT_I2C_SERIAL(&
1895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_SERIAL(struct transport_tx *trans, struct link_device *dev
1896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_SERIAL, "SHT
1901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
1902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
1903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1904:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1906:/home/lsk/paparazzi/var/include/messages.h **** }
1907:/home/lsk/paparazzi/var/include/messages.h **** 
1908:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPM(_trans, _dev, ppm_rate, nb_values, values) pprz_msg_send_PPM(&((_trans).t
1909:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPM(struct transport_tx *trans, struct link_device *dev, uint8_t a
1910:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1911:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1912:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1913:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1914:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPM, "PPM");
1915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
1916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1919:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1921:/home/lsk/paparazzi/var/include/messages.h **** }
1922:/home/lsk/paparazzi/var/include/messages.h **** 
1923:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC(_trans, _dev, nb_values, values) pprz_msg_send_RC(&((_trans).trans_tx), &(
1924:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC(struct transport_tx *trans, struct link_device *dev, uint8_t ac
1925:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC, "RC");
1930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1933:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1935:/home/lsk/paparazzi/var/include/messages.h **** }
1936:/home/lsk/paparazzi/var/include/messages.h **** 
1937:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_COMMANDS(_trans, _dev, nb_values, values) pprz_msg_send_COMMANDS(&((_trans).t
1938:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_COMMANDS(struct transport_tx *trans, struct link_device *dev, uint
1939:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_COMMANDS, "COMMANDS"
1944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1947:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1949:/home/lsk/paparazzi/var/include/messages.h **** }
1950:/home/lsk/paparazzi/var/include/messages.h **** 
1951:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FBW_STATUS(_trans, _dev, rc_status, frame_rate, mode, vsupply, current) pprz_
1952:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FBW_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1953:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* m
1954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* msg header ov
1955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+2+4 +2 /* msg header overhead */);
1956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FBW_STATUS, "FBW_STA
1958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rc_status);
1959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _frame_rate);
1960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
1962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
1963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1964:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1966:/home/lsk/paparazzi/var/include/messages.h **** }
1967:/home/lsk/paparazzi/var/include/messages.h **** 
1968:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC(_trans, _dev, mcu, nb_values, values) pprz_msg_send_ADC(&((_trans).trans_
1969:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC(struct transport_tx *trans, struct link_device *dev, uint8_t a
1970:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC, "ADC");
1975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu);
1976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1979:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1981:/home/lsk/paparazzi/var/include/messages.h **** }
1982:/home/lsk/paparazzi/var/include/messages.h **** 
1983:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ACTUATORS(_trans, _dev, nb_values, values) pprz_msg_send_ACTUATORS(&((_trans)
1984:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ACTUATORS(struct transport_tx *trans, struct link_device *dev, uin
1985:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ACTUATORS, "ACTUATOR
1990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1993:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1995:/home/lsk/paparazzi/var/include/messages.h **** }
1996:/home/lsk/paparazzi/var/include/messages.h **** 
1997:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_SHOT(_trans, _dev, photo_nr, lat, lon, alt, hmsl, phi, theta, psi, course,
1998:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_SHOT(struct transport_tx *trans, struct link_device *dev, uint8
1999:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2
2000:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* m
2001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* msg header overhead */);
2002:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2003:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_SHOT, "DC_SHOT");
2004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
2005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
2010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
2011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _psi);
2012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
2013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
2014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
2015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2018:/home/lsk/paparazzi/var/include/messages.h **** }
2019:/home/lsk/paparazzi/var/include/messages.h **** 
2020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_BOARD_RESULTS(_trans, _dev, uart, ppm, nb_servo, servo) pprz_msg_send_TE
2021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_BOARD_RESULTS(struct transport_tx *trans, struct link_device 
2022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 
2023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 +2 /* msg he
2024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_servo*2 +2 /* msg header overhead */);
2025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_BOARD_RESULTS, 
2027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _uart);
2028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm);
2029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_servo
2030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_servo, (void *) _serv
2031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2032:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2034:/home/lsk/paparazzi/var/include/messages.h **** }
2035:/home/lsk/paparazzi/var/include/messages.h **** 
2036:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_MLX_SERIAL(&((_trans
2037:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_SERIAL(struct transport_tx *trans, struct link_device *dev, ui
2038:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
2039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
2040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
2041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_SERIAL, "MLX_SER
2043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
2044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
2045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2048:/home/lsk/paparazzi/var/include/messages.h **** }
2049:/home/lsk/paparazzi/var/include/messages.h **** 
2050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PAYLOAD(_trans, _dev, nb_values, values) pprz_msg_send_PAYLOAD(&((_trans).tra
2051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PAYLOAD(struct transport_tx *trans, struct link_device *dev, uint8
2052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 
2053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 /* msg heade
2054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*1 +2 /* msg header overhead */);
2055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PAYLOAD, "PAYLOAD");
2057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
2058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_values, (void *) _valu
2059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2060:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2062:/home/lsk/paparazzi/var/include/messages.h **** }
2063:/home/lsk/paparazzi/var/include/messages.h **** 
2064:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HTM_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_HTM_STATUS
2065:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HTM_STATUS(struct transport_tx *trans, struct link_device *dev, ui
2066:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HTM_STATUS, "HTM_STA
2071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2076:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2078:/home/lsk/paparazzi/var/include/messages.h **** }
2079:/home/lsk/paparazzi/var/include/messages.h **** 
2080:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5611(_trans, _dev, d1, d2, pressure, temp) pprz_msg_send_BARO_MS5611(&
2081:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5611(struct transport_tx *trans, struct link_device *dev, u
2082:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5611, "BARO_M
2087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d1);
2088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d2);
2089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
2090:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2092:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2093:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2094:/home/lsk/paparazzi/var/include/messages.h **** }
2095:/home/lsk/paparazzi/var/include/messages.h **** 
2096:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MS5611_COEFF(_trans, _dev, c0, c1, c2, c3, c4, c5, c6, c7) pprz_msg_send_MS56
2097:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MS5611_COEFF(struct transport_tx *trans, struct link_device *dev, 
2098:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +
2099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +2 /* msg hea
2100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MS5611_COEFF, "MS561
2103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c0);
2104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c1);
2105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c2);
2106:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c3);
2107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c4);
2108:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c5);
2109:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c6);
2110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c7);
2111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2112:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2114:/home/lsk/paparazzi/var/include/messages.h **** }
2115:/home/lsk/paparazzi/var/include/messages.h **** 
2116:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATMOSPHERE_CHARGE(_trans, _dev, t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) pprz_
2117:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATMOSPHERE_CHARGE(struct transport_tx *trans, struct link_device *
2118:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg
2120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATMOSPHERE_CHARGE, "
2123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t0);
2124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t1);
2125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t2);
2126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t3);
2127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t4);
2128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t5);
2129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t6);
2130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t7);
2131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t8);
2132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t9);
2133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2134:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2136:/home/lsk/paparazzi/var/include/messages.h **** }
2137:/home/lsk/paparazzi/var/include/messages.h **** 
2138:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SOLAR_RADIATION(_trans, _dev, up_t0, dn_t0, up_t1, dn_t1, up_t2, dn_t2, up_t3
2139:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SOLAR_RADIATION(struct transport_tx *trans, struct link_device *de
2140:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
2142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg heade
2143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SOLAR_RADIATION, "SO
2145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t0);
2146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t0);
2147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t1);
2148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t1);
2149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t2);
2150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t2);
2151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t3);
2152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t3);
2153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t4);
2154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t4);
2155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t5);
2156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t5);
2157:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t6);
2158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t6);
2159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t7);
2160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t7);
2161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t8);
2162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t8);
2163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t9);
2164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t9);
2165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2166:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2168:/home/lsk/paparazzi/var/include/messages.h **** }
2169:/home/lsk/paparazzi/var/include/messages.h **** 
2170:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_TA(_trans, _dev, ac_id) pprz_msg_send_TCAS_TA(&((_trans).trans_tx), &((_
2171:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_TA(struct transport_tx *trans, struct link_device *dev, uint8
2172:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2175:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2176:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_TA, "TCAS_TA");
2177:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2178:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2179:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2181:/home/lsk/paparazzi/var/include/messages.h **** }
2182:/home/lsk/paparazzi/var/include/messages.h **** 
2183:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RA(_trans, _dev, ac_id, resolve) pprz_msg_send_TCAS_RA(&((_trans).trans_
2184:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RA(struct transport_tx *trans, struct link_device *dev, uint8
2185:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg hea
2186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg header overhead
2187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1 +2 /* msg header overhead */);
2188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RA, "TCAS_RA");
2190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _resolve);
2192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2193:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2195:/home/lsk/paparazzi/var/include/messages.h **** }
2196:/home/lsk/paparazzi/var/include/messages.h **** 
2197:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RESOLVED(_trans, _dev, ac_id) pprz_msg_send_TCAS_RESOLVED(&((_trans).tra
2198:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RESOLVED(struct transport_tx *trans, struct link_device *dev,
2199:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RESOLVED, "TCAS
2204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2206:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2208:/home/lsk/paparazzi/var/include/messages.h **** }
2209:/home/lsk/paparazzi/var/include/messages.h **** 
2210:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_DEBUG(_trans, _dev, ac_id, tau) pprz_msg_send_TCAS_DEBUG(&((_trans).tran
2211:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
2212:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
2213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
2214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
2215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_DEBUG, "TCAS_DE
2217:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tau);
2219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2220:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2222:/home/lsk/paparazzi/var/include/messages.h **** }
2223:/home/lsk/paparazzi/var/include/messages.h **** 
2224:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_POTENTIAL(_trans, _dev, east, north, alt, speed, climb) pprz_msg_send_POTENTI
2225:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_POTENTIAL(struct transport_tx *trans, struct link_device *dev, uin
2226:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
2227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
2228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
2229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_POTENTIAL, "POTENTIA
2231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
2232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
2233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
2234:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed);
2235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
2236:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2237:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2238:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2239:/home/lsk/paparazzi/var/include/messages.h **** }
2240:/home/lsk/paparazzi/var/include/messages.h **** 
2241:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERTICAL_ENERGY(_trans, _dev, Epot_err, Ekin_err, Etot_err, Edis_err, throttl
2242:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERTICAL_ENERGY(struct transport_tx *trans, struct link_device *de
2243:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERTICAL_ENERGY, "VE
2248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Epot_err);
2249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Ekin_err);
2250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Etot_err);
2251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Edis_err);
2252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
2253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _nav_pitch);
2254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed_sp);
2255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2256:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2258:/home/lsk/paparazzi/var/include/messages.h **** }
2259:/home/lsk/paparazzi/var/include/messages.h **** 
2260:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_TCOUPLE(_trans, _dev, fval0, fval1, fval2, fval3, fref0, fref1, fref2, f
2261:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_TCOUPLE(struct transport_tx *trans, struct link_device *dev, 
2262:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2
2263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2
2264:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2+2 +2 /* msg header overhe
2265:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2266:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_TCOUPLE, "TEMP_
2267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval0);
2268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval1);
2269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval2);
2270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval3);
2271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref0);
2272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref1);
2273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref2);
2274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref3);
2275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val0);
2276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
2277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
2278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
2279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref0);
2280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref1);
2281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref2);
2282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref3);
2283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2284:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2286:/home/lsk/paparazzi/var/include/messages.h **** }
2287:/home/lsk/paparazzi/var/include/messages.h **** 
2288:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_I2
2289:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_STATUS(struct transport_tx *trans, struct link_device *dev
2290:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2292:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2293:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_STATUS, "SHT
2295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2302:/home/lsk/paparazzi/var/include/messages.h **** }
2303:/home/lsk/paparazzi/var/include/messages.h **** 
2304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAMERA_SNAPSHOT(_trans, _dev, snapshot_image_number) pprz_msg_send_CAMERA_SNA
2305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAMERA_SNAPSHOT(struct transport_tx *trans, struct link_device *de
2306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
2307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
2308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
2309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAMERA_SNAPSHOT, "CA
2311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _snapshot_image
2312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2313:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2315:/home/lsk/paparazzi/var/include/messages.h **** }
2316:/home/lsk/paparazzi/var/include/messages.h **** 
2317:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TIMESTAMP(_trans, _dev, timestamp) pprz_msg_send_TIMESTAMP(&((_trans).trans_t
2318:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TIMESTAMP(struct transport_tx *trans, struct link_device *dev, uin
2319:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
2320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
2321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
2322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TIMESTAMP, "TIMESTAM
2324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timestamp);
2325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2326:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2328:/home/lsk/paparazzi/var/include/messages.h **** }
2329:/home/lsk/paparazzi/var/include/messages.h **** 
2330:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_FLOAT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, es
2331:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_FLOAT(struct transport_tx *trans, struct link_device
2332:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* m
2335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_FLOAT,
2337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2356:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p_d);
2359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q_d);
2360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r_d);
2361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2362:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2364:/home/lsk/paparazzi/var/include/messages.h **** }
2365:/home/lsk/paparazzi/var/include/messages.h **** 
2366:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_SCALED(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_SCALED(&((_t
2367:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_SCALED(struct transport_tx *trans, struct link_device *de
2368:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_SCALED, "IM
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2377:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2379:/home/lsk/paparazzi/var/include/messages.h **** }
2380:/home/lsk/paparazzi/var/include/messages.h **** 
2381:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_SCALED(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_SCALED(&((
2382:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_SCALED(struct transport_tx *trans, struct link_device *d
2383:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_SCALED, "I
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
2389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
2390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
2391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2392:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2394:/home/lsk/paparazzi/var/include/messages.h **** }
2395:/home/lsk/paparazzi/var/include/messages.h **** 
2396:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_SCALED(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_SCALED(&((_tra
2397:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_SCALED(struct transport_tx *trans, struct link_device *dev
2398:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2401:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SCALED, "IMU
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
2404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
2405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
2406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2407:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2409:/home/lsk/paparazzi/var/include/messages.h **** }
2410:/home/lsk/paparazzi/var/include/messages.h **** 
2411:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER(_trans, _dev, phi, theta, psi, measure_phi, measure_theta, measure_psi
2412:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER(struct transport_tx *trans, struct link_device *dev, uint8_
2413:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER, "FILTER");
2418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_phi);
2422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_theta);
2423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_psi);
2424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_phi);
2425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_theta
2426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_psi);
2427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_phi)
2428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_thet
2429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_psi)
2430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
2431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
2432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
2433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2434:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2435:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2436:/home/lsk/paparazzi/var/include/messages.h **** }
2437:/home/lsk/paparazzi/var/include/messages.h **** 
2438:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER2(_trans, _dev, px, py, pz, gsx, gsy, gsz) pprz_msg_send_FILTER2(&((_tr
2439:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER2(struct transport_tx *trans, struct link_device *dev, uint8
2440:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER2, "FILTER2");
2445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _px);
2446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _py);
2447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pz);
2448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsx);
2449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsy);
2450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsz);
2451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2452:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2454:/home/lsk/paparazzi/var/include/messages.h **** }
2455:/home/lsk/paparazzi/var/include/messages.h **** 
2456:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RATE_LOOP(_trans, _dev, sp_p, sp_q, sp_r, ref_p, ref_q, ref_r, refdot_p, refd
2457:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RATE_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2458:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header 
2461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RATE_LOOP, "RATE_LOO
2463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_p);
2464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_q);
2465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_r);
2466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_p);
2470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_q);
2471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_r);
2472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_p);
2473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_q);
2474:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_r);
2475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_p);
2476:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_q);
2477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_r);
2478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_p);
2479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_q);
2480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_r);
2481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2483:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2485:/home/lsk/paparazzi/var/include/messages.h **** }
2486:/home/lsk/paparazzi/var/include/messages.h **** 
2487:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_ALIGNER(_trans, _dev, lp_gp, lp_gq, lp_gr, gp, gq, gr, noise, cnt, sta
2488:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_ALIGNER(struct transport_tx *trans, struct link_device *dev
2489:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1
2490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1 +2 /* msg h
2491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
2492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_ALIGNER, "FIL
2494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gp);
2495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gq);
2496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gr);
2497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _noise);
2501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cnt);
2502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2504:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2506:/home/lsk/paparazzi/var/include/messages.h **** }
2507:/home/lsk/paparazzi/var/include/messages.h **** 
2508:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_MS45XX(_trans, _dev, diffPress, temperature, airspeed) pprz_msg_send
2509:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_MS45XX(struct transport_tx *trans, struct link_device *de
2510:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
2511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
2512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
2513:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_MS45XX, "AI
2515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diffPress);
2516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temperature);
2517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
2518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2519:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2521:/home/lsk/paparazzi/var/include/messages.h **** }
2522:/home/lsk/paparazzi/var/include/messages.h **** 
2523:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_COR(_trans, _dev, mphi, mtheta, mpsi, qi, qx, qy, qz) pprz_msg_send_FI
2524:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_COR(struct transport_tx *trans, struct link_device *dev, ui
2525:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_COR, "FILTER_
2530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mphi);
2531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mtheta);
2532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mpsi);
2533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qi);
2534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qx);
2535:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qy);
2536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qz);
2537:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2538:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2540:/home/lsk/paparazzi/var/include/messages.h **** }
2541:/home/lsk/paparazzi/var/include/messages.h **** 
2542:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_INT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, est_
2543:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_INT(struct transport_tx *trans, struct link_device *
2544:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg hea
2547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_INT, "
2549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2571:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2573:/home/lsk/paparazzi/var/include/messages.h **** }
2574:/home/lsk/paparazzi/var/include/messages.h **** 
2575:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_INT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_th
2576:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_INT(struct transport_tx *trans, struct link_devi
2577:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2581:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_IN
2582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2583:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2595:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2597:/home/lsk/paparazzi/var/include/messages.h **** }
2598:/home/lsk/paparazzi/var/include/messages.h **** 
2599:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_FLOAT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_
2600:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_FLOAT(struct transport_tx *trans, struct link_de
2601:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_FL
2606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2619:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2621:/home/lsk/paparazzi/var/include/messages.h **** }
2622:/home/lsk/paparazzi/var/include/messages.h **** 
2623:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CMD(_trans, _dev, cmd_roll, cmd_pitch, cmd_yaw, cmd_thrust) pprz_m
2624:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CMD(struct transport_tx *trans, struct link_device *dev
2625:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CMD, "ROT
2630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2635:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2637:/home/lsk/paparazzi/var/include/messages.h **** }
2638:/home/lsk/paparazzi/var/include/messages.h **** 
2639:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_INT(_trans, _dev, sp_x, sp_y, ref_x, ref_y, est_x, est_y) pprz_msg
2640:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_INT(struct transport_tx *trans, struct link_device *dev
2641:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_INT, "GUI
2646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2649:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2653:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2655:/home/lsk/paparazzi/var/include/messages.h **** }
2656:/home/lsk/paparazzi/var/include/messages.h **** 
2657:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERT_LOOP(_trans, _dev, z_sp, zd_sp, est_z, est_zd, est_zdd, ref_z, ref_zd, r
2658:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERT_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2659:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERT_LOOP, "VERT_LOO
2664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
2665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _zd_sp);
2666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
2667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zd);
2668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zdd);
2669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
2670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
2671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zdd);
2672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_inv_m);
2673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_cov);
2674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_meas);
2675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err);
2676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_cmd);
2677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_cmd);
2678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2680:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2682:/home/lsk/paparazzi/var/include/messages.h **** }
2683:/home/lsk/paparazzi/var/include/messages.h **** 
2684:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HOVER_LOOP(_trans, _dev, sp_x, sp_y, est_x, est_y, est_xd, est_yd, est_xdd, e
2685:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HOVER_LOOP(struct transport_tx *trans, struct link_device *dev, ui
2686:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
2689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HOVER_LOOP, "HOVER_L
2691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xd);
2696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_yd);
2697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xdd);
2698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_ydd);
2699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_x);
2700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_y);
2701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_xd);
2702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_yd);
2703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_x);
2704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_y);
2705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_x);
2706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_y);
2707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_heading);
2708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2709:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2711:/home/lsk/paparazzi/var/include/messages.h **** }
2712:/home/lsk/paparazzi/var/include/messages.h **** 
2713:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_FP(_trans, _dev, east, north, up, veast, vnorth, vup, phi, theta, 
2714:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_FP(struct transport_tx *trans, struct link_device *dev,
2715:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2
2717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2 +2 /* msg header overhead
2718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_FP, "ROTO
2720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
2721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
2722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
2723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _veast);
2724:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vnorth);
2725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vup);
2726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_east);
2730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_north);
2731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_up);
2732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_psi);
2733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _thrust);
2734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
2735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2738:/home/lsk/paparazzi/var/include/messages.h **** }
2739:/home/lsk/paparazzi/var/include/messages.h **** 
2740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_ADC(_trans, _dev, temp1, temp2, temp3) pprz_msg_send_TEMP_ADC(&((_trans)
2741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_ADC(struct transport_tx *trans, struct link_device *dev, uint
2742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_ADC, "TEMP_ADC"
2747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp1);
2748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp2);
2749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp3);
2750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2753:/home/lsk/paparazzi/var/include/messages.h **** }
2754:/home/lsk/paparazzi/var/include/messages.h **** 
2755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_REF_INT(_trans, _dev, sp_x, ref_x, sp_xd, ref_xd, ref_xdd, sp_y, r
2756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_REF_INT(struct transport_tx *trans, struct link_device 
2757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
2759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_REF_INT, 
2762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_xd);
2765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xd);
2766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xdd);
2767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_yd);
2770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_yd);
2771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_ydd);
2772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2773:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2775:/home/lsk/paparazzi/var/include/messages.h **** }
2776:/home/lsk/paparazzi/var/include/messages.h **** 
2777:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_TUNE_HOVER(_trans, _dev, rc_roll, rc_pitch, rc_yaw, cmd_roll, cmd_
2778:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_TUNE_HOVER(struct transport_tx *trans, struct link_devi
2779:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4
2780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg
2781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_TUNE_HOVE
2784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_roll);
2785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_pitch);
2786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_yaw);
2787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
2792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
2793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
2794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2797:/home/lsk/paparazzi/var/include/messages.h **** }
2798:/home/lsk/paparazzi/var/include/messages.h **** 
2799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_Z(_trans, _dev, baro_z, ins_z, ins_zd, ins_zdd) pprz_msg_send_INS_Z(&((_t
2800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_Z(struct transport_tx *trans, struct link_device *dev, uint8_t
2801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_Z, "INS_Z");
2806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro_z);
2807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_z);
2808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zd);
2809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zdd);
2810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2813:/home/lsk/paparazzi/var/include/messages.h **** }
2814:/home/lsk/paparazzi/var/include/messages.h **** 
2815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PCAP01_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_PCAP01_
2816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PCAP01_STATUS(struct transport_tx *trans, struct link_device *dev,
2817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PCAP01_STATUS, "PCAP
2822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _ihumid);
2823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itemp);
2824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2827:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2829:/home/lsk/paparazzi/var/include/messages.h **** }
2830:/home/lsk/paparazzi/var/include/messages.h **** 
2831:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GEIGER_COUNTER(_trans, _dev, tube1, tube2, vsupply) pprz_msg_send_GEIGER_COUN
2832:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GEIGER_COUNTER(struct transport_tx *trans, struct link_device *dev
2833:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2 +2 /* msg h
2834:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2 +2 /* msg header overhe
2835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2 +2 /* msg header overhead */);
2836:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2837:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GEIGER_COUNTER, "GEI
2838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tube1);
2839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tube2);
2840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
2841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2842:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2844:/home/lsk/paparazzi/var/include/messages.h **** }
2845:/home/lsk/paparazzi/var/include/messages.h **** 
2846:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_REF(_trans, _dev, ecef_x0, ecef_y0, ecef_z0, lat0, lon0, alt0, hmsl0, bar
2847:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_REF(struct transport_tx *trans, struct link_device *dev, uint8
2848:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
2849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
2850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_REF, "INS_REF");
2853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_x0);
2854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_y0);
2855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_z0);
2856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat0);
2857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon0);
2858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt0);
2859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl0);
2860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro_qfe);
2861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2864:/home/lsk/paparazzi/var/include/messages.h **** }
2865:/home/lsk/paparazzi/var/include/messages.h **** 
2866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_INT(_trans, _dev, ecef_x, ecef_y, ecef_z, lat, lon, alt, hmsl, ecef_xd, e
2867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_INT(struct transport_tx *trans, struct link_device *dev, uint8
2868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+2+1
2870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+2+1+1 +2 /* msg header overhe
2871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_INT, "GPS_INT");
2873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_x);
2874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_y);
2875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_z);
2876:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2878:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2879:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2880:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_xd);
2881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_yd);
2882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_zd);
2883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pacc);
2884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sacc);
2885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tow);
2886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pdop);
2887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numsv);
2888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _fix);
2889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2892:/home/lsk/paparazzi/var/include/messages.h **** }
2893:/home/lsk/paparazzi/var/include/messages.h **** 
2894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_EULER_INT(_trans, _dev, imu_phi, imu_theta, imu_psi, body_phi, body_thet
2895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_EULER_INT(struct transport_tx *trans, struct link_device *dev
2896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_EULER_INT, "AHR
2901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_phi);
2902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_theta);
2903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_psi);
2904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
2905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
2906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
2907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2910:/home/lsk/paparazzi/var/include/messages.h **** }
2911:/home/lsk/paparazzi/var/include/messages.h **** 
2912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_QUAT_INT(_trans, _dev, weight, imu_qi, imu_qx, imu_qy, imu_qz, body_qi, 
2913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_QUAT_INT(struct transport_tx *trans, struct link_device *dev,
2914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
2916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_QUAT_INT, "AHRS
2919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _weight);
2920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qi);
2921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qx);
2922:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qy);
2923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qz);
2924:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qi);
2925:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qx);
2926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qy);
2927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qz);
2928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2929:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2931:/home/lsk/paparazzi/var/include/messages.h **** }
2932:/home/lsk/paparazzi/var/include/messages.h **** 
2933:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_RMAT_INT(_trans, _dev, imu_m00, imu_m01, imu_m02, imu_m10, imu_m11, imu_
2934:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_RMAT_INT(struct transport_tx *trans, struct link_device *dev,
2935:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2937:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header ov
2938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2939:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_RMAT_INT, "AHRS
2940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m00);
2941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m01);
2942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m02);
2943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m10);
2944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m11);
2945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m12);
2946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m20);
2947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m21);
2948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m22);
2949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m00);
2950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m01);
2951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m02);
2952:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m10);
2953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m11);
2954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m12);
2955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m20);
2956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m21);
2957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m22);
2958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2959:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2961:/home/lsk/paparazzi/var/include/messages.h **** }
2962:/home/lsk/paparazzi/var/include/messages.h **** 
2963:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_NAV_STATUS(_trans, _dev, block_time, stage_time, dist_home, dist_w
2964:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_NAV_STATUS(struct transport_tx *trans, struct link_devi
2965:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+1+1+1 +2 
2966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+1+1+1 +2 /* msg heade
2967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+1+1+1 +2 /* msg header overhead */);
2968:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_NAV_STATU
2970:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
2971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
2972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
2973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
2974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
2975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
2976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _horizontal_mode
2977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2978:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2980:/home/lsk/paparazzi/var/include/messages.h **** }
2981:/home/lsk/paparazzi/var/include/messages.h **** 
2982:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_RADIO_CONTROL(_trans, _dev, roll, pitch, yaw, throttle, mode, kill
2983:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_RADIO_CONTROL(struct transport_tx *trans, struct link_d
2984:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+1 +2 
2985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+1 +2 /* msg heade
2986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+1 +2 /* msg header overhead */);
2987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_RADIO_CON
2989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _roll);
2990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pitch);
2991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _yaw);
2992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
2993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
2994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _kill);
2995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2997:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2999:/home/lsk/paparazzi/var/include/messages.h **** }
3000:/home/lsk/paparazzi/var/include/messages.h **** 
3001:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VFF_EXTENDED(_trans, _dev, meas_baro, meas_alt, z, zd, zdd, bias, offset) ppr
3002:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VFF_EXTENDED(struct transport_tx *trans, struct link_device *dev, 
3003:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VFF_EXTENDED, "VFF_E
3008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
3009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_alt);
3010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
3011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zd);
3012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zdd);
3013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias);
3014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _offset);
3015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3018:/home/lsk/paparazzi/var/include/messages.h **** }
3019:/home/lsk/paparazzi/var/include/messages.h **** 
3020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VFF(_trans, _dev, measure, z, zd, bias, Pzz, Pzdzd, Pbb) pprz_msg_send_VFF(&(
3021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VFF(struct transport_tx *trans, struct link_device *dev, uint8_t a
3022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VFF, "VFF");
3027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _measure);
3028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
3029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zd);
3030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias);
3031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pzz);
3032:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pzdzd);
3033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pbb);
3034:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3035:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3036:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3037:/home/lsk/paparazzi/var/include/messages.h **** }
3038:/home/lsk/paparazzi/var/include/messages.h **** 
3039:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GEO_MAG(_trans, _dev, Hx, Hy, Hz) pprz_msg_send_GEO_MAG(&((_trans).trans_tx),
3040:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GEO_MAG(struct transport_tx *trans, struct link_device *dev, uint8
3041:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GEO_MAG, "GEO_MAG");
3046:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hx);
3047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hy);
3048:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hz);
3049:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3050:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3051:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3052:/home/lsk/paparazzi/var/include/messages.h **** }
3053:/home/lsk/paparazzi/var/include/messages.h **** 
3054:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF(_trans, _dev, x, y, xd, yd, xdd, ydd) pprz_msg_send_HFF(&((_trans).trans_
3055:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF(struct transport_tx *trans, struct link_device *dev, uint8_t a
3056:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF, "HFF");
3061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
3062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
3063:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xd);
3064:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yd);
3065:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xdd);
3066:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ydd);
3067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3068:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3070:/home/lsk/paparazzi/var/include/messages.h **** }
3071:/home/lsk/paparazzi/var/include/messages.h **** 
3072:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF_DBG(_trans, _dev, x_measure, y_measure, xd_measure, yd_measure, Pxx, Pyy,
3073:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF_DBG(struct transport_tx *trans, struct link_device *dev, uint8
3074:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
3075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
3076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3078:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF_DBG, "HFF_DBG");
3079:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_measure);
3080:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_measure);
3081:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xd_measure);
3082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yd_measure);
3083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pxx);
3084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pyy);
3085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pxdxd);
3086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pydyd);
3087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3088:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3090:/home/lsk/paparazzi/var/include/messages.h **** }
3091:/home/lsk/paparazzi/var/include/messages.h **** 
3092:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF_GPS(_trans, _dev, lag_cnt, lag_cnt_err, save_cnt) pprz_msg_send_HFF_GPS(&
3093:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF_GPS(struct transport_tx *trans, struct link_device *dev, uint8
3094:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
3095:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
3096:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
3097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF_GPS, "HFF_GPS");
3099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _lag_cnt);
3100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lag_cnt_err);
3101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _save_cnt);
3102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3103:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3105:/home/lsk/paparazzi/var/include/messages.h **** }
3106:/home/lsk/paparazzi/var/include/messages.h **** 
3107:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_SONAR(_trans, _dev, distance, var) pprz_msg_send_INS_SONAR(&((_trans).tra
3108:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_SONAR(struct transport_tx *trans, struct link_device *dev, uin
3109:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
3110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
3111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
3112:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_SONAR, "INS_SONA
3114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _distance);
3115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _var);
3116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3117:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3119:/home/lsk/paparazzi/var/include/messages.h **** }
3120:/home/lsk/paparazzi/var/include/messages.h **** 
3121:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CAM(_trans, _dev, tilt, pan) pprz_msg_send_ROTORCRAFT_CAM(&((_tran
3122:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CAM(struct transport_tx *trans, struct link_device *dev
3123:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
3124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
3125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
3126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CAM, "ROT
3128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _tilt);
3129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pan);
3130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3131:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3133:/home/lsk/paparazzi/var/include/messages.h **** }
3134:/home/lsk/paparazzi/var/include/messages.h **** 
3135:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_REF_QUAT(_trans, _dev, ref_qi, ref_qx, ref_qy, ref_qz, body_qi, body_qx,
3136:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_REF_QUAT(struct transport_tx *trans, struct link_device *dev,
3137:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
3138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
3139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_REF_QUAT, "AHRS
3142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qi);
3143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qx);
3144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qy);
3145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qz);
3146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qi);
3147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qx);
3148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qy);
3149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qz);
3150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3151:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3153:/home/lsk/paparazzi/var/include/messages.h **** }
3154:/home/lsk/paparazzi/var/include/messages.h **** 
3155:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_XHAT(_trans, _dev, c, s1, s2, s3, p, q, r, bp, bq, br) pprz_msg_send_EKF
3156:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_XHAT(struct transport_tx *trans, struct link_device *dev, uin
3157:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_XHAT, "EKF7_XHA
3162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s1);
3164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s2);
3165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s3);
3166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3172:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3173:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3175:/home/lsk/paparazzi/var/include/messages.h **** }
3176:/home/lsk/paparazzi/var/include/messages.h **** 
3177:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_Y(_trans, _dev, timecount, g1, g2, g3, m1, m2, m3, p, q, r) pprz_msg_sen
3178:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_Y(struct transport_tx *trans, struct link_device *dev, uint8_
3179:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
3180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4 +2 /* msg
3181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_Y, "EKF7_Y");
3184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _timecount);
3185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g1);
3186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g2);
3187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g3);
3188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m1);
3189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m2);
3190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m3);
3191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3193:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3195:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3196:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3197:/home/lsk/paparazzi/var/include/messages.h **** }
3198:/home/lsk/paparazzi/var/include/messages.h **** 
3199:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_P_DIAG(_trans, _dev, c, s1, s2, s3, p, q, r, bp, bq, br) pprz_msg_send_E
3200:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_P_DIAG(struct transport_tx *trans, struct link_device *dev, u
3201:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_P_DIAG, "EKF7_P
3206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s1);
3208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s2);
3209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s3);
3210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3212:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3217:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3219:/home/lsk/paparazzi/var/include/messages.h **** }
3220:/home/lsk/paparazzi/var/include/messages.h **** 
3221:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_EULER(_trans, _dev, phi, theta, psi) pprz_msg_send_AHRS_EULER(&((_trans)
3222:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_EULER(struct transport_tx *trans, struct link_device *dev, ui
3223:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_EULER, "AHRS_EU
3228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3232:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3234:/home/lsk/paparazzi/var/include/messages.h **** }
3235:/home/lsk/paparazzi/var/include/messages.h **** 
3236:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_MEASUREMENT_EULER(_trans, _dev, phi, theta, psi) pprz_msg_send_AHRS_MEAS
3237:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_MEASUREMENT_EULER(struct transport_tx *trans, struct link_dev
3238:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3239:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3240:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_MEASUREMENT_EUL
3243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3247:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3249:/home/lsk/paparazzi/var/include/messages.h **** }
3250:/home/lsk/paparazzi/var/include/messages.h **** 
3251:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WT(_trans, _dev, rpm) pprz_msg_send_WT(&((_trans).trans_tx), &((_dev).device)
3252:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WT(struct transport_tx *trans, struct link_device *dev, uint8_t ac
3253:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WT, "WT");
3258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
3259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3260:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3262:/home/lsk/paparazzi/var/include/messages.h **** }
3263:/home/lsk/paparazzi/var/include/messages.h **** 
3264:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CSC_CAN_DEBUG(_trans, _dev, err_nb, err_code) pprz_msg_send_CSC_CAN_DEBUG(&((
3265:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CSC_CAN_DEBUG(struct transport_tx *trans, struct link_device *dev,
3266:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
3267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
3268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
3269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CSC_CAN_DEBUG, "CSC_
3271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _err_nb);
3272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _err_code);
3273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3274:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3276:/home/lsk/paparazzi/var/include/messages.h **** }
3277:/home/lsk/paparazzi/var/include/messages.h **** 
3278:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CSC_CAN_MSG(_trans, _dev, frame, id, data_a, data_b) pprz_msg_send_CSC_CAN_MS
3279:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CSC_CAN_MSG(struct transport_tx *trans, struct link_device *dev, u
3280:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CSC_CAN_MSG, "CSC_CA
3285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _frame);
3286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _id);
3287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _data_a);
3288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _data_b);
3289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3292:/home/lsk/paparazzi/var/include/messages.h **** }
3293:/home/lsk/paparazzi/var/include/messages.h **** 
3294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_GYRO_BIAS_INT(_trans, _dev, bp, bq, br) pprz_msg_send_AHRS_GYRO_BIAS_INT
3295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_GYRO_BIAS_INT(struct transport_tx *trans, struct link_device 
3296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_GYRO_BIAS_INT, 
3301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
3302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
3303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
3304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3307:/home/lsk/paparazzi/var/include/messages.h **** }
3308:/home/lsk/paparazzi/var/include/messages.h **** 
3309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLOW_AP_OTF(_trans, _dev, counter, velocity, a_attack, a_sidesl, altitude, ch
3310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLOW_AP_OTF(struct transport_tx *trans, struct link_device *dev, u
3311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+2+2+4+1 +2 /*
3312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+2+2+4+1 +2 /* msg header 
3313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+2+2+4+1 +2 /* msg header overhead */);
3314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLOW_AP_OTF, "FLOW_A
3316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _counter);
3317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _velocity);
3318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a_attack);
3319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a_sidesl);
3320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _altitude);
3321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _checksum);
3322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3323:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3325:/home/lsk/paparazzi/var/include/messages.h **** }
3326:/home/lsk/paparazzi/var/include/messages.h **** 
3327:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FMS_TIME(_trans, _dev, tv_sec, tv_nsec, delay_ns) pprz_msg_send_FMS_TIME(&((_
3328:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FMS_TIME(struct transport_tx *trans, struct link_device *dev, uint
3329:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FMS_TIME, "FMS_TIME"
3334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tv_sec);
3335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tv_nsec);
3336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _delay_ns);
3337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3338:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3340:/home/lsk/paparazzi/var/include/messages.h **** }
3341:/home/lsk/paparazzi/var/include/messages.h **** 
3342:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_LOADCELL(_trans, _dev, load) pprz_msg_send_LOADCELL(&((_trans).trans_tx), &((
3343:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_LOADCELL(struct transport_tx *trans, struct link_device *dev, uint
3344:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_LOADCELL, "LOADCELL"
3349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _load);
3350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3353:/home/lsk/paparazzi/var/include/messages.h **** }
3354:/home/lsk/paparazzi/var/include/messages.h **** 
3355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLA_DEBUG(_trans, _dev, past_input, imu_rate, desired_accel, motor_command) p
3356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLA_DEBUG(struct transport_tx *trans, struct link_device *dev, uin
3357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLA_DEBUG, "FLA_DEBU
3362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _past_input);
3363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _imu_rate);
3364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _desired_accel);
3365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _motor_command);
3366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3367:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3369:/home/lsk/paparazzi/var/include/messages.h **** }
3370:/home/lsk/paparazzi/var/include/messages.h **** 
3371:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_FAULT_STATUS(_trans, _dev, nb_raw_fault, raw_fault) pprz_msg_send_BLMC_F
3372:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_FAULT_STATUS(struct transport_tx *trans, struct link_device *
3373:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_raw_fault*2 
3374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_raw_fault*2 +2 /* msg he
3375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_raw_fault*2 +2 /* msg header overhead */);
3376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_FAULT_STATUS, "
3378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_raw_f
3379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_raw_fault, (void *) _
3380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3381:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3383:/home/lsk/paparazzi/var/include/messages.h **** }
3384:/home/lsk/paparazzi/var/include/messages.h **** 
3385:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_SPEEDS(_trans, _dev, nb_speeds, speeds) pprz_msg_send_BLMC_SPEEDS(&((_tr
3386:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_SPEEDS(struct transport_tx *trans, struct link_device *dev, u
3387:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_speeds*2 +2 
3388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_speeds*2 +2 /* msg heade
3389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_speeds*2 +2 /* msg header overhead */);
3390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_SPEEDS, "BLMC_S
3392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_speed
3393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_speeds, (void *) _spee
3394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3395:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3397:/home/lsk/paparazzi/var/include/messages.h **** }
3398:/home/lsk/paparazzi/var/include/messages.h **** 
3399:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_DEBUG_QUAT(_trans, _dev, jqi, jqx, jqy, jqz, xqi, xqx, xqy, xqz, mqi, mq
3400:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_DEBUG_QUAT(struct transport_tx *trans, struct link_device *de
3401:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
3403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_DEBUG_QUAT, "AH
3406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqi);
3407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqx);
3408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqy);
3409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqz);
3410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqi);
3411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqx);
3412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqy);
3413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqz);
3414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqi);
3415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqx);
3416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqy);
3417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqz);
3418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3419:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3421:/home/lsk/paparazzi/var/include/messages.h **** }
3422:/home/lsk/paparazzi/var/include/messages.h **** 
3423:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_BUSVOLTS(_trans, _dev, nb_busvolts, busvolts) pprz_msg_send_BLMC_BUSVOLT
3424:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_BUSVOLTS(struct transport_tx *trans, struct link_device *dev,
3425:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_busvolts*2 +
3426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_busvolts*2 +2 /* msg hea
3427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_busvolts*2 +2 /* msg header overhead */);
3428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_BUSVOLTS, "BLMC
3430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_busvo
3431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_busvolts, (void *) _b
3432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3433:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3434:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3435:/home/lsk/paparazzi/var/include/messages.h **** }
3436:/home/lsk/paparazzi/var/include/messages.h **** 
3437:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYSTEM_STATUS(_trans, _dev, csc1_loop_count, csc1_msg_count, csc2_loop_count,
3438:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYSTEM_STATUS(struct transport_tx *trans, struct link_device *dev,
3439:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1 +
3440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1 +2 /* msg hea
3441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
3442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYSTEM_STATUS, "SYST
3444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc1_loop_coun
3445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc1_msg_count
3446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc2_loop_coun
3447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc2_msg_count
3448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _can_rx_err);
3449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _can_tx_err);
3450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_parser_err)
3451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _system_fault);
3452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3453:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3455:/home/lsk/paparazzi/var/include/messages.h **** }
3456:/home/lsk/paparazzi/var/include/messages.h **** 
3457:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DYNAMIXEL(_trans, _dev, left_wing, right_wing, left_wing_flag, right_wing_fla
3458:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DYNAMIXEL(struct transport_tx *trans, struct link_device *dev, uin
3459:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+1+1+4+4+4+4+4
3460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+1+1+4+4+4+4+4 +2 /* msg h
3461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+1+1+4+4+4+4+4 +2 /* msg header overhead */);
3462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DYNAMIXEL, "DYNAMIXE
3464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _left_wing);
3465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _right_wing);
3466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _left_wing_flag)
3467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _right_wing_flag
3468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _invalid_positi
3469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timeout_events
3470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
3471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fuse_rotation_a
3472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fuse_rotation_r
3473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3474:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3476:/home/lsk/paparazzi/var/include/messages.h **** }
3477:/home/lsk/paparazzi/var/include/messages.h **** 
3478:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RMAT_DEBUG(_trans, _dev, a, b, c, d, e, f, g, h, i) pprz_msg_send_RMAT_DEBUG(
3479:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RMAT_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
3480:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RMAT_DEBUG, "RMAT_DE
3485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _a);
3486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _b);
3487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3488:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _d);
3489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _e);
3490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f);
3491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g);
3492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _h);
3493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _i);
3494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3495:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3497:/home/lsk/paparazzi/var/include/messages.h **** }
3498:/home/lsk/paparazzi/var/include/messages.h **** 
3499:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SIMPLE_COMMANDS(_trans, _dev, roll, pitch, yaw) pprz_msg_send_SIMPLE_COMMANDS
3500:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SIMPLE_COMMANDS(struct transport_tx *trans, struct link_device *de
3501:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
3502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
3503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
3504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SIMPLE_COMMANDS, "SI
3506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _roll);
3507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pitch);
3508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _yaw);
3509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3510:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3512:/home/lsk/paparazzi/var/include/messages.h **** }
3513:/home/lsk/paparazzi/var/include/messages.h **** 
3514:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VANE_SENSOR(_trans, _dev, alpha, alpha_filtered, alpha_target, alpha_vane_err
3515:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VANE_SENSOR(struct transport_tx *trans, struct link_device *dev, u
3516:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VANE_SENSOR, "VANE_S
3521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha);
3522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_filtered)
3523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_target);
3524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_vane_erro
3525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha2);
3526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta);
3527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_filtered);
3528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_target);
3529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_vane_error
3530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta2);
3531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3532:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3534:/home/lsk/paparazzi/var/include/messages.h **** }
3535:/home/lsk/paparazzi/var/include/messages.h **** 
3536:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CONTROLLER_GAINS(_trans, _dev, roll_gamma_p, roll_gamma_d, roll_gamma_i, pitc
3537:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CONTROLLER_GAINS(struct transport_tx *trans, struct link_device *d
3538:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CONTROLLER_GAINS, "C
3543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_p);
3544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_d);
3545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_i);
3546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_p);
3547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_d);
3548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_i);
3549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_p);
3550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_d);
3551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_i);
3552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3553:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3555:/home/lsk/paparazzi/var/include/messages.h **** }
3556:/home/lsk/paparazzi/var/include/messages.h **** 
3557:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF(_trans, _dev, phi, theta, psi, qi, qx, qy, qz, p, q, r, ax, ay, az, 
3558:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF(struct transport_tx *trans, struct link_device *dev, uint
3559:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
3562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF, "AHRS_LKF"
3564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi);
3568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx);
3569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy);
3570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz);
3571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
3578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
3579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
3580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3581:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3583:/home/lsk/paparazzi/var/include/messages.h **** }
3584:/home/lsk/paparazzi/var/include/messages.h **** 
3585:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_DEBUG(_trans, _dev, phi_err, theta_err, psi_err, bp, bq, br, quat_no
3586:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_DEBUG(struct transport_tx *trans, struct link_device *dev
3587:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
3590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_DEBUG, "AHR
3592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_err);
3593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_err);
3594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_err);
3595:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3597:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3598:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat_norm);
3599:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_accel);
3600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_accel);
3601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_cov);
3602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_cov);
3603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_cov);
3604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_cov);
3605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_cov);
3606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_cov);
3607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3610:/home/lsk/paparazzi/var/include/messages.h **** }
3611:/home/lsk/paparazzi/var/include/messages.h **** 
3612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_ACC_DBG(_trans, _dev, qi_err, qx_err, qy_err, qz_err, bp_err, bq_err
3613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_ACC_DBG(struct transport_tx *trans, struct link_device *d
3614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_ACC_DBG, "A
3619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi_err);
3620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx_err);
3621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy_err);
3622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz_err);
3623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_err);
3624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_err);
3625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_err);
3626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3627:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3629:/home/lsk/paparazzi/var/include/messages.h **** }
3630:/home/lsk/paparazzi/var/include/messages.h **** 
3631:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_MAG_DBG(_trans, _dev, qi_err, qx_err, qy_err, qz_err, bp_err, bq_err
3632:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_MAG_DBG(struct transport_tx *trans, struct link_device *d
3633:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_MAG_DBG, "A
3638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi_err);
3639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx_err);
3640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy_err);
3641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz_err);
3642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_err);
3643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_err);
3644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_err);
3645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3646:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3648:/home/lsk/paparazzi/var/include/messages.h **** }
3649:/home/lsk/paparazzi/var/include/messages.h **** 
3650:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NPS_SENSORS_SCALED(_trans, _dev, acc_x, acc_y, acc_z, mag_x, mag_y, mag_z) pp
3651:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NPS_SENSORS_SCALED(struct transport_tx *trans, struct link_device 
3652:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NPS_SENSORS_SCALED, 
3657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_x);
3658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_y);
3659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_z);
3660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_x);
3661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_y);
3662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_z);
3663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3664:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3666:/home/lsk/paparazzi/var/include/messages.h **** }
3667:/home/lsk/paparazzi/var/include/messages.h **** 
3668:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS(_trans, _dev, ins_x, ins_y, ins_z, ins_xd, ins_yd, ins_zd, ins_xdd, ins_y
3669:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS(struct transport_tx *trans, struct link_device *dev, uint8_t a
3670:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS, "INS");
3675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_x);
3676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_y);
3677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_z);
3678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_xd);
3679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_yd);
3680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zd);
3681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_xdd);
3682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_ydd);
3683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zdd);
3684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3685:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3686:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3687:/home/lsk/paparazzi/var/include/messages.h **** }
3688:/home/lsk/paparazzi/var/include/messages.h **** 
3689:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_ERROR(_trans, _dev, x_position, y_position, z_position, x_velocity, y_vel
3690:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_ERROR(struct transport_tx *trans, struct link_device *dev, uin
3691:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_ERROR, "GPS_ERRO
3696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_position);
3697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_position);
3698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_position);
3699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_velocity);
3700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_velocity);
3701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_velocity);
3702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3703:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3705:/home/lsk/paparazzi/var/include/messages.h **** }
3706:/home/lsk/paparazzi/var/include/messages.h **** 
3707:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO(&((_trans).trans_tx
3708:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO(struct transport_tx *trans, struct link_device *dev, uint
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO, "IMU_GYRO"
3714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gp);
3715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gq);
3716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gr);
3717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3718:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3720:/home/lsk/paparazzi/var/include/messages.h **** }
3721:/home/lsk/paparazzi/var/include/messages.h **** 
3722:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG(&((_trans).trans_tx),
3723:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG(struct transport_tx *trans, struct link_device *dev, uint8
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG, "IMU_MAG");
3729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
3730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
3731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
3732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3733:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3735:/home/lsk/paparazzi/var/include/messages.h **** }
3736:/home/lsk/paparazzi/var/include/messages.h **** 
3737:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL(&((_trans).trans_
3738:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL(struct transport_tx *trans, struct link_device *dev, uin
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3740:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3742:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL, "IMU_ACCE
3744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3748:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3750:/home/lsk/paparazzi/var/include/messages.h **** }
3751:/home/lsk/paparazzi/var/include/messages.h **** 
3752:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_RAW(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_RAW(&((_trans).
3753:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_RAW(struct transport_tx *trans, struct link_device *dev, 
3754:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_RAW, "IMU_G
3759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
3760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
3761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
3762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3763:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3765:/home/lsk/paparazzi/var/include/messages.h **** }
3766:/home/lsk/paparazzi/var/include/messages.h **** 
3767:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_RAW(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_RAW(&((_trans
3768:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_RAW(struct transport_tx *trans, struct link_device *dev,
3769:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_RAW, "IMU_
3774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
3775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
3776:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
3777:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3778:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3780:/home/lsk/paparazzi/var/include/messages.h **** }
3781:/home/lsk/paparazzi/var/include/messages.h **** 
3782:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_RAW(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_RAW(&((_trans).tr
3783:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_RAW(struct transport_tx *trans, struct link_device *dev, u
3784:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
  81              		.loc 3 3784 0
  82 0004 076A     		ldr	r7, [r0, #32]
  83 0006 D0F80480 		ldr	r8, [r0, #4]
  84 000a 0368     		ldr	r3, [r0]
  85 000c 0126     		movs	r6, #1
  86              	.LBE12:
  87              	.LBE11:
  88              		.loc 2 87 0
  89 000e 0D46     		mov	r5, r1
  90              	.LVL3:
  91 0010 0446     		mov	r4, r0
  92              	.LBB14:
  93              	.LBB13:
  94              		.loc 3 3784 0
  95 0012 0E21     		movs	r1, #14
  96              	.LVL4:
  97 0014 8DF80F60 		strb	r6, [sp, #15]
  98              	.LVL5:
  99 0018 3846     		mov	r0, r7
 100              	.LVL6:
 101 001a 9847     		blx	r3
 102              	.LVL7:
 103 001c 2946     		mov	r1, r5
 104 001e 0246     		mov	r2, r0
 105 0020 3846     		mov	r0, r7
 106 0022 C047     		blx	r8
 107              	.LVL8:
 108 0024 0028     		cmp	r0, #0
 109 0026 45D0     		beq	.L5
3785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 110              		.loc 3 3785 0
 111 0028 276A     		ldr	r7, [r4, #32]
 112 002a 2368     		ldr	r3, [r4]
 113 002c D4F81C80 		ldr	r8, [r4, #28]
 114 0030 3846     		mov	r0, r7
 115 0032 0E21     		movs	r1, #14
 116 0034 9847     		blx	r3
 117              	.LVL9:
 118 0036 2946     		mov	r1, r5
 119 0038 0246     		mov	r2, r0
 120 003a 3846     		mov	r0, r7
 121 003c C047     		blx	r8
 122              	.LVL10:
3786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 123              		.loc 3 3786 0
 124 003e 2369     		ldr	r3, [r4, #16]
 125 0040 206A     		ldr	r0, [r4, #32]
3787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_RAW, "IMU_MA
3789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
 126              		.loc 3 3789 0
 127 0042 DFF88480 		ldr	r8, .L8+4
3786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 128              		.loc 3 3786 0
 129 0046 2946     		mov	r1, r5
 130 0048 0E22     		movs	r2, #14
 131 004a 9847     		blx	r3
 132              	.LVL11:
3787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 133              		.loc 3 3787 0
 134 004c 0DF10F03 		add	r3, sp, #15
 135 0050 0096     		str	r6, [sp]
 136 0052 0193     		str	r3, [sp, #4]
 137 0054 A668     		ldr	r6, [r4, #8]
 138              	.LVL12:
 139 0056 206A     		ldr	r0, [r4, #32]
 140 0058 2946     		mov	r1, r5
 141 005a 0222     		movs	r2, #2
 142 005c 0023     		movs	r3, #0
 143              	.LVL13:
 144 005e B047     		blx	r6
 145              	.LVL14:
3788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_RAW, "IMU_MA
 146              		.loc 3 3788 0
 147 0060 CD23     		movs	r3, #205
 148 0062 0093     		str	r3, [sp]
 149 0064 174B     		ldr	r3, .L8
 150 0066 0193     		str	r3, [sp, #4]
 151              		.loc 3 3789 0
 152 0068 0427     		movs	r7, #4
3788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_RAW, "IMU_MA
 153              		.loc 3 3788 0
 154 006a E668     		ldr	r6, [r4, #12]
 155 006c 206A     		ldr	r0, [r4, #32]
 156 006e 2946     		mov	r1, r5
 157 0070 0222     		movs	r2, #2
 158 0072 0023     		movs	r3, #0
 159 0074 B047     		blx	r6
 160              	.LVL15:
 161              		.loc 3 3789 0
 162 0076 206A     		ldr	r0, [r4, #32]
 163 0078 A668     		ldr	r6, [r4, #8]
 164 007a 0097     		str	r7, [sp]
 165 007c 2946     		mov	r1, r5
 166 007e 0722     		movs	r2, #7
 167 0080 0023     		movs	r3, #0
 168 0082 CDF80480 		str	r8, [sp, #4]
 169 0086 B047     		blx	r6
 170              	.LVL16:
3790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
 171              		.loc 3 3790 0
 172 0088 08EB0703 		add	r3, r8, r7
 173 008c 0193     		str	r3, [sp, #4]
 174 008e 206A     		ldr	r0, [r4, #32]
 175 0090 A668     		ldr	r6, [r4, #8]
 176 0092 0097     		str	r7, [sp]
 177 0094 2946     		mov	r1, r5
 178 0096 0722     		movs	r2, #7
 179 0098 0023     		movs	r3, #0
 180 009a B047     		blx	r6
 181              	.LVL17:
3791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
 182              		.loc 3 3791 0
 183 009c 08F10806 		add	r6, r8, #8
 184 00a0 0196     		str	r6, [sp, #4]
 185 00a2 0023     		movs	r3, #0
 186 00a4 0097     		str	r7, [sp]
 187 00a6 A668     		ldr	r6, [r4, #8]
 188 00a8 206A     		ldr	r0, [r4, #32]
 189 00aa 2946     		mov	r1, r5
 190 00ac 0722     		movs	r2, #7
 191 00ae B047     		blx	r6
 192              	.LVL18:
3792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 193              		.loc 3 3792 0
 194 00b0 6369     		ldr	r3, [r4, #20]
 195 00b2 00E0     		b	.L7
 196              	.L5:
3793:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 197              		.loc 3 3794 0
 198 00b4 A369     		ldr	r3, [r4, #24]
 199              	.L7:
 200 00b6 206A     		ldr	r0, [r4, #32]
 201 00b8 2946     		mov	r1, r5
 202 00ba 9847     		blx	r3
 203              	.LVL19:
 204              	.LBE13:
 205              	.LBE14:
  88:subsystems/imu.c ****   pprz_msg_send_IMU_MAG_RAW(trans, dev, AC_ID,
  89:subsystems/imu.c ****                             &imu.mag_unscaled.x, &imu.mag_unscaled.y, &imu.mag_unscaled.z);
  90:subsystems/imu.c **** }
 206              		.loc 2 90 0
 207 00bc 04B0     		add	sp, sp, #16
 208              	.LVL20:
 209              		@ sp needed
 210 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 211              	.LVL21:
 212              	.L9:
 213 00c2 00BF     		.align	2
 214              	.L8:
 215 00c4 00000000 		.word	.LC0
 216 00c8 78000000 		.word	.LANCHOR0+120
 217              		.cfi_endproc
 218              	.LFE489:
 220              		.section	.text.send_accel_raw,"ax",%progbits
 221              		.align	1
 222              		.thumb
 223              		.thumb_func
 225              	send_accel_raw:
 226              	.LFB483:
  47:subsystems/imu.c **** {
 227              		.loc 2 47 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 8
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              	.LVL22:
 232 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 233              		.cfi_def_cfa_offset 40
 234              		.cfi_offset 0, -40
 235              		.cfi_offset 1, -36
 236              		.cfi_offset 2, -32
 237              		.cfi_offset 3, -28
 238              		.cfi_offset 4, -24
 239              		.cfi_offset 5, -20
 240              		.cfi_offset 6, -16
 241              		.cfi_offset 7, -12
 242              		.cfi_offset 8, -8
 243              		.cfi_offset 14, -4
 244              	.LBB17:
 245              	.LBB18:
3769:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 246              		.loc 3 3769 0
 247 0004 076A     		ldr	r7, [r0, #32]
 248 0006 D0F80480 		ldr	r8, [r0, #4]
 249 000a 0368     		ldr	r3, [r0]
 250 000c 0126     		movs	r6, #1
 251              	.LBE18:
 252              	.LBE17:
  47:subsystems/imu.c **** {
 253              		.loc 2 47 0
 254 000e 0D46     		mov	r5, r1
 255              	.LVL23:
 256 0010 0446     		mov	r4, r0
 257              	.LBB20:
 258              	.LBB19:
3769:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 259              		.loc 3 3769 0
 260 0012 0E21     		movs	r1, #14
 261              	.LVL24:
 262 0014 8DF80F60 		strb	r6, [sp, #15]
 263              	.LVL25:
 264 0018 3846     		mov	r0, r7
 265              	.LVL26:
 266 001a 9847     		blx	r3
 267              	.LVL27:
 268 001c 2946     		mov	r1, r5
 269 001e 0246     		mov	r2, r0
 270 0020 3846     		mov	r0, r7
 271 0022 C047     		blx	r8
 272              	.LVL28:
 273 0024 0028     		cmp	r0, #0
 274 0026 45D0     		beq	.L11
3770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 275              		.loc 3 3770 0
 276 0028 276A     		ldr	r7, [r4, #32]
 277 002a 2368     		ldr	r3, [r4]
 278 002c D4F81C80 		ldr	r8, [r4, #28]
 279 0030 3846     		mov	r0, r7
 280 0032 0E21     		movs	r1, #14
 281 0034 9847     		blx	r3
 282              	.LVL29:
 283 0036 2946     		mov	r1, r5
 284 0038 0246     		mov	r2, r0
 285 003a 3846     		mov	r0, r7
 286 003c C047     		blx	r8
 287              	.LVL30:
3771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 288              		.loc 3 3771 0
 289 003e 2369     		ldr	r3, [r4, #16]
 290 0040 206A     		ldr	r0, [r4, #32]
3774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
 291              		.loc 3 3774 0
 292 0042 DFF88480 		ldr	r8, .L14+4
3771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 293              		.loc 3 3771 0
 294 0046 2946     		mov	r1, r5
 295 0048 0E22     		movs	r2, #14
 296 004a 9847     		blx	r3
 297              	.LVL31:
3772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 298              		.loc 3 3772 0
 299 004c 0DF10F03 		add	r3, sp, #15
 300 0050 0096     		str	r6, [sp]
 301 0052 0193     		str	r3, [sp, #4]
 302 0054 A668     		ldr	r6, [r4, #8]
 303              	.LVL32:
 304 0056 206A     		ldr	r0, [r4, #32]
 305 0058 2946     		mov	r1, r5
 306 005a 0222     		movs	r2, #2
 307 005c 0023     		movs	r3, #0
 308              	.LVL33:
 309 005e B047     		blx	r6
 310              	.LVL34:
3773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_RAW, "IMU_
 311              		.loc 3 3773 0
 312 0060 CC23     		movs	r3, #204
 313 0062 0093     		str	r3, [sp]
 314 0064 174B     		ldr	r3, .L14
 315 0066 0193     		str	r3, [sp, #4]
3774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
 316              		.loc 3 3774 0
 317 0068 0427     		movs	r7, #4
3773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_RAW, "IMU_
 318              		.loc 3 3773 0
 319 006a E668     		ldr	r6, [r4, #12]
 320 006c 206A     		ldr	r0, [r4, #32]
 321 006e 2946     		mov	r1, r5
 322 0070 0222     		movs	r2, #2
 323 0072 0023     		movs	r3, #0
 324 0074 B047     		blx	r6
 325              	.LVL35:
3774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
 326              		.loc 3 3774 0
 327 0076 206A     		ldr	r0, [r4, #32]
 328 0078 A668     		ldr	r6, [r4, #8]
 329 007a 0097     		str	r7, [sp]
 330 007c 2946     		mov	r1, r5
 331 007e 0722     		movs	r2, #7
 332 0080 0023     		movs	r3, #0
 333 0082 CDF80480 		str	r8, [sp, #4]
 334 0086 B047     		blx	r6
 335              	.LVL36:
3775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
 336              		.loc 3 3775 0
 337 0088 08EB0703 		add	r3, r8, r7
 338 008c 0193     		str	r3, [sp, #4]
 339 008e 206A     		ldr	r0, [r4, #32]
 340 0090 A668     		ldr	r6, [r4, #8]
 341 0092 0097     		str	r7, [sp]
 342 0094 2946     		mov	r1, r5
 343 0096 0722     		movs	r2, #7
 344 0098 0023     		movs	r3, #0
 345 009a B047     		blx	r6
 346              	.LVL37:
3776:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
 347              		.loc 3 3776 0
 348 009c 08F10806 		add	r6, r8, #8
 349 00a0 0196     		str	r6, [sp, #4]
 350 00a2 0023     		movs	r3, #0
 351 00a4 0097     		str	r7, [sp]
 352 00a6 A668     		ldr	r6, [r4, #8]
 353 00a8 206A     		ldr	r0, [r4, #32]
 354 00aa 2946     		mov	r1, r5
 355 00ac 0722     		movs	r2, #7
 356 00ae B047     		blx	r6
 357              	.LVL38:
3777:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 358              		.loc 3 3777 0
 359 00b0 6369     		ldr	r3, [r4, #20]
 360 00b2 00E0     		b	.L13
 361              	.L11:
3779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 362              		.loc 3 3779 0
 363 00b4 A369     		ldr	r3, [r4, #24]
 364              	.L13:
 365 00b6 206A     		ldr	r0, [r4, #32]
 366 00b8 2946     		mov	r1, r5
 367 00ba 9847     		blx	r3
 368              	.LVL39:
 369              	.LBE19:
 370              	.LBE20:
  50:subsystems/imu.c **** }
 371              		.loc 2 50 0
 372 00bc 04B0     		add	sp, sp, #16
 373              	.LVL40:
 374              		@ sp needed
 375 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 376              	.LVL41:
 377              	.L15:
 378 00c2 00BF     		.align	2
 379              	.L14:
 380 00c4 0C000000 		.word	.LC1
 381 00c8 6C000000 		.word	.LANCHOR0+108
 382              		.cfi_endproc
 383              	.LFE483:
 385              		.section	.text.send_gyro_raw,"ax",%progbits
 386              		.align	1
 387              		.thumb
 388              		.thumb_func
 390              	send_gyro_raw:
 391              	.LFB486:
  67:subsystems/imu.c **** {
 392              		.loc 2 67 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 8
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              	.LVL42:
 397 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 398              		.cfi_def_cfa_offset 40
 399              		.cfi_offset 0, -40
 400              		.cfi_offset 1, -36
 401              		.cfi_offset 2, -32
 402              		.cfi_offset 3, -28
 403              		.cfi_offset 4, -24
 404              		.cfi_offset 5, -20
 405              		.cfi_offset 6, -16
 406              		.cfi_offset 7, -12
 407              		.cfi_offset 8, -8
 408              		.cfi_offset 14, -4
 409              	.LBB23:
 410              	.LBB24:
3754:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 411              		.loc 3 3754 0
 412 0004 076A     		ldr	r7, [r0, #32]
 413 0006 D0F80480 		ldr	r8, [r0, #4]
 414 000a 0368     		ldr	r3, [r0]
 415 000c 0126     		movs	r6, #1
 416              	.LBE24:
 417              	.LBE23:
  67:subsystems/imu.c **** {
 418              		.loc 2 67 0
 419 000e 0D46     		mov	r5, r1
 420              	.LVL43:
 421 0010 0446     		mov	r4, r0
 422              	.LBB26:
 423              	.LBB25:
3754:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 424              		.loc 3 3754 0
 425 0012 0E21     		movs	r1, #14
 426              	.LVL44:
 427 0014 8DF80F60 		strb	r6, [sp, #15]
 428              	.LVL45:
 429 0018 3846     		mov	r0, r7
 430              	.LVL46:
 431 001a 9847     		blx	r3
 432              	.LVL47:
 433 001c 2946     		mov	r1, r5
 434 001e 0246     		mov	r2, r0
 435 0020 3846     		mov	r0, r7
 436 0022 C047     		blx	r8
 437              	.LVL48:
 438 0024 0028     		cmp	r0, #0
 439 0026 45D0     		beq	.L17
3755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 440              		.loc 3 3755 0
 441 0028 276A     		ldr	r7, [r4, #32]
 442 002a 2368     		ldr	r3, [r4]
 443 002c D4F81C80 		ldr	r8, [r4, #28]
 444 0030 3846     		mov	r0, r7
 445 0032 0E21     		movs	r1, #14
 446 0034 9847     		blx	r3
 447              	.LVL49:
 448 0036 2946     		mov	r1, r5
 449 0038 0246     		mov	r2, r0
 450 003a 3846     		mov	r0, r7
 451 003c C047     		blx	r8
 452              	.LVL50:
3756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 453              		.loc 3 3756 0
 454 003e 2369     		ldr	r3, [r4, #16]
 455 0040 206A     		ldr	r0, [r4, #32]
3759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
 456              		.loc 3 3759 0
 457 0042 DFF88480 		ldr	r8, .L20+4
3756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 458              		.loc 3 3756 0
 459 0046 2946     		mov	r1, r5
 460 0048 0E22     		movs	r2, #14
 461 004a 9847     		blx	r3
 462              	.LVL51:
3757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 463              		.loc 3 3757 0
 464 004c 0DF10F03 		add	r3, sp, #15
 465 0050 0096     		str	r6, [sp]
 466 0052 0193     		str	r3, [sp, #4]
 467 0054 A668     		ldr	r6, [r4, #8]
 468              	.LVL52:
 469 0056 206A     		ldr	r0, [r4, #32]
 470 0058 2946     		mov	r1, r5
 471 005a 0222     		movs	r2, #2
 472 005c 0023     		movs	r3, #0
 473              	.LVL53:
 474 005e B047     		blx	r6
 475              	.LVL54:
3758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_RAW, "IMU_G
 476              		.loc 3 3758 0
 477 0060 CB23     		movs	r3, #203
 478 0062 0093     		str	r3, [sp]
 479 0064 174B     		ldr	r3, .L20
 480 0066 0193     		str	r3, [sp, #4]
3759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
 481              		.loc 3 3759 0
 482 0068 0427     		movs	r7, #4
3758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_RAW, "IMU_G
 483              		.loc 3 3758 0
 484 006a E668     		ldr	r6, [r4, #12]
 485 006c 206A     		ldr	r0, [r4, #32]
 486 006e 2946     		mov	r1, r5
 487 0070 0222     		movs	r2, #2
 488 0072 0023     		movs	r3, #0
 489 0074 B047     		blx	r6
 490              	.LVL55:
3759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
 491              		.loc 3 3759 0
 492 0076 206A     		ldr	r0, [r4, #32]
 493 0078 A668     		ldr	r6, [r4, #8]
 494 007a 0097     		str	r7, [sp]
 495 007c 2946     		mov	r1, r5
 496 007e 0722     		movs	r2, #7
 497 0080 0023     		movs	r3, #0
 498 0082 CDF80480 		str	r8, [sp, #4]
 499 0086 B047     		blx	r6
 500              	.LVL56:
3760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
 501              		.loc 3 3760 0
 502 0088 08EB0703 		add	r3, r8, r7
 503 008c 0193     		str	r3, [sp, #4]
 504 008e 206A     		ldr	r0, [r4, #32]
 505 0090 A668     		ldr	r6, [r4, #8]
 506 0092 0097     		str	r7, [sp]
 507 0094 2946     		mov	r1, r5
 508 0096 0722     		movs	r2, #7
 509 0098 0023     		movs	r3, #0
 510 009a B047     		blx	r6
 511              	.LVL57:
3761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
 512              		.loc 3 3761 0
 513 009c 08F10806 		add	r6, r8, #8
 514 00a0 0196     		str	r6, [sp, #4]
 515 00a2 0023     		movs	r3, #0
 516 00a4 0097     		str	r7, [sp]
 517 00a6 A668     		ldr	r6, [r4, #8]
 518 00a8 206A     		ldr	r0, [r4, #32]
 519 00aa 2946     		mov	r1, r5
 520 00ac 0722     		movs	r2, #7
 521 00ae B047     		blx	r6
 522              	.LVL58:
3762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 523              		.loc 3 3762 0
 524 00b0 6369     		ldr	r3, [r4, #20]
 525 00b2 00E0     		b	.L19
 526              	.L17:
3764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 527              		.loc 3 3764 0
 528 00b4 A369     		ldr	r3, [r4, #24]
 529              	.L19:
 530 00b6 206A     		ldr	r0, [r4, #32]
 531 00b8 2946     		mov	r1, r5
 532 00ba 9847     		blx	r3
 533              	.LVL59:
 534              	.LBE25:
 535              	.LBE26:
  70:subsystems/imu.c **** }
 536              		.loc 2 70 0
 537 00bc 04B0     		add	sp, sp, #16
 538              	.LVL60:
 539              		@ sp needed
 540 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 541              	.LVL61:
 542              	.L21:
 543 00c2 00BF     		.align	2
 544              	.L20:
 545 00c4 1A000000 		.word	.LC2
 546 00c8 60000000 		.word	.LANCHOR0+96
 547              		.cfi_endproc
 548              	.LFE486:
 550              		.section	.text.send_accel,"ax",%progbits
 551              		.align	1
 552              		.thumb
 553              		.thumb_func
 555              	send_accel:
 556              	.LFB485:
  59:subsystems/imu.c **** {
 557              		.loc 2 59 0
 558              		.cfi_startproc
 559              		@ args = 0, pretend = 0, frame = 16
 560              		@ frame_needed = 0, uses_anonymous_args = 0
 561              	.LVL62:
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 562              		.loc 2 61 0
 563 0000 3C4B     		ldr	r3, .L26
 564 0002 DFED3D7A 		flds	s15, .L26+4
 565 0006 D3ED036A 		flds	s13, [r3, #12]	@ int
  59:subsystems/imu.c **** {
 566              		.loc 2 59 0
 567 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 568              		.cfi_def_cfa_offset 24
 569              		.cfi_offset 4, -24
 570              		.cfi_offset 5, -20
 571              		.cfi_offset 6, -16
 572              		.cfi_offset 7, -12
 573              		.cfi_offset 8, -8
 574              		.cfi_offset 14, -4
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 575              		.loc 2 61 0
 576 000e B8EEE67A 		fsitos	s14, s13
 577 0012 D3ED046A 		flds	s13, [r3, #16]	@ int
 578              	.LBB29:
 579              	.LBB30:
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 580              		.loc 3 3739 0
 581 0016 076A     		ldr	r7, [r0, #32]
 582 0018 D0F80480 		ldr	r8, [r0, #4]
 583              	.LBE30:
 584              	.LBE29:
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 585              		.loc 2 61 0
 586 001c 27EE277A 		fmuls	s14, s14, s15
  59:subsystems/imu.c **** {
 587              		.loc 2 59 0
 588 0020 86B0     		sub	sp, sp, #24
 589              		.cfi_def_cfa_offset 48
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 590              		.loc 2 61 0
 591 0022 8DED037A 		fsts	s14, [sp, #12]
 592 0026 B8EEE67A 		fsitos	s14, s13
 593 002a 0126     		movs	r6, #1
 594 002c 27EE277A 		fmuls	s14, s14, s15
  59:subsystems/imu.c **** {
 595              		.loc 2 59 0
 596 0030 0D46     		mov	r5, r1
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 597              		.loc 2 61 0
 598 0032 8DED047A 		fsts	s14, [sp, #16]
 599 0036 93ED057A 		flds	s14, [r3, #20]	@ int
 600 003a 8DF80B60 		strb	r6, [sp, #11]
 601 003e B8EEC77A 		fsitos	s14, s14
 602              	.LBB34:
 603              	.LBB31:
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 604              		.loc 3 3739 0
 605 0042 0368     		ldr	r3, [r0]
 606              	.LBE31:
 607              	.LBE34:
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 608              		.loc 2 61 0
 609 0044 67EE277A 		fmuls	s15, s14, s15
 610              	.LBB35:
 611              	.LBB32:
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 612              		.loc 3 3739 0
 613 0048 0E21     		movs	r1, #14
 614              	.LVL63:
 615              	.LBE32:
 616              	.LBE35:
  59:subsystems/imu.c **** {
 617              		.loc 2 59 0
 618 004a 0446     		mov	r4, r0
  61:subsystems/imu.c ****   ACCELS_FLOAT_OF_BFP(accel_float, imu.accel);
 619              		.loc 2 61 0
 620 004c CDED057A 		fsts	s15, [sp, #20]
 621              	.LVL64:
 622              	.LBB36:
 623              	.LBB33:
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 624              		.loc 3 3739 0
 625 0050 3846     		mov	r0, r7
 626              	.LVL65:
 627 0052 9847     		blx	r3
 628              	.LVL66:
 629 0054 2946     		mov	r1, r5
 630 0056 0246     		mov	r2, r0
 631 0058 3846     		mov	r0, r7
 632 005a C047     		blx	r8
 633              	.LVL67:
 634 005c 0028     		cmp	r0, #0
 635 005e 41D0     		beq	.L23
3740:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 636              		.loc 3 3740 0
 637 0060 276A     		ldr	r7, [r4, #32]
 638 0062 2368     		ldr	r3, [r4]
 639 0064 D4F81C80 		ldr	r8, [r4, #28]
 640 0068 3846     		mov	r0, r7
 641 006a 0E21     		movs	r1, #14
 642 006c 9847     		blx	r3
 643              	.LVL68:
 644 006e 2946     		mov	r1, r5
 645 0070 0246     		mov	r2, r0
 646 0072 3846     		mov	r0, r7
 647 0074 C047     		blx	r8
 648              	.LVL69:
3741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 649              		.loc 3 3741 0
 650 0076 2369     		ldr	r3, [r4, #16]
 651 0078 206A     		ldr	r0, [r4, #32]
 652 007a 2946     		mov	r1, r5
 653 007c 0E22     		movs	r2, #14
 654 007e 9847     		blx	r3
 655              	.LVL70:
3742:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 656              		.loc 3 3742 0
 657 0080 0DF10B03 		add	r3, sp, #11
 658 0084 0096     		str	r6, [sp]
 659 0086 0193     		str	r3, [sp, #4]
 660 0088 A668     		ldr	r6, [r4, #8]
 661              	.LVL71:
 662 008a 206A     		ldr	r0, [r4, #32]
 663 008c 2946     		mov	r1, r5
 664 008e 0222     		movs	r2, #2
 665 0090 0023     		movs	r3, #0
 666              	.LVL72:
 667 0092 B047     		blx	r6
 668              	.LVL73:
3743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL, "IMU_ACCE
 669              		.loc 3 3743 0
 670 0094 CA23     		movs	r3, #202
 671 0096 0093     		str	r3, [sp]
 672 0098 184B     		ldr	r3, .L26+8
 673 009a 0193     		str	r3, [sp, #4]
 674 009c E668     		ldr	r6, [r4, #12]
 675 009e 206A     		ldr	r0, [r4, #32]
 676 00a0 2946     		mov	r1, r5
 677 00a2 0222     		movs	r2, #2
 678 00a4 0023     		movs	r3, #0
 679 00a6 B047     		blx	r6
 680              	.LVL74:
3744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
 681              		.loc 3 3744 0
 682 00a8 0426     		movs	r6, #4
 683 00aa 03AB     		add	r3, sp, #12
 684              	.LVL75:
 685 00ac 0096     		str	r6, [sp]
 686 00ae 0193     		str	r3, [sp, #4]
 687 00b0 A768     		ldr	r7, [r4, #8]
 688 00b2 206A     		ldr	r0, [r4, #32]
 689 00b4 2946     		mov	r1, r5
 690 00b6 0A22     		movs	r2, #10
 691 00b8 0023     		movs	r3, #0
 692              	.LVL76:
 693 00ba B847     		blx	r7
 694              	.LVL77:
3745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
 695              		.loc 3 3745 0
 696 00bc 04AB     		add	r3, sp, #16
 697              	.LVL78:
 698 00be 0096     		str	r6, [sp]
 699 00c0 0193     		str	r3, [sp, #4]
 700 00c2 206A     		ldr	r0, [r4, #32]
 701 00c4 A768     		ldr	r7, [r4, #8]
 702 00c6 2946     		mov	r1, r5
 703 00c8 0A22     		movs	r2, #10
 704 00ca 0023     		movs	r3, #0
 705              	.LVL79:
 706 00cc B847     		blx	r7
 707              	.LVL80:
3746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
 708              		.loc 3 3746 0
 709 00ce 05AB     		add	r3, sp, #20
 710              	.LVL81:
 711 00d0 0096     		str	r6, [sp]
 712 00d2 0193     		str	r3, [sp, #4]
 713 00d4 A668     		ldr	r6, [r4, #8]
 714 00d6 206A     		ldr	r0, [r4, #32]
 715 00d8 0023     		movs	r3, #0
 716              	.LVL82:
 717 00da 2946     		mov	r1, r5
 718 00dc 0A22     		movs	r2, #10
 719 00de B047     		blx	r6
 720              	.LVL83:
3747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 721              		.loc 3 3747 0
 722 00e0 6369     		ldr	r3, [r4, #20]
 723 00e2 00E0     		b	.L25
 724              	.L23:
3749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 725              		.loc 3 3749 0
 726 00e4 A369     		ldr	r3, [r4, #24]
 727              	.L25:
 728 00e6 206A     		ldr	r0, [r4, #32]
 729 00e8 2946     		mov	r1, r5
 730 00ea 9847     		blx	r3
 731              	.LVL84:
 732              	.LBE33:
 733              	.LBE36:
  64:subsystems/imu.c **** }
 734              		.loc 2 64 0
 735 00ec 06B0     		add	sp, sp, #24
 736              		@ sp needed
 737 00ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 738              	.LVL85:
 739              	.L27:
 740 00f2 00BF     		.align	2
 741              	.L26:
 742 00f4 00000000 		.word	.LANCHOR0
 743 00f8 0000803A 		.word	981467136
 744 00fc 27000000 		.word	.LC3
 745              		.cfi_endproc
 746              	.LFE485:
 748              		.section	.text.send_mag,"ax",%progbits
 749              		.align	1
 750              		.thumb
 751              		.thumb_func
 753              	send_mag:
 754              	.LFB491:
  91:subsystems/imu.c **** 
  92:subsystems/imu.c **** static void send_mag_scaled(struct transport_tx *trans, struct link_device *dev)
  93:subsystems/imu.c **** {
  94:subsystems/imu.c ****   pprz_msg_send_IMU_MAG_SCALED(trans, dev, AC_ID,
  95:subsystems/imu.c ****                                &imu.mag.x, &imu.mag.y, &imu.mag.z);
  96:subsystems/imu.c **** }
  97:subsystems/imu.c **** 
  98:subsystems/imu.c **** static void send_mag(struct transport_tx *trans, struct link_device *dev)
  99:subsystems/imu.c **** {
 755              		.loc 2 99 0
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 16
 758              		@ frame_needed = 0, uses_anonymous_args = 0
 759              	.LVL86:
 100:subsystems/imu.c ****   struct FloatVect3 mag_float;
 101:subsystems/imu.c ****   MAGS_FLOAT_OF_BFP(mag_float, imu.mag);
 760              		.loc 2 101 0
 761 0000 3C4B     		ldr	r3, .L32
 762 0002 DFED3D7A 		flds	s15, .L32+4
 763 0006 D3ED066A 		flds	s13, [r3, #24]	@ int
  99:subsystems/imu.c **** {
 764              		.loc 2 99 0
 765 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 766              		.cfi_def_cfa_offset 24
 767              		.cfi_offset 4, -24
 768              		.cfi_offset 5, -20
 769              		.cfi_offset 6, -16
 770              		.cfi_offset 7, -12
 771              		.cfi_offset 8, -8
 772              		.cfi_offset 14, -4
 773              		.loc 2 101 0
 774 000e B8EEE67A 		fsitos	s14, s13
 775 0012 D3ED076A 		flds	s13, [r3, #28]	@ int
 776              	.LBB39:
 777              	.LBB40:
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 778              		.loc 3 3724 0
 779 0016 076A     		ldr	r7, [r0, #32]
 780 0018 D0F80480 		ldr	r8, [r0, #4]
 781              	.LBE40:
 782              	.LBE39:
 783              		.loc 2 101 0
 784 001c 27EE277A 		fmuls	s14, s14, s15
  99:subsystems/imu.c **** {
 785              		.loc 2 99 0
 786 0020 86B0     		sub	sp, sp, #24
 787              		.cfi_def_cfa_offset 48
 788              		.loc 2 101 0
 789 0022 8DED037A 		fsts	s14, [sp, #12]
 790 0026 B8EEE67A 		fsitos	s14, s13
 791 002a 0126     		movs	r6, #1
 792 002c 27EE277A 		fmuls	s14, s14, s15
  99:subsystems/imu.c **** {
 793              		.loc 2 99 0
 794 0030 0D46     		mov	r5, r1
 795              		.loc 2 101 0
 796 0032 8DED047A 		fsts	s14, [sp, #16]
 797 0036 93ED087A 		flds	s14, [r3, #32]	@ int
 798 003a 8DF80B60 		strb	r6, [sp, #11]
 799 003e B8EEC77A 		fsitos	s14, s14
 800              	.LBB44:
 801              	.LBB41:
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 802              		.loc 3 3724 0
 803 0042 0368     		ldr	r3, [r0]
 804              	.LBE41:
 805              	.LBE44:
 806              		.loc 2 101 0
 807 0044 67EE277A 		fmuls	s15, s14, s15
 808              	.LBB45:
 809              	.LBB42:
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 810              		.loc 3 3724 0
 811 0048 0E21     		movs	r1, #14
 812              	.LVL87:
 813              	.LBE42:
 814              	.LBE45:
  99:subsystems/imu.c **** {
 815              		.loc 2 99 0
 816 004a 0446     		mov	r4, r0
 817              		.loc 2 101 0
 818 004c CDED057A 		fsts	s15, [sp, #20]
 819              	.LVL88:
 820              	.LBB46:
 821              	.LBB43:
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 822              		.loc 3 3724 0
 823 0050 3846     		mov	r0, r7
 824              	.LVL89:
 825 0052 9847     		blx	r3
 826              	.LVL90:
 827 0054 2946     		mov	r1, r5
 828 0056 0246     		mov	r2, r0
 829 0058 3846     		mov	r0, r7
 830 005a C047     		blx	r8
 831              	.LVL91:
 832 005c 0028     		cmp	r0, #0
 833 005e 41D0     		beq	.L29
3725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 834              		.loc 3 3725 0
 835 0060 276A     		ldr	r7, [r4, #32]
 836 0062 2368     		ldr	r3, [r4]
 837 0064 D4F81C80 		ldr	r8, [r4, #28]
 838 0068 3846     		mov	r0, r7
 839 006a 0E21     		movs	r1, #14
 840 006c 9847     		blx	r3
 841              	.LVL92:
 842 006e 2946     		mov	r1, r5
 843 0070 0246     		mov	r2, r0
 844 0072 3846     		mov	r0, r7
 845 0074 C047     		blx	r8
 846              	.LVL93:
3726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 847              		.loc 3 3726 0
 848 0076 2369     		ldr	r3, [r4, #16]
 849 0078 206A     		ldr	r0, [r4, #32]
 850 007a 2946     		mov	r1, r5
 851 007c 0E22     		movs	r2, #14
 852 007e 9847     		blx	r3
 853              	.LVL94:
3727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 854              		.loc 3 3727 0
 855 0080 0DF10B03 		add	r3, sp, #11
 856 0084 0096     		str	r6, [sp]
 857 0086 0193     		str	r3, [sp, #4]
 858 0088 A668     		ldr	r6, [r4, #8]
 859              	.LVL95:
 860 008a 206A     		ldr	r0, [r4, #32]
 861 008c 2946     		mov	r1, r5
 862 008e 0222     		movs	r2, #2
 863 0090 0023     		movs	r3, #0
 864              	.LVL96:
 865 0092 B047     		blx	r6
 866              	.LVL97:
3728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG, "IMU_MAG");
 867              		.loc 3 3728 0
 868 0094 C923     		movs	r3, #201
 869 0096 0093     		str	r3, [sp]
 870 0098 184B     		ldr	r3, .L32+8
 871 009a 0193     		str	r3, [sp, #4]
 872 009c E668     		ldr	r6, [r4, #12]
 873 009e 206A     		ldr	r0, [r4, #32]
 874 00a0 2946     		mov	r1, r5
 875 00a2 0222     		movs	r2, #2
 876 00a4 0023     		movs	r3, #0
 877 00a6 B047     		blx	r6
 878              	.LVL98:
3729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
 879              		.loc 3 3729 0
 880 00a8 0426     		movs	r6, #4
 881 00aa 03AB     		add	r3, sp, #12
 882              	.LVL99:
 883 00ac 0096     		str	r6, [sp]
 884 00ae 0193     		str	r3, [sp, #4]
 885 00b0 A768     		ldr	r7, [r4, #8]
 886 00b2 206A     		ldr	r0, [r4, #32]
 887 00b4 2946     		mov	r1, r5
 888 00b6 0A22     		movs	r2, #10
 889 00b8 0023     		movs	r3, #0
 890              	.LVL100:
 891 00ba B847     		blx	r7
 892              	.LVL101:
3730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
 893              		.loc 3 3730 0
 894 00bc 04AB     		add	r3, sp, #16
 895              	.LVL102:
 896 00be 0096     		str	r6, [sp]
 897 00c0 0193     		str	r3, [sp, #4]
 898 00c2 206A     		ldr	r0, [r4, #32]
 899 00c4 A768     		ldr	r7, [r4, #8]
 900 00c6 2946     		mov	r1, r5
 901 00c8 0A22     		movs	r2, #10
 902 00ca 0023     		movs	r3, #0
 903              	.LVL103:
 904 00cc B847     		blx	r7
 905              	.LVL104:
3731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
 906              		.loc 3 3731 0
 907 00ce 05AB     		add	r3, sp, #20
 908              	.LVL105:
 909 00d0 0096     		str	r6, [sp]
 910 00d2 0193     		str	r3, [sp, #4]
 911 00d4 A668     		ldr	r6, [r4, #8]
 912 00d6 206A     		ldr	r0, [r4, #32]
 913 00d8 0023     		movs	r3, #0
 914              	.LVL106:
 915 00da 2946     		mov	r1, r5
 916 00dc 0A22     		movs	r2, #10
 917 00de B047     		blx	r6
 918              	.LVL107:
3732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 919              		.loc 3 3732 0
 920 00e0 6369     		ldr	r3, [r4, #20]
 921 00e2 00E0     		b	.L31
 922              	.L29:
3734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 923              		.loc 3 3734 0
 924 00e4 A369     		ldr	r3, [r4, #24]
 925              	.L31:
 926 00e6 206A     		ldr	r0, [r4, #32]
 927 00e8 2946     		mov	r1, r5
 928 00ea 9847     		blx	r3
 929              	.LVL108:
 930              	.LBE43:
 931              	.LBE46:
 102:subsystems/imu.c ****   pprz_msg_send_IMU_MAG(trans, dev, AC_ID,
 103:subsystems/imu.c ****                         &mag_float.x, &mag_float.y, &mag_float.z);
 104:subsystems/imu.c **** }
 932              		.loc 2 104 0
 933 00ec 06B0     		add	sp, sp, #24
 934              		@ sp needed
 935 00ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 936              	.LVL109:
 937              	.L33:
 938 00f2 00BF     		.align	2
 939              	.L32:
 940 00f4 00000000 		.word	.LANCHOR0
 941 00f8 0000003A 		.word	973078528
 942 00fc 31000000 		.word	.LC4
 943              		.cfi_endproc
 944              	.LFE491:
 946              		.section	.text.send_gyro,"ax",%progbits
 947              		.align	1
 948              		.thumb
 949              		.thumb_func
 951              	send_gyro:
 952              	.LFB488:
  79:subsystems/imu.c **** {
 953              		.loc 2 79 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 16
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              	.LVL110:
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 958              		.loc 2 81 0
 959 0000 3C4B     		ldr	r3, .L38
 960 0002 DFED3D7A 		flds	s15, .L38+4
 961 0006 D3ED006A 		flds	s13, [r3]	@ int
  79:subsystems/imu.c **** {
 962              		.loc 2 79 0
 963 000a 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 964              		.cfi_def_cfa_offset 24
 965              		.cfi_offset 4, -24
 966              		.cfi_offset 5, -20
 967              		.cfi_offset 6, -16
 968              		.cfi_offset 7, -12
 969              		.cfi_offset 8, -8
 970              		.cfi_offset 14, -4
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 971              		.loc 2 81 0
 972 000e B8EEE67A 		fsitos	s14, s13
 973 0012 D3ED016A 		flds	s13, [r3, #4]	@ int
 974              	.LBB49:
 975              	.LBB50:
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 976              		.loc 3 3709 0
 977 0016 076A     		ldr	r7, [r0, #32]
 978 0018 D0F80480 		ldr	r8, [r0, #4]
 979              	.LBE50:
 980              	.LBE49:
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 981              		.loc 2 81 0
 982 001c 27EE277A 		fmuls	s14, s14, s15
  79:subsystems/imu.c **** {
 983              		.loc 2 79 0
 984 0020 86B0     		sub	sp, sp, #24
 985              		.cfi_def_cfa_offset 48
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 986              		.loc 2 81 0
 987 0022 8DED037A 		fsts	s14, [sp, #12]
 988 0026 B8EEE67A 		fsitos	s14, s13
 989 002a 0126     		movs	r6, #1
 990 002c 27EE277A 		fmuls	s14, s14, s15
  79:subsystems/imu.c **** {
 991              		.loc 2 79 0
 992 0030 0D46     		mov	r5, r1
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 993              		.loc 2 81 0
 994 0032 8DED047A 		fsts	s14, [sp, #16]
 995 0036 93ED027A 		flds	s14, [r3, #8]	@ int
 996 003a 8DF80B60 		strb	r6, [sp, #11]
 997 003e B8EEC77A 		fsitos	s14, s14
 998              	.LBB54:
 999              	.LBB51:
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1000              		.loc 3 3709 0
 1001 0042 0368     		ldr	r3, [r0]
 1002              	.LBE51:
 1003              	.LBE54:
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 1004              		.loc 2 81 0
 1005 0044 67EE277A 		fmuls	s15, s14, s15
 1006              	.LBB55:
 1007              	.LBB52:
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1008              		.loc 3 3709 0
 1009 0048 0E21     		movs	r1, #14
 1010              	.LVL111:
 1011              	.LBE52:
 1012              	.LBE55:
  79:subsystems/imu.c **** {
 1013              		.loc 2 79 0
 1014 004a 0446     		mov	r4, r0
  81:subsystems/imu.c ****   RATES_FLOAT_OF_BFP(gyro_float, imu.gyro);
 1015              		.loc 2 81 0
 1016 004c CDED057A 		fsts	s15, [sp, #20]
 1017              	.LVL112:
 1018              	.LBB56:
 1019              	.LBB53:
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1020              		.loc 3 3709 0
 1021 0050 3846     		mov	r0, r7
 1022              	.LVL113:
 1023 0052 9847     		blx	r3
 1024              	.LVL114:
 1025 0054 2946     		mov	r1, r5
 1026 0056 0246     		mov	r2, r0
 1027 0058 3846     		mov	r0, r7
 1028 005a C047     		blx	r8
 1029              	.LVL115:
 1030 005c 0028     		cmp	r0, #0
 1031 005e 41D0     		beq	.L35
3710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 1032              		.loc 3 3710 0
 1033 0060 276A     		ldr	r7, [r4, #32]
 1034 0062 2368     		ldr	r3, [r4]
 1035 0064 D4F81C80 		ldr	r8, [r4, #28]
 1036 0068 3846     		mov	r0, r7
 1037 006a 0E21     		movs	r1, #14
 1038 006c 9847     		blx	r3
 1039              	.LVL116:
 1040 006e 2946     		mov	r1, r5
 1041 0070 0246     		mov	r2, r0
 1042 0072 3846     		mov	r0, r7
 1043 0074 C047     		blx	r8
 1044              	.LVL117:
3711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1045              		.loc 3 3711 0
 1046 0076 2369     		ldr	r3, [r4, #16]
 1047 0078 206A     		ldr	r0, [r4, #32]
 1048 007a 2946     		mov	r1, r5
 1049 007c 0E22     		movs	r2, #14
 1050 007e 9847     		blx	r3
 1051              	.LVL118:
3712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1052              		.loc 3 3712 0
 1053 0080 0DF10B03 		add	r3, sp, #11
 1054 0084 0096     		str	r6, [sp]
 1055 0086 0193     		str	r3, [sp, #4]
 1056 0088 A668     		ldr	r6, [r4, #8]
 1057              	.LVL119:
 1058 008a 206A     		ldr	r0, [r4, #32]
 1059 008c 2946     		mov	r1, r5
 1060 008e 0222     		movs	r2, #2
 1061 0090 0023     		movs	r3, #0
 1062              	.LVL120:
 1063 0092 B047     		blx	r6
 1064              	.LVL121:
3713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO, "IMU_GYRO"
 1065              		.loc 3 3713 0
 1066 0094 C823     		movs	r3, #200
 1067 0096 0093     		str	r3, [sp]
 1068 0098 184B     		ldr	r3, .L38+8
 1069 009a 0193     		str	r3, [sp, #4]
 1070 009c E668     		ldr	r6, [r4, #12]
 1071 009e 206A     		ldr	r0, [r4, #32]
 1072 00a0 2946     		mov	r1, r5
 1073 00a2 0222     		movs	r2, #2
 1074 00a4 0023     		movs	r3, #0
 1075 00a6 B047     		blx	r6
 1076              	.LVL122:
3714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gp);
 1077              		.loc 3 3714 0
 1078 00a8 0426     		movs	r6, #4
 1079 00aa 03AB     		add	r3, sp, #12
 1080              	.LVL123:
 1081 00ac 0096     		str	r6, [sp]
 1082 00ae 0193     		str	r3, [sp, #4]
 1083 00b0 A768     		ldr	r7, [r4, #8]
 1084 00b2 206A     		ldr	r0, [r4, #32]
 1085 00b4 2946     		mov	r1, r5
 1086 00b6 0A22     		movs	r2, #10
 1087 00b8 0023     		movs	r3, #0
 1088              	.LVL124:
 1089 00ba B847     		blx	r7
 1090              	.LVL125:
3715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gq);
 1091              		.loc 3 3715 0
 1092 00bc 04AB     		add	r3, sp, #16
 1093              	.LVL126:
 1094 00be 0096     		str	r6, [sp]
 1095 00c0 0193     		str	r3, [sp, #4]
 1096 00c2 206A     		ldr	r0, [r4, #32]
 1097 00c4 A768     		ldr	r7, [r4, #8]
 1098 00c6 2946     		mov	r1, r5
 1099 00c8 0A22     		movs	r2, #10
 1100 00ca 0023     		movs	r3, #0
 1101              	.LVL127:
 1102 00cc B847     		blx	r7
 1103              	.LVL128:
3716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gr);
 1104              		.loc 3 3716 0
 1105 00ce 05AB     		add	r3, sp, #20
 1106              	.LVL129:
 1107 00d0 0096     		str	r6, [sp]
 1108 00d2 0193     		str	r3, [sp, #4]
 1109 00d4 A668     		ldr	r6, [r4, #8]
 1110 00d6 206A     		ldr	r0, [r4, #32]
 1111 00d8 0023     		movs	r3, #0
 1112              	.LVL130:
 1113 00da 2946     		mov	r1, r5
 1114 00dc 0A22     		movs	r2, #10
 1115 00de B047     		blx	r6
 1116              	.LVL131:
3717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1117              		.loc 3 3717 0
 1118 00e0 6369     		ldr	r3, [r4, #20]
 1119 00e2 00E0     		b	.L37
 1120              	.L35:
3719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1121              		.loc 3 3719 0
 1122 00e4 A369     		ldr	r3, [r4, #24]
 1123              	.L37:
 1124 00e6 206A     		ldr	r0, [r4, #32]
 1125 00e8 2946     		mov	r1, r5
 1126 00ea 9847     		blx	r3
 1127              	.LVL132:
 1128              	.LBE53:
 1129              	.LBE56:
  84:subsystems/imu.c **** }
 1130              		.loc 2 84 0
 1131 00ec 06B0     		add	sp, sp, #24
 1132              		@ sp needed
 1133 00ee BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1134              	.LVL133:
 1135              	.L39:
 1136 00f2 00BF     		.align	2
 1137              	.L38:
 1138 00f4 00000000 		.word	.LANCHOR0
 1139 00f8 00008039 		.word	964689920
 1140 00fc 39000000 		.word	.LC5
 1141              		.cfi_endproc
 1142              	.LFE488:
 1144              		.section	.text.send_mag_scaled,"ax",%progbits
 1145              		.align	1
 1146              		.thumb
 1147              		.thumb_func
 1149              	send_mag_scaled:
 1150              	.LFB490:
  93:subsystems/imu.c **** {
 1151              		.loc 2 93 0
 1152              		.cfi_startproc
 1153              		@ args = 0, pretend = 0, frame = 8
 1154              		@ frame_needed = 0, uses_anonymous_args = 0
 1155              	.LVL134:
 1156 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1157              		.cfi_def_cfa_offset 40
 1158              		.cfi_offset 0, -40
 1159              		.cfi_offset 1, -36
 1160              		.cfi_offset 2, -32
 1161              		.cfi_offset 3, -28
 1162              		.cfi_offset 4, -24
 1163              		.cfi_offset 5, -20
 1164              		.cfi_offset 6, -16
 1165              		.cfi_offset 7, -12
 1166              		.cfi_offset 8, -8
 1167              		.cfi_offset 14, -4
 1168              	.LBB59:
 1169              	.LBB60:
2398:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1170              		.loc 3 2398 0
 1171 0004 076A     		ldr	r7, [r0, #32]
 1172 0006 D0F80480 		ldr	r8, [r0, #4]
 1173 000a 0368     		ldr	r3, [r0]
 1174 000c 0126     		movs	r6, #1
 1175              	.LBE60:
 1176              	.LBE59:
  93:subsystems/imu.c **** {
 1177              		.loc 2 93 0
 1178 000e 0D46     		mov	r5, r1
 1179              	.LVL135:
 1180 0010 0446     		mov	r4, r0
 1181              	.LBB62:
 1182              	.LBB61:
2398:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1183              		.loc 3 2398 0
 1184 0012 0E21     		movs	r1, #14
 1185              	.LVL136:
 1186 0014 8DF80F60 		strb	r6, [sp, #15]
 1187              	.LVL137:
 1188 0018 3846     		mov	r0, r7
 1189              	.LVL138:
 1190 001a 9847     		blx	r3
 1191              	.LVL139:
 1192 001c 2946     		mov	r1, r5
 1193 001e 0246     		mov	r2, r0
 1194 0020 3846     		mov	r0, r7
 1195 0022 C047     		blx	r8
 1196              	.LVL140:
 1197 0024 0028     		cmp	r0, #0
 1198 0026 45D0     		beq	.L41
2399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 1199              		.loc 3 2399 0
 1200 0028 276A     		ldr	r7, [r4, #32]
 1201 002a 2368     		ldr	r3, [r4]
 1202 002c D4F81C80 		ldr	r8, [r4, #28]
 1203 0030 3846     		mov	r0, r7
 1204 0032 0E21     		movs	r1, #14
 1205 0034 9847     		blx	r3
 1206              	.LVL141:
 1207 0036 2946     		mov	r1, r5
 1208 0038 0246     		mov	r2, r0
 1209 003a 3846     		mov	r0, r7
 1210 003c C047     		blx	r8
 1211              	.LVL142:
2400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1212              		.loc 3 2400 0
 1213 003e 2369     		ldr	r3, [r4, #16]
 1214 0040 206A     		ldr	r0, [r4, #32]
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
 1215              		.loc 3 2403 0
 1216 0042 DFF88480 		ldr	r8, .L44+4
2400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1217              		.loc 3 2400 0
 1218 0046 2946     		mov	r1, r5
 1219 0048 0E22     		movs	r2, #14
 1220 004a 9847     		blx	r3
 1221              	.LVL143:
2401:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1222              		.loc 3 2401 0
 1223 004c 0DF10F03 		add	r3, sp, #15
 1224 0050 0096     		str	r6, [sp]
 1225 0052 0193     		str	r3, [sp, #4]
 1226 0054 A668     		ldr	r6, [r4, #8]
 1227              	.LVL144:
 1228 0056 206A     		ldr	r0, [r4, #32]
 1229 0058 2946     		mov	r1, r5
 1230 005a 0222     		movs	r2, #2
 1231 005c 0023     		movs	r3, #0
 1232              	.LVL145:
 1233 005e B047     		blx	r6
 1234              	.LVL146:
2402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SCALED, "IMU
 1235              		.loc 3 2402 0
 1236 0060 8523     		movs	r3, #133
 1237 0062 0093     		str	r3, [sp]
 1238 0064 174B     		ldr	r3, .L44
 1239 0066 0193     		str	r3, [sp, #4]
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
 1240              		.loc 3 2403 0
 1241 0068 0427     		movs	r7, #4
2402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SCALED, "IMU
 1242              		.loc 3 2402 0
 1243 006a E668     		ldr	r6, [r4, #12]
 1244 006c 206A     		ldr	r0, [r4, #32]
 1245 006e 2946     		mov	r1, r5
 1246 0070 0222     		movs	r2, #2
 1247 0072 0023     		movs	r3, #0
 1248 0074 B047     		blx	r6
 1249              	.LVL147:
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
 1250              		.loc 3 2403 0
 1251 0076 206A     		ldr	r0, [r4, #32]
 1252 0078 A668     		ldr	r6, [r4, #8]
 1253 007a 0097     		str	r7, [sp]
 1254 007c 2946     		mov	r1, r5
 1255 007e 0722     		movs	r2, #7
 1256 0080 0023     		movs	r3, #0
 1257 0082 CDF80480 		str	r8, [sp, #4]
 1258 0086 B047     		blx	r6
 1259              	.LVL148:
2404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
 1260              		.loc 3 2404 0
 1261 0088 08EB0703 		add	r3, r8, r7
 1262 008c 0193     		str	r3, [sp, #4]
 1263 008e 206A     		ldr	r0, [r4, #32]
 1264 0090 A668     		ldr	r6, [r4, #8]
 1265 0092 0097     		str	r7, [sp]
 1266 0094 2946     		mov	r1, r5
 1267 0096 0722     		movs	r2, #7
 1268 0098 0023     		movs	r3, #0
 1269 009a B047     		blx	r6
 1270              	.LVL149:
2405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
 1271              		.loc 3 2405 0
 1272 009c 08F10806 		add	r6, r8, #8
 1273 00a0 0196     		str	r6, [sp, #4]
 1274 00a2 0023     		movs	r3, #0
 1275 00a4 0097     		str	r7, [sp]
 1276 00a6 A668     		ldr	r6, [r4, #8]
 1277 00a8 206A     		ldr	r0, [r4, #32]
 1278 00aa 2946     		mov	r1, r5
 1279 00ac 0722     		movs	r2, #7
 1280 00ae B047     		blx	r6
 1281              	.LVL150:
2406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1282              		.loc 3 2406 0
 1283 00b0 6369     		ldr	r3, [r4, #20]
 1284 00b2 00E0     		b	.L43
 1285              	.L41:
2408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1286              		.loc 3 2408 0
 1287 00b4 A369     		ldr	r3, [r4, #24]
 1288              	.L43:
 1289 00b6 206A     		ldr	r0, [r4, #32]
 1290 00b8 2946     		mov	r1, r5
 1291 00ba 9847     		blx	r3
 1292              	.LVL151:
 1293              	.LBE61:
 1294              	.LBE62:
  96:subsystems/imu.c **** }
 1295              		.loc 2 96 0
 1296 00bc 04B0     		add	sp, sp, #16
 1297              	.LVL152:
 1298              		@ sp needed
 1299 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1300              	.LVL153:
 1301              	.L45:
 1302 00c2 00BF     		.align	2
 1303              	.L44:
 1304 00c4 42000000 		.word	.LC6
 1305 00c8 18000000 		.word	.LANCHOR0+24
 1306              		.cfi_endproc
 1307              	.LFE490:
 1309              		.section	.text.send_accel_scaled,"ax",%progbits
 1310              		.align	1
 1311              		.thumb
 1312              		.thumb_func
 1314              	send_accel_scaled:
 1315              	.LFB484:
  53:subsystems/imu.c **** {
 1316              		.loc 2 53 0
 1317              		.cfi_startproc
 1318              		@ args = 0, pretend = 0, frame = 8
 1319              		@ frame_needed = 0, uses_anonymous_args = 0
 1320              	.LVL154:
 1321 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1322              		.cfi_def_cfa_offset 40
 1323              		.cfi_offset 0, -40
 1324              		.cfi_offset 1, -36
 1325              		.cfi_offset 2, -32
 1326              		.cfi_offset 3, -28
 1327              		.cfi_offset 4, -24
 1328              		.cfi_offset 5, -20
 1329              		.cfi_offset 6, -16
 1330              		.cfi_offset 7, -12
 1331              		.cfi_offset 8, -8
 1332              		.cfi_offset 14, -4
 1333              	.LBB65:
 1334              	.LBB66:
2383:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1335              		.loc 3 2383 0
 1336 0004 076A     		ldr	r7, [r0, #32]
 1337 0006 D0F80480 		ldr	r8, [r0, #4]
 1338 000a 0368     		ldr	r3, [r0]
 1339 000c 0126     		movs	r6, #1
 1340              	.LBE66:
 1341              	.LBE65:
  53:subsystems/imu.c **** {
 1342              		.loc 2 53 0
 1343 000e 0D46     		mov	r5, r1
 1344              	.LVL155:
 1345 0010 0446     		mov	r4, r0
 1346              	.LBB68:
 1347              	.LBB67:
2383:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1348              		.loc 3 2383 0
 1349 0012 0E21     		movs	r1, #14
 1350              	.LVL156:
 1351 0014 8DF80F60 		strb	r6, [sp, #15]
 1352              	.LVL157:
 1353 0018 3846     		mov	r0, r7
 1354              	.LVL158:
 1355 001a 9847     		blx	r3
 1356              	.LVL159:
 1357 001c 2946     		mov	r1, r5
 1358 001e 0246     		mov	r2, r0
 1359 0020 3846     		mov	r0, r7
 1360 0022 C047     		blx	r8
 1361              	.LVL160:
 1362 0024 0028     		cmp	r0, #0
 1363 0026 45D0     		beq	.L47
2384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 1364              		.loc 3 2384 0
 1365 0028 276A     		ldr	r7, [r4, #32]
 1366 002a 2368     		ldr	r3, [r4]
 1367 002c D4F81C80 		ldr	r8, [r4, #28]
 1368 0030 3846     		mov	r0, r7
 1369 0032 0E21     		movs	r1, #14
 1370 0034 9847     		blx	r3
 1371              	.LVL161:
 1372 0036 2946     		mov	r1, r5
 1373 0038 0246     		mov	r2, r0
 1374 003a 3846     		mov	r0, r7
 1375 003c C047     		blx	r8
 1376              	.LVL162:
2385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1377              		.loc 3 2385 0
 1378 003e 2369     		ldr	r3, [r4, #16]
 1379 0040 206A     		ldr	r0, [r4, #32]
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
 1380              		.loc 3 2388 0
 1381 0042 DFF88480 		ldr	r8, .L50+4
2385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1382              		.loc 3 2385 0
 1383 0046 2946     		mov	r1, r5
 1384 0048 0E22     		movs	r2, #14
 1385 004a 9847     		blx	r3
 1386              	.LVL163:
2386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1387              		.loc 3 2386 0
 1388 004c 0DF10F03 		add	r3, sp, #15
 1389 0050 0096     		str	r6, [sp]
 1390 0052 0193     		str	r3, [sp, #4]
 1391 0054 A668     		ldr	r6, [r4, #8]
 1392              	.LVL164:
 1393 0056 206A     		ldr	r0, [r4, #32]
 1394 0058 2946     		mov	r1, r5
 1395 005a 0222     		movs	r2, #2
 1396 005c 0023     		movs	r3, #0
 1397              	.LVL165:
 1398 005e B047     		blx	r6
 1399              	.LVL166:
2387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_SCALED, "I
 1400              		.loc 3 2387 0
 1401 0060 8423     		movs	r3, #132
 1402 0062 0093     		str	r3, [sp]
 1403 0064 174B     		ldr	r3, .L50
 1404 0066 0193     		str	r3, [sp, #4]
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
 1405              		.loc 3 2388 0
 1406 0068 0427     		movs	r7, #4
2387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_SCALED, "I
 1407              		.loc 3 2387 0
 1408 006a E668     		ldr	r6, [r4, #12]
 1409 006c 206A     		ldr	r0, [r4, #32]
 1410 006e 2946     		mov	r1, r5
 1411 0070 0222     		movs	r2, #2
 1412 0072 0023     		movs	r3, #0
 1413 0074 B047     		blx	r6
 1414              	.LVL167:
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
 1415              		.loc 3 2388 0
 1416 0076 206A     		ldr	r0, [r4, #32]
 1417 0078 A668     		ldr	r6, [r4, #8]
 1418 007a 0097     		str	r7, [sp]
 1419 007c 2946     		mov	r1, r5
 1420 007e 0722     		movs	r2, #7
 1421 0080 0023     		movs	r3, #0
 1422 0082 CDF80480 		str	r8, [sp, #4]
 1423 0086 B047     		blx	r6
 1424              	.LVL168:
2389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
 1425              		.loc 3 2389 0
 1426 0088 08EB0703 		add	r3, r8, r7
 1427 008c 0193     		str	r3, [sp, #4]
 1428 008e 206A     		ldr	r0, [r4, #32]
 1429 0090 A668     		ldr	r6, [r4, #8]
 1430 0092 0097     		str	r7, [sp]
 1431 0094 2946     		mov	r1, r5
 1432 0096 0722     		movs	r2, #7
 1433 0098 0023     		movs	r3, #0
 1434 009a B047     		blx	r6
 1435              	.LVL169:
2390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
 1436              		.loc 3 2390 0
 1437 009c 08F10806 		add	r6, r8, #8
 1438 00a0 0196     		str	r6, [sp, #4]
 1439 00a2 0023     		movs	r3, #0
 1440 00a4 0097     		str	r7, [sp]
 1441 00a6 A668     		ldr	r6, [r4, #8]
 1442 00a8 206A     		ldr	r0, [r4, #32]
 1443 00aa 2946     		mov	r1, r5
 1444 00ac 0722     		movs	r2, #7
 1445 00ae B047     		blx	r6
 1446              	.LVL170:
2391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1447              		.loc 3 2391 0
 1448 00b0 6369     		ldr	r3, [r4, #20]
 1449 00b2 00E0     		b	.L49
 1450              	.L47:
2393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1451              		.loc 3 2393 0
 1452 00b4 A369     		ldr	r3, [r4, #24]
 1453              	.L49:
 1454 00b6 206A     		ldr	r0, [r4, #32]
 1455 00b8 2946     		mov	r1, r5
 1456 00ba 9847     		blx	r3
 1457              	.LVL171:
 1458              	.LBE67:
 1459              	.LBE68:
  56:subsystems/imu.c **** }
 1460              		.loc 2 56 0
 1461 00bc 04B0     		add	sp, sp, #16
 1462              	.LVL172:
 1463              		@ sp needed
 1464 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1465              	.LVL173:
 1466              	.L51:
 1467 00c2 00BF     		.align	2
 1468              	.L50:
 1469 00c4 51000000 		.word	.LC7
 1470 00c8 0C000000 		.word	.LANCHOR0+12
 1471              		.cfi_endproc
 1472              	.LFE484:
 1474              		.section	.text.send_gyro_scaled,"ax",%progbits
 1475              		.align	1
 1476              		.thumb
 1477              		.thumb_func
 1479              	send_gyro_scaled:
 1480              	.LFB487:
  73:subsystems/imu.c **** {
 1481              		.loc 2 73 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 8
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              	.LVL174:
 1486 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1487              		.cfi_def_cfa_offset 40
 1488              		.cfi_offset 0, -40
 1489              		.cfi_offset 1, -36
 1490              		.cfi_offset 2, -32
 1491              		.cfi_offset 3, -28
 1492              		.cfi_offset 4, -24
 1493              		.cfi_offset 5, -20
 1494              		.cfi_offset 6, -16
 1495              		.cfi_offset 7, -12
 1496              		.cfi_offset 8, -8
 1497              		.cfi_offset 14, -4
 1498              	.LBB71:
 1499              	.LBB72:
2368:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1500              		.loc 3 2368 0
 1501 0004 076A     		ldr	r7, [r0, #32]
 1502 0006 D0F80480 		ldr	r8, [r0, #4]
 1503 000a 0368     		ldr	r3, [r0]
 1504 000c 0126     		movs	r6, #1
 1505              	.LBE72:
 1506              	.LBE71:
  73:subsystems/imu.c **** {
 1507              		.loc 2 73 0
 1508 000e 0D46     		mov	r5, r1
 1509              	.LVL175:
 1510 0010 0446     		mov	r4, r0
 1511              	.LBB74:
 1512              	.LBB73:
2368:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 1513              		.loc 3 2368 0
 1514 0012 0E21     		movs	r1, #14
 1515              	.LVL176:
 1516 0014 8DF80F60 		strb	r6, [sp, #15]
 1517              	.LVL177:
 1518 0018 3846     		mov	r0, r7
 1519              	.LVL178:
 1520 001a 9847     		blx	r3
 1521              	.LVL179:
 1522 001c 2946     		mov	r1, r5
 1523 001e 0246     		mov	r2, r0
 1524 0020 3846     		mov	r0, r7
 1525 0022 C047     		blx	r8
 1526              	.LVL180:
 1527 0024 0028     		cmp	r0, #0
 1528 0026 45D0     		beq	.L53
2369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 1529              		.loc 3 2369 0
 1530 0028 276A     		ldr	r7, [r4, #32]
 1531 002a 2368     		ldr	r3, [r4]
 1532 002c D4F81C80 		ldr	r8, [r4, #28]
 1533 0030 3846     		mov	r0, r7
 1534 0032 0E21     		movs	r1, #14
 1535 0034 9847     		blx	r3
 1536              	.LVL181:
 1537 0036 2946     		mov	r1, r5
 1538 0038 0246     		mov	r2, r0
 1539 003a 3846     		mov	r0, r7
 1540 003c C047     		blx	r8
 1541              	.LVL182:
2370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1542              		.loc 3 2370 0
 1543 003e 2369     		ldr	r3, [r4, #16]
 1544 0040 206A     		ldr	r0, [r4, #32]
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
 1545              		.loc 3 2373 0
 1546 0042 DFF88480 		ldr	r8, .L56+4
2370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1547              		.loc 3 2370 0
 1548 0046 2946     		mov	r1, r5
 1549 0048 0E22     		movs	r2, #14
 1550 004a 9847     		blx	r3
 1551              	.LVL183:
2371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1552              		.loc 3 2371 0
 1553 004c 0DF10F03 		add	r3, sp, #15
 1554 0050 0096     		str	r6, [sp]
 1555 0052 0193     		str	r3, [sp, #4]
 1556 0054 A668     		ldr	r6, [r4, #8]
 1557              	.LVL184:
 1558 0056 206A     		ldr	r0, [r4, #32]
 1559 0058 2946     		mov	r1, r5
 1560 005a 0222     		movs	r2, #2
 1561 005c 0023     		movs	r3, #0
 1562              	.LVL185:
 1563 005e B047     		blx	r6
 1564              	.LVL186:
2372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_SCALED, "IM
 1565              		.loc 3 2372 0
 1566 0060 8323     		movs	r3, #131
 1567 0062 0093     		str	r3, [sp]
 1568 0064 174B     		ldr	r3, .L56
 1569 0066 0193     		str	r3, [sp, #4]
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
 1570              		.loc 3 2373 0
 1571 0068 0427     		movs	r7, #4
2372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_SCALED, "IM
 1572              		.loc 3 2372 0
 1573 006a E668     		ldr	r6, [r4, #12]
 1574 006c 206A     		ldr	r0, [r4, #32]
 1575 006e 2946     		mov	r1, r5
 1576 0070 0222     		movs	r2, #2
 1577 0072 0023     		movs	r3, #0
 1578 0074 B047     		blx	r6
 1579              	.LVL187:
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
 1580              		.loc 3 2373 0
 1581 0076 206A     		ldr	r0, [r4, #32]
 1582 0078 A668     		ldr	r6, [r4, #8]
 1583 007a 0097     		str	r7, [sp]
 1584 007c 2946     		mov	r1, r5
 1585 007e 0722     		movs	r2, #7
 1586 0080 0023     		movs	r3, #0
 1587 0082 CDF80480 		str	r8, [sp, #4]
 1588 0086 B047     		blx	r6
 1589              	.LVL188:
2374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
 1590              		.loc 3 2374 0
 1591 0088 08EB0703 		add	r3, r8, r7
 1592 008c 0193     		str	r3, [sp, #4]
 1593 008e 206A     		ldr	r0, [r4, #32]
 1594 0090 A668     		ldr	r6, [r4, #8]
 1595 0092 0097     		str	r7, [sp]
 1596 0094 2946     		mov	r1, r5
 1597 0096 0722     		movs	r2, #7
 1598 0098 0023     		movs	r3, #0
 1599 009a B047     		blx	r6
 1600              	.LVL189:
2375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
 1601              		.loc 3 2375 0
 1602 009c 08F10806 		add	r6, r8, #8
 1603 00a0 0196     		str	r6, [sp, #4]
 1604 00a2 0023     		movs	r3, #0
 1605 00a4 0097     		str	r7, [sp]
 1606 00a6 A668     		ldr	r6, [r4, #8]
 1607 00a8 206A     		ldr	r0, [r4, #32]
 1608 00aa 2946     		mov	r1, r5
 1609 00ac 0722     		movs	r2, #7
 1610 00ae B047     		blx	r6
 1611              	.LVL190:
2376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1612              		.loc 3 2376 0
 1613 00b0 6369     		ldr	r3, [r4, #20]
 1614 00b2 00E0     		b	.L55
 1615              	.L53:
2378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1616              		.loc 3 2378 0
 1617 00b4 A369     		ldr	r3, [r4, #24]
 1618              	.L55:
 1619 00b6 206A     		ldr	r0, [r4, #32]
 1620 00b8 2946     		mov	r1, r5
 1621 00ba 9847     		blx	r3
 1622              	.LVL191:
 1623              	.LBE73:
 1624              	.LBE74:
  76:subsystems/imu.c **** }
 1625              		.loc 2 76 0
 1626 00bc 04B0     		add	sp, sp, #16
 1627              	.LVL192:
 1628              		@ sp needed
 1629 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1630              	.LVL193:
 1631              	.L57:
 1632 00c2 00BF     		.align	2
 1633              	.L56:
 1634 00c4 62000000 		.word	.LC8
 1635 00c8 00000000 		.word	.LANCHOR0
 1636              		.cfi_endproc
 1637              	.LFE487:
 1639              		.section	.text.AbiSendMsgBODY_TO_IMU_QUAT.constprop.10,"ax",%progbits
 1640              		.align	1
 1641              		.thumb
 1642              		.thumb_func
 1644              	AbiSendMsgBODY_TO_IMU_QUAT.constprop.10:
 1645              	.LFB504:
 1646              		.file 4 "/home/lsk/paparazzi/var/include/abi_messages.h"
   1:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Automatically generated by gen_abi from /home/lsk/paparazzi/conf/abi.xml */
   2:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/abi_messages.h **** 
   4:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Onboard middleware library ABI
   5:/home/lsk/paparazzi/var/include/abi_messages.h ****  * send and receive messages of class airborne
   6:/home/lsk/paparazzi/var/include/abi_messages.h ****  */
   7:/home/lsk/paparazzi/var/include/abi_messages.h **** 
   8:/home/lsk/paparazzi/var/include/abi_messages.h **** #ifndef ABI_MESSAGES_H
   9:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_MESSAGES_H
  10:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  11:/home/lsk/paparazzi/var/include/abi_messages.h **** #include "subsystems/abi_common.h"
  12:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  13:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Messages IDs */
  14:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_BARO_ABS_ID 0
  15:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_BARO_DIFF_ID 1
  16:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_AGL_ID 2
  17:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_TEMPERATURE_ID 3
  18:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_GYRO_INT32_ID 4
  19:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_ACCEL_INT32_ID 5
  20:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_MAG_INT32_ID 6
  21:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_LOWPASSED_ID 7
  22:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_BODY_TO_IMU_QUAT_ID 8
  23:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_GEO_MAG_ID 9
  24:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_GPS_ID 10
  25:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  26:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Array and linked list structure */
  27:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_MESSAGE_NB 11
  28:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  29:/home/lsk/paparazzi/var/include/abi_messages.h **** ABI_EXTERN abi_event* abi_queues[ABI_MESSAGE_NB];
  30:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  31:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Callbacks */
  32:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBARO_ABS)(uint8_t sender_id, float pressure);
  33:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBARO_DIFF)(uint8_t sender_id, float pressure);
  34:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackAGL)(uint8_t sender_id, float distance);
  35:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackTEMPERATURE)(uint8_t sender_id, float temp);
  36:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_GYRO_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Rates * g
  37:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_ACCEL_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * 
  38:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_MAG_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * ma
  39:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_LOWPASSED)(uint8_t sender_id, uint32_t stamp, struct Int32Rates * gy
  40:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBODY_TO_IMU_QUAT)(uint8_t sender_id, struct FloatQuat * q_b2i_f);
  41:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackGEO_MAG)(uint8_t sender_id, struct FloatVect3 * h);
  42:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackGPS)(uint8_t sender_id, uint32_t stamp, struct GpsState * gps_s);
  43:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  44:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Bind and Send functions */
  45:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  46:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBARO_ABS(uint8_t sender_id, abi_event * ev, abi_callbackBARO_ABS cb) {
  47:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  48:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  49:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BARO_ABS_ID],ev);
  50:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  51:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  52:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBARO_ABS(uint8_t sender_id, float pressure) {
  53:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  54:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BARO_ABS_ID],e) {
  55:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  56:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackBARO_ABS cb = (abi_callbackBARO_ABS)(e->cb);
  57:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, pressure);
  58:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
  59:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
  60:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  61:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  62:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBARO_DIFF(uint8_t sender_id, abi_event * ev, abi_callbackBARO_DIFF cb)
  63:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  64:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  65:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BARO_DIFF_ID],ev);
  66:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  67:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  68:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBARO_DIFF(uint8_t sender_id, float pressure) {
  69:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  70:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BARO_DIFF_ID],e) {
  71:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  72:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackBARO_DIFF cb = (abi_callbackBARO_DIFF)(e->cb);
  73:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, pressure);
  74:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
  75:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
  76:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  77:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  78:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgAGL(uint8_t sender_id, abi_event * ev, abi_callbackAGL cb) {
  79:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  80:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  81:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_AGL_ID],ev);
  82:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  83:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  84:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgAGL(uint8_t sender_id, float distance) {
  85:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  86:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_AGL_ID],e) {
  87:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  88:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackAGL cb = (abi_callbackAGL)(e->cb);
  89:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, distance);
  90:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
  91:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
  92:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  93:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  94:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgTEMPERATURE(uint8_t sender_id, abi_event * ev, abi_callbackTEMPERATURE
  95:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  96:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  97:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_TEMPERATURE_ID],ev);
  98:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  99:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 100:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgTEMPERATURE(uint8_t sender_id, float temp) {
 101:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 102:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_TEMPERATURE_ID],e) {
 103:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 104:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackTEMPERATURE cb = (abi_callbackTEMPERATURE)(e->cb);
 105:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, temp);
 106:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
 107:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
 108:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 109:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 110:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgIMU_GYRO_INT32(uint8_t sender_id, abi_event * ev, abi_callbackIMU_GYRO
 111:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 112:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 113:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_IMU_GYRO_INT32_ID],ev);
 114:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 115:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 116:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgIMU_GYRO_INT32(uint8_t sender_id, uint32_t stamp, struct Int32Rates * 
 117:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 118:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_IMU_GYRO_INT32_ID],e) {
 119:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 120:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackIMU_GYRO_INT32 cb = (abi_callbackIMU_GYRO_INT32)(e->cb);
 121:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, stamp, gyro);
 122:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
 123:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
 124:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 125:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 126:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgIMU_ACCEL_INT32(uint8_t sender_id, abi_event * ev, abi_callbackIMU_ACC
 127:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 128:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 129:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_IMU_ACCEL_INT32_ID],ev);
 130:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 131:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 132:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgIMU_ACCEL_INT32(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 *
 133:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 134:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_IMU_ACCEL_INT32_ID],e) {
 135:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 136:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackIMU_ACCEL_INT32 cb = (abi_callbackIMU_ACCEL_INT32)(e->cb);
 137:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, stamp, accel);
 138:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
 139:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
 140:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 141:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 142:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgIMU_MAG_INT32(uint8_t sender_id, abi_event * ev, abi_callbackIMU_MAG_I
 143:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 144:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 145:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_IMU_MAG_INT32_ID],ev);
 146:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 147:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 148:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgIMU_MAG_INT32(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * m
 149:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 150:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_IMU_MAG_INT32_ID],e) {
 151:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 152:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackIMU_MAG_INT32 cb = (abi_callbackIMU_MAG_INT32)(e->cb);
 153:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, stamp, mag);
 154:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
 155:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
 156:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 157:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 158:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgIMU_LOWPASSED(uint8_t sender_id, abi_event * ev, abi_callbackIMU_LOWPA
 159:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 160:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 161:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_IMU_LOWPASSED_ID],ev);
 162:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 163:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 164:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgIMU_LOWPASSED(uint8_t sender_id, uint32_t stamp, struct Int32Rates * g
 165:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 166:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_IMU_LOWPASSED_ID],e) {
 167:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 168:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackIMU_LOWPASSED cb = (abi_callbackIMU_LOWPASSED)(e->cb);
 169:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, stamp, gyro, accel, mag);
 170:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
 171:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
 172:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 173:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 174:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBODY_TO_IMU_QUAT(uint8_t sender_id, abi_event * ev, abi_callbackBODY_T
 175:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 176:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 177:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BODY_TO_IMU_QUAT_ID],ev);
 178:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 179:/home/lsk/paparazzi/var/include/abi_messages.h **** 
 180:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBODY_TO_IMU_QUAT(uint8_t sender_id, struct FloatQuat * q_b2i_f) {
 1647              		.loc 4 180 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 0
 1650              		@ frame_needed = 0, uses_anonymous_args = 0
 1651              	.LVL194:
 1652 0000 38B5     		push	{r3, r4, r5, lr}
 1653              		.cfi_def_cfa_offset 16
 1654              		.cfi_offset 3, -16
 1655              		.cfi_offset 4, -12
 1656              		.cfi_offset 5, -8
 1657              		.cfi_offset 14, -4
 181:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 182:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BODY_TO_IMU_QUAT_ID],e) {
 1658              		.loc 4 182 0
 1659 0002 074B     		ldr	r3, .L63
 1660 0004 1C6A     		ldr	r4, [r3, #32]
 1661              	.LVL195:
 180:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBODY_TO_IMU_QUAT(uint8_t sender_id, struct FloatQuat * q_b2i_f) {
 1662              		.loc 4 180 0
 1663 0006 0546     		mov	r5, r0
 1664              	.LVL196:
 1665              	.L59:
 1666              		.loc 4 182 0
 1667 0008 44B1     		cbz	r4, .L62
 183:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 1668              		.loc 4 183 0
 1669 000a 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1670 000c 012B     		cmp	r3, #1
 1671 000e 03D8     		bhi	.L60
 1672              	.LVL197:
 1673              	.LBB75:
 184:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackBODY_TO_IMU_QUAT cb = (abi_callbackBODY_TO_IMU_QUAT)(e->cb);
 185:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, q_b2i_f);
 1674              		.loc 4 185 0
 1675 0010 6368     		ldr	r3, [r4, #4]
 1676 0012 0120     		movs	r0, #1
 1677 0014 2946     		mov	r1, r5
 1678 0016 9847     		blx	r3
 1679              	.LVL198:
 1680              	.L60:
 1681              	.LBE75:
 182:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BODY_TO_IMU_QUAT_ID],e) {
 1682              		.loc 4 182 0
 1683 0018 A468     		ldr	r4, [r4, #8]
 1684              	.LVL199:
 1685 001a F5E7     		b	.L59
 1686              	.L62:
 186:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
 187:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
 188:/home/lsk/paparazzi/var/include/abi_messages.h **** }
 1687              		.loc 4 188 0
 1688 001c 38BD     		pop	{r3, r4, r5, pc}
 1689              	.LVL200:
 1690              	.L64:
 1691 001e 00BF     		.align	2
 1692              	.L63:
 1693 0020 00000000 		.word	abi_queues
 1694              		.cfi_endproc
 1695              	.LFE504:
 1697              		.section	.text.orientationGetQuat_f.constprop.11,"ax",%progbits
 1698              		.align	1
 1699              		.thumb
 1700              		.thumb_func
 1702              	orientationGetQuat_f.constprop.11:
 1703              	.LFB503:
 217:./math/pprz_orientation_conversion.h **** static inline struct FloatQuat *orientationGetQuat_f(struct OrientationReps *orientation)
 1704              		.loc 1 217 0
 1705              		.cfi_startproc
 1706              		@ args = 0, pretend = 0, frame = 0
 1707              		@ frame_needed = 0, uses_anonymous_args = 0
 1708              	.LVL201:
 1709 0000 08B5     		push	{r3, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 3, -8
 1712              		.cfi_offset 14, -4
 219:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_QUAT_F)) {
 1713              		.loc 1 219 0
 1714 0002 0548     		ldr	r0, .L67
 1715 0004 90F88430 		ldrb	r3, [r0, #132]	@ zero_extendqisi2
 1716 0008 1B07     		lsls	r3, r3, #28
 1717 000a 02D4     		bmi	.L66
 220:./math/pprz_orientation_conversion.h ****     orientationCalcQuat_f(orientation);
 1718              		.loc 1 220 0
 1719 000c 8430     		adds	r0, r0, #132
 1720 000e FFF7FEFF 		bl	orientationCalcQuat_f
 1721              	.LVL202:
 1722              	.L66:
 223:./math/pprz_orientation_conversion.h **** }
 1723              		.loc 1 223 0
 1724 0012 0248     		ldr	r0, .L67+4
 1725 0014 08BD     		pop	{r3, pc}
 1726              	.L68:
 1727 0016 00BF     		.align	2
 1728              	.L67:
 1729 0018 00000000 		.word	.LANCHOR0
 1730 001c C8000000 		.word	.LANCHOR0+200
 1731              		.cfi_endproc
 1732              	.LFE503:
 1734              		.section	.text.imu_init,"ax",%progbits
 1735              		.align	1
 1736              		.global	imu_init
 1737              		.thumb
 1738              		.thumb_func
 1740              	imu_init:
 1741              	.LFB492:
 105:subsystems/imu.c **** 
 106:subsystems/imu.c **** #endif /* PERIODIC_TELEMETRY */
 107:subsystems/imu.c **** 
 108:subsystems/imu.c **** struct Imu imu;
 109:subsystems/imu.c **** 
 110:subsystems/imu.c **** void imu_init(void)
 111:subsystems/imu.c **** {
 1742              		.loc 2 111 0
 1743              		.cfi_startproc
 1744              		@ args = 0, pretend = 0, frame = 0
 1745              		@ frame_needed = 0, uses_anonymous_args = 0
 112:subsystems/imu.c **** 
 113:subsystems/imu.c **** #ifdef IMU_POWER_GPIO
 114:subsystems/imu.c ****   gpio_setup_output(IMU_POWER_GPIO);
 115:subsystems/imu.c ****   IMU_POWER_GPIO_ON(IMU_POWER_GPIO);
 116:subsystems/imu.c **** #endif
 117:subsystems/imu.c **** 
 118:subsystems/imu.c ****   /* initialises neutrals */
 119:subsystems/imu.c ****   RATES_ASSIGN(imu.gyro_neutral,  IMU_GYRO_P_NEUTRAL,  IMU_GYRO_Q_NEUTRAL,  IMU_GYRO_R_NEUTRAL);
 1746              		.loc 2 119 0
 1747 0000 324B     		ldr	r3, .L70
 1748 0002 0022     		movs	r2, #0
 111:subsystems/imu.c **** {
 1749              		.loc 2 111 0
 1750 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1751              		.cfi_def_cfa_offset 24
 1752              		.cfi_offset 4, -24
 1753              		.cfi_offset 5, -20
 1754              		.cfi_offset 6, -16
 1755              		.cfi_offset 7, -12
 1756              		.cfi_offset 8, -8
 1757              		.cfi_offset 14, -4
 1758              		.loc 2 119 0
 1759 0008 DA63     		str	r2, [r3, #60]
 1760 000a 1A64     		str	r2, [r3, #64]
 1761 000c 5A64     		str	r2, [r3, #68]
 120:subsystems/imu.c **** 
 121:subsystems/imu.c ****   VECT3_ASSIGN(imu.accel_neutral, IMU_ACCEL_X_NEUTRAL, IMU_ACCEL_Y_NEUTRAL, IMU_ACCEL_Z_NEUTRAL);
 1762              		.loc 2 121 0
 1763 000e 6FF05702 		mvn	r2, #87
 1764 0012 9A64     		str	r2, [r3, #72]
 1765 0014 4FF48A72 		mov	r2, #276
 1766 0018 DA64     		str	r2, [r3, #76]
 1767 001a A2F5AB62 		sub	r2, r2, #1368
 1768 001e 1A65     		str	r2, [r3, #80]
 122:subsystems/imu.c **** 
 123:subsystems/imu.c **** #if defined IMU_MAG_X_NEUTRAL && defined IMU_MAG_Y_NEUTRAL && defined IMU_MAG_Z_NEUTRAL
 124:subsystems/imu.c ****   VECT3_ASSIGN(imu.mag_neutral,   IMU_MAG_X_NEUTRAL,   IMU_MAG_Y_NEUTRAL,   IMU_MAG_Z_NEUTRAL);
 1769              		.loc 2 124 0
 1770 0020 6FF05802 		mvn	r2, #88
 1771 0024 5A65     		str	r2, [r3, #84]
 1772 0026 6FF4E561 		mvn	r1, #1832
 1773 002a 40F24A22 		movw	r2, #586
 1774 002e 9A65     		str	r2, [r3, #88]
 1775 0030 0A44     		add	r2, r2, r1
 1776 0032 DA65     		str	r2, [r3, #92]
 1777              	.LVL203:
 125:subsystems/imu.c **** #else
 126:subsystems/imu.c **** #if USE_MAGNETOMETER
 127:subsystems/imu.c ****   INFO("Magnetometer neutrals are set to zero, you should calibrate!")
 128:subsystems/imu.c **** #endif
 129:subsystems/imu.c ****   INT_VECT3_ZERO(imu.mag_neutral);
 130:subsystems/imu.c **** #endif
 131:subsystems/imu.c **** 
 132:subsystems/imu.c ****   struct FloatEulers body_to_imu_eulers =
 133:subsystems/imu.c ****   {IMU_BODY_TO_IMU_PHI, IMU_BODY_TO_IMU_THETA, IMU_BODY_TO_IMU_PSI};
 134:subsystems/imu.c ****   orientationSetEulers_f(&imu.body_to_imu, &body_to_imu_eulers);
 135:subsystems/imu.c **** 
 136:subsystems/imu.c **** #if PERIODIC_TELEMETRY
 137:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_ACCEL", send_accel);
 1778              		.loc 2 137 0
 1779 0034 264C     		ldr	r4, .L70+4
 1780 0036 DFF8E080 		ldr	r8, .L70+76
 1781 003a 264F     		ldr	r7, .L70+8
 138:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_GYRO", send_gyro);
 1782              		.loc 2 138 0
 1783 003c 264E     		ldr	r6, .L70+12
 1784 003e 274D     		ldr	r5, .L70+16
 1785              	.LBB78:
 1786              	.LBB79:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 1787              		.loc 1 183 0
 1788 0040 0022     		movs	r2, #0
 1789 0042 C3F8D820 		str	r2, [r3, #216]	@ float
 1790 0046 C3F8DC20 		str	r2, [r3, #220]	@ float
 1791 004a C3F8E020 		str	r2, [r3, #224]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 1792              		.loc 1 185 0
 1793 004e 1022     		movs	r2, #16
 1794 0050 83F88420 		strb	r2, [r3, #132]
 1795              	.LBE79:
 1796              	.LBE78:
 137:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_ACCEL", send_accel);
 1797              		.loc 2 137 0
 1798 0054 4146     		mov	r1, r8
 1799 0056 3A46     		mov	r2, r7
 1800 0058 2046     		mov	r0, r4
 1801 005a FFF7FEFF 		bl	register_periodic_telemetry
 1802              	.LVL204:
 1803              		.loc 2 138 0
 1804 005e 3146     		mov	r1, r6
 1805 0060 2A46     		mov	r2, r5
 1806 0062 2046     		mov	r0, r4
 1807 0064 FFF7FEFF 		bl	register_periodic_telemetry
 1808              	.LVL205:
 139:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_ACCEL_RAW", send_accel_raw);
 1809              		.loc 2 139 0
 1810 0068 2046     		mov	r0, r4
 1811 006a 1D49     		ldr	r1, .L70+20
 1812 006c 1D4A     		ldr	r2, .L70+24
 1813 006e FFF7FEFF 		bl	register_periodic_telemetry
 1814              	.LVL206:
 140:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_ACCEL_SCALED", send_accel_scaled);
 1815              		.loc 2 140 0
 1816 0072 2046     		mov	r0, r4
 1817 0074 1C49     		ldr	r1, .L70+28
 1818 0076 1D4A     		ldr	r2, .L70+32
 1819 0078 FFF7FEFF 		bl	register_periodic_telemetry
 1820              	.LVL207:
 141:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_ACCEL", send_accel);
 1821              		.loc 2 141 0
 1822 007c 4146     		mov	r1, r8
 1823 007e 3A46     		mov	r2, r7
 1824 0080 2046     		mov	r0, r4
 1825 0082 FFF7FEFF 		bl	register_periodic_telemetry
 1826              	.LVL208:
 142:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_GYRO_RAW", send_gyro_raw);
 1827              		.loc 2 142 0
 1828 0086 2046     		mov	r0, r4
 1829 0088 1949     		ldr	r1, .L70+36
 1830 008a 1A4A     		ldr	r2, .L70+40
 1831 008c FFF7FEFF 		bl	register_periodic_telemetry
 1832              	.LVL209:
 143:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_GYRO_SCALED", send_gyro_scaled);
 1833              		.loc 2 143 0
 1834 0090 2046     		mov	r0, r4
 1835 0092 1949     		ldr	r1, .L70+44
 1836 0094 194A     		ldr	r2, .L70+48
 1837 0096 FFF7FEFF 		bl	register_periodic_telemetry
 1838              	.LVL210:
 144:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_GYRO", send_gyro);
 1839              		.loc 2 144 0
 1840 009a 3146     		mov	r1, r6
 1841 009c 2A46     		mov	r2, r5
 1842 009e 2046     		mov	r0, r4
 1843 00a0 FFF7FEFF 		bl	register_periodic_telemetry
 1844              	.LVL211:
 145:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_MAG_RAW", send_mag_raw);
 1845              		.loc 2 145 0
 1846 00a4 2046     		mov	r0, r4
 1847 00a6 1649     		ldr	r1, .L70+52
 1848 00a8 164A     		ldr	r2, .L70+56
 1849 00aa FFF7FEFF 		bl	register_periodic_telemetry
 1850              	.LVL212:
 146:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_MAG_SCALED", send_mag_scaled);
 1851              		.loc 2 146 0
 1852 00ae 2046     		mov	r0, r4
 1853 00b0 1549     		ldr	r1, .L70+60
 1854 00b2 164A     		ldr	r2, .L70+64
 1855 00b4 FFF7FEFF 		bl	register_periodic_telemetry
 1856              	.LVL213:
 147:subsystems/imu.c ****   register_periodic_telemetry(DefaultPeriodic, "IMU_MAG", send_mag);
 1857              		.loc 2 147 0
 1858 00b8 2046     		mov	r0, r4
 1859 00ba 1549     		ldr	r1, .L70+68
 1860 00bc 154A     		ldr	r2, .L70+72
 1861 00be FFF7FEFF 		bl	register_periodic_telemetry
 1862              	.LVL214:
 148:subsystems/imu.c **** #endif // DOWNLINK
 149:subsystems/imu.c **** 
 150:subsystems/imu.c ****   imu_impl_init();
 151:subsystems/imu.c **** }
 1863              		.loc 2 151 0
 1864 00c2 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 150:subsystems/imu.c ****   imu_impl_init();
 1865              		.loc 2 150 0
 1866 00c6 FFF7FEBF 		b	imu_impl_init
 1867              	.LVL215:
 1868              	.L71:
 1869 00ca 00BF     		.align	2
 1870              	.L70:
 1871 00cc 00000000 		.word	.LANCHOR0
 1872 00d0 00000000 		.word	pprz_telemetry
 1873 00d4 00000000 		.word	send_accel
 1874 00d8 39000000 		.word	.LC5
 1875 00dc 00000000 		.word	send_gyro
 1876 00e0 0C000000 		.word	.LC1
 1877 00e4 00000000 		.word	send_accel_raw
 1878 00e8 51000000 		.word	.LC7
 1879 00ec 00000000 		.word	send_accel_scaled
 1880 00f0 1A000000 		.word	.LC2
 1881 00f4 00000000 		.word	send_gyro_raw
 1882 00f8 62000000 		.word	.LC8
 1883 00fc 00000000 		.word	send_gyro_scaled
 1884 0100 00000000 		.word	.LC0
 1885 0104 00000000 		.word	send_mag_raw
 1886 0108 42000000 		.word	.LC6
 1887 010c 00000000 		.word	send_mag_scaled
 1888 0110 31000000 		.word	.LC4
 1889 0114 00000000 		.word	send_mag
 1890 0118 27000000 		.word	.LC3
 1891              		.cfi_endproc
 1892              	.LFE492:
 1894              		.section	.text.imu_SetBodyToImuPhi,"ax",%progbits
 1895              		.align	1
 1896              		.global	imu_SetBodyToImuPhi
 1897              		.thumb
 1898              		.thumb_func
 1900              	imu_SetBodyToImuPhi:
 1901              	.LFB493:
 152:subsystems/imu.c **** 
 153:subsystems/imu.c **** 
 154:subsystems/imu.c **** void imu_SetBodyToImuPhi(float phi)
 155:subsystems/imu.c **** {
 1902              		.loc 2 155 0
 1903              		.cfi_startproc
 1904              		@ args = 0, pretend = 0, frame = 16
 1905              		@ frame_needed = 0, uses_anonymous_args = 0
 1906              	.LVL216:
 1907 0000 30B5     		push	{r4, r5, lr}
 1908              		.cfi_def_cfa_offset 12
 1909              		.cfi_offset 4, -12
 1910              		.cfi_offset 5, -8
 1911              		.cfi_offset 14, -4
 156:subsystems/imu.c ****   struct FloatEulers body_to_imu_eulers;
 157:subsystems/imu.c ****   memcpy(&body_to_imu_eulers, orientationGetEulers_f(&imu.body_to_imu), sizeof(struct FloatEulers))
 1912              		.loc 2 157 0
 1913 0002 104C     		ldr	r4, .L73
 155:subsystems/imu.c **** {
 1914              		.loc 2 155 0
 1915 0004 85B0     		sub	sp, sp, #20
 1916              		.cfi_def_cfa_offset 32
 155:subsystems/imu.c **** {
 1917              		.loc 2 155 0
 1918 0006 0546     		mov	r5, r0	@ float
 1919              		.loc 2 157 0
 1920 0008 04F18400 		add	r0, r4, #132
 1921              	.LVL217:
 1922 000c FFF7FEFF 		bl	orientationGetEulers_f
 1923              	.LVL218:
 1924 0010 0246     		mov	r2, r0
 1925 0012 0068     		ldr	r0, [r0]	@ unaligned
 1926 0014 5168     		ldr	r1, [r2, #4]	@ unaligned
 1927 0016 01AB     		add	r3, sp, #4
 1928 0018 03C3     		stmia	r3!, {r0, r1}
 1929 001a 9068     		ldr	r0, [r2, #8]	@ unaligned
 1930 001c 1860     		str	r0, [r3]	@ unaligned
 1931              	.LVL219:
 1932              	.LBB82:
 1933              	.LBB83:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 1934              		.loc 1 183 0
 1935 001e 029B     		ldr	r3, [sp, #8]	@ float
 1936              	.LVL220:
 1937 0020 C4F8DC30 		str	r3, [r4, #220]	@ float
 1938 0024 039B     		ldr	r3, [sp, #12]	@ float
 1939 0026 C4F8E030 		str	r3, [r4, #224]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 1940              		.loc 1 185 0
 1941 002a 1023     		movs	r3, #16
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 1942              		.loc 1 183 0
 1943 002c C4F8D850 		str	r5, [r4, #216]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 1944              		.loc 1 185 0
 1945 0030 84F88430 		strb	r3, [r4, #132]
 1946              	.LBE83:
 1947              	.LBE82:
 158:subsystems/imu.c ****   body_to_imu_eulers.phi = phi;
 159:subsystems/imu.c ****   orientationSetEulers_f(&imu.body_to_imu, &body_to_imu_eulers);
 160:subsystems/imu.c ****   AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 1948              		.loc 2 160 0
 1949 0034 FFF7FEFF 		bl	orientationGetQuat_f.constprop.11
 1950              	.LVL221:
 161:subsystems/imu.c **** }
 1951              		.loc 2 161 0
 1952 0038 05B0     		add	sp, sp, #20
 1953              		@ sp needed
 1954 003a BDE83040 		pop	{r4, r5, lr}
 1955              	.LVL222:
 160:subsystems/imu.c ****   AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 1956              		.loc 2 160 0
 1957 003e FFF7FEBF 		b	AbiSendMsgBODY_TO_IMU_QUAT.constprop.10
 1958              	.LVL223:
 1959              	.L74:
 1960 0042 00BF     		.align	2
 1961              	.L73:
 1962 0044 00000000 		.word	.LANCHOR0
 1963              		.cfi_endproc
 1964              	.LFE493:
 1966              		.section	.text.imu_SetBodyToImuTheta,"ax",%progbits
 1967              		.align	1
 1968              		.global	imu_SetBodyToImuTheta
 1969              		.thumb
 1970              		.thumb_func
 1972              	imu_SetBodyToImuTheta:
 1973              	.LFB494:
 162:subsystems/imu.c **** 
 163:subsystems/imu.c **** void imu_SetBodyToImuTheta(float theta)
 164:subsystems/imu.c **** {
 1974              		.loc 2 164 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 16
 1977              		@ frame_needed = 0, uses_anonymous_args = 0
 1978              	.LVL224:
 1979 0000 30B5     		push	{r4, r5, lr}
 1980              		.cfi_def_cfa_offset 12
 1981              		.cfi_offset 4, -12
 1982              		.cfi_offset 5, -8
 1983              		.cfi_offset 14, -4
 165:subsystems/imu.c ****   struct FloatEulers body_to_imu_eulers;
 166:subsystems/imu.c ****   memcpy(&body_to_imu_eulers, orientationGetEulers_f(&imu.body_to_imu), sizeof(struct FloatEulers))
 1984              		.loc 2 166 0
 1985 0002 104C     		ldr	r4, .L76
 164:subsystems/imu.c **** {
 1986              		.loc 2 164 0
 1987 0004 85B0     		sub	sp, sp, #20
 1988              		.cfi_def_cfa_offset 32
 164:subsystems/imu.c **** {
 1989              		.loc 2 164 0
 1990 0006 0546     		mov	r5, r0	@ float
 1991              		.loc 2 166 0
 1992 0008 04F18400 		add	r0, r4, #132
 1993              	.LVL225:
 1994 000c FFF7FEFF 		bl	orientationGetEulers_f
 1995              	.LVL226:
 1996 0010 0246     		mov	r2, r0
 1997 0012 0068     		ldr	r0, [r0]	@ unaligned
 1998 0014 5168     		ldr	r1, [r2, #4]	@ unaligned
 1999 0016 01AB     		add	r3, sp, #4
 2000 0018 03C3     		stmia	r3!, {r0, r1}
 2001 001a 9068     		ldr	r0, [r2, #8]	@ unaligned
 2002 001c 1860     		str	r0, [r3]	@ unaligned
 2003              	.LVL227:
 2004              	.LBB86:
 2005              	.LBB87:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2006              		.loc 1 183 0
 2007 001e 019B     		ldr	r3, [sp, #4]	@ float
 2008              	.LVL228:
 2009 0020 C4F8D830 		str	r3, [r4, #216]	@ float
 2010 0024 039B     		ldr	r3, [sp, #12]	@ float
 2011 0026 C4F8E030 		str	r3, [r4, #224]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 2012              		.loc 1 185 0
 2013 002a 1023     		movs	r3, #16
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2014              		.loc 1 183 0
 2015 002c C4F8DC50 		str	r5, [r4, #220]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 2016              		.loc 1 185 0
 2017 0030 84F88430 		strb	r3, [r4, #132]
 2018              	.LBE87:
 2019              	.LBE86:
 167:subsystems/imu.c ****   body_to_imu_eulers.theta = theta;
 168:subsystems/imu.c ****   orientationSetEulers_f(&imu.body_to_imu, &body_to_imu_eulers);
 169:subsystems/imu.c ****   AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 2020              		.loc 2 169 0
 2021 0034 FFF7FEFF 		bl	orientationGetQuat_f.constprop.11
 2022              	.LVL229:
 170:subsystems/imu.c **** }
 2023              		.loc 2 170 0
 2024 0038 05B0     		add	sp, sp, #20
 2025              		@ sp needed
 2026 003a BDE83040 		pop	{r4, r5, lr}
 2027              	.LVL230:
 169:subsystems/imu.c ****   AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 2028              		.loc 2 169 0
 2029 003e FFF7FEBF 		b	AbiSendMsgBODY_TO_IMU_QUAT.constprop.10
 2030              	.LVL231:
 2031              	.L77:
 2032 0042 00BF     		.align	2
 2033              	.L76:
 2034 0044 00000000 		.word	.LANCHOR0
 2035              		.cfi_endproc
 2036              	.LFE494:
 2038              		.section	.text.imu_SetBodyToImuPsi,"ax",%progbits
 2039              		.align	1
 2040              		.global	imu_SetBodyToImuPsi
 2041              		.thumb
 2042              		.thumb_func
 2044              	imu_SetBodyToImuPsi:
 2045              	.LFB495:
 171:subsystems/imu.c **** 
 172:subsystems/imu.c **** void imu_SetBodyToImuPsi(float psi)
 173:subsystems/imu.c **** {
 2046              		.loc 2 173 0
 2047              		.cfi_startproc
 2048              		@ args = 0, pretend = 0, frame = 16
 2049              		@ frame_needed = 0, uses_anonymous_args = 0
 2050              	.LVL232:
 2051 0000 30B5     		push	{r4, r5, lr}
 2052              		.cfi_def_cfa_offset 12
 2053              		.cfi_offset 4, -12
 2054              		.cfi_offset 5, -8
 2055              		.cfi_offset 14, -4
 174:subsystems/imu.c ****   struct FloatEulers body_to_imu_eulers;
 175:subsystems/imu.c ****   memcpy(&body_to_imu_eulers, orientationGetEulers_f(&imu.body_to_imu), sizeof(struct FloatEulers))
 2056              		.loc 2 175 0
 2057 0002 104C     		ldr	r4, .L79
 173:subsystems/imu.c **** {
 2058              		.loc 2 173 0
 2059 0004 85B0     		sub	sp, sp, #20
 2060              		.cfi_def_cfa_offset 32
 173:subsystems/imu.c **** {
 2061              		.loc 2 173 0
 2062 0006 0546     		mov	r5, r0	@ float
 2063              		.loc 2 175 0
 2064 0008 04F18400 		add	r0, r4, #132
 2065              	.LVL233:
 2066 000c FFF7FEFF 		bl	orientationGetEulers_f
 2067              	.LVL234:
 2068 0010 0246     		mov	r2, r0
 2069 0012 0068     		ldr	r0, [r0]	@ unaligned
 2070 0014 5168     		ldr	r1, [r2, #4]	@ unaligned
 2071 0016 01AB     		add	r3, sp, #4
 2072 0018 03C3     		stmia	r3!, {r0, r1}
 2073 001a 9068     		ldr	r0, [r2, #8]	@ unaligned
 2074 001c 1860     		str	r0, [r3]	@ unaligned
 2075              	.LVL235:
 2076              	.LBB90:
 2077              	.LBB91:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2078              		.loc 1 183 0
 2079 001e 019B     		ldr	r3, [sp, #4]	@ float
 2080              	.LVL236:
 2081 0020 C4F8D830 		str	r3, [r4, #216]	@ float
 2082 0024 029B     		ldr	r3, [sp, #8]	@ float
 2083 0026 C4F8DC30 		str	r3, [r4, #220]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 2084              		.loc 1 185 0
 2085 002a 1023     		movs	r3, #16
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2086              		.loc 1 183 0
 2087 002c C4F8E050 		str	r5, [r4, #224]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 2088              		.loc 1 185 0
 2089 0030 84F88430 		strb	r3, [r4, #132]
 2090              	.LBE91:
 2091              	.LBE90:
 176:subsystems/imu.c ****   body_to_imu_eulers.psi = psi;
 177:subsystems/imu.c ****   orientationSetEulers_f(&imu.body_to_imu, &body_to_imu_eulers);
 178:subsystems/imu.c ****   AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 2092              		.loc 2 178 0
 2093 0034 FFF7FEFF 		bl	orientationGetQuat_f.constprop.11
 2094              	.LVL237:
 179:subsystems/imu.c **** }
 2095              		.loc 2 179 0
 2096 0038 05B0     		add	sp, sp, #20
 2097              		@ sp needed
 2098 003a BDE83040 		pop	{r4, r5, lr}
 2099              	.LVL238:
 178:subsystems/imu.c ****   AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 2100              		.loc 2 178 0
 2101 003e FFF7FEBF 		b	AbiSendMsgBODY_TO_IMU_QUAT.constprop.10
 2102              	.LVL239:
 2103              	.L80:
 2104 0042 00BF     		.align	2
 2105              	.L79:
 2106 0044 00000000 		.word	.LANCHOR0
 2107              		.cfi_endproc
 2108              	.LFE495:
 2110              		.section	.text.imu_SetBodyToImuCurrent,"ax",%progbits
 2111              		.align	1
 2112              		.global	imu_SetBodyToImuCurrent
 2113              		.thumb
 2114              		.thumb_func
 2116              	imu_SetBodyToImuCurrent:
 2117              	.LFB496:
 180:subsystems/imu.c **** 
 181:subsystems/imu.c **** void imu_SetBodyToImuCurrent(float set)
 182:subsystems/imu.c **** {
 2118              		.loc 2 182 0
 2119              		.cfi_startproc
 2120              		@ args = 0, pretend = 0, frame = 16
 2121              		@ frame_needed = 0, uses_anonymous_args = 0
 2122              	.LVL240:
 2123 0000 30B5     		push	{r4, r5, lr}
 2124              		.cfi_def_cfa_offset 12
 2125              		.cfi_offset 4, -12
 2126              		.cfi_offset 5, -8
 2127              		.cfi_offset 14, -4
 183:subsystems/imu.c ****   imu.b2i_set_current = set;
 2128              		.loc 2 183 0
 2129 0002 07EE900A 		fmsr	s15, r0
 2130 0006 FCEEE77A 		ftouizs	s15, s15
 182:subsystems/imu.c **** {
 2131              		.loc 2 182 0
 2132 000a 2DED028B 		fstmfdd	sp!, {d8}
 2133              		.cfi_def_cfa_offset 20
 2134              		.cfi_offset 80, -20
 2135              		.loc 2 183 0
 2136 000e 17EE900A 		fmrs	r0, s15	@ int
 2137              	.LVL241:
 2138 0012 244C     		ldr	r4, .L87
 2139 0014 C0B2     		uxtb	r0, r0
 182:subsystems/imu.c **** {
 2140              		.loc 2 182 0
 2141 0016 85B0     		sub	sp, sp, #20
 2142              		.cfi_def_cfa_offset 40
 2143              		.loc 2 183 0
 2144 0018 84F80801 		strb	r0, [r4, #264]
 184:subsystems/imu.c **** 
 185:subsystems/imu.c ****   if (imu.b2i_set_current) {
 2145              		.loc 2 185 0
 2146 001c 70B3     		cbz	r0, .L82
 2147              	.LBB104:
 186:subsystems/imu.c ****     // adjust imu_to_body roll and pitch by current NedToBody roll and pitch
 187:subsystems/imu.c ****     struct FloatEulers body_to_imu_eulers;
 188:subsystems/imu.c ****     memcpy(&body_to_imu_eulers, orientationGetEulers_f(&imu.body_to_imu), sizeof(struct FloatEulers
 2148              		.loc 2 188 0
 2149 001e 04F18400 		add	r0, r4, #132
 2150 0022 FFF7FEFF 		bl	orientationGetEulers_f
 2151              	.LVL242:
 2152 0026 0246     		mov	r2, r0
 2153 0028 0068     		ldr	r0, [r0]	@ unaligned
 2154 002a 5168     		ldr	r1, [r2, #4]	@ unaligned
 2155              	.LBB105:
 2156              	.LBB106:
 2157              		.file 5 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: degrees*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   uint32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i *ltp_def)
 441:./state.h     **** {
 442:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 443:./state.h     ****   /* convert to float */
 444:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 445:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 446:./state.h     ****   HIGH_RES_RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 447:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 448:./state.h     **** 
 449:./state.h     ****   /* clear bits for all local frame representations */
 450:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 451:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 453:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 454:./state.h     **** 
 455:./state.h     ****   state.ned_initialized_i = TRUE;
 456:./state.h     ****   state.ned_initialized_f = TRUE;
 457:./state.h     **** }
 458:./state.h     **** 
 459:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 460:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f *utm_def)
 461:./state.h     **** {
 462:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 463:./state.h     ****   state.utm_initialized_f = TRUE;
 464:./state.h     **** 
 465:./state.h     ****   /* clear bits for all local frame representations */
 466:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 467:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 468:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 469:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 470:./state.h     **** }
 471:./state.h     **** /*******************************************************************************
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 474:./state.h     ****  *                                                                             *
 475:./state.h     ****  ******************************************************************************/
 476:./state.h     **** 
 477:./state.h     **** /************* declaration of transformation functions ************/
 478:./state.h     **** extern void stateCalcPositionEcef_i(void);
 479:./state.h     **** extern void stateCalcPositionNed_i(void);
 480:./state.h     **** extern void stateCalcPositionEnu_i(void);
 481:./state.h     **** extern void stateCalcPositionLla_i(void);
 482:./state.h     **** extern void stateCalcPositionUtm_f(void);
 483:./state.h     **** extern void stateCalcPositionEcef_f(void);
 484:./state.h     **** extern void stateCalcPositionNed_f(void);
 485:./state.h     **** extern void stateCalcPositionEnu_f(void);
 486:./state.h     **** extern void stateCalcPositionLla_f(void);
 487:./state.h     **** 
 488:./state.h     **** /*********************** validity test functions ******************/
 489:./state.h     **** 
 490:./state.h     **** /// Test if local coordinates are valid.
 491:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void)
 492:./state.h     **** {
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 495:./state.h     **** }
 496:./state.h     **** 
 497:./state.h     **** /// Test if global coordinates are valid.
 498:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void)
 499:./state.h     **** {
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 501:./state.h     **** }
 502:./state.h     **** 
 503:./state.h     **** /************************ Set functions ****************************/
 504:./state.h     **** 
 505:./state.h     **** /// Set position from ECEF coordinates (int).
 506:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i *ecef_pos)
 507:./state.h     **** {
 508:./state.h     ****   VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 509:./state.h     ****   /* clear bits for all position representations and only set the new one */
 510:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 511:./state.h     **** }
 512:./state.h     **** 
 513:./state.h     **** /// Set position from local NED coordinates (int).
 514:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i *ned_pos)
 515:./state.h     **** {
 516:./state.h     ****   VECT3_COPY(state.ned_pos_i, *ned_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from local ENU coordinates (int).
 522:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i *enu_pos)
 523:./state.h     **** {
 524:./state.h     ****   VECT3_COPY(state.enu_pos_i, *enu_pos);
 525:./state.h     ****   /* clear bits for all position representations and only set the new one */
 526:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 527:./state.h     **** }
 528:./state.h     **** 
 529:./state.h     **** /// Set position from LLA coordinates (int).
 530:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i *lla_pos)
 531:./state.h     **** {
 532:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 533:./state.h     ****   /* clear bits for all position representations and only set the new one */
 534:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 535:./state.h     **** }
 536:./state.h     **** 
 537:./state.h     **** /// Set multiple position coordinates (int).
 538:./state.h     **** static inline void stateSetPosition_i(
 539:./state.h     ****   struct EcefCoor_i *ecef_pos,
 540:./state.h     ****   struct NedCoor_i *ned_pos,
 541:./state.h     ****   struct EnuCoor_i *enu_pos,
 542:./state.h     ****   struct LlaCoor_i *lla_pos)
 543:./state.h     **** {
 544:./state.h     ****   /* clear all status bit */
 545:./state.h     ****   state.pos_status = 0;
 546:./state.h     ****   if (ecef_pos != NULL) {
 547:./state.h     ****     VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 548:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 549:./state.h     ****   }
 550:./state.h     ****   if (ned_pos != NULL) {
 551:./state.h     ****     VECT3_COPY(state.ned_pos_i, *ned_pos);
 552:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 553:./state.h     ****   }
 554:./state.h     ****   if (enu_pos != NULL) {
 555:./state.h     ****     VECT3_COPY(state.enu_pos_i, *enu_pos);
 556:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 557:./state.h     ****   }
 558:./state.h     ****   if (lla_pos != NULL) {
 559:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 560:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 561:./state.h     ****   }
 562:./state.h     **** }
 563:./state.h     **** 
 564:./state.h     **** /// Set position from UTM coordinates (float).
 565:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f *utm_pos)
 566:./state.h     **** {
 567:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 568:./state.h     ****   /* clear bits for all position representations and only set the new one */
 569:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 570:./state.h     **** }
 571:./state.h     **** 
 572:./state.h     **** /// Set position from ECEF coordinates (float).
 573:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f *ecef_pos)
 574:./state.h     **** {
 575:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 576:./state.h     ****   /* clear bits for all position representations and only set the new one */
 577:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 578:./state.h     **** }
 579:./state.h     **** 
 580:./state.h     **** /// Set position from local NED coordinates (float).
 581:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f *ned_pos)
 582:./state.h     **** {
 583:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 584:./state.h     ****   /* clear bits for all position representations and only set the new one */
 585:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 586:./state.h     **** }
 587:./state.h     **** 
 588:./state.h     **** /// Set position from local ENU coordinates (float).
 589:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f *enu_pos)
 590:./state.h     **** {
 591:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 592:./state.h     ****   /* clear bits for all position representations and only set the new one */
 593:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 594:./state.h     **** }
 595:./state.h     **** 
 596:./state.h     **** /// Set position from LLA coordinates (float).
 597:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f *lla_pos)
 598:./state.h     **** {
 599:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 600:./state.h     ****   /* clear bits for all position representations and only set the new one */
 601:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 602:./state.h     **** }
 603:./state.h     **** 
 604:./state.h     **** /// Set multiple position coordinates (float).
 605:./state.h     **** static inline void stateSetPosition_f(
 606:./state.h     ****   struct EcefCoor_f *ecef_pos,
 607:./state.h     ****   struct NedCoor_f *ned_pos,
 608:./state.h     ****   struct EnuCoor_f *enu_pos,
 609:./state.h     ****   struct LlaCoor_f *lla_pos,
 610:./state.h     ****   struct UtmCoor_f *utm_pos)
 611:./state.h     **** {
 612:./state.h     ****   /* clear all status bit */
 613:./state.h     ****   state.pos_status = 0;
 614:./state.h     ****   if (ecef_pos != NULL) {
 615:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 616:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 617:./state.h     ****   }
 618:./state.h     ****   if (ned_pos != NULL) {
 619:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 620:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 621:./state.h     ****   }
 622:./state.h     ****   if (enu_pos != NULL) {
 623:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 624:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 625:./state.h     ****   }
 626:./state.h     ****   if (lla_pos != NULL) {
 627:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 628:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 629:./state.h     ****   }
 630:./state.h     ****   if (utm_pos != NULL) {
 631:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 632:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 633:./state.h     ****   }
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /************************ Get functions ****************************/
 637:./state.h     **** 
 638:./state.h     **** /// Get position in ECEF coordinates (int).
 639:./state.h     **** static inline struct EcefCoor_i *stateGetPositionEcef_i(void)
 640:./state.h     **** {
 641:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I)) {
 642:./state.h     ****     stateCalcPositionEcef_i();
 643:./state.h     ****   }
 644:./state.h     ****   return &state.ecef_pos_i;
 645:./state.h     **** }
 646:./state.h     **** 
 647:./state.h     **** /// Get position in local NED coordinates (int).
 648:./state.h     **** static inline struct NedCoor_i *stateGetPositionNed_i(void)
 649:./state.h     **** {
 650:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I)) {
 651:./state.h     ****     stateCalcPositionNed_i();
 652:./state.h     ****   }
 653:./state.h     ****   return &state.ned_pos_i;
 654:./state.h     **** }
 655:./state.h     **** 
 656:./state.h     **** /// Get position in local ENU coordinates (int).
 657:./state.h     **** static inline struct EnuCoor_i *stateGetPositionEnu_i(void)
 658:./state.h     **** {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I)) {
 660:./state.h     ****     stateCalcPositionEnu_i();
 661:./state.h     ****   }
 662:./state.h     ****   return &state.enu_pos_i;
 663:./state.h     **** }
 664:./state.h     **** 
 665:./state.h     **** /// Get position in LLA coordinates (int).
 666:./state.h     **** static inline struct LlaCoor_i *stateGetPositionLla_i(void)
 667:./state.h     **** {
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 669:./state.h     ****     stateCalcPositionLla_i();
 670:./state.h     ****   }
 671:./state.h     ****   return &state.lla_pos_i;
 672:./state.h     **** }
 673:./state.h     **** 
 674:./state.h     **** /// Get position in UTM coordinates (float).
 675:./state.h     **** static inline struct UtmCoor_f *stateGetPositionUtm_f(void)
 676:./state.h     **** {
 677:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F)) {
 678:./state.h     ****     stateCalcPositionUtm_f();
 679:./state.h     ****   }
 680:./state.h     ****   return &state.utm_pos_f;
 681:./state.h     **** }
 682:./state.h     **** 
 683:./state.h     **** /// Get position in ECEF coordinates (float).
 684:./state.h     **** static inline struct EcefCoor_f *stateGetPositionEcef_f(void)
 685:./state.h     **** {
 686:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F)) {
 687:./state.h     ****     stateCalcPositionEcef_f();
 688:./state.h     ****   }
 689:./state.h     ****   return &state.ecef_pos_f;
 690:./state.h     **** }
 691:./state.h     **** 
 692:./state.h     **** /// Get position in local NED coordinates (float).
 693:./state.h     **** static inline struct NedCoor_f *stateGetPositionNed_f(void)
 694:./state.h     **** {
 695:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F)) {
 696:./state.h     ****     stateCalcPositionNed_f();
 697:./state.h     ****   }
 698:./state.h     ****   return &state.ned_pos_f;
 699:./state.h     **** }
 700:./state.h     **** 
 701:./state.h     **** /// Get position in local ENU coordinates (float).
 702:./state.h     **** static inline struct EnuCoor_f *stateGetPositionEnu_f(void)
 703:./state.h     **** {
 704:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F)) {
 705:./state.h     ****     stateCalcPositionEnu_f();
 706:./state.h     ****   }
 707:./state.h     ****   return &state.enu_pos_f;
 708:./state.h     **** }
 709:./state.h     **** 
 710:./state.h     **** /// Get position in LLA coordinates (float).
 711:./state.h     **** static inline struct LlaCoor_f *stateGetPositionLla_f(void)
 712:./state.h     **** {
 713:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_F)) {
 714:./state.h     ****     stateCalcPositionLla_f();
 715:./state.h     ****   }
 716:./state.h     ****   return &state.lla_pos_f;
 717:./state.h     **** }
 718:./state.h     **** 
 719:./state.h     **** /** @}*/
 720:./state.h     **** 
 721:./state.h     **** 
 722:./state.h     **** 
 723:./state.h     **** /******************************************************************************
 724:./state.h     ****  *                                                                            *
 725:./state.h     ****  * Set and Get functions for the SPEED representations                        *
 726:./state.h     ****  *                                                                            *
 727:./state.h     ****  *****************************************************************************/
 728:./state.h     **** /** @addtogroup state_velocity
 729:./state.h     ****  *  @{ */
 730:./state.h     **** 
 731:./state.h     **** /************* declaration of transformation functions ************/
 732:./state.h     **** extern void stateCalcSpeedNed_i(void);
 733:./state.h     **** extern void stateCalcSpeedEnu_i(void);
 734:./state.h     **** extern void stateCalcSpeedEcef_i(void);
 735:./state.h     **** extern void stateCalcHorizontalSpeedNorm_i(void);
 736:./state.h     **** extern void stateCalcHorizontalSpeedDir_i(void);
 737:./state.h     **** extern void stateCalcSpeedNed_f(void);
 738:./state.h     **** extern void stateCalcSpeedEnu_f(void);
 739:./state.h     **** extern void stateCalcSpeedEcef_f(void);
 740:./state.h     **** extern void stateCalcHorizontalSpeedNorm_f(void);
 741:./state.h     **** extern void stateCalcHorizontalSpeedDir_f(void);
 742:./state.h     **** 
 743:./state.h     **** /************************ Set functions ****************************/
 744:./state.h     **** 
 745:./state.h     **** /// Set ground speed in local NED coordinates (int).
 746:./state.h     **** static inline void stateSetSpeedNed_i(struct NedCoor_i *ned_speed)
 747:./state.h     **** {
 748:./state.h     ****   VECT3_COPY(state.ned_speed_i, *ned_speed);
 749:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 750:./state.h     ****   state.speed_status = (1 << SPEED_NED_I);
 751:./state.h     **** }
 752:./state.h     **** 
 753:./state.h     **** /// Set ground speed in local ENU coordinates (int).
 754:./state.h     **** static inline void stateSetSpeedEnu_i(struct EnuCoor_i *enu_speed)
 755:./state.h     **** {
 756:./state.h     ****   VECT3_COPY(state.enu_speed_i, *enu_speed);
 757:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 758:./state.h     ****   state.speed_status = (1 << SPEED_ENU_I);
 759:./state.h     **** }
 760:./state.h     **** 
 761:./state.h     **** /// Set ground speed in ECEF coordinates (int).
 762:./state.h     **** static inline void stateSetSpeedEcef_i(struct EcefCoor_i *ecef_speed)
 763:./state.h     **** {
 764:./state.h     ****   VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 765:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 766:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_I);
 767:./state.h     **** }
 768:./state.h     **** 
 769:./state.h     **** /// Set multiple speed coordinates (int).
 770:./state.h     **** static inline void stateSetSpeed_i(
 771:./state.h     ****   struct EcefCoor_i *ecef_speed,
 772:./state.h     ****   struct NedCoor_i *ned_speed,
 773:./state.h     ****   struct EnuCoor_i *enu_speed)
 774:./state.h     **** {
 775:./state.h     ****   /* clear all status bit */
 776:./state.h     ****   state.speed_status = 0;
 777:./state.h     ****   if (ecef_speed != NULL) {
 778:./state.h     ****     VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 779:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_I);
 780:./state.h     ****   }
 781:./state.h     ****   if (ned_speed != NULL) {
 782:./state.h     ****     VECT3_COPY(state.ned_speed_i, *ned_speed);
 783:./state.h     ****     state.speed_status |= (1 << SPEED_NED_I);
 784:./state.h     ****   }
 785:./state.h     ****   if (enu_speed != NULL) {
 786:./state.h     ****     VECT3_COPY(state.enu_speed_i, *enu_speed);
 787:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_I);
 788:./state.h     ****   }
 789:./state.h     **** }
 790:./state.h     **** 
 791:./state.h     **** /// Set ground speed in local NED coordinates (float).
 792:./state.h     **** static inline void stateSetSpeedNed_f(struct NedCoor_f *ned_speed)
 793:./state.h     **** {
 794:./state.h     ****   VECT3_COPY(state.ned_speed_f, *ned_speed);
 795:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 796:./state.h     ****   state.speed_status = (1 << SPEED_NED_F);
 797:./state.h     **** }
 798:./state.h     **** 
 799:./state.h     **** /// Set ground speed in local ENU coordinates (float).
 800:./state.h     **** static inline void stateSetSpeedEnu_f(struct EnuCoor_f *enu_speed)
 801:./state.h     **** {
 802:./state.h     ****   VECT3_COPY(state.enu_speed_f, *enu_speed);
 803:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 804:./state.h     ****   state.speed_status = (1 << SPEED_ENU_F);
 805:./state.h     **** }
 806:./state.h     **** 
 807:./state.h     **** /// Set ground speed in ECEF coordinates (float).
 808:./state.h     **** static inline void stateSetSpeedEcef_f(struct EcefCoor_f *ecef_speed)
 809:./state.h     **** {
 810:./state.h     ****   VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 811:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 812:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_F);
 813:./state.h     **** }
 814:./state.h     **** 
 815:./state.h     **** /// Set multiple speed coordinates (float).
 816:./state.h     **** static inline void stateSetSpeed_f(
 817:./state.h     ****   struct EcefCoor_f *ecef_speed,
 818:./state.h     ****   struct NedCoor_f *ned_speed,
 819:./state.h     ****   struct EnuCoor_f *enu_speed)
 820:./state.h     **** {
 821:./state.h     ****   /* clear all status bit */
 822:./state.h     ****   state.speed_status = 0;
 823:./state.h     ****   if (ecef_speed != NULL) {
 824:./state.h     ****     VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 825:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_F);
 826:./state.h     ****   }
 827:./state.h     ****   if (ned_speed != NULL) {
 828:./state.h     ****     VECT3_COPY(state.ned_speed_f, *ned_speed);
 829:./state.h     ****     state.speed_status |= (1 << SPEED_NED_F);
 830:./state.h     ****   }
 831:./state.h     ****   if (enu_speed != NULL) {
 832:./state.h     ****     VECT3_COPY(state.enu_speed_f, *enu_speed);
 833:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_F);
 834:./state.h     ****   }
 835:./state.h     **** }
 836:./state.h     **** 
 837:./state.h     **** /************************ Get functions ****************************/
 838:./state.h     **** 
 839:./state.h     **** /// Get ground speed in local NED coordinates (int).
 840:./state.h     **** static inline struct NedCoor_i *stateGetSpeedNed_i(void)
 841:./state.h     **** {
 842:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_I)) {
 843:./state.h     ****     stateCalcSpeedNed_i();
 844:./state.h     ****   }
 845:./state.h     ****   return &state.ned_speed_i;
 846:./state.h     **** }
 847:./state.h     **** 
 848:./state.h     **** /// Get ground speed in local ENU coordinates (int).
 849:./state.h     **** static inline struct EnuCoor_i *stateGetSpeedEnu_i(void)
 850:./state.h     **** {
 851:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_I)) {
 852:./state.h     ****     stateCalcSpeedEnu_i();
 853:./state.h     ****   }
 854:./state.h     ****   return &state.enu_speed_i;
 855:./state.h     **** }
 856:./state.h     **** 
 857:./state.h     **** /// Get ground speed in ECEF coordinates (int).
 858:./state.h     **** static inline struct EcefCoor_i *stateGetSpeedEcef_i(void)
 859:./state.h     **** {
 860:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_I)) {
 861:./state.h     ****     stateCalcSpeedEcef_i();
 862:./state.h     ****   }
 863:./state.h     ****   return &state.ecef_speed_i;
 864:./state.h     **** }
 865:./state.h     **** 
 866:./state.h     **** /// Get norm of horizontal ground speed (int).
 867:./state.h     **** static inline uint32_t *stateGetHorizontalSpeedNorm_i(void)
 868:./state.h     **** {
 869:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_I)) {
 870:./state.h     ****     stateCalcHorizontalSpeedNorm_i();
 871:./state.h     ****   }
 872:./state.h     ****   return &state.h_speed_norm_i;
 873:./state.h     **** }
 874:./state.h     **** 
 875:./state.h     **** /// Get dir of horizontal ground speed (int).
 876:./state.h     **** static inline int32_t *stateGetHorizontalSpeedDir_i(void)
 877:./state.h     **** {
 878:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_I)) {
 879:./state.h     ****     stateCalcHorizontalSpeedDir_i();
 880:./state.h     ****   }
 881:./state.h     ****   return &state.h_speed_dir_i;
 882:./state.h     **** }
 883:./state.h     **** 
 884:./state.h     **** /// Get ground speed in local NED coordinates (float).
 885:./state.h     **** static inline struct NedCoor_f *stateGetSpeedNed_f(void)
 886:./state.h     **** {
 887:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_F)) {
 888:./state.h     ****     stateCalcSpeedNed_f();
 889:./state.h     ****   }
 890:./state.h     ****   return &state.ned_speed_f;
 891:./state.h     **** }
 892:./state.h     **** 
 893:./state.h     **** /// Get ground speed in local ENU coordinates (float).
 894:./state.h     **** static inline struct EnuCoor_f *stateGetSpeedEnu_f(void)
 895:./state.h     **** {
 896:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_F)) {
 897:./state.h     ****     stateCalcSpeedEnu_f();
 898:./state.h     ****   }
 899:./state.h     ****   return &state.enu_speed_f;
 900:./state.h     **** }
 901:./state.h     **** 
 902:./state.h     **** /// Get ground speed in ECEF coordinates (float).
 903:./state.h     **** static inline struct EcefCoor_f *stateGetSpeedEcef_f(void)
 904:./state.h     **** {
 905:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_F)) {
 906:./state.h     ****     stateCalcSpeedEcef_f();
 907:./state.h     ****   }
 908:./state.h     ****   return &state.ecef_speed_f;
 909:./state.h     **** }
 910:./state.h     **** 
 911:./state.h     **** /// Get norm of horizontal ground speed (float).
 912:./state.h     **** static inline float *stateGetHorizontalSpeedNorm_f(void)
 913:./state.h     **** {
 914:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_F)) {
 915:./state.h     ****     stateCalcHorizontalSpeedNorm_f();
 916:./state.h     ****   }
 917:./state.h     ****   return &state.h_speed_norm_f;
 918:./state.h     **** }
 919:./state.h     **** 
 920:./state.h     **** /// Get dir of horizontal ground speed (float).
 921:./state.h     **** static inline float *stateGetHorizontalSpeedDir_f(void)
 922:./state.h     **** {
 923:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_F)) {
 924:./state.h     ****     stateCalcHorizontalSpeedDir_f();
 925:./state.h     ****   }
 926:./state.h     ****   return &state.h_speed_dir_f;
 927:./state.h     **** }
 928:./state.h     **** /** @}*/
 929:./state.h     **** 
 930:./state.h     **** 
 931:./state.h     **** 
 932:./state.h     **** /******************************************************************************
 933:./state.h     ****  *                                                                            *
 934:./state.h     ****  * Set and Get functions for the ACCELERATION representations                 *
 935:./state.h     ****  *                                                                            *
 936:./state.h     ****  *****************************************************************************/
 937:./state.h     **** /** @addtogroup state_acceleration
 938:./state.h     ****  *  @{ */
 939:./state.h     **** 
 940:./state.h     **** /************* declaration of transformation functions ************/
 941:./state.h     **** extern void stateCalcAccelNed_i(void);
 942:./state.h     **** extern void stateCalcAccelEcef_i(void);
 943:./state.h     **** extern void stateCalcAccelNed_f(void);
 944:./state.h     **** extern void stateCalcAccelEcef_f(void);
 945:./state.h     **** 
 946:./state.h     **** /*********************** validity test functions ******************/
 947:./state.h     **** 
 948:./state.h     **** /// Test if accelerations are valid.
 949:./state.h     **** static inline bool_t stateIsAccelValid(void)
 950:./state.h     **** {
 951:./state.h     ****   return (state.accel_status);
 952:./state.h     **** }
 953:./state.h     **** 
 954:./state.h     **** /************************ Set functions ****************************/
 955:./state.h     **** 
 956:./state.h     **** /// Set acceleration in NED coordinates (int).
 957:./state.h     **** static inline void stateSetAccelNed_i(struct NedCoor_i *ned_accel)
 958:./state.h     **** {
 959:./state.h     ****   VECT3_COPY(state.ned_accel_i, *ned_accel);
 960:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 961:./state.h     ****   state.accel_status = (1 << ACCEL_NED_I);
 962:./state.h     **** }
 963:./state.h     **** 
 964:./state.h     **** /// Set acceleration in ECEF coordinates (int).
 965:./state.h     **** static inline void stateSetAccelEcef_i(struct EcefCoor_i *ecef_accel)
 966:./state.h     **** {
 967:./state.h     ****   VECT3_COPY(state.ecef_accel_i, *ecef_accel);
 968:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 969:./state.h     ****   state.accel_status = (1 << ACCEL_ECEF_I);
 970:./state.h     **** }
 971:./state.h     **** 
 972:./state.h     **** /// Set acceleration in NED coordinates (float).
 973:./state.h     **** static inline void stateSetAccelNed_f(struct NedCoor_f *ned_accel)
 974:./state.h     **** {
 975:./state.h     ****   VECT3_COPY(state.ned_accel_f, *ned_accel);
 976:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 977:./state.h     ****   state.accel_status = (1 << ACCEL_NED_F);
 978:./state.h     **** }
 979:./state.h     **** 
 980:./state.h     **** /// Set acceleration in ECEF coordinates (float).
 981:./state.h     **** static inline void stateSetAccelEcef_f(struct EcefCoor_f *ecef_accel)
 982:./state.h     **** {
 983:./state.h     ****   VECT3_COPY(state.ecef_accel_f, *ecef_accel);
 984:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 985:./state.h     ****   state.accel_status = (1 << ACCEL_ECEF_F);
 986:./state.h     **** }
 987:./state.h     **** 
 988:./state.h     **** /************************ Get functions ****************************/
 989:./state.h     **** 
 990:./state.h     **** /// Get acceleration in NED coordinates (int).
 991:./state.h     **** static inline struct NedCoor_i *stateGetAccelNed_i(void)
 992:./state.h     **** {
 993:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_NED_I)) {
 994:./state.h     ****     stateCalcAccelNed_i();
 995:./state.h     ****   }
 996:./state.h     ****   return &state.ned_accel_i;
 997:./state.h     **** }
 998:./state.h     **** 
 999:./state.h     **** /// Get acceleration in ECEF coordinates (int).
1000:./state.h     **** static inline struct EcefCoor_i *stateGetAccelEcef_i(void)
1001:./state.h     **** {
1002:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_ECEF_I)) {
1003:./state.h     ****     stateCalcAccelEcef_i();
1004:./state.h     ****   }
1005:./state.h     ****   return &state.ecef_accel_i;
1006:./state.h     **** }
1007:./state.h     **** 
1008:./state.h     **** /// Get acceleration in NED coordinates (float).
1009:./state.h     **** static inline struct NedCoor_f *stateGetAccelNed_f(void)
1010:./state.h     **** {
1011:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_NED_F)) {
1012:./state.h     ****     stateCalcAccelNed_f();
1013:./state.h     ****   }
1014:./state.h     ****   return &state.ned_accel_f;
1015:./state.h     **** }
1016:./state.h     **** 
1017:./state.h     **** /// Get acceleration in ECEF coordinates (float).
1018:./state.h     **** static inline struct EcefCoor_f *stateGetAccelEcef_f(void)
1019:./state.h     **** {
1020:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_ECEF_F)) {
1021:./state.h     ****     stateCalcAccelEcef_f();
1022:./state.h     ****   }
1023:./state.h     ****   return &state.ecef_accel_f;
1024:./state.h     **** }
1025:./state.h     **** /** @}*/
1026:./state.h     **** 
1027:./state.h     **** /******************************************************************************
1028:./state.h     **** *                                                                             *
1029:./state.h     **** * Set and Get functions for the ATTITUDE representations                      *
1030:./state.h     **** * (Calls the functions in math/pprz_orientation_conversion)                   *
1031:./state.h     **** *                                                                             *
1032:./state.h     **** *****************************************************************************/
1033:./state.h     **** /** @addtogroup state_attitude
1034:./state.h     **** * @{ */
1035:./state.h     **** /*********************** validity test functions ******************/
1036:./state.h     **** 
1037:./state.h     **** /// Test if attitudes are valid.
1038:./state.h     **** static inline bool_t stateIsAttitudeValid(void)
1039:./state.h     **** {
1040:./state.h     ****   return (orienationCheckValid(&state.ned_to_body_orientation));
 2158              		.loc 5 1040 0
 2159 002c 1E4D     		ldr	r5, .L87+4
 2160              	.LBE106:
 2161              	.LBE105:
 2162              		.loc 2 188 0
 2163 002e 01AB     		add	r3, sp, #4
 2164 0030 03C3     		stmia	r3!, {r0, r1}
 2165 0032 9068     		ldr	r0, [r2, #8]	@ unaligned
 2166 0034 1860     		str	r0, [r3]	@ unaligned
 2167              	.LVL243:
 189:subsystems/imu.c ****     if (stateIsAttitudeValid()) {
 2168              		.loc 2 189 0
 2169 0036 95F8A431 		ldrb	r3, [r5, #420]	@ zero_extendqisi2
 2170 003a CBB1     		cbz	r3, .L83
 2171              	.LBB107:
 2172              	.LBB108:
1041:./state.h     **** }
1042:./state.h     **** 
1043:./state.h     **** /************************ Set functions ****************************/
1044:./state.h     **** 
1045:./state.h     **** /// Set vehicle body attitude from quaternion (int).
1046:./state.h     **** static inline void stateSetNedToBodyQuat_i(struct Int32Quat *ned_to_body_quat)
1047:./state.h     **** {
1048:./state.h     ****   orientationSetQuat_i(&state.ned_to_body_orientation, ned_to_body_quat);
1049:./state.h     **** }
1050:./state.h     **** 
1051:./state.h     **** /// Set vehicle body attitude from rotation matrix (int).
1052:./state.h     **** static inline void stateSetNedToBodyRMat_i(struct Int32RMat *ned_to_body_rmat)
1053:./state.h     **** {
1054:./state.h     ****   orientationSetRMat_i(&state.ned_to_body_orientation, ned_to_body_rmat);
1055:./state.h     **** }
1056:./state.h     **** 
1057:./state.h     **** /// Set vehicle body attitude from euler angles (int).
1058:./state.h     **** static inline void stateSetNedToBodyEulers_i(struct Int32Eulers *ned_to_body_eulers)
1059:./state.h     **** {
1060:./state.h     ****   orientationSetEulers_i(&state.ned_to_body_orientation, ned_to_body_eulers);
1061:./state.h     **** }
1062:./state.h     **** 
1063:./state.h     **** /// Set vehicle body attitude from quaternion (float).
1064:./state.h     **** static inline void stateSetNedToBodyQuat_f(struct FloatQuat *ned_to_body_quat)
1065:./state.h     **** {
1066:./state.h     ****   orientationSetQuat_f(&state.ned_to_body_orientation, ned_to_body_quat);
1067:./state.h     **** }
1068:./state.h     **** 
1069:./state.h     **** /// Set vehicle body attitude from rotation matrix (float).
1070:./state.h     **** static inline void stateSetNedToBodyRMat_f(struct FloatRMat *ned_to_body_rmat)
1071:./state.h     **** {
1072:./state.h     ****   orientationSetRMat_f(&state.ned_to_body_orientation, ned_to_body_rmat);
1073:./state.h     **** }
1074:./state.h     **** 
1075:./state.h     **** /// Set vehicle body attitude from euler angles (float).
1076:./state.h     **** static inline void stateSetNedToBodyEulers_f(struct FloatEulers *ned_to_body_eulers)
1077:./state.h     **** {
1078:./state.h     ****   orientationSetEulers_f(&state.ned_to_body_orientation, ned_to_body_eulers);
1079:./state.h     **** }
1080:./state.h     **** 
1081:./state.h     **** /************************ Get functions ****************************/
1082:./state.h     **** 
1083:./state.h     **** /// Get vehicle body attitude quaternion (int).
1084:./state.h     **** static inline struct Int32Quat *stateGetNedToBodyQuat_i(void)
1085:./state.h     **** {
1086:./state.h     ****   return orientationGetQuat_i(&state.ned_to_body_orientation);
1087:./state.h     **** }
1088:./state.h     **** 
1089:./state.h     **** /// Get vehicle body attitude rotation matrix (int).
1090:./state.h     **** static inline struct Int32RMat *stateGetNedToBodyRMat_i(void)
1091:./state.h     **** {
1092:./state.h     ****   return orientationGetRMat_i(&state.ned_to_body_orientation);
1093:./state.h     **** }
1094:./state.h     **** 
1095:./state.h     **** /// Get vehicle body attitude euler angles (int).
1096:./state.h     **** static inline struct Int32Eulers *stateGetNedToBodyEulers_i(void)
1097:./state.h     **** {
1098:./state.h     ****   return orientationGetEulers_i(&state.ned_to_body_orientation);
1099:./state.h     **** }
1100:./state.h     **** 
1101:./state.h     **** /// Get vehicle body attitude quaternion (float).
1102:./state.h     **** static inline struct FloatQuat *stateGetNedToBodyQuat_f(void)
1103:./state.h     **** {
1104:./state.h     ****   return orientationGetQuat_f(&state.ned_to_body_orientation);
1105:./state.h     **** }
1106:./state.h     **** 
1107:./state.h     **** /// Get vehicle body attitude rotation matrix (float).
1108:./state.h     **** static inline struct FloatRMat *stateGetNedToBodyRMat_f(void)
1109:./state.h     **** {
1110:./state.h     ****   return orientationGetRMat_f(&state.ned_to_body_orientation);
1111:./state.h     **** }
1112:./state.h     **** 
1113:./state.h     **** /// Get vehicle body attitude euler angles (float).
1114:./state.h     **** static inline struct FloatEulers *stateGetNedToBodyEulers_f(void)
1115:./state.h     **** {
1116:./state.h     ****   return orientationGetEulers_f(&state.ned_to_body_orientation);
 2173              		.loc 5 1116 0
 2174 003c 05F5D270 		add	r0, r5, #420
 2175              	.LBE108:
 2176              	.LBE107:
 190:subsystems/imu.c ****       // adjust imu_to_body roll and pitch by current NedToBody roll and pitch
 191:subsystems/imu.c ****       body_to_imu_eulers.phi += stateGetNedToBodyEulers_f()->phi;
 2177              		.loc 2 191 0
 2178 0040 9DED018A 		flds	s16, [sp, #4]
 2179              	.LBB110:
 2180              	.LBB109:
 2181              		.loc 5 1116 0
 2182 0044 FFF7FEFF 		bl	orientationGetEulers_f
 2183              	.LVL244:
 2184              	.LBE109:
 2185              	.LBE110:
 2186              		.loc 2 191 0
 2187 0048 D0ED007A 		flds	s15, [r0]
 192:subsystems/imu.c ****       body_to_imu_eulers.theta += stateGetNedToBodyEulers_f()->theta;
 2188              		.loc 2 192 0
 2189 004c DDED028A 		flds	s17, [sp, #8]
 2190              	.LBB111:
 2191              	.LBB112:
 2192              		.loc 5 1116 0
 2193 0050 05F5D270 		add	r0, r5, #420
 2194              	.LBE112:
 2195              	.LBE111:
 191:subsystems/imu.c ****       body_to_imu_eulers.phi += stateGetNedToBodyEulers_f()->phi;
 2196              		.loc 2 191 0
 2197 0054 38EE278A 		fadds	s16, s16, s15
 2198              	.LBB114:
 2199              	.LBB113:
 2200              		.loc 5 1116 0
 2201 0058 FFF7FEFF 		bl	orientationGetEulers_f
 2202              	.LVL245:
 2203              	.LBE113:
 2204              	.LBE114:
 2205              		.loc 2 192 0
 2206 005c D0ED017A 		flds	s15, [r0, #4]
 2207              	.LBB115:
 2208              	.LBB116:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2209              		.loc 1 183 0
 2210 0060 039B     		ldr	r3, [sp, #12]	@ float
 2211 0062 84ED368A 		fsts	s16, [r4, #216]
 2212              	.LBE116:
 2213              	.LBE115:
 2214              		.loc 2 192 0
 2215 0066 78EEA78A 		fadds	s17, s17, s15
 2216              	.LVL246:
 2217              	.LBB118:
 2218              	.LBB117:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2219              		.loc 1 183 0
 2220 006a C4ED378A 		fsts	s17, [r4, #220]
 2221 006e 0AE0     		b	.L86
 2222              	.LVL247:
 2223              	.L83:
 2224              	.LBE117:
 2225              	.LBE118:
 193:subsystems/imu.c ****       orientationSetEulers_f(&imu.body_to_imu, &body_to_imu_eulers);
 194:subsystems/imu.c ****       AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 195:subsystems/imu.c ****     } else {
 196:subsystems/imu.c ****       // indicate that we couldn't set to current roll/pitch
 197:subsystems/imu.c ****       imu.b2i_set_current = FALSE;
 2226              		.loc 2 197 0
 2227 0070 84F80831 		strb	r3, [r4, #264]
 2228              	.LBE104:
 198:subsystems/imu.c ****     }
 199:subsystems/imu.c ****   } else {
 200:subsystems/imu.c ****     // reset to BODY_TO_IMU as defined in airframe file
 201:subsystems/imu.c ****     struct FloatEulers body_to_imu_eulers =
 202:subsystems/imu.c ****     {IMU_BODY_TO_IMU_PHI, IMU_BODY_TO_IMU_THETA, IMU_BODY_TO_IMU_PSI};
 203:subsystems/imu.c ****     orientationSetEulers_f(&imu.body_to_imu, &body_to_imu_eulers);
 204:subsystems/imu.c ****     AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 205:subsystems/imu.c ****   }
 206:subsystems/imu.c **** }
 2229              		.loc 2 206 0
 2230 0074 05B0     		add	sp, sp, #20
 2231              		@ sp needed
 2232 0076 BDEC028B 		fldmfdd	sp!, {d8}
 2233 007a 30BD     		pop	{r4, r5, pc}
 2234              	.LVL248:
 2235              	.L82:
 2236              	.LBB119:
 2237              	.LBB120:
 2238              	.LBB121:
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 2239              		.loc 1 183 0
 2240 007c 0023     		movs	r3, #0
 2241 007e C4F8D830 		str	r3, [r4, #216]	@ float
 2242 0082 C4F8DC30 		str	r3, [r4, #220]	@ float
 2243              	.LVL249:
 2244              	.L86:
 2245 0086 C4F8E030 		str	r3, [r4, #224]	@ float
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 2246              		.loc 1 185 0
 2247 008a 1023     		movs	r3, #16
 2248 008c 84F88430 		strb	r3, [r4, #132]
 2249              	.LBE121:
 2250              	.LBE120:
 204:subsystems/imu.c ****     AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 2251              		.loc 2 204 0
 2252 0090 FFF7FEFF 		bl	orientationGetQuat_f.constprop.11
 2253              	.LVL250:
 2254              	.LBE119:
 2255              		.loc 2 206 0
 2256 0094 05B0     		add	sp, sp, #20
 2257              		@ sp needed
 2258 0096 BDEC028B 		fldmfdd	sp!, {d8}
 2259 009a BDE83040 		pop	{r4, r5, lr}
 2260              	.LBB122:
 204:subsystems/imu.c ****     AbiSendMsgBODY_TO_IMU_QUAT(1, orientationGetQuat_f(&imu.body_to_imu));
 2261              		.loc 2 204 0
 2262 009e FFF7FEBF 		b	AbiSendMsgBODY_TO_IMU_QUAT.constprop.10
 2263              	.LVL251:
 2264              	.L88:
 2265 00a2 00BF     		.align	2
 2266              	.L87:
 2267 00a4 00000000 		.word	.LANCHOR0
 2268 00a8 00000000 		.word	state
 2269              	.LBE122:
 2270              		.cfi_endproc
 2271              	.LFE496:
 2273              		.section	.text.imu_periodic,"ax",%progbits
 2274              		.align	1
 2275              		.weak	imu_periodic
 2276              		.thumb
 2277              		.thumb_func
 2279              	imu_periodic:
 2280              	.LFB497:
 207:subsystems/imu.c **** 
 208:subsystems/imu.c **** 
 209:subsystems/imu.c **** // weak functions, used if not explicitly provided by implementation
 210:subsystems/imu.c **** 
 211:subsystems/imu.c **** void WEAK imu_periodic(void)
 212:subsystems/imu.c **** {
 2281              		.loc 2 212 0
 2282              		.cfi_startproc
 2283              		@ args = 0, pretend = 0, frame = 0
 2284              		@ frame_needed = 0, uses_anonymous_args = 0
 2285              		@ link register save eliminated.
 2286 0000 7047     		bx	lr
 2287              		.cfi_endproc
 2288              	.LFE497:
 2290              		.section	.text.imu_scale_gyro,"ax",%progbits
 2291              		.align	1
 2292              		.weak	imu_scale_gyro
 2293              		.thumb
 2294              		.thumb_func
 2296              	imu_scale_gyro:
 2297              	.LFB498:
 213:subsystems/imu.c **** }
 214:subsystems/imu.c **** 
 215:subsystems/imu.c **** void WEAK imu_scale_gyro(struct Imu *_imu)
 216:subsystems/imu.c **** {
 2298              		.loc 2 216 0
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 0, uses_anonymous_args = 0
 2302              	.LVL252:
 217:subsystems/imu.c ****   RATES_COPY(_imu->gyro_prev, _imu->gyro);
 2303              		.loc 2 217 0
 2304 0000 0368     		ldr	r3, [r0]
 2305 0002 4362     		str	r3, [r0, #36]
 2306 0004 4368     		ldr	r3, [r0, #4]
 2307 0006 8362     		str	r3, [r0, #40]
 2308 0008 8368     		ldr	r3, [r0, #8]
 218:subsystems/imu.c ****   _imu->gyro.p = ((_imu->gyro_unscaled.p - _imu->gyro_neutral.p) * IMU_GYRO_P_SIGN *
 2309              		.loc 2 218 0
 2310 000a 026E     		ldr	r2, [r0, #96]
 217:subsystems/imu.c ****   RATES_COPY(_imu->gyro_prev, _imu->gyro);
 2311              		.loc 2 217 0
 2312 000c C362     		str	r3, [r0, #44]
 2313              		.loc 2 218 0
 2314 000e C36B     		ldr	r3, [r0, #60]
 2315 0010 D11A     		subs	r1, r2, r3
 2316 0012 40F6A722 		movw	r2, #2727
 219:subsystems/imu.c ****                   IMU_GYRO_P_SENS_NUM) / IMU_GYRO_P_SENS_DEN;
 2317              		.loc 2 219 0
 2318 0016 41F28833 		movw	r3, #5000
 218:subsystems/imu.c ****   _imu->gyro.p = ((_imu->gyro_unscaled.p - _imu->gyro_neutral.p) * IMU_GYRO_P_SIGN *
 2319              		.loc 2 218 0
 2320 001a 5143     		muls	r1, r2, r1
 2321              		.loc 2 219 0
 2322 001c 91FBF3F1 		sdiv	r1, r1, r3
 216:subsystems/imu.c **** {
 2323              		.loc 2 216 0
 2324 0020 10B5     		push	{r4, lr}
 2325              		.cfi_def_cfa_offset 8
 2326              		.cfi_offset 4, -8
 2327              		.cfi_offset 14, -4
 218:subsystems/imu.c ****   _imu->gyro.p = ((_imu->gyro_unscaled.p - _imu->gyro_neutral.p) * IMU_GYRO_P_SIGN *
 2328              		.loc 2 218 0
 2329 0022 0160     		str	r1, [r0]
 220:subsystems/imu.c ****   _imu->gyro.q = ((_imu->gyro_unscaled.q - _imu->gyro_neutral.q) * IMU_GYRO_Q_SIGN *
 2330              		.loc 2 220 0
 2331 0024 446E     		ldr	r4, [r0, #100]
 2332 0026 016C     		ldr	r1, [r0, #64]
 2333 0028 611A     		subs	r1, r4, r1
 2334 002a 5143     		muls	r1, r2, r1
 221:subsystems/imu.c ****                   IMU_GYRO_Q_SENS_NUM) / IMU_GYRO_Q_SENS_DEN;
 2335              		.loc 2 221 0
 2336 002c 91FBF3F1 		sdiv	r1, r1, r3
 220:subsystems/imu.c ****   _imu->gyro.q = ((_imu->gyro_unscaled.q - _imu->gyro_neutral.q) * IMU_GYRO_Q_SIGN *
 2337              		.loc 2 220 0
 2338 0030 4160     		str	r1, [r0, #4]
 222:subsystems/imu.c ****   _imu->gyro.r = ((_imu->gyro_unscaled.r - _imu->gyro_neutral.r) * IMU_GYRO_R_SIGN *
 2339              		.loc 2 222 0
 2340 0032 846E     		ldr	r4, [r0, #104]
 2341 0034 416C     		ldr	r1, [r0, #68]
 2342 0036 611A     		subs	r1, r4, r1
 2343 0038 4A43     		muls	r2, r1, r2
 223:subsystems/imu.c ****                   IMU_GYRO_R_SENS_NUM) / IMU_GYRO_R_SENS_DEN;
 2344              		.loc 2 223 0
 2345 003a 92FBF3F3 		sdiv	r3, r2, r3
 222:subsystems/imu.c ****   _imu->gyro.r = ((_imu->gyro_unscaled.r - _imu->gyro_neutral.r) * IMU_GYRO_R_SIGN *
 2346              		.loc 2 222 0
 2347 003e 8360     		str	r3, [r0, #8]
 2348 0040 10BD     		pop	{r4, pc}
 2349              		.cfi_endproc
 2350              	.LFE498:
 2352              		.section	.text.imu_scale_accel,"ax",%progbits
 2353              		.align	1
 2354              		.weak	imu_scale_accel
 2355              		.thumb
 2356              		.thumb_func
 2358              	imu_scale_accel:
 2359              	.LFB499:
 224:subsystems/imu.c **** }
 225:subsystems/imu.c **** 
 226:subsystems/imu.c **** void WEAK imu_scale_accel(struct Imu *_imu)
 227:subsystems/imu.c **** {
 2360              		.loc 2 227 0
 2361              		.cfi_startproc
 2362              		@ args = 0, pretend = 0, frame = 0
 2363              		@ frame_needed = 0, uses_anonymous_args = 0
 2364              		@ link register save eliminated.
 2365              	.LVL253:
 228:subsystems/imu.c ****   VECT3_COPY(_imu->accel_prev, _imu->accel);
 2366              		.loc 2 228 0
 2367 0000 C368     		ldr	r3, [r0, #12]
 2368 0002 0363     		str	r3, [r0, #48]
 2369 0004 0369     		ldr	r3, [r0, #16]
 2370 0006 4363     		str	r3, [r0, #52]
 2371 0008 4369     		ldr	r3, [r0, #20]
 229:subsystems/imu.c ****   _imu->accel.x = ((_imu->accel_unscaled.x - _imu->accel_neutral.x) * IMU_ACCEL_X_SIGN *
 2372              		.loc 2 229 0
 2373 000a C26E     		ldr	r2, [r0, #108]
 228:subsystems/imu.c ****   VECT3_COPY(_imu->accel_prev, _imu->accel);
 2374              		.loc 2 228 0
 2375 000c 8363     		str	r3, [r0, #56]
 2376              		.loc 2 229 0
 2377 000e 836C     		ldr	r3, [r0, #72]
 2378 0010 D31A     		subs	r3, r2, r3
 2379 0012 48F69352 		movw	r2, #36243
 2380 0016 5343     		muls	r3, r2, r3
 230:subsystems/imu.c ****                    IMU_ACCEL_X_SENS_NUM) / IMU_ACCEL_X_SENS_DEN;
 2381              		.loc 2 230 0
 2382 0018 4EF2F951 		movw	r1, #58873
 2383 001c 93FBF1F3 		sdiv	r3, r3, r1
 231:subsystems/imu.c ****   _imu->accel.y = ((_imu->accel_unscaled.y - _imu->accel_neutral.y) * IMU_ACCEL_Y_SIGN *
 2384              		.loc 2 231 0
 2385 0020 026F     		ldr	r2, [r0, #112]
 229:subsystems/imu.c ****   _imu->accel.x = ((_imu->accel_unscaled.x - _imu->accel_neutral.x) * IMU_ACCEL_X_SIGN *
 2386              		.loc 2 229 0
 2387 0022 C360     		str	r3, [r0, #12]
 2388              		.loc 2 231 0
 2389 0024 C36C     		ldr	r3, [r0, #76]
 2390 0026 D31A     		subs	r3, r2, r3
 2391 0028 45F63732 		movw	r2, #23351
 2392 002c 5343     		muls	r3, r2, r3
 232:subsystems/imu.c ****                    IMU_ACCEL_Y_SENS_NUM) / IMU_ACCEL_Y_SENS_DEN;
 2393              		.loc 2 232 0
 2394 002e 49F20461 		movw	r1, #38404
 2395 0032 93FBF1F3 		sdiv	r3, r3, r1
 233:subsystems/imu.c ****   _imu->accel.z = ((_imu->accel_unscaled.z - _imu->accel_neutral.z) * IMU_ACCEL_Z_SIGN *
 2396              		.loc 2 233 0
 2397 0036 426F     		ldr	r2, [r0, #116]
 231:subsystems/imu.c ****   _imu->accel.y = ((_imu->accel_unscaled.y - _imu->accel_neutral.y) * IMU_ACCEL_Y_SIGN *
 2398              		.loc 2 231 0
 2399 0038 0361     		str	r3, [r0, #16]
 2400              		.loc 2 233 0
 2401 003a 036D     		ldr	r3, [r0, #80]
 2402 003c D31A     		subs	r3, r2, r3
 2403 003e 41F20502 		movw	r2, #4101
 2404 0042 5343     		muls	r3, r2, r3
 234:subsystems/imu.c ****                    IMU_ACCEL_Z_SENS_NUM) / IMU_ACCEL_Z_SENS_DEN;
 2405              		.loc 2 234 0
 2406 0044 41F69821 		movw	r1, #6808
 2407 0048 93FBF1F3 		sdiv	r3, r3, r1
 233:subsystems/imu.c ****   _imu->accel.z = ((_imu->accel_unscaled.z - _imu->accel_neutral.z) * IMU_ACCEL_Z_SIGN *
 2408              		.loc 2 233 0
 2409 004c 4361     		str	r3, [r0, #20]
 2410 004e 7047     		bx	lr
 2411              		.cfi_endproc
 2412              	.LFE499:
 2414              		.section	.text.imu_scale_mag,"ax",%progbits
 2415              		.align	1
 2416              		.weak	imu_scale_mag
 2417              		.thumb
 2418              		.thumb_func
 2420              	imu_scale_mag:
 2421              	.LFB500:
 235:subsystems/imu.c **** }
 236:subsystems/imu.c **** 
 237:subsystems/imu.c **** #if defined IMU_MAG_X_CURRENT_COEF && defined IMU_MAG_Y_CURRENT_COEF && defined IMU_MAG_Z_CURRENT_C
 238:subsystems/imu.c **** #include "subsystems/electrical.h"
 239:subsystems/imu.c **** void WEAK imu_scale_mag(struct Imu *_imu)
 240:subsystems/imu.c **** {
 241:subsystems/imu.c ****   struct Int32Vect3 mag_correction;
 242:subsystems/imu.c ****   mag_correction.x = (int32_t)(IMU_MAG_X_CURRENT_COEF * (float) electrical.current);
 243:subsystems/imu.c ****   mag_correction.y = (int32_t)(IMU_MAG_Y_CURRENT_COEF * (float) electrical.current);
 244:subsystems/imu.c ****   mag_correction.z = (int32_t)(IMU_MAG_Z_CURRENT_COEF * (float) electrical.current);
 245:subsystems/imu.c ****   _imu->mag.x = (((_imu->mag_unscaled.x - mag_correction.x) - _imu->mag_neutral.x) *
 246:subsystems/imu.c ****                  IMU_MAG_X_SIGN * IMU_MAG_X_SENS_NUM) / IMU_MAG_X_SENS_DEN;
 247:subsystems/imu.c ****   _imu->mag.y = (((_imu->mag_unscaled.y - mag_correction.y) - _imu->mag_neutral.y) *
 248:subsystems/imu.c ****                  IMU_MAG_Y_SIGN * IMU_MAG_Y_SENS_NUM) / IMU_MAG_Y_SENS_DEN;
 249:subsystems/imu.c ****   _imu->mag.z = (((_imu->mag_unscaled.z - mag_correction.z) - _imu->mag_neutral.z) *
 250:subsystems/imu.c ****                  IMU_MAG_Z_SIGN * IMU_MAG_Z_SENS_NUM) / IMU_MAG_Z_SENS_DEN;
 251:subsystems/imu.c **** }
 252:subsystems/imu.c **** #elif USE_MAGNETOMETER
 253:subsystems/imu.c **** void WEAK imu_scale_mag(struct Imu *_imu)
 254:subsystems/imu.c **** {
 2422              		.loc 2 254 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
 2426              		@ link register save eliminated.
 2427              	.LVL254:
 255:subsystems/imu.c ****   _imu->mag.x = ((_imu->mag_unscaled.x - _imu->mag_neutral.x) * IMU_MAG_X_SIGN *
 2428              		.loc 2 255 0
 2429 0000 826F     		ldr	r2, [r0, #120]
 2430 0002 436D     		ldr	r3, [r0, #84]
 2431 0004 D31A     		subs	r3, r2, r3
 2432 0006 4DF29212 		movw	r2, #53650
 2433 000a 5343     		muls	r3, r2, r3
 256:subsystems/imu.c ****                  IMU_MAG_X_SENS_NUM) / IMU_MAG_X_SENS_DEN;
 2434              		.loc 2 256 0
 2435 000c 42F24761 		movw	r1, #9799
 2436 0010 93FBF1F3 		sdiv	r3, r3, r1
 257:subsystems/imu.c ****   _imu->mag.y = ((_imu->mag_unscaled.y - _imu->mag_neutral.y) * IMU_MAG_Y_SIGN *
 2437              		.loc 2 257 0
 2438 0014 C26F     		ldr	r2, [r0, #124]
 255:subsystems/imu.c ****   _imu->mag.x = ((_imu->mag_unscaled.x - _imu->mag_neutral.x) * IMU_MAG_X_SIGN *
 2439              		.loc 2 255 0
 2440 0016 8361     		str	r3, [r0, #24]
 2441              		.loc 2 257 0
 2442 0018 836D     		ldr	r3, [r0, #88]
 2443 001a D31A     		subs	r3, r2, r3
 2444 001c 4FF6CD12 		movw	r2, #63949
 2445 0020 5343     		muls	r3, r2, r3
 258:subsystems/imu.c ****                  IMU_MAG_Y_SENS_NUM) / IMU_MAG_Y_SENS_DEN;
 2446              		.loc 2 258 0
 2447 0022 42F65D51 		movw	r1, #11613
 2448 0026 93FBF1F3 		sdiv	r3, r3, r1
 259:subsystems/imu.c ****   _imu->mag.z = ((_imu->mag_unscaled.z - _imu->mag_neutral.z) * IMU_MAG_Z_SIGN *
 2449              		.loc 2 259 0
 2450 002a D0F88020 		ldr	r2, [r0, #128]
 257:subsystems/imu.c ****   _imu->mag.y = ((_imu->mag_unscaled.y - _imu->mag_neutral.y) * IMU_MAG_Y_SIGN *
 2451              		.loc 2 257 0
 2452 002e C361     		str	r3, [r0, #28]
 2453              		.loc 2 259 0
 2454 0030 C36D     		ldr	r3, [r0, #92]
 2455 0032 D31A     		subs	r3, r2, r3
 2456 0034 47F2C832 		movw	r2, #29640
 2457 0038 5343     		muls	r3, r2, r3
 260:subsystems/imu.c ****                  IMU_MAG_Z_SENS_NUM) / IMU_MAG_Z_SENS_DEN;
 2458              		.loc 2 260 0
 2459 003a 41F2E971 		movw	r1, #6121
 2460 003e 93FBF1F3 		sdiv	r3, r3, r1
 259:subsystems/imu.c ****   _imu->mag.z = ((_imu->mag_unscaled.z - _imu->mag_neutral.z) * IMU_MAG_Z_SIGN *
 2461              		.loc 2 259 0
 2462 0042 0362     		str	r3, [r0, #32]
 2463 0044 7047     		bx	lr
 2464              		.cfi_endproc
 2465              	.LFE500:
 2467              		.global	imu
 2468              		.section	.rodata.str1.1,"aMS",%progbits,1
 2469              	.LC0:
 2470 0000 494D555F 		.ascii	"IMU_MAG_RAW\000"
 2470      4D41475F 
 2470      52415700 
 2471              	.LC1:
 2472 000c 494D555F 		.ascii	"IMU_ACCEL_RAW\000"
 2472      41434345 
 2472      4C5F5241 
 2472      5700
 2473              	.LC2:
 2474 001a 494D555F 		.ascii	"IMU_GYRO_RAW\000"
 2474      4759524F 
 2474      5F524157 
 2474      00
 2475              	.LC3:
 2476 0027 494D555F 		.ascii	"IMU_ACCEL\000"
 2476      41434345 
 2476      4C00
 2477              	.LC4:
 2478 0031 494D555F 		.ascii	"IMU_MAG\000"
 2478      4D414700 
 2479              	.LC5:
 2480 0039 494D555F 		.ascii	"IMU_GYRO\000"
 2480      4759524F 
 2480      00
 2481              	.LC6:
 2482 0042 494D555F 		.ascii	"IMU_MAG_SCALED\000"
 2482      4D41475F 
 2482      5343414C 
 2482      454400
 2483              	.LC7:
 2484 0051 494D555F 		.ascii	"IMU_ACCEL_SCALED\000"
 2484      41434345 
 2484      4C5F5343 
 2484      414C4544 
 2484      00
 2485              	.LC8:
 2486 0062 494D555F 		.ascii	"IMU_GYRO_SCALED\000"
 2486      4759524F 
 2486      5F534341 
 2486      4C454400 
 2487              		.section	.bss.imu,"aw",%nobits
 2488              		.align	2
 2489              		.set	.LANCHOR0,. + 0
 2492              	imu:
 2493 0000 00000000 		.space	268
 2493      00000000 
 2493      00000000 
 2493      00000000 
 2493      00000000 
 2494              		.text
 2495              	.Letext0:
 2496              		.file 6 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 2497              		.file 7 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 2498              		.file 8 "/home/lsk/paparazzi/sw/include/std.h"
 2499              		.file 9 "./math/pprz_algebra_int.h"
 2500              		.file 10 "./math/pprz_algebra_float.h"
 2501              		.file 11 "./subsystems/imu.h"
 2502              		.file 12 "./math/pprz_geodetic_int.h"
 2503              		.file 13 "./math/pprz_geodetic_float.h"
 2504              		.file 14 "./mcu_periph/sys_time.h"
 2505              		.file 15 "./mcu_periph/link_device.h"
 2506              		.file 16 "./mcu_periph/uart.h"
 2507              		.file 17 "./subsystems/gps/gps_ubx.h"
 2508              		.file 18 "./subsystems/gps.h"
 2509              		.file 19 "./subsystems/abi_common.h"
 2510              		.file 20 "./subsystems/datalink/transport.h"
 2511              		.file 21 "./subsystems/datalink/xbee.h"
 2512              		.file 22 "./subsystems/datalink/telemetry_common.h"
 2513              		.file 23 "./subsystems/datalink/datalink.h"
 2514              		.file 24 "./subsystems/datalink/w5100.h"
 2515              		.file 25 "/home/lsk/paparazzi/var/aircrafts/kroozsd_lsk/ap/generated/periodic_telemetry.h"
 2516              		.file 26 "./subsystems/datalink/telemetry.h"
 2517              		.file 27 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 imu.c
     /tmp/ccf4INi0.s:20     .text.orientationGetEulers_f:00000000 $t
     /tmp/ccf4INi0.s:24     .text.orientationGetEulers_f:00000000 orientationGetEulers_f
     /tmp/ccf4INi0.s:54     .text.send_mag_raw:00000000 $t
     /tmp/ccf4INi0.s:58     .text.send_mag_raw:00000000 send_mag_raw
     /tmp/ccf4INi0.s:215    .text.send_mag_raw:000000c4 $d
     /tmp/ccf4INi0.s:221    .text.send_accel_raw:00000000 $t
     /tmp/ccf4INi0.s:225    .text.send_accel_raw:00000000 send_accel_raw
     /tmp/ccf4INi0.s:380    .text.send_accel_raw:000000c4 $d
     /tmp/ccf4INi0.s:386    .text.send_gyro_raw:00000000 $t
     /tmp/ccf4INi0.s:390    .text.send_gyro_raw:00000000 send_gyro_raw
     /tmp/ccf4INi0.s:545    .text.send_gyro_raw:000000c4 $d
     /tmp/ccf4INi0.s:551    .text.send_accel:00000000 $t
     /tmp/ccf4INi0.s:555    .text.send_accel:00000000 send_accel
     /tmp/ccf4INi0.s:742    .text.send_accel:000000f4 $d
     /tmp/ccf4INi0.s:749    .text.send_mag:00000000 $t
     /tmp/ccf4INi0.s:753    .text.send_mag:00000000 send_mag
     /tmp/ccf4INi0.s:940    .text.send_mag:000000f4 $d
     /tmp/ccf4INi0.s:947    .text.send_gyro:00000000 $t
     /tmp/ccf4INi0.s:951    .text.send_gyro:00000000 send_gyro
     /tmp/ccf4INi0.s:1138   .text.send_gyro:000000f4 $d
     /tmp/ccf4INi0.s:1145   .text.send_mag_scaled:00000000 $t
     /tmp/ccf4INi0.s:1149   .text.send_mag_scaled:00000000 send_mag_scaled
     /tmp/ccf4INi0.s:1304   .text.send_mag_scaled:000000c4 $d
     /tmp/ccf4INi0.s:1310   .text.send_accel_scaled:00000000 $t
     /tmp/ccf4INi0.s:1314   .text.send_accel_scaled:00000000 send_accel_scaled
     /tmp/ccf4INi0.s:1469   .text.send_accel_scaled:000000c4 $d
     /tmp/ccf4INi0.s:1475   .text.send_gyro_scaled:00000000 $t
     /tmp/ccf4INi0.s:1479   .text.send_gyro_scaled:00000000 send_gyro_scaled
     /tmp/ccf4INi0.s:1634   .text.send_gyro_scaled:000000c4 $d
     /tmp/ccf4INi0.s:1640   .text.AbiSendMsgBODY_TO_IMU_QUAT.constprop.10:00000000 $t
     /tmp/ccf4INi0.s:1644   .text.AbiSendMsgBODY_TO_IMU_QUAT.constprop.10:00000000 AbiSendMsgBODY_TO_IMU_QUAT.constprop.10
     /tmp/ccf4INi0.s:1693   .text.AbiSendMsgBODY_TO_IMU_QUAT.constprop.10:00000020 $d
     /tmp/ccf4INi0.s:1698   .text.orientationGetQuat_f.constprop.11:00000000 $t
     /tmp/ccf4INi0.s:1702   .text.orientationGetQuat_f.constprop.11:00000000 orientationGetQuat_f.constprop.11
     /tmp/ccf4INi0.s:1729   .text.orientationGetQuat_f.constprop.11:00000018 $d
     /tmp/ccf4INi0.s:1735   .text.imu_init:00000000 $t
     /tmp/ccf4INi0.s:1740   .text.imu_init:00000000 imu_init
     /tmp/ccf4INi0.s:1871   .text.imu_init:000000cc $d
     /tmp/ccf4INi0.s:1895   .text.imu_SetBodyToImuPhi:00000000 $t
     /tmp/ccf4INi0.s:1900   .text.imu_SetBodyToImuPhi:00000000 imu_SetBodyToImuPhi
     /tmp/ccf4INi0.s:1962   .text.imu_SetBodyToImuPhi:00000044 $d
     /tmp/ccf4INi0.s:1967   .text.imu_SetBodyToImuTheta:00000000 $t
     /tmp/ccf4INi0.s:1972   .text.imu_SetBodyToImuTheta:00000000 imu_SetBodyToImuTheta
     /tmp/ccf4INi0.s:2034   .text.imu_SetBodyToImuTheta:00000044 $d
     /tmp/ccf4INi0.s:2039   .text.imu_SetBodyToImuPsi:00000000 $t
     /tmp/ccf4INi0.s:2044   .text.imu_SetBodyToImuPsi:00000000 imu_SetBodyToImuPsi
     /tmp/ccf4INi0.s:2106   .text.imu_SetBodyToImuPsi:00000044 $d
     /tmp/ccf4INi0.s:2111   .text.imu_SetBodyToImuCurrent:00000000 $t
     /tmp/ccf4INi0.s:2116   .text.imu_SetBodyToImuCurrent:00000000 imu_SetBodyToImuCurrent
     /tmp/ccf4INi0.s:2267   .text.imu_SetBodyToImuCurrent:000000a4 $d
     /tmp/ccf4INi0.s:2274   .text.imu_periodic:00000000 $t
     /tmp/ccf4INi0.s:2279   .text.imu_periodic:00000000 imu_periodic
     /tmp/ccf4INi0.s:2291   .text.imu_scale_gyro:00000000 $t
     /tmp/ccf4INi0.s:2296   .text.imu_scale_gyro:00000000 imu_scale_gyro
     /tmp/ccf4INi0.s:2353   .text.imu_scale_accel:00000000 $t
     /tmp/ccf4INi0.s:2358   .text.imu_scale_accel:00000000 imu_scale_accel
     /tmp/ccf4INi0.s:2415   .text.imu_scale_mag:00000000 $t
     /tmp/ccf4INi0.s:2420   .text.imu_scale_mag:00000000 imu_scale_mag
     /tmp/ccf4INi0.s:2492   .bss.imu:00000000 imu
     /tmp/ccf4INi0.s:2488   .bss.imu:00000000 $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.1a82a3cc35cb0a04319c41bcf41d2a02
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.pprz_orientation_conversion.h.57.c0c8f5187bc056807e507011653281f4
                           .group:00000000 wm4.airframe.h.5.1b65f22e2c90217dfc42bdae27fe483a
                           .group:00000000 wm4.actuators_pwm_arch.h.27.274c2fe245167861139e341fd233f9ea
                           .group:00000000 wm4.airframe.h.14.f46e30d413878b482f16a5abf2127a4b
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.i2c_common_all.h.33.0891c362b103dbf9b3c797a7eb8c45dd
                           .group:00000000 wm4.i2c.h.84.d7c95ef3b7385a54cace86b9fe5b1585
                           .group:00000000 wm4.mpu60x0_regs.h.29.354741a377e41e863a6f15c8045a1631
                           .group:00000000 wm4.mpu60x0.h.37.d6af4975dcfadd714415f3475e68a5c4
                           .group:00000000 wm4.hmc58xx_regs.h.28.26f847f5969d95027ba278c81a388e81
                           .group:00000000 wm4.imu_krooz.h.42.4d9d9e94d6adec753cdf3095a1d719d5
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.state.h.65.b18954aacb3801ec3e27b4e857d620d3
                           .group:00000000 wm4.sys_time.h.31.454ffebb4f6baf6e87ab8a60104a5808
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.gps_ubx.h.36.d4183b0b154441c99ce352aae50967b5
                           .group:00000000 wm4.gps.h.41.79d1c69e44dd427f855100ff8e932fbe
                           .group:00000000 wm4.abi_sender_ids.h.29.e18315036ac250e614ad78ed4bcb93da
                           .group:00000000 wm4.abi_common.h.46.0bb6611719a01752e88980049d8d5177
                           .group:00000000 wm4.abi_messages.h.14.a63139ccdcd5241f8ab897fe12fc8134
                           .group:00000000 wm4.transport.h.27.9215bbc09b6a8d08d228c20740408d47
                           .group:00000000 wm4.messages.h.9.6fd66bc411dd06866b086a1b57e0f309
                           .group:00000000 wm4.modules.h.5.be642dc363672736d1d1e45a75aad0cf
                           .group:00000000 wm4.gps_ubx_ucenter.h.29.30a3f1ed020dbc7085e412c29746d829
                           .group:00000000 wm4.pprz_algebra_double.h.32.ffddb69f4b2468d251e675e232b5bba1
                           .group:00000000 wm4.modules.h.24.27c8342510f0f30e64a55f4e4778474a
                           .group:00000000 wm4.datalink.h.28.0d234a7c203533b2ec538be3e18eddf4
                           .group:00000000 wm4.dl_protocol.h.5.a12fe27a4b4a3cbb46fbca8acf33e3dd
                           .group:00000000 wm4.datalink.h.46.36a5e0f36fb7d0784f1e7af767537c84
                           .group:00000000 wm4.pprz_transport.h.57.167db0ee96032e142f5d6e570b3339aa
                           .group:00000000 wm4.xbee24.h.29.a6677f8bcb71d3b07e11290a2de0e179
                           .group:00000000 wm4.xbee.h.41.f36be817f95b74f883aef9324b53817b
                           .group:00000000 wm4.w5100.h.29.d3529bed8de657ab3944b343be960f10
                           .group:00000000 wm4.downlink.h.76.41034157e32fc9012166fd95ec7418fc
                           .group:00000000 wm4.periodic_telemetry.h.11.45a44616e39ae884c5a68828f6bf143a

UNDEFINED SYMBOLS
orientationCalcEulers_f
abi_queues
orientationCalcQuat_f
register_periodic_telemetry
imu_impl_init
pprz_telemetry
state
