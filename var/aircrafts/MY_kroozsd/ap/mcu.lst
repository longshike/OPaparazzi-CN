   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"mcu.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.mcu_init,"ax",%progbits
  20              		.align	1
  21              		.global	mcu_init
  22              		.thumb
  23              		.thumb_func
  25              	mcu_init:
  26              	.LFB24:
  27              		.file 1 "mcu.c"
   1:mcu.c         **** /*
   2:mcu.c         ****  * Copyright (C) 2010-2012 The Paparazzi team
   3:mcu.c         ****  *
   4:mcu.c         ****  * This file is part of Paparazzi.
   5:mcu.c         ****  *
   6:mcu.c         ****  * Paparazzi is free software; you can redistribute it and/or modify
   7:mcu.c         ****  * it under the terms of the GNU General Public License as published by
   8:mcu.c         ****  * the Free Software Foundation; either version 2, or (at your option)
   9:mcu.c         ****  * any later version.
  10:mcu.c         ****  *
  11:mcu.c         ****  * Paparazzi is distributed in the hope that it will be useful,
  12:mcu.c         ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:mcu.c         ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:mcu.c         ****  * GNU General Public License for more details.
  15:mcu.c         ****  *
  16:mcu.c         ****  * You should have received a copy of the GNU General Public License
  17:mcu.c         ****  * along with Paparazzi; see the file COPYING.  If not, write to
  18:mcu.c         ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:mcu.c         ****  * Boston, MA 02111-1307, USA.
  20:mcu.c         ****  *
  21:mcu.c         ****  */
  22:mcu.c         **** 
  23:mcu.c         **** /**
  24:mcu.c         ****  * @file mcu.c
  25:mcu.c         ****  * @brief Arch independent mcu ( Micro Controller Unit ) utilities.
  26:mcu.c         ****  */
  27:mcu.c         **** 
  28:mcu.c         **** #include "mcu.h"
  29:mcu.c         **** #include "std.h"
  30:mcu.c         **** 
  31:mcu.c         **** #ifdef PERIPHERALS_AUTO_INIT
  32:mcu.c         **** #include "mcu_periph/sys_time.h"
  33:mcu.c         **** #ifdef USE_LED
  34:mcu.c         **** #include "led.h"
  35:mcu.c         **** #endif
  36:mcu.c         **** #if defined RADIO_CONTROL
  37:mcu.c         **** #if defined RADIO_CONTROL_LINK  || defined RADIO_CONTROL_SPEKTRUM_PRIMARY_PORT
  38:mcu.c         **** #include "subsystems/radio_control.h"
  39:mcu.c         **** #endif
  40:mcu.c         **** #endif
  41:mcu.c         **** #if USE_UART0 || USE_UART1 || USE_UART2 || USE_UART3 || USE_UART4 || USE_UART5 || USE_UART6
  42:mcu.c         **** #define USING_UART 1
  43:mcu.c         **** #include "mcu_periph/uart.h"
  44:mcu.c         **** #endif
  45:mcu.c         **** #if USE_I2C0 || USE_I2C1 || USE_I2C2 || USE_I2C3
  46:mcu.c         **** #define USING_I2C 1
  47:mcu.c         **** #include "mcu_periph/i2c.h"
  48:mcu.c         **** #endif
  49:mcu.c         **** #if USE_ADC
  50:mcu.c         **** #include "mcu_periph/adc.h"
  51:mcu.c         **** #endif
  52:mcu.c         **** #if USE_USB_SERIAL
  53:mcu.c         **** #include "mcu_periph/usb_serial.h"
  54:mcu.c         **** #endif
  55:mcu.c         **** #ifdef USE_UDP
  56:mcu.c         **** #include "mcu_periph/udp.h"
  57:mcu.c         **** #endif
  58:mcu.c         **** #if USE_SPI
  59:mcu.c         **** #include "mcu_periph/spi.h"
  60:mcu.c         **** #endif
  61:mcu.c         **** #ifdef USE_DAC
  62:mcu.c         **** #include "mcu_periph/dac.h"
  63:mcu.c         **** #endif
  64:mcu.c         **** #endif /* PERIPHERALS_AUTO_INIT */
  65:mcu.c         **** 
  66:mcu.c         **** void mcu_init(void)
  67:mcu.c         **** {
  28              		.loc 1 67 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36              	.LBB4:
  37              	.LBB5:
  38              		.file 2 "led.h"
   1:led.h         **** /*
   2:led.h         ****  * Copyright (C) 2003-2005  Antoine Drouin
   3:led.h         ****  *
   4:led.h         ****  * This file is part of paparazzi.
   5:led.h         ****  *
   6:led.h         ****  * paparazzi is free software; you can redistribute it and/or modify
   7:led.h         ****  * it under the terms of the GNU General Public License as published by
   8:led.h         ****  * the Free Software Foundation; either version 2, or (at your option)
   9:led.h         ****  * any later version.
  10:led.h         ****  *
  11:led.h         ****  * paparazzi is distributed in the hope that it will be useful,
  12:led.h         ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:led.h         ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:led.h         ****  * GNU General Public License for more details.
  15:led.h         ****  *
  16:led.h         ****  * You should have received a copy of the GNU General Public License
  17:led.h         ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:led.h         ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:led.h         ****  * Boston, MA 02111-1307, USA.
  20:led.h         ****  *
  21:led.h         ****  */
  22:led.h         **** 
  23:led.h         **** /** \file led.h
  24:led.h         ****  *  \brief arch independent LED (Light Emitting Diodes) API
  25:led.h         ****  *
  26:led.h         ****  *
  27:led.h         ****  */
  28:led.h         **** 
  29:led.h         **** #ifndef LED_H
  30:led.h         **** #define LED_H
  31:led.h         **** 
  32:led.h         **** #if defined USE_LED
  33:led.h         **** 
  34:led.h         **** #include "led_hw.h"
  35:led.h         **** 
  36:led.h         **** static inline void led_init(void)
  37:led.h         **** {
  38:led.h         **** #if USE_LED_1
  39:led.h         ****   LED_INIT(1);
  39              		.loc 2 39 0
  40 0002 164C     		ldr	r4, .L2
  41              	.LBE5:
  42              	.LBE4:
  68:mcu.c         **** 
  69:mcu.c         ****   mcu_arch_init();
  43              		.loc 1 69 0
  44 0004 FFF7FEFF 		bl	mcu_arch_init
  45              	.LVL0:
  70:mcu.c         **** 
  71:mcu.c         **** #ifdef PERIPHERALS_AUTO_INIT
  72:mcu.c         ****   sys_time_init();
  46              		.loc 1 72 0
  47 0008 FFF7FEFF 		bl	sys_time_init
  48              	.LVL1:
  49              	.LBB7:
  50              	.LBB6:
  51              		.loc 2 39 0
  52 000c 2046     		mov	r0, r4
  53 000e 4FF40051 		mov	r1, #8192
  54 0012 FFF7FEFF 		bl	gpio_setup_output
  55              	.LVL2:
  40:led.h         ****   LED_OFF(1);
  56              		.loc 2 40 0
  57 0016 2046     		mov	r0, r4
  58 0018 4FF40051 		mov	r1, #8192
  59 001c FFF7FEFF 		bl	gpio_set
  60              	.LVL3:
  41:led.h         **** #endif /* LED_1 */
  42:led.h         **** 
  43:led.h         **** #if USE_LED_2
  44:led.h         ****   LED_INIT(2);
  61              		.loc 2 44 0
  62 0020 2046     		mov	r0, r4
  63 0022 4FF48041 		mov	r1, #16384
  64 0026 FFF7FEFF 		bl	gpio_setup_output
  65              	.LVL4:
  45:led.h         ****   LED_OFF(2);
  66              		.loc 2 45 0
  67 002a 2046     		mov	r0, r4
  68 002c 4FF48041 		mov	r1, #16384
  69 0030 FFF7FEFF 		bl	gpio_set
  70              	.LVL5:
  46:led.h         **** #endif /* LED_2 */
  47:led.h         **** 
  48:led.h         **** #if USE_LED_3
  49:led.h         ****   LED_INIT(3);
  71              		.loc 2 49 0
  72 0034 2046     		mov	r0, r4
  73 0036 4FF40041 		mov	r1, #32768
  74 003a FFF7FEFF 		bl	gpio_setup_output
  75              	.LVL6:
  50:led.h         ****   LED_OFF(3);
  76              		.loc 2 50 0
  77 003e 2046     		mov	r0, r4
  78 0040 4FF40041 		mov	r1, #32768
  79 0044 FFF7FEFF 		bl	gpio_set
  80              	.LVL7:
  81              	.LBE6:
  82              	.LBE7:
  73:mcu.c         **** #ifdef USE_LED
  74:mcu.c         ****   led_init();
  75:mcu.c         **** #endif
  76:mcu.c         ****   /* for now this means using spektrum */
  77:mcu.c         **** #if defined RADIO_CONTROL & defined RADIO_CONTROL_SPEKTRUM_PRIMARY_PORT & defined RADIO_CONTROL_BIN
  78:mcu.c         ****   RADIO_CONTROL_BIND_IMPL_FUNC();
  79:mcu.c         **** #endif
  80:mcu.c         **** #if USE_UART0
  81:mcu.c         ****   uart0_init();
  82:mcu.c         **** #endif
  83:mcu.c         **** #if USE_UART1
  84:mcu.c         ****   uart1_init();
  85:mcu.c         **** #endif
  86:mcu.c         **** #if USE_UART2
  87:mcu.c         ****   uart2_init();
  88:mcu.c         **** #endif
  89:mcu.c         **** #if USE_UART3
  90:mcu.c         ****   uart3_init();
  83              		.loc 1 90 0
  84 0048 FFF7FEFF 		bl	uart3_init
  85              	.LVL8:
  91:mcu.c         **** #endif
  92:mcu.c         **** #if USE_UART4
  93:mcu.c         ****   uart4_init();
  94:mcu.c         **** #endif
  95:mcu.c         **** #if USE_UART5
  96:mcu.c         ****   uart5_init();
  86              		.loc 1 96 0
  87 004c FFF7FEFF 		bl	uart5_init
  88              	.LVL9:
  97:mcu.c         **** #endif
  98:mcu.c         **** #if USE_UART6
  99:mcu.c         ****   uart6_init();
 100:mcu.c         **** #endif
 101:mcu.c         **** #ifdef USE_I2C0
 102:mcu.c         ****   i2c0_init();
 103:mcu.c         **** #endif
 104:mcu.c         **** #ifdef USE_I2C1
 105:mcu.c         ****   i2c1_init();
 106:mcu.c         **** #endif
 107:mcu.c         **** #ifdef USE_I2C2
 108:mcu.c         ****   i2c2_init();
  89              		.loc 1 108 0
  90 0050 FFF7FEFF 		bl	i2c2_init
  91              	.LVL10:
 109:mcu.c         **** #endif
 110:mcu.c         **** #ifdef USE_I2C3
 111:mcu.c         ****   i2c3_init();
 112:mcu.c         **** #endif
 113:mcu.c         **** #if USE_ADC
 114:mcu.c         ****   adc_init();
 115:mcu.c         **** #endif
 116:mcu.c         **** #if USE_USB_SERIAL
 117:mcu.c         ****   VCOM_init();
 118:mcu.c         **** #endif
 119:mcu.c         **** 
 120:mcu.c         **** #if USE_SPI
 121:mcu.c         **** #if SPI_MASTER
 122:mcu.c         **** 
 123:mcu.c         **** #if USE_SPI0
 124:mcu.c         ****   spi0_init();
 125:mcu.c         **** #endif
 126:mcu.c         **** #if USE_SPI1
 127:mcu.c         ****   spi1_init();
 128:mcu.c         **** #endif
 129:mcu.c         **** #if USE_SPI2
 130:mcu.c         ****   spi2_init();
 131:mcu.c         **** #endif
 132:mcu.c         **** #if USE_SPI3
 133:mcu.c         ****   spi3_init();
 134:mcu.c         **** #endif
 135:mcu.c         ****   spi_init_slaves();
 136:mcu.c         **** #endif // SPI_MASTER
 137:mcu.c         **** 
 138:mcu.c         **** #if SPI_SLAVE
 139:mcu.c         **** #if USE_SPI0_SLAVE
 140:mcu.c         ****   spi0_slave_init();
 141:mcu.c         **** #endif
 142:mcu.c         **** #if USE_SPI1_SLAVE
 143:mcu.c         ****   spi1_slave_init();
 144:mcu.c         **** #endif
 145:mcu.c         **** #if USE_SPI2_SLAVE
 146:mcu.c         ****   spi2_slave_init();
 147:mcu.c         **** #endif
 148:mcu.c         **** #if USE_SPI3_SLAVE
 149:mcu.c         ****   spi3_slave_init();
 150:mcu.c         **** #endif
 151:mcu.c         **** #endif // SPI_SLAVE
 152:mcu.c         **** 
 153:mcu.c         **** #if SPI_SLAVE_HS
 154:mcu.c         ****   spi_slave_hs_init();
 155:mcu.c         **** #endif
 156:mcu.c         **** #endif // USE_SPI
 157:mcu.c         **** 
 158:mcu.c         **** #ifdef USE_DAC
 159:mcu.c         ****   dac_init();
 160:mcu.c         **** #endif
 161:mcu.c         **** 
 162:mcu.c         **** #ifdef USE_UDP0
 163:mcu.c         ****   UDP0Init();
 164:mcu.c         **** #endif
 165:mcu.c         **** #ifdef USE_UDP1
 166:mcu.c         ****   UDP1Init();
 167:mcu.c         **** #endif
 168:mcu.c         **** #ifdef USE_UDP2
 169:mcu.c         ****   UDP2Init();
 170:mcu.c         **** #endif
 171:mcu.c         **** 
 172:mcu.c         **** #else
 173:mcu.c         ****   INFO("PERIPHERALS_AUTO_INIT not enabled! Peripherals (including sys_time) need explicit initializ
 174:mcu.c         **** #endif /* PERIPHERALS_AUTO_INIT */
 175:mcu.c         **** 
 176:mcu.c         **** }
  92              		.loc 1 176 0
  93 0054 BDE81040 		pop	{r4, lr}
 114:mcu.c         ****   adc_init();
  94              		.loc 1 114 0
  95 0058 FFF7FEBF 		b	adc_init
  96              	.LVL11:
  97              	.L3:
  98              		.align	2
  99              	.L2:
 100 005c 00000240 		.word	1073872896
 101              		.cfi_endproc
 102              	.LFE24:
 104              		.section	.text.mcu_event,"ax",%progbits
 105              		.align	1
 106              		.global	mcu_event
 107              		.thumb
 108              		.thumb_func
 110              	mcu_event:
 111              	.LFB25:
 177:mcu.c         **** 
 178:mcu.c         **** void mcu_event(void)
 179:mcu.c         **** {
 112              		.loc 1 179 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116 0000 08B5     		push	{r3, lr}
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 3, -8
 119              		.cfi_offset 14, -4
 180:mcu.c         **** #if USING_I2C
 181:mcu.c         ****   i2c_event();
 120              		.loc 1 181 0
 121 0002 FFF7FEFF 		bl	i2c_event
 122              	.LVL12:
 182:mcu.c         **** #endif
 183:mcu.c         **** 
 184:mcu.c         **** #if USING_UART
 185:mcu.c         ****   uart_event();
 186:mcu.c         **** #endif
 187:mcu.c         **** 
 188:mcu.c         **** #if USE_UDP
 189:mcu.c         ****   udp_event();
 190:mcu.c         **** #endif
 191:mcu.c         **** 
 192:mcu.c         **** #if USE_USB_SERIAL
 193:mcu.c         ****   VCOM_event();
 194:mcu.c         **** #endif
 195:mcu.c         **** }
 123              		.loc 1 195 0
 124 0006 BDE80840 		pop	{r3, lr}
 185:mcu.c         ****   uart_event();
 125              		.loc 1 185 0
 126 000a FFF7FEBF 		b	uart_event
 127              	.LVL13:
 128              		.cfi_endproc
 129              	.LFE25:
 131              		.text
 132              	.Letext0:
 133              		.file 3 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 134              		.file 4 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 135              		.file 5 "/home/lsk/paparazzi/sw/include/std.h"
 136              		.file 6 "mcu_periph/sys_time.h"
 137              		.file 7 "/home/lsk/paparazzi/sw/airborne/arch/stm32/mcu_periph/gpio_arch.h"
 138              		.file 8 "../ext/libopencm3/include/libopencm3/stm32/common/gpio_common_all.h"
 139              		.file 9 "/home/lsk/paparazzi/sw/airborne/arch/stm32/mcu_arch.h"
 140              		.file 10 "mcu_periph/uart.h"
 141              		.file 11 "mcu_periph/i2c.h"
 142              		.file 12 "mcu_periph/adc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 mcu.c
     /tmp/ccOIinTx.s:20     .text.mcu_init:00000000 $t
     /tmp/ccOIinTx.s:25     .text.mcu_init:00000000 mcu_init
     /tmp/ccOIinTx.s:100    .text.mcu_init:0000005c $d
     /tmp/ccOIinTx.s:105    .text.mcu_event:00000000 $t
     /tmp/ccOIinTx.s:110    .text.mcu_event:00000000 mcu_event
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.mcu_arch.h.40.71694bb2df9860c9d8824bb71314a473
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.1a82a3cc35cb0a04319c41bcf41d2a02
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.sys_time.h.40.92f532b5cea824e0ec5ea845e7275d34
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.i2c_common_all.h.33.0891c362b103dbf9b3c797a7eb8c45dd
                           .group:00000000 wm4.i2c.h.84.34a7bcc5d6061ae04ce49649a64c2253
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.i2c.h.173.edf41ec62e7796285c1333ff32983d5f
                           .group:00000000 wm4.adc.h.40.1a39266ea7e49764800ee7652a642a83

UNDEFINED SYMBOLS
mcu_arch_init
sys_time_init
gpio_setup_output
gpio_set
uart3_init
uart5_init
i2c2_init
adc_init
i2c_event
uart_event
