   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"guidance_h.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.stateGetPositionNed_i,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	stateGetPositionNed_i:
  25              	.LFB86:
  26              		.file 1 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: degrees*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   uint32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i *ltp_def)
 441:./state.h     **** {
 442:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 443:./state.h     ****   /* convert to float */
 444:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 445:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 446:./state.h     ****   HIGH_RES_RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 447:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 448:./state.h     **** 
 449:./state.h     ****   /* clear bits for all local frame representations */
 450:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 451:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 453:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 454:./state.h     **** 
 455:./state.h     ****   state.ned_initialized_i = TRUE;
 456:./state.h     ****   state.ned_initialized_f = TRUE;
 457:./state.h     **** }
 458:./state.h     **** 
 459:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 460:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f *utm_def)
 461:./state.h     **** {
 462:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 463:./state.h     ****   state.utm_initialized_f = TRUE;
 464:./state.h     **** 
 465:./state.h     ****   /* clear bits for all local frame representations */
 466:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 467:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 468:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 469:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 470:./state.h     **** }
 471:./state.h     **** /*******************************************************************************
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 474:./state.h     ****  *                                                                             *
 475:./state.h     ****  ******************************************************************************/
 476:./state.h     **** 
 477:./state.h     **** /************* declaration of transformation functions ************/
 478:./state.h     **** extern void stateCalcPositionEcef_i(void);
 479:./state.h     **** extern void stateCalcPositionNed_i(void);
 480:./state.h     **** extern void stateCalcPositionEnu_i(void);
 481:./state.h     **** extern void stateCalcPositionLla_i(void);
 482:./state.h     **** extern void stateCalcPositionUtm_f(void);
 483:./state.h     **** extern void stateCalcPositionEcef_f(void);
 484:./state.h     **** extern void stateCalcPositionNed_f(void);
 485:./state.h     **** extern void stateCalcPositionEnu_f(void);
 486:./state.h     **** extern void stateCalcPositionLla_f(void);
 487:./state.h     **** 
 488:./state.h     **** /*********************** validity test functions ******************/
 489:./state.h     **** 
 490:./state.h     **** /// Test if local coordinates are valid.
 491:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void)
 492:./state.h     **** {
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 495:./state.h     **** }
 496:./state.h     **** 
 497:./state.h     **** /// Test if global coordinates are valid.
 498:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void)
 499:./state.h     **** {
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 501:./state.h     **** }
 502:./state.h     **** 
 503:./state.h     **** /************************ Set functions ****************************/
 504:./state.h     **** 
 505:./state.h     **** /// Set position from ECEF coordinates (int).
 506:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i *ecef_pos)
 507:./state.h     **** {
 508:./state.h     ****   VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 509:./state.h     ****   /* clear bits for all position representations and only set the new one */
 510:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 511:./state.h     **** }
 512:./state.h     **** 
 513:./state.h     **** /// Set position from local NED coordinates (int).
 514:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i *ned_pos)
 515:./state.h     **** {
 516:./state.h     ****   VECT3_COPY(state.ned_pos_i, *ned_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from local ENU coordinates (int).
 522:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i *enu_pos)
 523:./state.h     **** {
 524:./state.h     ****   VECT3_COPY(state.enu_pos_i, *enu_pos);
 525:./state.h     ****   /* clear bits for all position representations and only set the new one */
 526:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 527:./state.h     **** }
 528:./state.h     **** 
 529:./state.h     **** /// Set position from LLA coordinates (int).
 530:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i *lla_pos)
 531:./state.h     **** {
 532:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 533:./state.h     ****   /* clear bits for all position representations and only set the new one */
 534:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 535:./state.h     **** }
 536:./state.h     **** 
 537:./state.h     **** /// Set multiple position coordinates (int).
 538:./state.h     **** static inline void stateSetPosition_i(
 539:./state.h     ****   struct EcefCoor_i *ecef_pos,
 540:./state.h     ****   struct NedCoor_i *ned_pos,
 541:./state.h     ****   struct EnuCoor_i *enu_pos,
 542:./state.h     ****   struct LlaCoor_i *lla_pos)
 543:./state.h     **** {
 544:./state.h     ****   /* clear all status bit */
 545:./state.h     ****   state.pos_status = 0;
 546:./state.h     ****   if (ecef_pos != NULL) {
 547:./state.h     ****     VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 548:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 549:./state.h     ****   }
 550:./state.h     ****   if (ned_pos != NULL) {
 551:./state.h     ****     VECT3_COPY(state.ned_pos_i, *ned_pos);
 552:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 553:./state.h     ****   }
 554:./state.h     ****   if (enu_pos != NULL) {
 555:./state.h     ****     VECT3_COPY(state.enu_pos_i, *enu_pos);
 556:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 557:./state.h     ****   }
 558:./state.h     ****   if (lla_pos != NULL) {
 559:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 560:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 561:./state.h     ****   }
 562:./state.h     **** }
 563:./state.h     **** 
 564:./state.h     **** /// Set position from UTM coordinates (float).
 565:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f *utm_pos)
 566:./state.h     **** {
 567:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 568:./state.h     ****   /* clear bits for all position representations and only set the new one */
 569:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 570:./state.h     **** }
 571:./state.h     **** 
 572:./state.h     **** /// Set position from ECEF coordinates (float).
 573:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f *ecef_pos)
 574:./state.h     **** {
 575:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 576:./state.h     ****   /* clear bits for all position representations and only set the new one */
 577:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 578:./state.h     **** }
 579:./state.h     **** 
 580:./state.h     **** /// Set position from local NED coordinates (float).
 581:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f *ned_pos)
 582:./state.h     **** {
 583:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 584:./state.h     ****   /* clear bits for all position representations and only set the new one */
 585:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 586:./state.h     **** }
 587:./state.h     **** 
 588:./state.h     **** /// Set position from local ENU coordinates (float).
 589:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f *enu_pos)
 590:./state.h     **** {
 591:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 592:./state.h     ****   /* clear bits for all position representations and only set the new one */
 593:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 594:./state.h     **** }
 595:./state.h     **** 
 596:./state.h     **** /// Set position from LLA coordinates (float).
 597:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f *lla_pos)
 598:./state.h     **** {
 599:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 600:./state.h     ****   /* clear bits for all position representations and only set the new one */
 601:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 602:./state.h     **** }
 603:./state.h     **** 
 604:./state.h     **** /// Set multiple position coordinates (float).
 605:./state.h     **** static inline void stateSetPosition_f(
 606:./state.h     ****   struct EcefCoor_f *ecef_pos,
 607:./state.h     ****   struct NedCoor_f *ned_pos,
 608:./state.h     ****   struct EnuCoor_f *enu_pos,
 609:./state.h     ****   struct LlaCoor_f *lla_pos,
 610:./state.h     ****   struct UtmCoor_f *utm_pos)
 611:./state.h     **** {
 612:./state.h     ****   /* clear all status bit */
 613:./state.h     ****   state.pos_status = 0;
 614:./state.h     ****   if (ecef_pos != NULL) {
 615:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 616:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 617:./state.h     ****   }
 618:./state.h     ****   if (ned_pos != NULL) {
 619:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 620:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 621:./state.h     ****   }
 622:./state.h     ****   if (enu_pos != NULL) {
 623:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 624:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 625:./state.h     ****   }
 626:./state.h     ****   if (lla_pos != NULL) {
 627:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 628:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 629:./state.h     ****   }
 630:./state.h     ****   if (utm_pos != NULL) {
 631:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 632:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 633:./state.h     ****   }
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /************************ Get functions ****************************/
 637:./state.h     **** 
 638:./state.h     **** /// Get position in ECEF coordinates (int).
 639:./state.h     **** static inline struct EcefCoor_i *stateGetPositionEcef_i(void)
 640:./state.h     **** {
 641:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I)) {
 642:./state.h     ****     stateCalcPositionEcef_i();
 643:./state.h     ****   }
 644:./state.h     ****   return &state.ecef_pos_i;
 645:./state.h     **** }
 646:./state.h     **** 
 647:./state.h     **** /// Get position in local NED coordinates (int).
 648:./state.h     **** static inline struct NedCoor_i *stateGetPositionNed_i(void)
 649:./state.h     **** {
  27              		.loc 1 649 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 650:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I)) {
  35              		.loc 1 650 0
  36 0002 044B     		ldr	r3, .L4
  37 0004 1B88     		ldrh	r3, [r3]
  38 0006 9B07     		lsls	r3, r3, #30
  39 0008 01D4     		bmi	.L2
 651:./state.h     ****     stateCalcPositionNed_i();
  40              		.loc 1 651 0
  41 000a FFF7FEFF 		bl	stateCalcPositionNed_i
  42              	.LVL0:
  43              	.L2:
 652:./state.h     ****   }
 653:./state.h     ****   return &state.ned_pos_i;
 654:./state.h     **** }
  44              		.loc 1 654 0
  45 000e 0248     		ldr	r0, .L4+4
  46 0010 08BD     		pop	{r3, pc}
  47              	.L5:
  48 0012 00BF     		.align	2
  49              	.L4:
  50 0014 00000000 		.word	state
  51 0018 60000000 		.word	state+96
  52              		.cfi_endproc
  53              	.LFE86:
  55              		.section	.text.stateGetSpeedNed_i,"ax",%progbits
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	stateGetSpeedNed_i:
  61              	.LFB102:
 655:./state.h     **** 
 656:./state.h     **** /// Get position in local ENU coordinates (int).
 657:./state.h     **** static inline struct EnuCoor_i *stateGetPositionEnu_i(void)
 658:./state.h     **** {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I)) {
 660:./state.h     ****     stateCalcPositionEnu_i();
 661:./state.h     ****   }
 662:./state.h     ****   return &state.enu_pos_i;
 663:./state.h     **** }
 664:./state.h     **** 
 665:./state.h     **** /// Get position in LLA coordinates (int).
 666:./state.h     **** static inline struct LlaCoor_i *stateGetPositionLla_i(void)
 667:./state.h     **** {
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 669:./state.h     ****     stateCalcPositionLla_i();
 670:./state.h     ****   }
 671:./state.h     ****   return &state.lla_pos_i;
 672:./state.h     **** }
 673:./state.h     **** 
 674:./state.h     **** /// Get position in UTM coordinates (float).
 675:./state.h     **** static inline struct UtmCoor_f *stateGetPositionUtm_f(void)
 676:./state.h     **** {
 677:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F)) {
 678:./state.h     ****     stateCalcPositionUtm_f();
 679:./state.h     ****   }
 680:./state.h     ****   return &state.utm_pos_f;
 681:./state.h     **** }
 682:./state.h     **** 
 683:./state.h     **** /// Get position in ECEF coordinates (float).
 684:./state.h     **** static inline struct EcefCoor_f *stateGetPositionEcef_f(void)
 685:./state.h     **** {
 686:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F)) {
 687:./state.h     ****     stateCalcPositionEcef_f();
 688:./state.h     ****   }
 689:./state.h     ****   return &state.ecef_pos_f;
 690:./state.h     **** }
 691:./state.h     **** 
 692:./state.h     **** /// Get position in local NED coordinates (float).
 693:./state.h     **** static inline struct NedCoor_f *stateGetPositionNed_f(void)
 694:./state.h     **** {
 695:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F)) {
 696:./state.h     ****     stateCalcPositionNed_f();
 697:./state.h     ****   }
 698:./state.h     ****   return &state.ned_pos_f;
 699:./state.h     **** }
 700:./state.h     **** 
 701:./state.h     **** /// Get position in local ENU coordinates (float).
 702:./state.h     **** static inline struct EnuCoor_f *stateGetPositionEnu_f(void)
 703:./state.h     **** {
 704:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F)) {
 705:./state.h     ****     stateCalcPositionEnu_f();
 706:./state.h     ****   }
 707:./state.h     ****   return &state.enu_pos_f;
 708:./state.h     **** }
 709:./state.h     **** 
 710:./state.h     **** /// Get position in LLA coordinates (float).
 711:./state.h     **** static inline struct LlaCoor_f *stateGetPositionLla_f(void)
 712:./state.h     **** {
 713:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_F)) {
 714:./state.h     ****     stateCalcPositionLla_f();
 715:./state.h     ****   }
 716:./state.h     ****   return &state.lla_pos_f;
 717:./state.h     **** }
 718:./state.h     **** 
 719:./state.h     **** /** @}*/
 720:./state.h     **** 
 721:./state.h     **** 
 722:./state.h     **** 
 723:./state.h     **** /******************************************************************************
 724:./state.h     ****  *                                                                            *
 725:./state.h     ****  * Set and Get functions for the SPEED representations                        *
 726:./state.h     ****  *                                                                            *
 727:./state.h     ****  *****************************************************************************/
 728:./state.h     **** /** @addtogroup state_velocity
 729:./state.h     ****  *  @{ */
 730:./state.h     **** 
 731:./state.h     **** /************* declaration of transformation functions ************/
 732:./state.h     **** extern void stateCalcSpeedNed_i(void);
 733:./state.h     **** extern void stateCalcSpeedEnu_i(void);
 734:./state.h     **** extern void stateCalcSpeedEcef_i(void);
 735:./state.h     **** extern void stateCalcHorizontalSpeedNorm_i(void);
 736:./state.h     **** extern void stateCalcHorizontalSpeedDir_i(void);
 737:./state.h     **** extern void stateCalcSpeedNed_f(void);
 738:./state.h     **** extern void stateCalcSpeedEnu_f(void);
 739:./state.h     **** extern void stateCalcSpeedEcef_f(void);
 740:./state.h     **** extern void stateCalcHorizontalSpeedNorm_f(void);
 741:./state.h     **** extern void stateCalcHorizontalSpeedDir_f(void);
 742:./state.h     **** 
 743:./state.h     **** /************************ Set functions ****************************/
 744:./state.h     **** 
 745:./state.h     **** /// Set ground speed in local NED coordinates (int).
 746:./state.h     **** static inline void stateSetSpeedNed_i(struct NedCoor_i *ned_speed)
 747:./state.h     **** {
 748:./state.h     ****   VECT3_COPY(state.ned_speed_i, *ned_speed);
 749:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 750:./state.h     ****   state.speed_status = (1 << SPEED_NED_I);
 751:./state.h     **** }
 752:./state.h     **** 
 753:./state.h     **** /// Set ground speed in local ENU coordinates (int).
 754:./state.h     **** static inline void stateSetSpeedEnu_i(struct EnuCoor_i *enu_speed)
 755:./state.h     **** {
 756:./state.h     ****   VECT3_COPY(state.enu_speed_i, *enu_speed);
 757:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 758:./state.h     ****   state.speed_status = (1 << SPEED_ENU_I);
 759:./state.h     **** }
 760:./state.h     **** 
 761:./state.h     **** /// Set ground speed in ECEF coordinates (int).
 762:./state.h     **** static inline void stateSetSpeedEcef_i(struct EcefCoor_i *ecef_speed)
 763:./state.h     **** {
 764:./state.h     ****   VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 765:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 766:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_I);
 767:./state.h     **** }
 768:./state.h     **** 
 769:./state.h     **** /// Set multiple speed coordinates (int).
 770:./state.h     **** static inline void stateSetSpeed_i(
 771:./state.h     ****   struct EcefCoor_i *ecef_speed,
 772:./state.h     ****   struct NedCoor_i *ned_speed,
 773:./state.h     ****   struct EnuCoor_i *enu_speed)
 774:./state.h     **** {
 775:./state.h     ****   /* clear all status bit */
 776:./state.h     ****   state.speed_status = 0;
 777:./state.h     ****   if (ecef_speed != NULL) {
 778:./state.h     ****     VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 779:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_I);
 780:./state.h     ****   }
 781:./state.h     ****   if (ned_speed != NULL) {
 782:./state.h     ****     VECT3_COPY(state.ned_speed_i, *ned_speed);
 783:./state.h     ****     state.speed_status |= (1 << SPEED_NED_I);
 784:./state.h     ****   }
 785:./state.h     ****   if (enu_speed != NULL) {
 786:./state.h     ****     VECT3_COPY(state.enu_speed_i, *enu_speed);
 787:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_I);
 788:./state.h     ****   }
 789:./state.h     **** }
 790:./state.h     **** 
 791:./state.h     **** /// Set ground speed in local NED coordinates (float).
 792:./state.h     **** static inline void stateSetSpeedNed_f(struct NedCoor_f *ned_speed)
 793:./state.h     **** {
 794:./state.h     ****   VECT3_COPY(state.ned_speed_f, *ned_speed);
 795:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 796:./state.h     ****   state.speed_status = (1 << SPEED_NED_F);
 797:./state.h     **** }
 798:./state.h     **** 
 799:./state.h     **** /// Set ground speed in local ENU coordinates (float).
 800:./state.h     **** static inline void stateSetSpeedEnu_f(struct EnuCoor_f *enu_speed)
 801:./state.h     **** {
 802:./state.h     ****   VECT3_COPY(state.enu_speed_f, *enu_speed);
 803:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 804:./state.h     ****   state.speed_status = (1 << SPEED_ENU_F);
 805:./state.h     **** }
 806:./state.h     **** 
 807:./state.h     **** /// Set ground speed in ECEF coordinates (float).
 808:./state.h     **** static inline void stateSetSpeedEcef_f(struct EcefCoor_f *ecef_speed)
 809:./state.h     **** {
 810:./state.h     ****   VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 811:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 812:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_F);
 813:./state.h     **** }
 814:./state.h     **** 
 815:./state.h     **** /// Set multiple speed coordinates (float).
 816:./state.h     **** static inline void stateSetSpeed_f(
 817:./state.h     ****   struct EcefCoor_f *ecef_speed,
 818:./state.h     ****   struct NedCoor_f *ned_speed,
 819:./state.h     ****   struct EnuCoor_f *enu_speed)
 820:./state.h     **** {
 821:./state.h     ****   /* clear all status bit */
 822:./state.h     ****   state.speed_status = 0;
 823:./state.h     ****   if (ecef_speed != NULL) {
 824:./state.h     ****     VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 825:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_F);
 826:./state.h     ****   }
 827:./state.h     ****   if (ned_speed != NULL) {
 828:./state.h     ****     VECT3_COPY(state.ned_speed_f, *ned_speed);
 829:./state.h     ****     state.speed_status |= (1 << SPEED_NED_F);
 830:./state.h     ****   }
 831:./state.h     ****   if (enu_speed != NULL) {
 832:./state.h     ****     VECT3_COPY(state.enu_speed_f, *enu_speed);
 833:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_F);
 834:./state.h     ****   }
 835:./state.h     **** }
 836:./state.h     **** 
 837:./state.h     **** /************************ Get functions ****************************/
 838:./state.h     **** 
 839:./state.h     **** /// Get ground speed in local NED coordinates (int).
 840:./state.h     **** static inline struct NedCoor_i *stateGetSpeedNed_i(void)
 841:./state.h     **** {
  62              		.loc 1 841 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66 0000 08B5     		push	{r3, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
 842:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_I)) {
  70              		.loc 1 842 0
  71 0002 044B     		ldr	r3, .L8
  72 0004 B3F81431 		ldrh	r3, [r3, #276]
  73 0008 9B07     		lsls	r3, r3, #30
  74 000a 01D4     		bmi	.L7
 843:./state.h     ****     stateCalcSpeedNed_i();
  75              		.loc 1 843 0
  76 000c FFF7FEFF 		bl	stateCalcSpeedNed_i
  77              	.LVL1:
  78              	.L7:
 844:./state.h     ****   }
 845:./state.h     ****   return &state.ned_speed_i;
 846:./state.h     **** }
  79              		.loc 1 846 0
  80 0010 0148     		ldr	r0, .L8+4
  81 0012 08BD     		pop	{r3, pc}
  82              	.L9:
  83              		.align	2
  84              	.L8:
  85 0014 00000000 		.word	state
  86 0018 24010000 		.word	state+292
  87              		.cfi_endproc
  88              	.LFE102:
  90              		.section	.text.reset_guidance_reference_from_current_position,"ax",%progbits
  91              		.align	1
  92              		.thumb
  93              		.thumb_func
  95              	reset_guidance_reference_from_current_position:
  96              	.LFB466:
  97              		.file 2 "firmwares/rotorcraft/guidance/guidance_h.c"
   1:firmwares/rotorcraft/guidance/guidance_h.c **** /*
   2:firmwares/rotorcraft/guidance/guidance_h.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   3:firmwares/rotorcraft/guidance/guidance_h.c ****  *
   4:firmwares/rotorcraft/guidance/guidance_h.c ****  * This file is part of paparazzi.
   5:firmwares/rotorcraft/guidance/guidance_h.c ****  *
   6:firmwares/rotorcraft/guidance/guidance_h.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/guidance/guidance_h.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/guidance/guidance_h.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/guidance/guidance_h.c ****  * any later version.
  10:firmwares/rotorcraft/guidance/guidance_h.c ****  *
  11:firmwares/rotorcraft/guidance/guidance_h.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/guidance/guidance_h.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/guidance/guidance_h.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/guidance/guidance_h.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/guidance/guidance_h.c ****  *
  16:firmwares/rotorcraft/guidance/guidance_h.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/guidance/guidance_h.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/guidance/guidance_h.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/guidance/guidance_h.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/guidance/guidance_h.c ****  */
  21:firmwares/rotorcraft/guidance/guidance_h.c **** 
  22:firmwares/rotorcraft/guidance/guidance_h.c **** /** @file firmwares/rotorcraft/guidance/guidance_h.c
  23:firmwares/rotorcraft/guidance/guidance_h.c ****  *  Horizontal guidance for rotorcrafts.
  24:firmwares/rotorcraft/guidance/guidance_h.c ****  *
  25:firmwares/rotorcraft/guidance/guidance_h.c ****  */
  26:firmwares/rotorcraft/guidance/guidance_h.c **** 
  27:firmwares/rotorcraft/guidance/guidance_h.c **** #include "generated/airframe.h"
  28:firmwares/rotorcraft/guidance/guidance_h.c **** 
  29:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/guidance/guidance_h.h"
  30:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/guidance/guidance_module.h"
  31:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/stabilization.h"
  32:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h"
  33:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/navigation.h"
  34:firmwares/rotorcraft/guidance/guidance_h.c **** #include "subsystems/radio_control.h"
  35:firmwares/rotorcraft/guidance/guidance_h.c **** 
  36:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/stabilization/stabilization_none.h"
  37:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/stabilization/stabilization_rate.h"
  38:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/stabilization/stabilization_attitude.h"
  39:firmwares/rotorcraft/guidance/guidance_h.c **** 
  40:firmwares/rotorcraft/guidance/guidance_h.c **** /* for guidance_v_thrust_coeff */
  41:firmwares/rotorcraft/guidance/guidance_h.c **** #include "firmwares/rotorcraft/guidance/guidance_v.h"
  42:firmwares/rotorcraft/guidance/guidance_h.c **** 
  43:firmwares/rotorcraft/guidance/guidance_h.c **** #include "state.h"
  44:firmwares/rotorcraft/guidance/guidance_h.c **** 
  45:firmwares/rotorcraft/guidance/guidance_h.c **** #ifndef GUIDANCE_H_AGAIN
  46:firmwares/rotorcraft/guidance/guidance_h.c **** #define GUIDANCE_H_AGAIN 0
  47:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
  48:firmwares/rotorcraft/guidance/guidance_h.c **** 
  49:firmwares/rotorcraft/guidance/guidance_h.c **** #ifndef GUIDANCE_H_VGAIN
  50:firmwares/rotorcraft/guidance/guidance_h.c **** #define GUIDANCE_H_VGAIN 0
  51:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
  52:firmwares/rotorcraft/guidance/guidance_h.c **** 
  53:firmwares/rotorcraft/guidance/guidance_h.c **** /* error if some gains are negative */
  54:firmwares/rotorcraft/guidance/guidance_h.c **** #if (GUIDANCE_H_PGAIN < 0) ||                   \
  55:firmwares/rotorcraft/guidance/guidance_h.c ****   (GUIDANCE_H_DGAIN < 0)   ||                   \
  56:firmwares/rotorcraft/guidance/guidance_h.c ****   (GUIDANCE_H_IGAIN < 0)   ||                   \
  57:firmwares/rotorcraft/guidance/guidance_h.c ****   (GUIDANCE_H_AGAIN < 0)   ||                   \
  58:firmwares/rotorcraft/guidance/guidance_h.c ****   (GUIDANCE_H_VGAIN < 0)
  59:firmwares/rotorcraft/guidance/guidance_h.c **** #error "ALL control gains have to be positive!!!"
  60:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
  61:firmwares/rotorcraft/guidance/guidance_h.c **** 
  62:firmwares/rotorcraft/guidance/guidance_h.c **** #ifndef GUIDANCE_H_MAX_BANK
  63:firmwares/rotorcraft/guidance/guidance_h.c **** #define GUIDANCE_H_MAX_BANK RadOfDeg(20)
  64:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
  65:firmwares/rotorcraft/guidance/guidance_h.c **** 
  66:firmwares/rotorcraft/guidance/guidance_h.c **** PRINT_CONFIG_VAR(GUIDANCE_H_USE_REF)
  67:firmwares/rotorcraft/guidance/guidance_h.c **** PRINT_CONFIG_VAR(GUIDANCE_H_USE_SPEED_REF)
  68:firmwares/rotorcraft/guidance/guidance_h.c **** 
  69:firmwares/rotorcraft/guidance/guidance_h.c **** #ifndef GUIDANCE_H_APPROX_FORCE_BY_THRUST
  70:firmwares/rotorcraft/guidance/guidance_h.c **** #define GUIDANCE_H_APPROX_FORCE_BY_THRUST FALSE
  71:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
  72:firmwares/rotorcraft/guidance/guidance_h.c **** 
  73:firmwares/rotorcraft/guidance/guidance_h.c **** 
  74:firmwares/rotorcraft/guidance/guidance_h.c **** uint8_t guidance_h_mode;
  75:firmwares/rotorcraft/guidance/guidance_h.c **** bool_t guidance_h_use_ref;
  76:firmwares/rotorcraft/guidance/guidance_h.c **** bool_t guidance_h_approx_force_by_thrust;
  77:firmwares/rotorcraft/guidance/guidance_h.c **** 
  78:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_pos_sp;
  79:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_pos_ref;
  80:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_speed_ref;
  81:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_accel_ref;
  82:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_USE_SPEED_REF
  83:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_speed_sp;
  84:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
  85:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_pos_err;
  86:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_speed_err;
  87:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2 guidance_h_trim_att_integrator;
  88:firmwares/rotorcraft/guidance/guidance_h.c **** 
  89:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Vect2  guidance_h_cmd_earth;
  90:firmwares/rotorcraft/guidance/guidance_h.c **** struct Int32Eulers guidance_h_rc_sp;
  91:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t guidance_h_heading_sp;
  92:firmwares/rotorcraft/guidance/guidance_h.c **** 
  93:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t guidance_h_pgain;
  94:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t guidance_h_dgain;
  95:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t guidance_h_igain;
  96:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t guidance_h_again;
  97:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t guidance_h_vgain;
  98:firmwares/rotorcraft/guidance/guidance_h.c **** 
  99:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t transition_percentage;
 100:firmwares/rotorcraft/guidance/guidance_h.c **** int32_t transition_theta_offset;
 101:firmwares/rotorcraft/guidance/guidance_h.c **** 
 102:firmwares/rotorcraft/guidance/guidance_h.c **** 
 103:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_update_reference(void);
 104:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_traj_run(bool_t in_flight);
 105:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_hover_enter(void);
 106:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_nav_enter(void);
 107:firmwares/rotorcraft/guidance/guidance_h.c **** static inline void transition_run(void);
 108:firmwares/rotorcraft/guidance/guidance_h.c **** static void read_rc_setpoint_speed_i(struct Int32Vect2 *speed_sp, bool_t in_flight);
 109:firmwares/rotorcraft/guidance/guidance_h.c **** 
 110:firmwares/rotorcraft/guidance/guidance_h.c **** #if PERIODIC_TELEMETRY
 111:firmwares/rotorcraft/guidance/guidance_h.c **** #include "subsystems/datalink/telemetry.h"
 112:firmwares/rotorcraft/guidance/guidance_h.c **** 
 113:firmwares/rotorcraft/guidance/guidance_h.c **** static void send_gh(struct transport_tx *trans, struct link_device *dev)
 114:firmwares/rotorcraft/guidance/guidance_h.c **** {
 115:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *pos = stateGetPositionNed_i();
 116:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_GUIDANCE_H_INT(trans, dev, AC_ID,
 117:firmwares/rotorcraft/guidance/guidance_h.c ****                                &guidance_h_pos_sp.x, &guidance_h_pos_sp.y,
 118:firmwares/rotorcraft/guidance/guidance_h.c ****                                &guidance_h_pos_ref.x, &guidance_h_pos_ref.y,
 119:firmwares/rotorcraft/guidance/guidance_h.c ****                                &(pos->x), &(pos->y));
 120:firmwares/rotorcraft/guidance/guidance_h.c **** }
 121:firmwares/rotorcraft/guidance/guidance_h.c **** 
 122:firmwares/rotorcraft/guidance/guidance_h.c **** static void send_hover_loop(struct transport_tx *trans, struct link_device *dev)
 123:firmwares/rotorcraft/guidance/guidance_h.c **** {
 124:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *pos = stateGetPositionNed_i();
 125:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *speed = stateGetSpeedNed_i();
 126:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *accel = stateGetAccelNed_i();
 127:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_HOVER_LOOP(trans, dev, AC_ID,
 128:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_pos_sp.x,
 129:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_pos_sp.y,
 130:firmwares/rotorcraft/guidance/guidance_h.c ****                            &(pos->x), &(pos->y),
 131:firmwares/rotorcraft/guidance/guidance_h.c ****                            &(speed->x), &(speed->y),
 132:firmwares/rotorcraft/guidance/guidance_h.c ****                            &(accel->x), &(accel->y),
 133:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_pos_err.x,
 134:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_pos_err.y,
 135:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_speed_err.x,
 136:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_speed_err.y,
 137:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_trim_att_integrator.x,
 138:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_trim_att_integrator.y,
 139:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_cmd_earth.x,
 140:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_cmd_earth.y,
 141:firmwares/rotorcraft/guidance/guidance_h.c ****                            &guidance_h_heading_sp);
 142:firmwares/rotorcraft/guidance/guidance_h.c **** }
 143:firmwares/rotorcraft/guidance/guidance_h.c **** 
 144:firmwares/rotorcraft/guidance/guidance_h.c **** static void send_href(struct transport_tx *trans, struct link_device *dev)
 145:firmwares/rotorcraft/guidance/guidance_h.c **** {
 146:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_GUIDANCE_H_REF_INT(trans, dev, AC_ID,
 147:firmwares/rotorcraft/guidance/guidance_h.c ****                                    &guidance_h_pos_sp.x, &guidance_h_pos_ref.x,
 148:firmwares/rotorcraft/guidance/guidance_h.c ****                                    &guidance_h_speed_sp.x, &guidance_h_speed_ref.x,
 149:firmwares/rotorcraft/guidance/guidance_h.c ****                                    &guidance_h_accel_ref.x,
 150:firmwares/rotorcraft/guidance/guidance_h.c ****                                    &guidance_h_pos_sp.y, &guidance_h_pos_ref.y,
 151:firmwares/rotorcraft/guidance/guidance_h.c ****                                    &guidance_h_speed_sp.y, &guidance_h_speed_ref.y,
 152:firmwares/rotorcraft/guidance/guidance_h.c ****                                    &guidance_h_accel_ref.y);
 153:firmwares/rotorcraft/guidance/guidance_h.c **** }
 154:firmwares/rotorcraft/guidance/guidance_h.c **** 
 155:firmwares/rotorcraft/guidance/guidance_h.c **** static void send_tune_hover(struct transport_tx *trans, struct link_device *dev)
 156:firmwares/rotorcraft/guidance/guidance_h.c **** {
 157:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_ROTORCRAFT_TUNE_HOVER(trans, dev, AC_ID,
 158:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &radio_control.values[RADIO_ROLL],
 159:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &radio_control.values[RADIO_PITCH],
 160:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &radio_control.values[RADIO_YAW],
 161:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &stabilization_cmd[COMMAND_ROLL],
 162:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &stabilization_cmd[COMMAND_PITCH],
 163:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &stabilization_cmd[COMMAND_YAW],
 164:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &stabilization_cmd[COMMAND_THRUST],
 165:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->phi),
 166:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->theta),
 167:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->psi));
 168:firmwares/rotorcraft/guidance/guidance_h.c **** }
 169:firmwares/rotorcraft/guidance/guidance_h.c **** 
 170:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 171:firmwares/rotorcraft/guidance/guidance_h.c **** 
 172:firmwares/rotorcraft/guidance/guidance_h.c **** void guidance_h_init(void)
 173:firmwares/rotorcraft/guidance/guidance_h.c **** {
 174:firmwares/rotorcraft/guidance/guidance_h.c **** 
 175:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_mode = GUIDANCE_H_MODE_KILL;
 176:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_use_ref = GUIDANCE_H_USE_REF;
 177:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_approx_force_by_thrust = GUIDANCE_H_APPROX_FORCE_BY_THRUST;
 178:firmwares/rotorcraft/guidance/guidance_h.c **** 
 179:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_VECT2_ZERO(guidance_h_pos_sp);
 180:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_VECT2_ZERO(guidance_h_trim_att_integrator);
 181:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_EULERS_ZERO(guidance_h_rc_sp);
 182:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_heading_sp = 0;
 183:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_pgain = GUIDANCE_H_PGAIN;
 184:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_igain = GUIDANCE_H_IGAIN;
 185:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_dgain = GUIDANCE_H_DGAIN;
 186:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_again = GUIDANCE_H_AGAIN;
 187:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_vgain = GUIDANCE_H_VGAIN;
 188:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_percentage = 0;
 189:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_theta_offset = 0;
 190:firmwares/rotorcraft/guidance/guidance_h.c **** 
 191:firmwares/rotorcraft/guidance/guidance_h.c ****   gh_ref_init();
 192:firmwares/rotorcraft/guidance/guidance_h.c **** 
 193:firmwares/rotorcraft/guidance/guidance_h.c **** #if PERIODIC_TELEMETRY
 194:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "GUIDANCE_H_INT", send_gh);
 195:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "HOVER_LOOP", send_hover_loop);
 196:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "GUIDANCE_H_REF", send_href);
 197:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "ROTORCRAFT_TUNE_HOVER", send_tune_hover);
 198:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 199:firmwares/rotorcraft/guidance/guidance_h.c **** }
 200:firmwares/rotorcraft/guidance/guidance_h.c **** 
 201:firmwares/rotorcraft/guidance/guidance_h.c **** 
 202:firmwares/rotorcraft/guidance/guidance_h.c **** static inline void reset_guidance_reference_from_current_position(void)
 203:firmwares/rotorcraft/guidance/guidance_h.c **** {
  98              		.loc 2 203 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
 103              		.cfi_def_cfa_offset 24
 104              		.cfi_offset 0, -24
 105              		.cfi_offset 1, -20
 106              		.cfi_offset 4, -16
 107              		.cfi_offset 5, -12
 108              		.cfi_offset 6, -8
 109              		.cfi_offset 14, -4
 204:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_COPY(guidance_h_pos_ref, *stateGetPositionNed_i());
 110              		.loc 2 204 0
 111 0002 FFF7FEFF 		bl	stateGetPositionNed_i
 112              	.LVL2:
 113 0006 114D     		ldr	r5, .L11
 114 0008 0368     		ldr	r3, [r0]
 115 000a 2B60     		str	r3, [r5]
 116 000c FFF7FEFF 		bl	stateGetPositionNed_i
 117              	.LVL3:
 118 0010 4368     		ldr	r3, [r0, #4]
 119 0012 6B60     		str	r3, [r5, #4]
 205:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_COPY(guidance_h_speed_ref, *stateGetSpeedNed_i());
 120              		.loc 2 205 0
 121 0014 FFF7FEFF 		bl	stateGetSpeedNed_i
 122              	.LVL4:
 123 0018 0D4E     		ldr	r6, .L11+4
 124 001a 0368     		ldr	r3, [r0]
 125 001c 3360     		str	r3, [r6]
 126 001e FFF7FEFF 		bl	stateGetSpeedNed_i
 127              	.LVL5:
 128 0022 4368     		ldr	r3, [r0, #4]
 129 0024 7360     		str	r3, [r6, #4]
 206:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_VECT2_ZERO(guidance_h_accel_ref);
 130              		.loc 2 206 0
 131 0026 0B4B     		ldr	r3, .L11+8
 132 0028 0024     		movs	r4, #0
 133 002a 1C60     		str	r4, [r3]
 134 002c 5C60     		str	r4, [r3, #4]
 207:firmwares/rotorcraft/guidance/guidance_h.c ****   gh_set_ref(guidance_h_pos_ref, guidance_h_speed_ref, guidance_h_accel_ref);
 135              		.loc 2 207 0
 136 002e 93E80300 		ldmia	r3, {r0, r1}
 137 0032 96E80C00 		ldmia	r6, {r2, r3}
 138 0036 8DE80300 		stmia	sp, {r0, r1}
 139 003a 95E80300 		ldmia	r5, {r0, r1}
 140 003e FFF7FEFF 		bl	gh_set_ref
 141              	.LVL6:
 208:firmwares/rotorcraft/guidance/guidance_h.c **** 
 209:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_VECT2_ZERO(guidance_h_trim_att_integrator);
 142              		.loc 2 209 0
 143 0042 054B     		ldr	r3, .L11+12
 144 0044 1C60     		str	r4, [r3]
 145 0046 5C60     		str	r4, [r3, #4]
 210:firmwares/rotorcraft/guidance/guidance_h.c **** }
 146              		.loc 2 210 0
 147 0048 02B0     		add	sp, sp, #8
 148              		@ sp needed
 149 004a 70BD     		pop	{r4, r5, r6, pc}
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 004c 00000000 		.word	.LANCHOR0
 154 0050 00000000 		.word	.LANCHOR1
 155 0054 00000000 		.word	.LANCHOR2
 156 0058 00000000 		.word	.LANCHOR3
 157              		.cfi_endproc
 158              	.LFE466:
 160              		.section	.text.guidance_h_update_reference,"ax",%progbits
 161              		.align	1
 162              		.thumb
 163              		.thumb_func
 165              	guidance_h_update_reference:
 166              	.LFB470:
 211:firmwares/rotorcraft/guidance/guidance_h.c **** 
 212:firmwares/rotorcraft/guidance/guidance_h.c **** void guidance_h_mode_changed(uint8_t new_mode)
 213:firmwares/rotorcraft/guidance/guidance_h.c **** {
 214:firmwares/rotorcraft/guidance/guidance_h.c ****   if (new_mode == guidance_h_mode) {
 215:firmwares/rotorcraft/guidance/guidance_h.c ****     return;
 216:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 217:firmwares/rotorcraft/guidance/guidance_h.c **** 
 218:firmwares/rotorcraft/guidance/guidance_h.c ****   if (new_mode != GUIDANCE_H_MODE_FORWARD && new_mode != GUIDANCE_H_MODE_RATE) {
 219:firmwares/rotorcraft/guidance/guidance_h.c ****     transition_percentage = 0;
 220:firmwares/rotorcraft/guidance/guidance_h.c ****     transition_theta_offset = 0;
 221:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 222:firmwares/rotorcraft/guidance/guidance_h.c **** 
 223:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (new_mode) {
 224:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_RC_DIRECT:
 225:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_none_enter();
 226:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 227:firmwares/rotorcraft/guidance/guidance_h.c **** 
 228:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_RATE:
 229:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_enter();
 230:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 231:firmwares/rotorcraft/guidance/guidance_h.c **** 
 232:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_CARE_FREE:
 233:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_reset_care_free_heading();
 234:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_FORWARD:
 235:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_ATTITUDE:
 236:firmwares/rotorcraft/guidance/guidance_h.c **** #if NO_ATTITUDE_RESET_ON_MODE_CHANGE
 237:firmwares/rotorcraft/guidance/guidance_h.c ****       /* reset attitude stabilization if previous mode was not using it */
 238:firmwares/rotorcraft/guidance/guidance_h.c ****       if (guidance_h_mode == GUIDANCE_H_MODE_KILL ||
 239:firmwares/rotorcraft/guidance/guidance_h.c ****           guidance_h_mode == GUIDANCE_H_MODE_RATE ||
 240:firmwares/rotorcraft/guidance/guidance_h.c ****           guidance_h_mode == GUIDANCE_H_MODE_RC_DIRECT)
 241:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 242:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_enter();
 243:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 244:firmwares/rotorcraft/guidance/guidance_h.c **** 
 245:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_HOVER:
 246:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_hover_enter();
 247:firmwares/rotorcraft/guidance/guidance_h.c **** #if NO_ATTITUDE_RESET_ON_MODE_CHANGE
 248:firmwares/rotorcraft/guidance/guidance_h.c ****       /* reset attitude stabilization if previous mode was not using it */
 249:firmwares/rotorcraft/guidance/guidance_h.c ****       if (guidance_h_mode == GUIDANCE_H_MODE_KILL ||
 250:firmwares/rotorcraft/guidance/guidance_h.c ****           guidance_h_mode == GUIDANCE_H_MODE_RATE ||
 251:firmwares/rotorcraft/guidance/guidance_h.c ****           guidance_h_mode == GUIDANCE_H_MODE_RC_DIRECT)
 252:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 253:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_enter();
 254:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 255:firmwares/rotorcraft/guidance/guidance_h.c **** 
 256:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_MODE_MODULE_SETTING == GUIDANCE_H_MODE_MODULE
 257:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_MODULE:
 258:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_module_enter();
 259:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 260:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 261:firmwares/rotorcraft/guidance/guidance_h.c **** 
 262:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_NAV:
 263:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_nav_enter();
 264:firmwares/rotorcraft/guidance/guidance_h.c **** #if NO_ATTITUDE_RESET_ON_MODE_CHANGE
 265:firmwares/rotorcraft/guidance/guidance_h.c ****       /* reset attitude stabilization if previous mode was not using it */
 266:firmwares/rotorcraft/guidance/guidance_h.c ****       if (guidance_h_mode == GUIDANCE_H_MODE_KILL ||
 267:firmwares/rotorcraft/guidance/guidance_h.c ****           guidance_h_mode == GUIDANCE_H_MODE_RATE ||
 268:firmwares/rotorcraft/guidance/guidance_h.c ****           guidance_h_mode == GUIDANCE_H_MODE_RC_DIRECT)
 269:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 270:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_enter();
 271:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 272:firmwares/rotorcraft/guidance/guidance_h.c **** 
 273:firmwares/rotorcraft/guidance/guidance_h.c ****     default:
 274:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 275:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 276:firmwares/rotorcraft/guidance/guidance_h.c **** 
 277:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_mode = new_mode;
 278:firmwares/rotorcraft/guidance/guidance_h.c **** 
 279:firmwares/rotorcraft/guidance/guidance_h.c **** }
 280:firmwares/rotorcraft/guidance/guidance_h.c **** 
 281:firmwares/rotorcraft/guidance/guidance_h.c **** 
 282:firmwares/rotorcraft/guidance/guidance_h.c **** void guidance_h_read_rc(bool_t  in_flight)
 283:firmwares/rotorcraft/guidance/guidance_h.c **** {
 284:firmwares/rotorcraft/guidance/guidance_h.c **** 
 285:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (guidance_h_mode) {
 286:firmwares/rotorcraft/guidance/guidance_h.c **** 
 287:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_RC_DIRECT:
 288:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_none_read_rc();
 289:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 290:firmwares/rotorcraft/guidance/guidance_h.c **** 
 291:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_RATE:
 292:firmwares/rotorcraft/guidance/guidance_h.c **** #if SWITCH_STICKS_FOR_RATE_CONTROL
 293:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_read_rc_switched_sticks();
 294:firmwares/rotorcraft/guidance/guidance_h.c **** #else
 295:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_read_rc();
 296:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 297:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 298:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_CARE_FREE:
 299:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, TRUE, FALSE);
 300:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 301:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_FORWARD:
 302:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, FALSE, TRUE);
 303:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 304:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_ATTITUDE:
 305:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, FALSE, FALSE);
 306:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 307:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_HOVER:
 308:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc_setpoint_eulers(&guidance_h_rc_sp, in_flight, FALSE, FALSE);
 309:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_USE_SPEED_REF
 310:firmwares/rotorcraft/guidance/guidance_h.c ****       read_rc_setpoint_speed_i(&guidance_h_speed_sp, in_flight);
 311:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 312:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 313:firmwares/rotorcraft/guidance/guidance_h.c **** 
 314:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_MODE_MODULE_SETTING == GUIDANCE_H_MODE_MODULE
 315:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_MODULE:
 316:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_module_read_rc();
 317:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 318:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 319:firmwares/rotorcraft/guidance/guidance_h.c **** 
 320:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_NAV:
 321:firmwares/rotorcraft/guidance/guidance_h.c ****       if (radio_control.status == RC_OK) {
 322:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_read_rc_setpoint_eulers(&guidance_h_rc_sp, in_flight, FALSE, FALSE);
 323:firmwares/rotorcraft/guidance/guidance_h.c ****       } else {
 324:firmwares/rotorcraft/guidance/guidance_h.c ****         INT_EULERS_ZERO(guidance_h_rc_sp);
 325:firmwares/rotorcraft/guidance/guidance_h.c ****       }
 326:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 327:firmwares/rotorcraft/guidance/guidance_h.c ****     default:
 328:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 329:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 330:firmwares/rotorcraft/guidance/guidance_h.c **** 
 331:firmwares/rotorcraft/guidance/guidance_h.c **** }
 332:firmwares/rotorcraft/guidance/guidance_h.c **** 
 333:firmwares/rotorcraft/guidance/guidance_h.c **** 
 334:firmwares/rotorcraft/guidance/guidance_h.c **** void guidance_h_run(bool_t  in_flight)
 335:firmwares/rotorcraft/guidance/guidance_h.c **** {
 336:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (guidance_h_mode) {
 337:firmwares/rotorcraft/guidance/guidance_h.c **** 
 338:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_RC_DIRECT:
 339:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_none_run(in_flight);
 340:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 341:firmwares/rotorcraft/guidance/guidance_h.c **** 
 342:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_RATE:
 343:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_run(in_flight);
 344:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 345:firmwares/rotorcraft/guidance/guidance_h.c **** 
 346:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_FORWARD:
 347:firmwares/rotorcraft/guidance/guidance_h.c ****       if (transition_percentage < (100 << INT32_PERCENTAGE_FRAC)) {
 348:firmwares/rotorcraft/guidance/guidance_h.c ****         transition_run();
 349:firmwares/rotorcraft/guidance/guidance_h.c ****       }
 350:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_CARE_FREE:
 351:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_ATTITUDE:
 352:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_run(in_flight);
 353:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 354:firmwares/rotorcraft/guidance/guidance_h.c **** 
 355:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_HOVER:
 356:firmwares/rotorcraft/guidance/guidance_h.c ****       if (!in_flight) {
 357:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_hover_enter();
 358:firmwares/rotorcraft/guidance/guidance_h.c ****       }
 359:firmwares/rotorcraft/guidance/guidance_h.c **** 
 360:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_update_reference();
 361:firmwares/rotorcraft/guidance/guidance_h.c **** 
 362:firmwares/rotorcraft/guidance/guidance_h.c ****       /* set psi command */
 363:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_heading_sp = guidance_h_rc_sp.psi;
 364:firmwares/rotorcraft/guidance/guidance_h.c ****       /* compute x,y earth commands */
 365:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_traj_run(in_flight);
 366:firmwares/rotorcraft/guidance/guidance_h.c ****       /* set final attitude setpoint */
 367:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_set_earth_cmd_i(&guidance_h_cmd_earth,
 368:firmwares/rotorcraft/guidance/guidance_h.c ****                                              guidance_h_heading_sp);
 369:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_run(in_flight);
 370:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 371:firmwares/rotorcraft/guidance/guidance_h.c **** 
 372:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_NAV:
 373:firmwares/rotorcraft/guidance/guidance_h.c ****       if (!in_flight) {
 374:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_nav_enter();
 375:firmwares/rotorcraft/guidance/guidance_h.c ****       }
 376:firmwares/rotorcraft/guidance/guidance_h.c **** 
 377:firmwares/rotorcraft/guidance/guidance_h.c ****       if (horizontal_mode == HORIZONTAL_MODE_ATTITUDE) {
 378:firmwares/rotorcraft/guidance/guidance_h.c ****         struct Int32Eulers sp_cmd_i;
 379:firmwares/rotorcraft/guidance/guidance_h.c ****         sp_cmd_i.phi = nav_roll;
 380:firmwares/rotorcraft/guidance/guidance_h.c ****         sp_cmd_i.theta = nav_pitch;
 381:firmwares/rotorcraft/guidance/guidance_h.c ****         /** @todo: heading can't be set via attitude block yet.
 382:firmwares/rotorcraft/guidance/guidance_h.c ****          * use current euler psi for now, should be real heading
 383:firmwares/rotorcraft/guidance/guidance_h.c ****          */
 384:firmwares/rotorcraft/guidance/guidance_h.c ****         sp_cmd_i.psi = stateGetNedToBodyEulers_i()->psi;
 385:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_set_rpy_setpoint_i(&sp_cmd_i);
 386:firmwares/rotorcraft/guidance/guidance_h.c ****       } else {
 387:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_VECT2_NED_OF_ENU(guidance_h_pos_sp, navigation_carrot);
 388:firmwares/rotorcraft/guidance/guidance_h.c **** 
 389:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_update_reference();
 390:firmwares/rotorcraft/guidance/guidance_h.c **** 
 391:firmwares/rotorcraft/guidance/guidance_h.c ****         /* set psi command */
 392:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_heading_sp = nav_heading;
 393:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_ANGLE_NORMALIZE(guidance_h_heading_sp);
 394:firmwares/rotorcraft/guidance/guidance_h.c ****         /* compute x,y earth commands */
 395:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_traj_run(in_flight);
 396:firmwares/rotorcraft/guidance/guidance_h.c ****         /* set final attitude setpoint */
 397:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_set_earth_cmd_i(&guidance_h_cmd_earth,
 398:firmwares/rotorcraft/guidance/guidance_h.c ****                                                guidance_h_heading_sp);
 399:firmwares/rotorcraft/guidance/guidance_h.c ****       }
 400:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_run(in_flight);
 401:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 402:firmwares/rotorcraft/guidance/guidance_h.c **** 
 403:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_MODE_MODULE_SETTING == GUIDANCE_H_MODE_MODULE
 404:firmwares/rotorcraft/guidance/guidance_h.c ****     case GUIDANCE_H_MODE_MODULE:
 405:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_module_run(in_flight);
 406:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 407:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 408:firmwares/rotorcraft/guidance/guidance_h.c **** 
 409:firmwares/rotorcraft/guidance/guidance_h.c ****     default:
 410:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 411:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 412:firmwares/rotorcraft/guidance/guidance_h.c **** }
 413:firmwares/rotorcraft/guidance/guidance_h.c **** 
 414:firmwares/rotorcraft/guidance/guidance_h.c **** 
 415:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_update_reference(void)
 416:firmwares/rotorcraft/guidance/guidance_h.c **** {
 167              		.loc 2 416 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 172              		.cfi_def_cfa_offset 24
 173              		.cfi_offset 3, -24
 174              		.cfi_offset 4, -20
 175              		.cfi_offset 5, -16
 176              		.cfi_offset 6, -12
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 417:firmwares/rotorcraft/guidance/guidance_h.c ****   /* compute reference even if usage temporarily disabled via guidance_h_use_ref */
 418:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_USE_REF
 419:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_USE_SPEED_REF
 420:firmwares/rotorcraft/guidance/guidance_h.c ****   if (guidance_h_mode == GUIDANCE_H_MODE_HOVER) {
 179              		.loc 2 420 0
 180 0002 214C     		ldr	r4, .L20
 181 0004 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 182 0006 032B     		cmp	r3, #3
 183 0008 05D1     		bne	.L14
 421:firmwares/rotorcraft/guidance/guidance_h.c ****     gh_update_ref_from_speed_sp(guidance_h_speed_sp);
 184              		.loc 2 421 0
 185 000a 204B     		ldr	r3, .L20+4
 186 000c 93E80300 		ldmia	r3, {r0, r1}
 187 0010 FFF7FEFF 		bl	gh_update_ref_from_speed_sp
 188              	.LVL7:
 189 0014 04E0     		b	.L15
 190              	.L14:
 422:firmwares/rotorcraft/guidance/guidance_h.c ****   } else
 423:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 424:firmwares/rotorcraft/guidance/guidance_h.c ****     gh_update_ref_from_pos_sp(guidance_h_pos_sp);
 191              		.loc 2 424 0
 192 0016 1E4B     		ldr	r3, .L20+8
 193 0018 93E80300 		ldmia	r3, {r0, r1}
 194 001c FFF7FEFF 		bl	gh_update_ref_from_pos_sp
 195              	.LVL8:
 196              	.L15:
 425:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 426:firmwares/rotorcraft/guidance/guidance_h.c **** 
 427:firmwares/rotorcraft/guidance/guidance_h.c ****   /* either use the reference or simply copy the pos setpoint */
 428:firmwares/rotorcraft/guidance/guidance_h.c ****   if (guidance_h_use_ref) {
 197              		.loc 2 428 0
 198 0020 1C4B     		ldr	r3, .L20+12
 199 0022 1D48     		ldr	r0, .L20+16
 200 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 201 0026 1D4E     		ldr	r6, .L20+20
 202 0028 1D4D     		ldr	r5, .L20+24
 203 002a D3B1     		cbz	r3, .L16
 429:firmwares/rotorcraft/guidance/guidance_h.c ****     /* convert our reference to generic representation */
 430:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_RSHIFT(guidance_h_pos_ref,   gh_ref.pos, (GH_POS_REF_FRAC - INT32_POS_FRAC));
 204              		.loc 2 430 0
 205 002c 1D49     		ldr	r1, .L20+28
 431:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_LSHIFT(guidance_h_speed_ref, gh_ref.speed, (INT32_SPEED_FRAC - GH_SPEED_REF_FRAC));
 206              		.loc 2 431 0
 207 002e 8B68     		ldr	r3, [r1, #8]
 430:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_RSHIFT(guidance_h_pos_ref,   gh_ref.pos, (GH_POS_REF_FRAC - INT32_POS_FRAC));
 208              		.loc 2 430 0
 209 0030 0F69     		ldr	r7, [r1, #16]
 210 0032 D1F814C0 		ldr	ip, [r1, #20]
 211              		.loc 2 431 0
 212 0036 9B00     		lsls	r3, r3, #2
 213 0038 3360     		str	r3, [r6]
 214 003a CB68     		ldr	r3, [r1, #12]
 215 003c 9B00     		lsls	r3, r3, #2
 216 003e 7360     		str	r3, [r6, #4]
 432:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_LSHIFT(guidance_h_accel_ref, gh_ref.accel, (INT32_ACCEL_FRAC - GH_ACCEL_REF_FRAC));
 217              		.loc 2 432 0
 218 0040 0B68     		ldr	r3, [r1]
 430:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_RSHIFT(guidance_h_pos_ref,   gh_ref.pos, (GH_POS_REF_FRAC - INT32_POS_FRAC));
 219              		.loc 2 430 0
 220 0042 BA0C     		lsrs	r2, r7, #18
 221 0044 8F69     		ldr	r7, [r1, #24]
 222 0046 42EA8C32 		orr	r2, r2, ip, lsl #14
 223              		.loc 2 432 0
 224 004a 9B00     		lsls	r3, r3, #2
 430:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_RSHIFT(guidance_h_pos_ref,   gh_ref.pos, (GH_POS_REF_FRAC - INT32_POS_FRAC));
 225              		.loc 2 430 0
 226 004c D1F81CC0 		ldr	ip, [r1, #28]
 227 0050 0260     		str	r2, [r0]
 228              		.loc 2 432 0
 229 0052 2B60     		str	r3, [r5]
 430:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_RSHIFT(guidance_h_pos_ref,   gh_ref.pos, (GH_POS_REF_FRAC - INT32_POS_FRAC));
 230              		.loc 2 430 0
 231 0054 BA0C     		lsrs	r2, r7, #18
 232              		.loc 2 432 0
 233 0056 4B68     		ldr	r3, [r1, #4]
 430:firmwares/rotorcraft/guidance/guidance_h.c ****     INT32_VECT2_RSHIFT(guidance_h_pos_ref,   gh_ref.pos, (GH_POS_REF_FRAC - INT32_POS_FRAC));
 234              		.loc 2 430 0
 235 0058 42EA8C32 		orr	r2, r2, ip, lsl #14
 236 005c 4260     		str	r2, [r0, #4]
 237              		.loc 2 432 0
 238 005e 9B00     		lsls	r3, r3, #2
 239 0060 07E0     		b	.L19
 240              	.L16:
 433:firmwares/rotorcraft/guidance/guidance_h.c ****   } else {
 434:firmwares/rotorcraft/guidance/guidance_h.c ****     VECT2_COPY(guidance_h_pos_ref, guidance_h_pos_sp);
 241              		.loc 2 434 0
 242 0062 0B4A     		ldr	r2, .L20+8
 435:firmwares/rotorcraft/guidance/guidance_h.c ****     INT_VECT2_ZERO(guidance_h_speed_ref);
 243              		.loc 2 435 0
 244 0064 3360     		str	r3, [r6]
 434:firmwares/rotorcraft/guidance/guidance_h.c ****     VECT2_COPY(guidance_h_pos_ref, guidance_h_pos_sp);
 245              		.loc 2 434 0
 246 0066 1168     		ldr	r1, [r2]
 247 0068 5268     		ldr	r2, [r2, #4]
 248 006a 0160     		str	r1, [r0]
 249 006c 4260     		str	r2, [r0, #4]
 250              		.loc 2 435 0
 251 006e 7360     		str	r3, [r6, #4]
 436:firmwares/rotorcraft/guidance/guidance_h.c ****     INT_VECT2_ZERO(guidance_h_accel_ref);
 252              		.loc 2 436 0
 253 0070 2B60     		str	r3, [r5]
 254              	.L19:
 255 0072 6B60     		str	r3, [r5, #4]
 437:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 438:firmwares/rotorcraft/guidance/guidance_h.c **** 
 439:firmwares/rotorcraft/guidance/guidance_h.c **** #if GUIDANCE_H_USE_SPEED_REF
 440:firmwares/rotorcraft/guidance/guidance_h.c ****   if (guidance_h_mode == GUIDANCE_H_MODE_HOVER) {
 256              		.loc 2 440 0
 257 0074 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 258 0076 032B     		cmp	r3, #3
 259 0078 04D1     		bne	.L13
 441:firmwares/rotorcraft/guidance/guidance_h.c ****     VECT2_COPY(guidance_h_pos_sp, guidance_h_pos_ref); // for display only
 260              		.loc 2 441 0
 261 007a 054B     		ldr	r3, .L20+8
 262 007c 0268     		ldr	r2, [r0]
 263 007e 1A60     		str	r2, [r3]
 264 0080 4268     		ldr	r2, [r0, #4]
 265 0082 5A60     		str	r2, [r3, #4]
 266              	.L13:
 267 0084 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 268              	.L21:
 269 0086 00BF     		.align	2
 270              	.L20:
 271 0088 00000000 		.word	.LANCHOR4
 272 008c 00000000 		.word	.LANCHOR5
 273 0090 00000000 		.word	.LANCHOR6
 274 0094 00000000 		.word	.LANCHOR7
 275 0098 00000000 		.word	.LANCHOR0
 276 009c 00000000 		.word	.LANCHOR1
 277 00a0 00000000 		.word	.LANCHOR2
 278 00a4 00000000 		.word	gh_ref
 279              		.cfi_endproc
 280              	.LFE470:
 282              		.global	__aeabi_i2d
 283              		.global	__aeabi_dcmplt
 284              		.global	__aeabi_dcmpgt
 285              		.section	.text.guidance_h_traj_run,"ax",%progbits
 286              		.align	1
 287              		.thumb
 288              		.thumb_func
 290              	guidance_h_traj_run:
 291              	.LFB471:
 442:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 443:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 444:firmwares/rotorcraft/guidance/guidance_h.c **** }
 445:firmwares/rotorcraft/guidance/guidance_h.c **** 
 446:firmwares/rotorcraft/guidance/guidance_h.c **** 
 447:firmwares/rotorcraft/guidance/guidance_h.c **** #define MAX_POS_ERR   POS_BFP_OF_REAL(16.)
 448:firmwares/rotorcraft/guidance/guidance_h.c **** #define MAX_SPEED_ERR SPEED_BFP_OF_REAL(16.)
 449:firmwares/rotorcraft/guidance/guidance_h.c **** 
 450:firmwares/rotorcraft/guidance/guidance_h.c **** #ifndef GUIDANCE_H_THRUST_CMD_FILTER
 451:firmwares/rotorcraft/guidance/guidance_h.c **** #define GUIDANCE_H_THRUST_CMD_FILTER 10
 452:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 453:firmwares/rotorcraft/guidance/guidance_h.c **** 
 454:firmwares/rotorcraft/guidance/guidance_h.c **** /* with a pgain of 100 and a scale of 2,
 455:firmwares/rotorcraft/guidance/guidance_h.c ****  * you get an angle of 5.6 degrees for 1m pos error */
 456:firmwares/rotorcraft/guidance/guidance_h.c **** #define GH_GAIN_SCALE 2
 457:firmwares/rotorcraft/guidance/guidance_h.c **** 
 458:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_traj_run(bool_t in_flight)
 459:firmwares/rotorcraft/guidance/guidance_h.c **** {
 292              		.loc 2 459 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              	.LVL9:
 297 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 298              		.cfi_def_cfa_offset 40
 299              		.cfi_offset 3, -40
 300              		.cfi_offset 4, -36
 301              		.cfi_offset 5, -32
 302              		.cfi_offset 6, -28
 303              		.cfi_offset 7, -24
 304              		.cfi_offset 8, -20
 305              		.cfi_offset 9, -16
 306              		.cfi_offset 10, -12
 307              		.cfi_offset 11, -8
 308              		.cfi_offset 14, -4
 460:firmwares/rotorcraft/guidance/guidance_h.c ****   /* maximum bank angle: default 20 deg, max 40 deg*/
 461:firmwares/rotorcraft/guidance/guidance_h.c ****   static const int32_t traj_max_bank = Min(BFP_OF_REAL(GUIDANCE_H_MAX_BANK, INT32_ANGLE_FRAC),
 462:firmwares/rotorcraft/guidance/guidance_h.c ****                                        BFP_OF_REAL(RadOfDeg(40), INT32_ANGLE_FRAC));
 463:firmwares/rotorcraft/guidance/guidance_h.c ****   static const int32_t total_max_bank = BFP_OF_REAL(RadOfDeg(45), INT32_ANGLE_FRAC);
 464:firmwares/rotorcraft/guidance/guidance_h.c **** 
 465:firmwares/rotorcraft/guidance/guidance_h.c ****   /* compute position error    */
 466:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_DIFF(guidance_h_pos_err, guidance_h_pos_ref, *stateGetPositionNed_i());
 309              		.loc 2 466 0
 310 0004 A84C     		ldr	r4, .L52
 311 0006 A94F     		ldr	r7, .L52+4
 312 0008 2568     		ldr	r5, [r4]
 459:firmwares/rotorcraft/guidance/guidance_h.c **** {
 313              		.loc 2 459 0
 314 000a 2DED028B 		fstmfdd	sp!, {d8}
 315              		.cfi_def_cfa_offset 48
 316              		.cfi_offset 80, -48
 459:firmwares/rotorcraft/guidance/guidance_h.c **** {
 317              		.loc 2 459 0
 318 000e 0646     		mov	r6, r0
 319              		.loc 2 466 0
 320 0010 FFF7FEFF 		bl	stateGetPositionNed_i
 321              	.LVL10:
 322 0014 0368     		ldr	r3, [r0]
 323 0016 6468     		ldr	r4, [r4, #4]
 324 0018 ED1A     		subs	r5, r5, r3
 325 001a 3D60     		str	r5, [r7]
 326 001c FFF7FEFF 		bl	stateGetPositionNed_i
 327              	.LVL11:
 467:firmwares/rotorcraft/guidance/guidance_h.c ****   /* saturate it               */
 468:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_pos_err, -MAX_POS_ERR, MAX_POS_ERR);
 328              		.loc 2 468 0
 329 0020 D7F80090 		ldr	r9, [r7]
 466:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_DIFF(guidance_h_pos_err, guidance_h_pos_ref, *stateGetPositionNed_i());
 330              		.loc 2 466 0
 331 0024 4368     		ldr	r3, [r0, #4]
 332              		.loc 2 468 0
 333 0026 4846     		mov	r0, r9
 466:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_DIFF(guidance_h_pos_err, guidance_h_pos_ref, *stateGetPositionNed_i());
 334              		.loc 2 466 0
 335 0028 C3EB0408 		rsb	r8, r3, r4
 336              		.loc 2 468 0
 337 002c FFF7FEFF 		bl	__aeabi_i2d
 338              	.LVL12:
 339 0030 0022     		movs	r2, #0
 340 0032 9F4B     		ldr	r3, .L52+8
 341 0034 0446     		mov	r4, r0
 342 0036 0D46     		mov	r5, r1
 343 0038 FFF7FEFF 		bl	__aeabi_dcmplt
 344              	.LVL13:
 345 003c 58B9     		cbnz	r0, .L34
 346              		.loc 2 468 0 is_stmt 0 discriminator 2
 347 003e 9D4B     		ldr	r3, .L52+12
 348 0040 2046     		mov	r0, r4
 349 0042 2946     		mov	r1, r5
 350 0044 0022     		movs	r2, #0
 351 0046 FFF7FEFF 		bl	__aeabi_dcmpgt
 352              	.LVL14:
 353 004a 0028     		cmp	r0, #0
 354 004c 0CBF     		ite	eq
 355 004e 4B46     		moveq	r3, r9
 356 0050 4FF48053 		movne	r3, #4096
 357 0054 00E0     		b	.L23
 358              	.L34:
 359              		.loc 2 468 0
 360 0056 984B     		ldr	r3, .L52+16
 361              	.L23:
 362              		.loc 2 468 0 discriminator 6
 363 0058 3B60     		str	r3, [r7]
 364 005a 4046     		mov	r0, r8
 365 005c FFF7FEFF 		bl	__aeabi_i2d
 366              	.LVL15:
 367 0060 0022     		movs	r2, #0
 368 0062 934B     		ldr	r3, .L52+8
 369 0064 0446     		mov	r4, r0
 370 0066 0D46     		mov	r5, r1
 371 0068 FFF7FEFF 		bl	__aeabi_dcmplt
 372              	.LVL16:
 373 006c 58B9     		cbnz	r0, .L36
 374              		.loc 2 468 0 discriminator 2
 375 006e 914B     		ldr	r3, .L52+12
 376 0070 2046     		mov	r0, r4
 377 0072 2946     		mov	r1, r5
 378 0074 0022     		movs	r2, #0
 379 0076 FFF7FEFF 		bl	__aeabi_dcmpgt
 380              	.LVL17:
 381 007a 0028     		cmp	r0, #0
 382 007c 0CBF     		ite	eq
 383 007e 4346     		moveq	r3, r8
 384 0080 4FF48053 		movne	r3, #4096
 385 0084 00E0     		b	.L25
 386              	.L36:
 387              		.loc 2 468 0
 388 0086 8C4B     		ldr	r3, .L52+16
 389              	.L25:
 469:firmwares/rotorcraft/guidance/guidance_h.c **** 
 470:firmwares/rotorcraft/guidance/guidance_h.c ****   /* compute speed error    */
 471:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_DIFF(guidance_h_speed_err, guidance_h_speed_ref, *stateGetSpeedNed_i());
 390              		.loc 2 471 0 is_stmt 1 discriminator 6
 391 0088 DFF88082 		ldr	r8, .L52+100
 468:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_pos_err, -MAX_POS_ERR, MAX_POS_ERR);
 392              		.loc 2 468 0 discriminator 6
 393 008c 7B60     		str	r3, [r7, #4]
 394              		.loc 2 471 0 discriminator 6
 395 008e D8F80040 		ldr	r4, [r8]
 396 0092 DFF87C92 		ldr	r9, .L52+104
 397 0096 FFF7FEFF 		bl	stateGetSpeedNed_i
 398              	.LVL18:
 399 009a 0368     		ldr	r3, [r0]
 400 009c E41A     		subs	r4, r4, r3
 401 009e C9F80040 		str	r4, [r9]
 402 00a2 D8F80440 		ldr	r4, [r8, #4]
 403 00a6 FFF7FEFF 		bl	stateGetSpeedNed_i
 404              	.LVL19:
 472:firmwares/rotorcraft/guidance/guidance_h.c ****   /* saturate it               */
 473:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_speed_err, -MAX_SPEED_ERR, MAX_SPEED_ERR);
 405              		.loc 2 473 0 discriminator 6
 406 00aa D9F800B0 		ldr	fp, [r9]
 471:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_DIFF(guidance_h_speed_err, guidance_h_speed_ref, *stateGetSpeedNed_i());
 407              		.loc 2 471 0 discriminator 6
 408 00ae 4368     		ldr	r3, [r0, #4]
 409              		.loc 2 473 0 discriminator 6
 410 00b0 5846     		mov	r0, fp
 471:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_DIFF(guidance_h_speed_err, guidance_h_speed_ref, *stateGetSpeedNed_i());
 411              		.loc 2 471 0 discriminator 6
 412 00b2 C3EB040A 		rsb	r10, r3, r4
 413              		.loc 2 473 0 discriminator 6
 414 00b6 FFF7FEFF 		bl	__aeabi_i2d
 415              	.LVL20:
 416 00ba 0022     		movs	r2, #0
 417 00bc 7F4B     		ldr	r3, .L52+20
 418 00be 0446     		mov	r4, r0
 419 00c0 0D46     		mov	r5, r1
 420 00c2 FFF7FEFF 		bl	__aeabi_dcmplt
 421              	.LVL21:
 422 00c6 50B9     		cbnz	r0, .L38
 423              		.loc 2 473 0 is_stmt 0 discriminator 2
 424 00c8 2046     		mov	r0, r4
 425 00ca 2946     		mov	r1, r5
 426 00cc 0022     		movs	r2, #0
 427 00ce 7C4B     		ldr	r3, .L52+24
 428 00d0 FFF7FEFF 		bl	__aeabi_dcmpgt
 429              	.LVL22:
 430 00d4 0028     		cmp	r0, #0
 431 00d6 18BF     		it	ne
 432 00d8 4FF4000B 		movne	fp, #8388608
 433 00dc 01E0     		b	.L27
 434              	.L38:
 435              		.loc 2 473 0
 436 00de DFF8E4B1 		ldr	fp, .L52+28
 437              	.L27:
 438              		.loc 2 473 0 discriminator 6
 439 00e2 C9F800B0 		str	fp, [r9]
 440 00e6 5046     		mov	r0, r10
 441 00e8 FFF7FEFF 		bl	__aeabi_i2d
 442              	.LVL23:
 443 00ec 0022     		movs	r2, #0
 444 00ee 734B     		ldr	r3, .L52+20
 445 00f0 0446     		mov	r4, r0
 446 00f2 0D46     		mov	r5, r1
 447 00f4 FFF7FEFF 		bl	__aeabi_dcmplt
 448              	.LVL24:
 449 00f8 58B9     		cbnz	r0, .L40
 450              		.loc 2 473 0 discriminator 2
 451 00fa 714B     		ldr	r3, .L52+24
 452 00fc 2046     		mov	r0, r4
 453 00fe 2946     		mov	r1, r5
 454 0100 0022     		movs	r2, #0
 455 0102 FFF7FEFF 		bl	__aeabi_dcmpgt
 456              	.LVL25:
 457 0106 0028     		cmp	r0, #0
 458 0108 0CBF     		ite	eq
 459 010a 5346     		moveq	r3, r10
 460 010c 4FF40003 		movne	r3, #8388608
 461 0110 00E0     		b	.L29
 462              	.L40:
 463              		.loc 2 473 0
 464 0112 6C4B     		ldr	r3, .L52+28
 465              	.L29:
 474:firmwares/rotorcraft/guidance/guidance_h.c **** 
 475:firmwares/rotorcraft/guidance/guidance_h.c ****   /* run PID */
 476:firmwares/rotorcraft/guidance/guidance_h.c ****   int32_t pd_x =
 477:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_pgain * guidance_h_pos_err.x) >> (INT32_POS_FRAC - GH_GAIN_SCALE)) +
 466              		.loc 2 477 0 is_stmt 1 discriminator 6
 467 0114 6C4A     		ldr	r2, .L52+32
 478:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_dgain * (guidance_h_speed_err.x >> 2)) >> (INT32_SPEED_FRAC - GH_GAIN_SCALE - 2));
 479:firmwares/rotorcraft/guidance/guidance_h.c ****   int32_t pd_y =
 480:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_pgain * guidance_h_pos_err.y) >> (INT32_POS_FRAC - GH_GAIN_SCALE)) +
 468              		.loc 2 480 0 discriminator 6
 469 0116 7C68     		ldr	r4, [r7, #4]
 477:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_pgain * guidance_h_pos_err.x) >> (INT32_POS_FRAC - GH_GAIN_SCALE)) +
 470              		.loc 2 477 0 discriminator 6
 471 0118 1068     		ldr	r0, [r2]
 478:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_dgain * (guidance_h_speed_err.x >> 2)) >> (INT32_SPEED_FRAC - GH_GAIN_SCALE - 2));
 472              		.loc 2 478 0 discriminator 6
 473 011a 6C4A     		ldr	r2, .L52+36
 473:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_speed_err, -MAX_SPEED_ERR, MAX_SPEED_ERR);
 474              		.loc 2 473 0 discriminator 6
 475 011c C9F80430 		str	r3, [r9, #4]
 478:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_dgain * (guidance_h_speed_err.x >> 2)) >> (INT32_SPEED_FRAC - GH_GAIN_SCALE - 2));
 476              		.loc 2 478 0 discriminator 6
 477 0120 1168     		ldr	r1, [r2]
 477:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_pgain * guidance_h_pos_err.x) >> (INT32_POS_FRAC - GH_GAIN_SCALE)) +
 478              		.loc 2 477 0 discriminator 6
 479 0122 3A68     		ldr	r2, [r7]
 481:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_dgain * (guidance_h_speed_err.y >> 2)) >> (INT32_SPEED_FRAC - GH_GAIN_SCALE - 2));
 480              		.loc 2 481 0 discriminator 6
 481 0124 9B10     		asrs	r3, r3, #2
 478:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_dgain * (guidance_h_speed_err.x >> 2)) >> (INT32_SPEED_FRAC - GH_GAIN_SCALE - 2));
 482              		.loc 2 478 0 discriminator 6
 483 0126 4FEAAB0B 		asr	fp, fp, #2
 484 012a 0BFB01FB 		mul	fp, fp, r1
 485              		.loc 2 481 0 discriminator 6
 486 012e 5943     		muls	r1, r3, r1
 477:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_pgain * guidance_h_pos_err.x) >> (INT32_POS_FRAC - GH_GAIN_SCALE)) +
 487              		.loc 2 477 0 discriminator 6
 488 0130 4243     		muls	r2, r0, r2
 489              		.loc 2 481 0 discriminator 6
 490 0132 C913     		asrs	r1, r1, #15
 480:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_pgain * guidance_h_pos_err.y) >> (INT32_POS_FRAC - GH_GAIN_SCALE)) +
 491              		.loc 2 480 0 discriminator 6
 492 0134 6043     		muls	r0, r4, r0
 479:firmwares/rotorcraft/guidance/guidance_h.c ****   int32_t pd_y =
 493              		.loc 2 479 0 discriminator 6
 494 0136 01EBA01C 		add	ip, r1, r0, asr #6
 482:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_cmd_earth.x =
 483:firmwares/rotorcraft/guidance/guidance_h.c ****     pd_x +
 484:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.x) >> 17) + /* speed feedforward gain */
 495              		.loc 2 484 0 discriminator 6
 496 013a 654B     		ldr	r3, .L52+40
 485:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_again * guidance_h_accel_ref.x) >> 8);   /* acceleration feedforward gain */
 497              		.loc 2 485 0 discriminator 6
 498 013c 6549     		ldr	r1, .L52+44
 486:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_cmd_earth.y =
 487:firmwares/rotorcraft/guidance/guidance_h.c ****     pd_y +
 488:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.y) >> 17) + /* speed feedforward gain */
 489:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_again * guidance_h_accel_ref.y) >> 8);   /* acceleration feedforward gain */
 499              		.loc 2 489 0 discriminator 6
 500 013e 664C     		ldr	r4, .L52+48
 485:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_again * guidance_h_accel_ref.x) >> 8);   /* acceleration feedforward gain */
 501              		.loc 2 485 0 discriminator 6
 502 0140 0868     		ldr	r0, [r1]
 484:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.x) >> 17) + /* speed feedforward gain */
 503              		.loc 2 484 0 discriminator 6
 504 0142 1B68     		ldr	r3, [r3]
 488:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.y) >> 17) + /* speed feedforward gain */
 505              		.loc 2 488 0 discriminator 6
 506 0144 D8F80410 		ldr	r1, [r8, #4]
 507              		.loc 2 489 0 discriminator 6
 508 0148 6568     		ldr	r5, [r4, #4]
 488:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.y) >> 17) + /* speed feedforward gain */
 509              		.loc 2 488 0 discriminator 6
 510 014a 5943     		muls	r1, r3, r1
 511              		.loc 2 489 0 discriminator 6
 512 014c 4543     		muls	r5, r0, r5
 487:firmwares/rotorcraft/guidance/guidance_h.c ****     pd_y +
 513              		.loc 2 487 0 discriminator 6
 514 014e 0CEB6141 		add	r1, ip, r1, asr #17
 488:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.y) >> 17) + /* speed feedforward gain */
 515              		.loc 2 488 0 discriminator 6
 516 0152 01EB2521 		add	r1, r1, r5, asr #8
 484:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.x) >> 17) + /* speed feedforward gain */
 517              		.loc 2 484 0 discriminator 6
 518 0156 D8F80050 		ldr	r5, [r8]
 478:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_dgain * (guidance_h_speed_err.x >> 2)) >> (INT32_SPEED_FRAC - GH_GAIN_SCALE - 2));
 519              		.loc 2 478 0 discriminator 6
 520 015a 4FEAEB3B 		asr	fp, fp, #15
 484:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.x) >> 17) + /* speed feedforward gain */
 521              		.loc 2 484 0 discriminator 6
 522 015e 6B43     		muls	r3, r5, r3
 476:firmwares/rotorcraft/guidance/guidance_h.c ****   int32_t pd_x =
 523              		.loc 2 476 0 discriminator 6
 524 0160 0BEBA212 		add	r2, fp, r2, asr #6
 525              	.LVL26:
 483:firmwares/rotorcraft/guidance/guidance_h.c ****     pd_x +
 526              		.loc 2 483 0 discriminator 6
 527 0164 02EB6345 		add	r5, r2, r3, asr #17
 485:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_again * guidance_h_accel_ref.x) >> 8);   /* acceleration feedforward gain */
 528              		.loc 2 485 0 discriminator 6
 529 0168 2368     		ldr	r3, [r4]
 490:firmwares/rotorcraft/guidance/guidance_h.c **** 
 491:firmwares/rotorcraft/guidance/guidance_h.c ****   /* trim max bank angle from PD */
 492:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_cmd_earth, -traj_max_bank, traj_max_bank);
 530              		.loc 2 492 0 discriminator 6
 531 016a 5C4C     		ldr	r4, .L52+52
 485:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_again * guidance_h_accel_ref.x) >> 8);   /* acceleration feedforward gain */
 532              		.loc 2 485 0 discriminator 6
 533 016c 4343     		muls	r3, r0, r3
 484:firmwares/rotorcraft/guidance/guidance_h.c ****     ((guidance_h_vgain * guidance_h_speed_ref.x) >> 17) + /* speed feedforward gain */
 534              		.loc 2 484 0 discriminator 6
 535 016e 05EB2323 		add	r3, r5, r3, asr #8
 536              		.loc 2 492 0 discriminator 6
 537 0172 40F28A77 		movw	r7, #1930
 538 0176 5A48     		ldr	r0, .L52+56
 539 0178 BB42     		cmp	r3, r7
 540 017a A8BF     		it	ge
 541 017c 3B46     		movge	r3, r7
 542 017e B942     		cmp	r1, r7
 543 0180 A8BF     		it	ge
 544 0182 3946     		movge	r1, r7
 545 0184 8342     		cmp	r3, r0
 546 0186 ACBF     		ite	ge
 547 0188 1D46     		movge	r5, r3
 548 018a 0546     		movlt	r5, r0
 549 018c 8142     		cmp	r1, r0
 550 018e B8BF     		it	lt
 551 0190 0146     		movlt	r1, r0
 552 0192 2560     		str	r5, [r4]
 553 0194 6160     		str	r1, [r4, #4]
 554 0196 534B     		ldr	r3, .L52+60
 493:firmwares/rotorcraft/guidance/guidance_h.c **** 
 494:firmwares/rotorcraft/guidance/guidance_h.c ****   /* Update pos & speed error integral, zero it if not in_flight.
 495:firmwares/rotorcraft/guidance/guidance_h.c ****    * Integrate twice as fast when not only POS but also SPEED are wrong,
 496:firmwares/rotorcraft/guidance/guidance_h.c ****    * but do not integrate POS errors when the SPEED is already catching up.
 497:firmwares/rotorcraft/guidance/guidance_h.c ****    */
 498:firmwares/rotorcraft/guidance/guidance_h.c ****   if (in_flight) {
 555              		.loc 2 498 0 discriminator 6
 556 0198 F6B1     		cbz	r6, .L31
 499:firmwares/rotorcraft/guidance/guidance_h.c ****     /* ANGLE_FRAC (12) * GAIN (8) * LOOP_FREQ (9) -> INTEGRATOR HIGH RES ANGLE_FRAX (28) */
 500:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_trim_att_integrator.x += (guidance_h_igain * pd_x);
 557              		.loc 2 500 0
 558 019a 5348     		ldr	r0, .L52+64
 559 019c 0768     		ldr	r7, [r0]
 501:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_trim_att_integrator.y += (guidance_h_igain * pd_y);
 560              		.loc 2 501 0
 561 019e 5868     		ldr	r0, [r3, #4]
 562 01a0 0CFB070C 		mla	ip, ip, r7, r0
 563              	.LVL27:
 500:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_trim_att_integrator.x += (guidance_h_igain * pd_x);
 564              		.loc 2 500 0
 565 01a4 1868     		ldr	r0, [r3]
 566 01a6 02FB0702 		mla	r2, r2, r7, r0
 567              	.LVL28:
 502:firmwares/rotorcraft/guidance/guidance_h.c ****     /* saturate it  */
 503:firmwares/rotorcraft/guidance/guidance_h.c ****     VECT2_STRIM(guidance_h_trim_att_integrator, -(traj_max_bank << 16), (traj_max_bank << 16));
 568              		.loc 2 503 0
 569 01aa 5048     		ldr	r0, .L52+68
 570 01ac 504F     		ldr	r7, .L52+72
 571 01ae 8242     		cmp	r2, r0
 572 01b0 A8BF     		it	ge
 573 01b2 0246     		movge	r2, r0
 574 01b4 8445     		cmp	ip, r0
 575 01b6 B8BF     		it	lt
 576 01b8 6046     		movlt	r0, ip
 577 01ba BA42     		cmp	r2, r7
 578 01bc B8BF     		it	lt
 579 01be 3A46     		movlt	r2, r7
 580 01c0 B842     		cmp	r0, r7
 581 01c2 B8BF     		it	lt
 582 01c4 3846     		movlt	r0, r7
 583 01c6 1A60     		str	r2, [r3]
 504:firmwares/rotorcraft/guidance/guidance_h.c ****     /* add it to the command */
 505:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x += (guidance_h_trim_att_integrator.x >> 16);
 506:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.y += (guidance_h_trim_att_integrator.y >> 16);
 584              		.loc 2 506 0
 585 01c8 01EB2041 		add	r1, r1, r0, asr #16
 505:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x += (guidance_h_trim_att_integrator.x >> 16);
 586              		.loc 2 505 0
 587 01cc 05EB2242 		add	r2, r5, r2, asr #16
 503:firmwares/rotorcraft/guidance/guidance_h.c ****     VECT2_STRIM(guidance_h_trim_att_integrator, -(traj_max_bank << 16), (traj_max_bank << 16));
 588              		.loc 2 503 0
 589 01d0 5860     		str	r0, [r3, #4]
 505:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x += (guidance_h_trim_att_integrator.x >> 16);
 590              		.loc 2 505 0
 591 01d2 2260     		str	r2, [r4]
 592              		.loc 2 506 0
 593 01d4 6160     		str	r1, [r4, #4]
 594 01d6 01E0     		b	.L32
 595              	.LVL29:
 596              	.L31:
 507:firmwares/rotorcraft/guidance/guidance_h.c ****   } else {
 508:firmwares/rotorcraft/guidance/guidance_h.c ****     INT_VECT2_ZERO(guidance_h_trim_att_integrator);
 597              		.loc 2 508 0
 598 01d8 1E60     		str	r6, [r3]
 599 01da 5E60     		str	r6, [r3, #4]
 600              	.LVL30:
 601              	.L32:
 509:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 510:firmwares/rotorcraft/guidance/guidance_h.c **** 
 511:firmwares/rotorcraft/guidance/guidance_h.c ****   /* compute a better approximation of force commands by taking thrust into account */
 512:firmwares/rotorcraft/guidance/guidance_h.c ****   if (guidance_h_approx_force_by_thrust && in_flight) {
 602              		.loc 2 512 0
 603 01dc 454B     		ldr	r3, .L52+76
 604 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 605 01e0 002B     		cmp	r3, #0
 606 01e2 46D0     		beq	.L33
 607              		.loc 2 512 0 is_stmt 0 discriminator 1
 608 01e4 002E     		cmp	r6, #0
 609 01e6 44D0     		beq	.L33
 610              	.LVL31:
 611              	.LBB3:
 513:firmwares/rotorcraft/guidance/guidance_h.c ****     static int32_t thrust_cmd_filt;
 514:firmwares/rotorcraft/guidance/guidance_h.c ****     int32_t vertical_thrust = (stabilization_cmd[COMMAND_THRUST] * guidance_v_thrust_coeff) >> INT3
 612              		.loc 2 514 0 is_stmt 1
 613 01e8 434A     		ldr	r2, .L52+80
 614 01ea 4448     		ldr	r0, .L52+84
 615              	.LVL32:
 515:firmwares/rotorcraft/guidance/guidance_h.c ****     thrust_cmd_filt = (thrust_cmd_filt * GUIDANCE_H_THRUST_CMD_FILTER + vertical_thrust) /
 616              		.loc 2 515 0
 617 01ec 444B     		ldr	r3, .L52+88
 514:firmwares/rotorcraft/guidance/guidance_h.c ****     int32_t vertical_thrust = (stabilization_cmd[COMMAND_THRUST] * guidance_v_thrust_coeff) >> INT3
 618              		.loc 2 514 0
 619 01ee 0068     		ldr	r0, [r0]
 620              	.LVL33:
 621 01f0 D268     		ldr	r2, [r2, #12]
 622              		.loc 2 515 0
 623 01f2 1968     		ldr	r1, [r3]
 516:firmwares/rotorcraft/guidance/guidance_h.c ****                       (GUIDANCE_H_THRUST_CMD_FILTER + 1);
 517:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x = ANGLE_BFP_OF_REAL(atan2f((guidance_h_cmd_earth.x * MAX_PPRZ / INT32_AN
 624              		.loc 2 517 0
 625 01f4 9FED438A 		flds	s16, .L52+92
 514:firmwares/rotorcraft/guidance/guidance_h.c ****     int32_t vertical_thrust = (stabilization_cmd[COMMAND_THRUST] * guidance_v_thrust_coeff) >> INT3
 626              		.loc 2 514 0
 627 01f8 4243     		muls	r2, r0, r2
 628 01fa 9213     		asrs	r2, r2, #14
 515:firmwares/rotorcraft/guidance/guidance_h.c ****     thrust_cmd_filt = (thrust_cmd_filt * GUIDANCE_H_THRUST_CMD_FILTER + vertical_thrust) /
 629              		.loc 2 515 0
 630 01fc 0A20     		movs	r0, #10
 631              	.LVL34:
 632 01fe 00FB0122 		mla	r2, r0, r1, r2
 633 0202 0B20     		movs	r0, #11
 634 0204 92FBF0F2 		sdiv	r2, r2, r0
 635              		.loc 2 517 0
 636 0208 2068     		ldr	r0, [r4]
 515:firmwares/rotorcraft/guidance/guidance_h.c ****     thrust_cmd_filt = (thrust_cmd_filt * GUIDANCE_H_THRUST_CMD_FILTER + vertical_thrust) /
 637              		.loc 2 515 0
 638 020a 1A60     		str	r2, [r3]
 639              		.loc 2 517 0
 640 020c 4FF41656 		mov	r6, #9600
 641 0210 41F62115 		movw	r5, #6433
 642 0214 7043     		muls	r0, r6, r0
 643 0216 90FBF5F0 		sdiv	r0, r0, r5
 644 021a 07EE102A 		fmsr	s14, r2	@ int
 645 021e 07EE900A 		fmsr	s15, r0	@ int
 646 0222 F8EEC78A 		fsitos	s17, s14
 647 0226 F8EEE77A 		fsitos	s15, s15
 648 022a 18EE901A 		fmrs	r1, s17
 649 022e 17EE900A 		fmrs	r0, s15
 650 0232 FFF7FEFF 		bl	atan2f
 651              	.LVL35:
 652 0236 07EE100A 		fmsr	s14, r0
 518:firmwares/rotorcraft/guidance/guidance_h.c ****                              thrust_cmd_filt));
 519:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.y = ANGLE_BFP_OF_REAL(atan2f((guidance_h_cmd_earth.y * MAX_PPRZ / INT32_AN
 653              		.loc 2 519 0
 654 023a 6068     		ldr	r0, [r4, #4]
 517:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x = ANGLE_BFP_OF_REAL(atan2f((guidance_h_cmd_earth.x * MAX_PPRZ / INT32_AN
 655              		.loc 2 517 0
 656 023c 67EE087A 		fmuls	s15, s14, s16
 657              		.loc 2 519 0
 658 0240 7043     		muls	r0, r6, r0
 517:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x = ANGLE_BFP_OF_REAL(atan2f((guidance_h_cmd_earth.x * MAX_PPRZ / INT32_AN
 659              		.loc 2 517 0
 660 0242 FDEEE77A 		ftosizs	s15, s15
 661              		.loc 2 519 0
 662 0246 90FBF5F0 		sdiv	r0, r0, r5
 517:firmwares/rotorcraft/guidance/guidance_h.c ****     guidance_h_cmd_earth.x = ANGLE_BFP_OF_REAL(atan2f((guidance_h_cmd_earth.x * MAX_PPRZ / INT32_AN
 663              		.loc 2 517 0
 664 024a C4ED007A 		fsts	s15, [r4]	@ int
 665              		.loc 2 519 0
 666 024e 07EE900A 		fmsr	s15, r0	@ int
 667 0252 F8EEE77A 		fsitos	s15, s15
 668 0256 18EE901A 		fmrs	r1, s17
 669 025a 17EE900A 		fmrs	r0, s15
 670 025e FFF7FEFF 		bl	atan2f
 671              	.LVL36:
 672 0262 07EE100A 		fmsr	s14, r0
 673 0266 27EE088A 		fmuls	s16, s14, s16
 674 026a BDEEC88A 		ftosizs	s16, s16
 675 026e 84ED018A 		fsts	s16, [r4, #4]	@ int
 676              	.L33:
 677              	.LBE3:
 520:firmwares/rotorcraft/guidance/guidance_h.c ****                              thrust_cmd_filt));
 521:firmwares/rotorcraft/guidance/guidance_h.c ****   }
 522:firmwares/rotorcraft/guidance/guidance_h.c **** 
 523:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_cmd_earth, -total_max_bank, total_max_bank);
 678              		.loc 2 523 0
 679 0272 2368     		ldr	r3, [r4]
 524:firmwares/rotorcraft/guidance/guidance_h.c **** }
 680              		.loc 2 524 0
 681 0274 BDEC028B 		fldmfdd	sp!, {d8}
 523:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_STRIM(guidance_h_cmd_earth, -total_max_bank, total_max_bank);
 682              		.loc 2 523 0
 683 0278 B3F5496F 		cmp	r3, #3216
 684 027c B4BF     		ite	lt
 685 027e 1A46     		movlt	r2, r3
 686 0280 4FF44962 		movge	r2, #3216
 687 0284 204B     		ldr	r3, .L52+96
 688 0286 9A42     		cmp	r2, r3
 689 0288 ACBF     		ite	ge
 690 028a 2260     		strge	r2, [r4]
 691 028c 2360     		strlt	r3, [r4]
 692 028e 6268     		ldr	r2, [r4, #4]
 693 0290 B2F5496F 		cmp	r2, #3216
 694 0294 A8BF     		it	ge
 695 0296 4FF44962 		movge	r2, #3216
 696 029a 9A42     		cmp	r2, r3
 697 029c ACBF     		ite	ge
 698 029e 6260     		strge	r2, [r4, #4]
 699 02a0 6360     		strlt	r3, [r4, #4]
 700              		.loc 2 524 0
 701 02a2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 702              	.L53:
 703 02a6 00BF     		.align	2
 704              	.L52:
 705 02a8 00000000 		.word	.LANCHOR0
 706 02ac 00000000 		.word	.LANCHOR8
 707 02b0 0000B0C0 		.word	-1062207488
 708 02b4 0000B040 		.word	1085276160
 709 02b8 00F0FFFF 		.word	-4096
 710 02bc 000060C1 		.word	-1050673152
 711 02c0 00006041 		.word	1096810496
 712 02c4 000080FF 		.word	-8388608
 713 02c8 00000000 		.word	.LANCHOR10
 714 02cc 00000000 		.word	.LANCHOR11
 715 02d0 00000000 		.word	.LANCHOR12
 716 02d4 00000000 		.word	.LANCHOR13
 717 02d8 00000000 		.word	.LANCHOR2
 718 02dc 00000000 		.word	.LANCHOR14
 719 02e0 76F8FFFF 		.word	-1930
 720 02e4 00000000 		.word	.LANCHOR3
 721 02e8 00000000 		.word	.LANCHOR15
 722 02ec 00008A07 		.word	126484480
 723 02f0 000076F8 		.word	-126484480
 724 02f4 00000000 		.word	.LANCHOR16
 725 02f8 00000000 		.word	stabilization_cmd
 726 02fc 00000000 		.word	guidance_v_thrust_coeff
 727 0300 00000000 		.word	.LANCHOR17
 728 0304 00008045 		.word	1166016512
 729 0308 70F3FFFF 		.word	-3216
 730 030c 00000000 		.word	.LANCHOR1
 731 0310 00000000 		.word	.LANCHOR9
 732              		.cfi_endproc
 733              	.LFE471:
 735              		.section	.text.send_href,"ax",%progbits
 736              		.align	1
 737              		.thumb
 738              		.thumb_func
 740              	send_href:
 741              	.LFB463:
 145:firmwares/rotorcraft/guidance/guidance_h.c **** {
 742              		.loc 2 145 0
 743              		.cfi_startproc
 744              		@ args = 0, pretend = 0, frame = 16
 745              		@ frame_needed = 0, uses_anonymous_args = 0
 746              	.LVL37:
 747 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 748              		.cfi_def_cfa_offset 36
 749              		.cfi_offset 4, -36
 750              		.cfi_offset 5, -32
 751              		.cfi_offset 6, -28
 752              		.cfi_offset 7, -24
 753              		.cfi_offset 8, -20
 754              		.cfi_offset 9, -16
 755              		.cfi_offset 10, -12
 756              		.cfi_offset 11, -8
 757              		.cfi_offset 14, -4
 758              	.LBB6:
 759              	.LBB7:
 760              		.file 3 "/home/lsk/paparazzi/var/include/messages.h"
   1:/home/lsk/paparazzi/var/include/messages.h **** /* Automatically generated by gen_messages from /home/lsk/paparazzi/conf/messages.xml */
   2:/home/lsk/paparazzi/var/include/messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/messages.h **** /* Macros to send and receive messages of class telemetry */
   4:/home/lsk/paparazzi/var/include/messages.h **** #ifndef _VAR_MESSAGES_telemetry_H_
   5:/home/lsk/paparazzi/var/include/messages.h **** #define _VAR_MESSAGES_telemetry_H_
   6:/home/lsk/paparazzi/var/include/messages.h **** #include "subsystems/datalink/transport.h"
   7:/home/lsk/paparazzi/var/include/messages.h **** #include "mcu_periph/link_device.h"
   8:/home/lsk/paparazzi/var/include/messages.h **** #if DOWNLINK
   9:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AUTOPILOT_VERSION 1
  10:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALIVE 2
  11:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PONG 3
  12:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TAKEOFF 4
  13:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ARDRONE_NAVDATA 5
  14:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATTITUDE 6
  15:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IR_SENSORS 7
  16:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS 8
  17:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION_REF 9
  18:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION 10
  19:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_MODE 11
  20:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BAT 12
  21:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_MCU_LINK 13
  22:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CALIBRATION 14
  23:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SETTINGS 15
  24:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DESIRED 16
  25:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_SOL 17
  26:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC_GENERIC 18
  27:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_FORMAT 19
  28:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM 20
  29:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CIRCLE 21
  30:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SEGMENT 22
  31:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SVINFO 25
  32:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG 26
  33:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SURVEY 27
  34:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WC_RSSI 28
  35:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RANGEFINDER 29
  36:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DATALINK_REPORT 30
  37:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DL_VALUE 31
  38:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MARK 32
  39:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYS_MON 33
  40:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR 34
  41:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED 35
  42:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MKK 36
  43:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENERGY 37
  44:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85_CALIB 38
  45:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85 39
  46:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SPEED_LOOP 40
  47:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALT_KALMAN 41
  48:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ESTIMATOR 42
  49:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_ROLL 43
  50:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5534A 44
  51:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PRESSURE 45
  52:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_WORDS 46
  53:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_LLA 47
  54:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CHRONO 48
  55:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_ENU 49
  56:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WINDTURBINE_STATUS_ 50
  57:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC_3CH_ 51
  58:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPPT 52
  59:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_IR_I2C 53
  60:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED 54
  61:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XSENS 55
  62:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_ETS 56
  63:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_ETS 57
  64:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PBN 58
  65:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_LLA 59
  66:/home/lsk/paparazzi/var/include/messages.h **** #define DL_H_CTL_A 60
  67:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_RAW 61
  68:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_VOLTAGE 62
  69:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM_POINT 63
  70:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_INFO 64
  71:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_BARO 65
  72:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_AIRSPEED 66
  73:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLIGHT_BENCHMARK 67
  74:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPL3115_BARO 68
  75:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AOA_ADC 69
  76:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XTEND_RSSI 70
  77:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SUPERBITRF 72
  78:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GX3_INFO 73
  79:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EXPLAIN 74
  80:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_TELEMETRY 75
  81:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_UPDATE 76
  82:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_PREDICT 77
  83:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INV_FILTER 78
  84:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MISSION_STATUS 79
  85:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CROSS_TRACK_ERROR 80
  86:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GENERIC_COM 81
  87:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_SLOT_TM 82
  88:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_STATUS_TM 83
  89:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BMP_STATUS 84
  90:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_STATUS 85
  91:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TMP_STATUS 86
  92:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WIND_INFO_RET 87
  93:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SCP_STATUS 88
  94:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_STATUS 89
  95:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENOSE_STATUS 90
  96:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DPICCO_STATUS 91
  97:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_DEBUG 92
  98:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_STATUS 93
  99:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATUS 94
 100:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATIC 95
 101:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HIH_STATUS 96
 102:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMT_STATUS 97
 103:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GP2Y_STATUS 98
 104:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_SERIAL 99
 105:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPM 100
 106:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC 101
 107:/home/lsk/paparazzi/var/include/messages.h **** #define DL_COMMANDS 102
 108:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FBW_STATUS 103
 109:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC 104
 110:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ACTUATORS 105
 111:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_SHOT 110
 112:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_BOARD_RESULTS 111
 113:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_SERIAL 113
 114:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD 114
 115:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HTM_STATUS 115
 116:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5611 116
 117:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MS5611_COEFF 117
 118:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATMOSPHERE_CHARGE 118
 119:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SOLAR_RADIATION 119
 120:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_TA 120
 121:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RA 121
 122:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RESOLVED 122
 123:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_DEBUG 123
 124:/home/lsk/paparazzi/var/include/messages.h **** #define DL_POTENTIAL 124
 125:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERTICAL_ENERGY 125
 126:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_TCOUPLE 126
 127:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_STATUS 127
 128:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAMERA_SNAPSHOT 128
 129:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIMESTAMP 129
 130:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_FLOAT 130
 131:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_SCALED 131
 132:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_SCALED 132
 133:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SCALED 133
 134:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER 134
 135:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER2 135
 136:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RATE_LOOP 136
 137:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_ALIGNER 137
 138:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_MS45XX 138
 139:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_COR 139
 140:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INT 140
 141:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_INT 141
 142:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_FLOAT 142
 143:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CMD 143
 144:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_INT 144
 145:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERT_LOOP 145
 146:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HOVER_LOOP 146
 147:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_FP 147
 148:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_ADC 148
 149:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_REF_INT 149
 150:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_TUNE_HOVER 150
 151:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_Z 151
 152:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PCAP01_STATUS 152
 153:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEIGER_COUNTER 153
 154:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_REF 154
 155:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_INT 155
 156:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER_INT 156
 157:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_QUAT_INT 157
 158:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_RMAT_INT 158
 159:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_NAV_STATUS 159
 160:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_RADIO_CONTROL 160
 161:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF_EXTENDED 161
 162:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF 162
 163:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEO_MAG 163
 164:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF 164
 165:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_DBG 165
 166:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_GPS 166
 167:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_SONAR 167
 168:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CAM 168
 169:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_REF_QUAT 169
 170:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_XHAT 170
 171:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_Y 171
 172:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_P_DIAG 172
 173:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER 173
 174:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_MEASUREMENT_EULER 174
 175:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WT 175
 176:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_DEBUG 176
 177:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_MSG 177
 178:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_GYRO_BIAS_INT 178
 179:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLOW_AP_OTF 179
 180:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FMS_TIME 180
 181:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOADCELL 181
 182:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLA_DEBUG 182
 183:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_FAULT_STATUS 183
 184:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_SPEEDS 184
 185:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_DEBUG_QUAT 185
 186:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_BUSVOLTS 186
 187:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYSTEM_STATUS 187
 188:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DYNAMIXEL 188
 189:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RMAT_DEBUG 189
 190:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SIMPLE_COMMANDS 190
 191:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VANE_SENSOR 191
 192:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CONTROLLER_GAINS 192
 193:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF 193
 194:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_DEBUG 194
 195:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_ACC_DBG 195
 196:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_MAG_DBG 196
 197:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SENSORS_SCALED 197
 198:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS 198
 199:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_ERROR 199
 200:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO 200
 201:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG 201
 202:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL 202
 203:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_RAW 203
 204:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_RAW 204
 205:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_RAW 205
 206:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SETTINGS 206
 207:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_CURRENT_CALIBRATION 207
 208:/home/lsk/paparazzi/var/include/messages.h **** #define DL_UART_ERRORS 208
 209:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_LP 209
 210:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_PRESSURE 210
 211:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_HS_GYRO 211
 212:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_PASSTHROUGH_STATUS 212
 213:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_VERT 213
 214:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MF_DAQ_STATE 214
 215:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INFO_MSG 215
 216:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BEBOP_ACTUATORS 218
 217:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WEATHER 219
 218:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_TURNTABLE 220
 219:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_RAW 221
 220:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIR_DATA 222
 221:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSL 223
 222:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_SYNC 225
 223:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PERIODIC_TELEMETRY_ERR 226
 224:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIME 227
 225:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTIC_FLOW_EST 228
 226:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_ARDRONE2 230
 227:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_STATUS 231
 228:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STATE_FILTER_STATUS 232
 229:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PX4FLOW 233
 230:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTICFLOW 234
 231:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VISUALTARGET 235
 232:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SONAR 236
 233:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD_FLOAT 237
 234:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_POS_LLH 238
 235:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RPMS 239
 236:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SPEED_POS 240
 237:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RATE_ATTITUDE 241
 238:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_GYRO_BIAS 242
 239:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RANGE_METER 243
 240:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_WIND 244
 241:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_DEBUG 247
 242:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_ACCEL_LTP 248
 243:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOOSE_INS_GPS 249
 244:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AFL_COEFFS 250
 245:/home/lsk/paparazzi/var/include/messages.h **** #define DL_I2C_ERRORS 253
 246:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RDYB_TRAJECTORY 254
 247:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HENRY_GNSS 255
 248:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MSG_telemetry_NB 239
 249:/home/lsk/paparazzi/var/include/messages.h **** 
 250:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AUTOPILOT_VERSION(_trans, _dev, version, nb_desc, desc) pprz_msg_send_AUTOPIL
 251:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AUTOPILOT_VERSION(struct transport_tx *trans, struct link_device *
 252:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 
 253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 /* msg heade
 254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_desc*1 +2 /* msg header overhead */);
 255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AUTOPILOT_VERSION, "
 257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _version);
 258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_desc)
 259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_desc, (void *) _desc);
 260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 261:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 262:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 263:/home/lsk/paparazzi/var/include/messages.h **** }
 264:/home/lsk/paparazzi/var/include/messages.h **** 
 265:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALIVE(_trans, _dev, nb_md5sum, md5sum) pprz_msg_send_ALIVE(&((_trans).trans_t
 266:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALIVE(struct transport_tx *trans, struct link_device *dev, uint8_t
 267:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 
 268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 /* msg heade
 269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_md5sum*1 +2 /* msg header overhead */);
 270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALIVE, "ALIVE");
 272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_md5su
 273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_md5sum, (void *) _md5s
 274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 275:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 277:/home/lsk/paparazzi/var/include/messages.h **** }
 278:/home/lsk/paparazzi/var/include/messages.h **** 
 279:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PONG(_trans, _dev) pprz_msg_send_PONG(&((_trans).trans_tx), &((_dev).device),
 280:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PONG(struct transport_tx *trans, struct link_device *dev, uint8_t 
 281:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header 
 282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header overhead */)
 283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0 +2 /* msg header overhead */);
 284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PONG, "PONG");
 286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 287:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 289:/home/lsk/paparazzi/var/include/messages.h **** }
 290:/home/lsk/paparazzi/var/include/messages.h **** 
 291:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TAKEOFF(_trans, _dev, cpu_time) pprz_msg_send_TAKEOFF(&((_trans).trans_tx), &
 292:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TAKEOFF(struct transport_tx *trans, struct link_device *dev, uint8
 293:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
 294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
 295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
 296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TAKEOFF, "TAKEOFF");
 298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cpu_time);
 299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 302:/home/lsk/paparazzi/var/include/messages.h **** }
 303:/home/lsk/paparazzi/var/include/messages.h **** 
 304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ARDRONE_NAVDATA(_trans, _dev, taille, nu_trame, ax, ay, az, vx, vy, vz, tempe
 305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ARDRONE_NAVDATA(struct transport_tx *trans, struct link_device *de
 306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
 308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+4+2+2+4+2+2+2+2+2
 309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ARDRONE_NAVDATA, "AR
 311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _taille);
 312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nu_trame);
 313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ax);
 314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ay);
 315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _az);
 316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vx);
 317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vy);
 318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vz);
 319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_ac
 320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_gy
 321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ultrasound);
 322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_debut_echo)
 323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_fin_echo);
 324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_association
 325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_distance_ec
 326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_time)
 327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_value
 328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_ref);
 329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nb_echo);
 330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sum_echo);
 331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _gradient);
 332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flag_echo_ini)
 333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_pr
 335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mx);
 336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _my);
 337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mz);
 338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _chksum);
 339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
 340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 341:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 343:/home/lsk/paparazzi/var/include/messages.h **** }
 344:/home/lsk/paparazzi/var/include/messages.h **** 
 345:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATTITUDE(_trans, _dev, phi, psi, theta) pprz_msg_send_ATTITUDE(&((_trans).tra
 346:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATTITUDE(struct transport_tx *trans, struct link_device *dev, uint
 347:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATTITUDE, "ATTITUDE"
 352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
 354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
 355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 356:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 358:/home/lsk/paparazzi/var/include/messages.h **** }
 359:/home/lsk/paparazzi/var/include/messages.h **** 
 360:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IR_SENSORS(_trans, _dev, ir1, ir2, longitudinal, lateral, vertical) pprz_msg_
 361:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IR_SENSORS(struct transport_tx *trans, struct link_device *dev, ui
 362:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* m
 363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* msg header ov
 364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2 +2 /* msg header overhead */);
 365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IR_SENSORS, "IR_SENS
 367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
 368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
 369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _longitudinal);
 370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lateral);
 371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vertical);
 372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 373:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 375:/home/lsk/paparazzi/var/include/messages.h **** }
 376:/home/lsk/paparazzi/var/include/messages.h **** 
 377:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS(_trans, _dev, mode, utm_east, utm_north, course, alt, speed, climb, week,
 378:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS(struct transport_tx *trans, struct link_device *dev, uint8_t a
 379:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4
 380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* m
 381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* msg header overhead */);
 382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS, "GPS");
 384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
 385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
 388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
 390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
 391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
 392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
 393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
 395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 396:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 398:/home/lsk/paparazzi/var/include/messages.h **** }
 399:/home/lsk/paparazzi/var/include/messages.h **** 
 400:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION_REF(_trans, _dev, utm_east, utm_north, utm_zone, ground_alt) pprz_
 401:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION_REF(struct transport_tx *trans, struct link_device *dev
 402:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg
 403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 412:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 414:/home/lsk/paparazzi/var/include/messages.h **** }
 415:/home/lsk/paparazzi/var/include/messages.h **** 
 416:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION(_trans, _dev, cur_block, cur_stage, pos_x, pos_y, dist_wp, dist_ho
 417:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION(struct transport_tx *trans, struct link_device *dev, ui
 418:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +
 419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 432:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 434:/home/lsk/paparazzi/var/include/messages.h **** }
 435:/home/lsk/paparazzi/var/include/messages.h **** 
 436:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPRZ_MODE(_trans, _dev, ap_mode, ap_gaz, ap_lateral, ap_horizontal, if_calib_
 437:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPRZ_MODE(struct transport_tx *trans, struct link_device *dev, uin
 438:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /*
 439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /* msg header 
 440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1 +2 /* msg header overhead */);
 441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPRZ_MODE, "PPRZ_MOD
 443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
 444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_gaz);
 445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_lateral);
 446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_horizontal);
 447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _if_calib_mode);
 448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu1_status);
 449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 450:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 452:/home/lsk/paparazzi/var/include/messages.h **** }
 453:/home/lsk/paparazzi/var/include/messages.h **** 
 454:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BAT(_trans, _dev, throttle, voltage, amps, flight_time, kill_auto_throttle, b
 455:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BAT(struct transport_tx *trans, struct link_device *dev, uint8_t a
 456:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +
 457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +2 /* msg hea
 458:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+2+2+2 +2 /* msg header overhead */);
 459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BAT, "BAT");
 461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
 462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _voltage);
 463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _amps);
 464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
 465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _kill_auto_throt
 466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
 467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
 468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 470:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 472:/home/lsk/paparazzi/var/include/messages.h **** }
 473:/home/lsk/paparazzi/var/include/messages.h **** 
 474:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_MCU_LINK(_trans, _dev, i2c_nb_err, i2c_mcu1_nb_err, ppm_rate) pprz_msg_
 475:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_MCU_LINK(struct transport_tx *trans, struct link_device *dev
 476:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
 477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
 478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
 479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_MCU_LINK, "DEB
 481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_nb_err);
 482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_mcu1_nb_err
 483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
 484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 485:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 487:/home/lsk/paparazzi/var/include/messages.h **** }
 488:/home/lsk/paparazzi/var/include/messages.h **** 
 489:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CALIBRATION(_trans, _dev, climb_sum_err, climb_gaz_submode) pprz_msg_send_CAL
 490:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CALIBRATION(struct transport_tx *trans, struct link_device *dev, u
 491:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg hea
 492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg header overhead
 493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1 +2 /* msg header overhead */);
 494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CALIBRATION, "CALIBR
 496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb_sum_err);
 497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _climb_gaz_submo
 498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 499:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 501:/home/lsk/paparazzi/var/include/messages.h **** }
 502:/home/lsk/paparazzi/var/include/messages.h **** 
 503:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SETTINGS(_trans, _dev, slider_1_val, slider_2_val) pprz_msg_send_SETTINGS(&((
 504:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SETTINGS(struct transport_tx *trans, struct link_device *dev, uint
 505:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SETTINGS, "SETTINGS"
 510:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_1_val);
 511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_2_val);
 512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 513:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 515:/home/lsk/paparazzi/var/include/messages.h **** }
 516:/home/lsk/paparazzi/var/include/messages.h **** 
 517:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DESIRED(_trans, _dev, roll, pitch, course, x, y, altitude, climb, airspeed) p
 518:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DESIRED(struct transport_tx *trans, struct link_device *dev, uint8
 519:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
 520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
 521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DESIRED, "DESIRED");
 524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll);
 525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch);
 526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
 527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
 528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
 529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
 531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 533:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 535:/home/lsk/paparazzi/var/include/messages.h **** }
 536:/home/lsk/paparazzi/var/include/messages.h **** 
 537:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_SOL(_trans, _dev, Pacc, Sacc, PDOP, numSV) pprz_msg_send_GPS_SOL(&((_tran
 538:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_SOL(struct transport_tx *trans, struct link_device *dev, uint8
 539:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg
 540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg header over
 541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+1 +2 /* msg header overhead */);
 542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_SOL, "GPS_SOL");
 544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Pacc);
 545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Sacc);
 546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PDOP);
 547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numSV);
 548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 549:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 551:/home/lsk/paparazzi/var/include/messages.h **** }
 552:/home/lsk/paparazzi/var/include/messages.h **** 
 553:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC_GENERIC(_trans, _dev, val1, val2) pprz_msg_send_ADC_GENERIC(&((_trans).tr
 554:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC_GENERIC(struct transport_tx *trans, struct link_device *dev, u
 555:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
 556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
 557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
 558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC_GENERIC, "ADC_GE
 560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
 561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
 562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 563:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 565:/home/lsk/paparazzi/var/include/messages.h **** }
 566:/home/lsk/paparazzi/var/include/messages.h **** 
 567:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_FORMAT(_trans, _dev, val1, val2) pprz_msg_send_TEST_FORMAT(&((_trans).tr
 568:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_FORMAT(struct transport_tx *trans, struct link_device *dev, u
 569:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg hea
 570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg header overhead
 571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+8+4 +2 /* msg header overhead */);
 572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_FORMAT, "TEST_F
 574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_DOUBLE, DL_FORMAT_SCALAR, 8, (void *) _val1);
 575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _val2);
 576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 577:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 579:/home/lsk/paparazzi/var/include/messages.h **** }
 580:/home/lsk/paparazzi/var/include/messages.h **** 
 581:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM(_trans, _dev, phi, theta, target_x, target_y) pprz_msg_send_CAM(&((_trans
 582:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM(struct transport_tx *trans, struct link_device *dev, uint8_t a
 583:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM, "CAM");
 588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
 589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
 590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_x);
 591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_y);
 592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 595:/home/lsk/paparazzi/var/include/messages.h **** }
 596:/home/lsk/paparazzi/var/include/messages.h **** 
 597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CIRCLE(_trans, _dev, center_east, center_north, radius) pprz_msg_send_CIRCLE(
 598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CIRCLE(struct transport_tx *trans, struct link_device *dev, uint8_
 599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 610:/home/lsk/paparazzi/var/include/messages.h **** }
 611:/home/lsk/paparazzi/var/include/messages.h **** 
 612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SEGMENT(_trans, _dev, segment_east_1, segment_north_1, segment_east_2, segmen
 613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SEGMENT(struct transport_tx *trans, struct link_device *dev, uint8
 614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 624:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 626:/home/lsk/paparazzi/var/include/messages.h **** }
 627:/home/lsk/paparazzi/var/include/messages.h **** 
 628:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SVINFO(_trans, _dev, chn, SVID, Flags, QI, CNO, Elev, Azim) pprz_msg_send_SVI
 629:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SVINFO(struct transport_tx *trans, struct link_device *dev, uint8_
 630:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 
 631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 /* msg heade
 632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1+2 +2 /* msg header overhead */);
 633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SVINFO, "SVINFO");
 635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _chn);
 636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _SVID);
 637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _Flags);
 638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _QI);
 639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _CNO);
 640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _Elev);
 641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _Azim);
 642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 643:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 645:/home/lsk/paparazzi/var/include/messages.h **** }
 646:/home/lsk/paparazzi/var/include/messages.h **** 
 647:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG(_trans, _dev, nb_msg, msg) pprz_msg_send_DEBUG(&((_trans).trans_tx), &(
 648:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG(struct transport_tx *trans, struct link_device *dev, uint8_t
 649:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
 650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
 651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
 652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG, "DEBUG");
 654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
 655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
 656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 657:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 659:/home/lsk/paparazzi/var/include/messages.h **** }
 660:/home/lsk/paparazzi/var/include/messages.h **** 
 661:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SURVEY(_trans, _dev, east, north, west, south) pprz_msg_send_SURVEY(&((_trans
 662:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SURVEY(struct transport_tx *trans, struct link_device *dev, uint8_
 663:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 673:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 675:/home/lsk/paparazzi/var/include/messages.h **** }
 676:/home/lsk/paparazzi/var/include/messages.h **** 
 677:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WC_RSSI(_trans, _dev, raw_level) pprz_msg_send_WC_RSSI(&((_trans).trans_tx), 
 678:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WC_RSSI(struct transport_tx *trans, struct link_device *dev, uint8
 679:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
 680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
 681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
 682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WC_RSSI, "WC_RSSI");
 684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _raw_level);
 685:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 686:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 688:/home/lsk/paparazzi/var/include/messages.h **** }
 689:/home/lsk/paparazzi/var/include/messages.h **** 
 690:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RANGEFINDER(_trans, _dev, range, z_dot, z_dot_sum_err, z_dot_setpoint, z_sum_
 691:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RANGEFINDER(struct transport_tx *trans, struct link_device *dev, u
 692:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 
 693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 /* msg heade
 694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+1 +2 /* msg header overhead */);
 695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RANGEFINDER, "RANGEF
 697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _range);
 698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_sum_err);
 700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_setpoint)
 701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_sum_err);
 702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_setpoint);
 703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _flying);
 704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 705:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 707:/home/lsk/paparazzi/var/include/messages.h **** }
 708:/home/lsk/paparazzi/var/include/messages.h **** 
 709:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DATALINK_REPORT(_trans, _dev, uplink_lost_time, uplink_nb_msgs, downlink_nb_m
 710:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DATALINK_REPORT(struct transport_tx *trans, struct link_device *de
 711:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* m
 712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* msg header ov
 713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1 +2 /* msg header overhead */);
 714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DATALINK_REPORT, "DA
 716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_lost_ti
 717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_nb_msgs
 718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_nb_ms
 719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_rate)
 720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _downlink_ovrn);
 721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 722:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 724:/home/lsk/paparazzi/var/include/messages.h **** }
 725:/home/lsk/paparazzi/var/include/messages.h **** 
 726:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DL_VALUE(_trans, _dev, index, value) pprz_msg_send_DL_VALUE(&((_trans).trans_
 727:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DL_VALUE(struct transport_tx *trans, struct link_device *dev, uint
 728:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
 729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
 730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
 731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DL_VALUE, "DL_VALUE"
 733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _index);
 734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _value);
 735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 738:/home/lsk/paparazzi/var/include/messages.h **** }
 739:/home/lsk/paparazzi/var/include/messages.h **** 
 740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MARK(_trans, _dev, ac_id, lat, long) pprz_msg_send_MARK(&((_trans).trans_tx),
 741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MARK(struct transport_tx *trans, struct link_device *dev, uint8_t 
 742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg h
 743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg header overhe
 744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4 +2 /* msg header overhead */);
 745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MARK, "MARK");
 747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
 748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
 749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _long);
 750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 753:/home/lsk/paparazzi/var/include/messages.h **** }
 754:/home/lsk/paparazzi/var/include/messages.h **** 
 755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYS_MON(_trans, _dev, periodic_time, periodic_time_min, periodic_time_max, pe
 756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYS_MON(struct transport_tx *trans, struct link_device *dev, uint8
 757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +
 758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +2 /* msg hea
 759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+1 +2 /* msg header overhead */);
 760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYS_MON, "SYS_MON");
 762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time)
 763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _event_number);
 769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cpu_load);
 770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 771:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 773:/home/lsk/paparazzi/var/include/messages.h **** }
 774:/home/lsk/paparazzi/var/include/messages.h **** 
 775:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR(_trans, _dev, rpm, current) pprz_msg_send_MOTOR(&((_trans).trans_tx), &
 776:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR(struct transport_tx *trans, struct link_device *dev, uint8_t
 777:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
 778:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
 779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
 780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR, "MOTOR");
 782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm);
 783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
 784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 785:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 787:/home/lsk/paparazzi/var/include/messages.h **** }
 788:/home/lsk/paparazzi/var/include/messages.h **** 
 789:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED(_trans, _dev, wp_id, utm_east, utm_north, alt, utm_zone) pprz_msg_se
 790:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED(struct transport_tx *trans, struct link_device *dev, uint
 791:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* msg header ov
 793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4+1 +2 /* msg header overhead */);
 794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 795:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED, "WP_MOVED"
 796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 797:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 798:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 799:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 802:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 804:/home/lsk/paparazzi/var/include/messages.h **** }
 805:/home/lsk/paparazzi/var/include/messages.h **** 
 806:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MKK(_trans, _dev, nr, rpm, current, temp) pprz_msg_send_MKK(&((_trans).trans_
 807:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MKK(struct transport_tx *trans, struct link_device *dev, uint8_t a
 808:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg
 809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg header over
 810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1 +2 /* msg header overhead */);
 811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MKK, "MKK");
 813:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nr);
 814:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rpm);
 815:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _current);
 816:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _temp);
 817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 818:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 820:/home/lsk/paparazzi/var/include/messages.h **** }
 821:/home/lsk/paparazzi/var/include/messages.h **** 
 822:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENERGY(_trans, _dev, bat, amp, energy, power) pprz_msg_send_ENERGY(&((_trans)
 823:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENERGY(struct transport_tx *trans, struct link_device *dev, uint8_
 824:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg
 825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg header over
 826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+4 +2 /* msg header overhead */);
 827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENERGY, "ENERGY");
 829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bat);
 830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amp);
 831:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _power);
 833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 834:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 836:/home/lsk/paparazzi/var/include/messages.h **** }
 837:/home/lsk/paparazzi/var/include/messages.h **** 
 838:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85_CALIB(_trans, _dev, a1, a2, a3, a4, a5, a6, b1, b2, mb, mc, md) pp
 839:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85_CALIB(struct transport_tx *trans, struct link_device *d
 840:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* m
 842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
 843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85_CALIB, "B
 845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a1);
 846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a2);
 847:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a3);
 848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a4);
 849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a5);
 850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a6);
 851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b1);
 852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b2);
 853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mb);
 854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mc);
 855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _md);
 856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 859:/home/lsk/paparazzi/var/include/messages.h **** }
 860:/home/lsk/paparazzi/var/include/messages.h **** 
 861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85(_trans, _dev, UT, UP, P, T, MSL) pprz_msg_send_BARO_BMP85(&((_tran
 862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85(struct transport_tx *trans, struct link_device *dev, ui
 863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
 864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
 865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
 866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85, "BARO_BM
 868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
 869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
 870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _P);
 871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _T);
 872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _MSL);
 873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 874:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 876:/home/lsk/paparazzi/var/include/messages.h **** }
 877:/home/lsk/paparazzi/var/include/messages.h **** 
 878:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SPEED_LOOP(_trans, _dev, ve_set_point, ve, vn_set_point, vn, north_sp, east_s
 879:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SPEED_LOOP(struct transport_tx *trans, struct link_device *dev, ui
 880:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
 882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SPEED_LOOP, "SPEED_L
 885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve_set_point);
 886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve);
 887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn_set_point);
 888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn);
 889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north_sp);
 890:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east_sp);
 891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 892:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 894:/home/lsk/paparazzi/var/include/messages.h **** }
 895:/home/lsk/paparazzi/var/include/messages.h **** 
 896:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALT_KALMAN(_trans, _dev, p00, p01, p10, p11) pprz_msg_send_ALT_KALMAN(&((_tra
 897:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALT_KALMAN(struct transport_tx *trans, struct link_device *dev, ui
 898:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALT_KALMAN, "ALT_KAL
 903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p00);
 904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p01);
 905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p10);
 906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p11);
 907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 910:/home/lsk/paparazzi/var/include/messages.h **** }
 911:/home/lsk/paparazzi/var/include/messages.h **** 
 912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ESTIMATOR(_trans, _dev, z, z_dot) pprz_msg_send_ESTIMATOR(&((_trans).trans_tx
 913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ESTIMATOR(struct transport_tx *trans, struct link_device *dev, uin
 914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ESTIMATOR, "ESTIMATO
 919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
 920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 922:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 924:/home/lsk/paparazzi/var/include/messages.h **** }
 925:/home/lsk/paparazzi/var/include/messages.h **** 
 926:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_ROLL(_trans, _dev, p, phi, phi_sp) pprz_msg_send_TUNE_ROLL(&((_trans).tr
 927:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_ROLL(struct transport_tx *trans, struct link_device *dev, uin
 928:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_ROLL, "TUNE_ROL
 933:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
 934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 935:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_sp);
 936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 937:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 939:/home/lsk/paparazzi/var/include/messages.h **** }
 940:/home/lsk/paparazzi/var/include/messages.h **** 
 941:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5534A(_trans, _dev, pressure, temp, alt) pprz_msg_send_BARO_MS5534A(&(
 942:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5534A(struct transport_tx *trans, struct link_device *dev, 
 943:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
 944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
 945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
 946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5534A, "BARO_
 948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
 950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 952:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 954:/home/lsk/paparazzi/var/include/messages.h **** }
 955:/home/lsk/paparazzi/var/include/messages.h **** 
 956:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PRESSURE(_trans, _dev, airspeed_adc, airspeed, altitude_adc, altitude) pprz_m
 957:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PRESSURE(struct transport_tx *trans, struct link_device *dev, uint
 958:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PRESSURE, "PRESSURE"
 963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_adc);
 964:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude_adc);
 966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 968:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 970:/home/lsk/paparazzi/var/include/messages.h **** }
 971:/home/lsk/paparazzi/var/include/messages.h **** 
 972:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_WORDS(_trans, _dev, w1, w2, w3, w4) pprz_msg_send_BARO_WORDS(&((_trans).
 973:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_WORDS(struct transport_tx *trans, struct link_device *dev, ui
 974:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_WORDS, "BARO_WO
 979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w1);
 980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w2);
 981:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w3);
 982:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w4);
 983:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 984:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 986:/home/lsk/paparazzi/var/include/messages.h **** }
 987:/home/lsk/paparazzi/var/include/messages.h **** 
 988:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_LLA(_trans, _dev, wp_id, lat, lon, alt) pprz_msg_send_WP_MOVED_LLA(&
 989:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_LLA(struct transport_tx *trans, struct link_device *dev, 
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_LLA, "WP_MO
 995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
 998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1000:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1002:/home/lsk/paparazzi/var/include/messages.h **** }
1003:/home/lsk/paparazzi/var/include/messages.h **** 
1004:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CHRONO(_trans, _dev, tag, time) pprz_msg_send_CHRONO(&((_trans).trans_tx), &(
1005:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CHRONO(struct transport_tx *trans, struct link_device *dev, uint8_
1006:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
1007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
1008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
1009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CHRONO, "CHRONO");
1011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tag);
1012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time);
1013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1014:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1016:/home/lsk/paparazzi/var/include/messages.h **** }
1017:/home/lsk/paparazzi/var/include/messages.h **** 
1018:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_ENU(_trans, _dev, wp_id, east, north, up) pprz_msg_send_WP_MOVED_ENU
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
1020:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
1021:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
1022:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
1023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_ENU, "WP_MO
1025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
1026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
1027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
1028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
1029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1030:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1032:/home/lsk/paparazzi/var/include/messages.h **** }
1033:/home/lsk/paparazzi/var/include/messages.h **** 
1034:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WINDTURBINE_STATUS_(_trans, _dev, ac_id, tb_id, sync_itow, cycle_time) pprz_m
1035:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WINDTURBINE_STATUS_(struct transport_tx *trans, struct link_device
1036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg
1037:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg header over
1038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4 +2 /* msg header overhead */);
1039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WINDTURBINE_STATUS_,
1041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tb_id);
1043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sync_itow);
1044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _cycle_time);
1045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1048:/home/lsk/paparazzi/var/include/messages.h **** }
1049:/home/lsk/paparazzi/var/include/messages.h **** 
1050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC_3CH_(_trans, _dev, throttle_mode, roll, pitch) pprz_msg_send_RC_3CH_(&((_t
1051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC_3CH_(struct transport_tx *trans, struct link_device *dev, uint8
1052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC_3CH_, "RC_3CH_");
1057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle_mode);
1058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _roll);
1059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _pitch);
1060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1061:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1063:/home/lsk/paparazzi/var/include/messages.h **** }
1064:/home/lsk/paparazzi/var/include/messages.h **** 
1065:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPPT(_trans, _dev, nb_values, values) pprz_msg_send_MPPT(&((_trans).trans_tx)
1066:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPPT(struct transport_tx *trans, struct link_device *dev, uint8_t 
1067:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPPT, "MPPT");
1072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1075:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1077:/home/lsk/paparazzi/var/include/messages.h **** }
1078:/home/lsk/paparazzi/var/include/messages.h **** 
1079:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_IR_I2C(_trans, _dev, ir1, ir2, top) pprz_msg_send_DEBUG_IR_I2C(&((_tran
1080:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_IR_I2C(struct transport_tx *trans, struct link_device *dev, 
1081:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
1082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
1083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
1084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_IR_I2C, "DEBUG
1086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
1087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
1088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _top);
1089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1090:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1092:/home/lsk/paparazzi/var/include/messages.h **** }
1093:/home/lsk/paparazzi/var/include/messages.h **** 
1094:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED(_trans, _dev, airspeed, airspeed_sp, airspeed_cnt, groundspeed_sp) p
1095:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED(struct transport_tx *trans, struct link_device *dev, uint
1096:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED, "AIRSPEED"
1101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_sp);
1103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_cnt);
1104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _groundspeed_sp)
1105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1106:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1108:/home/lsk/paparazzi/var/include/messages.h **** }
1109:/home/lsk/paparazzi/var/include/messages.h **** 
1110:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XSENS(_trans, _dev, counter, p, q, r, phi, theta, psi, ax, ay, az, vx, vy, vz
1111:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XSENS(struct transport_tx *trans, struct link_device *dev, uint8_t
1112:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
1113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+1+1+1+1+4+2+1+1 +2 /* m
1115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XSENS, "XSENS");
1117:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _counter);
1118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
1119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
1120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
1121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
1124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
1125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
1126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
1127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vx);
1128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vy);
1129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vz);
1130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
1131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lon);
1132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1134:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _hour);
1135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _min);
1136:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _sec);
1137:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _nanosec);
1138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _year);
1139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _month);
1140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _day);
1141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1142:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1144:/home/lsk/paparazzi/var/include/messages.h **** }
1145:/home/lsk/paparazzi/var/include/messages.h **** 
1146:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_BARO_ETS(&((_trans)
1147:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_ETS(struct transport_tx *trans, struct link_device *dev, uint
1148:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_ETS, "BARO_ETS"
1153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1157:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1159:/home/lsk/paparazzi/var/include/messages.h **** }
1160:/home/lsk/paparazzi/var/include/messages.h **** 
1161:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_AIRSPEED_ETS(&(
1162:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_ETS(struct transport_tx *trans, struct link_device *dev, 
1163:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_ETS, "AIRSP
1168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1172:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1174:/home/lsk/paparazzi/var/include/messages.h **** }
1175:/home/lsk/paparazzi/var/include/messages.h **** 
1176:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PBN(_trans, _dev, airspeed_adc, altitude_adc, airspeed, altitude, airspeed_of
1177:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PBN(struct transport_tx *trans, struct link_device *dev, uint8_t a
1178:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /*
1179:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /* msg header 
1180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+2+2 +2 /* msg header overhead */);
1181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PBN, "PBN");
1183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_adc);
1184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_adc);
1185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
1187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_offse
1188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_offse
1189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1190:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1192:/home/lsk/paparazzi/var/include/messages.h **** }
1193:/home/lsk/paparazzi/var/include/messages.h **** 
1194:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_LLA(_trans, _dev, lat, lon, alt, course, speed, climb, week, itow, mode, 
1195:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_LLA(struct transport_tx *trans, struct link_device *dev, uint8
1196:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1
1197:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg
1198:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg header overhead */);
1199:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_LLA, "GPS_LLA");
1201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
1206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
1207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
1208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
1209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
1211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1212:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1214:/home/lsk/paparazzi/var/include/messages.h **** }
1215:/home/lsk/paparazzi/var/include/messages.h **** 
1216:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_H_CTL_A(_trans, _dev, roll_sum_err, roll_sp, roll_ref, phi, aileron_sp, pitch
1217:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_H_CTL_A(struct transport_tx *trans, struct link_device *dev, uint8
1218:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4
1219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg
1220:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg header overhead */);
1221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1222:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_H_CTL_A, "H_CTL_A");
1223:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sum_err);
1224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sp);
1225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_ref);
1226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _aileron_sp);
1228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sum_err);
1229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sp);
1230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_ref);
1231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _elevator_sp);
1233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1234:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1236:/home/lsk/paparazzi/var/include/messages.h **** }
1237:/home/lsk/paparazzi/var/include/messages.h **** 
1238:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_RAW(_trans, _dev, ch_0, ch_1, ch_2, ch_3, ch_4, ch_5, ch_6, ch_
1239:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_RAW(struct transport_tx *trans, struct link_device *
1240:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_RAW, "
1245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_0);
1246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_1);
1247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_2);
1248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_3);
1249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_4);
1250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_5);
1251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_6);
1252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_7);
1253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_8);
1254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_9);
1255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_10);
1256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_11);
1257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_12);
1258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_13);
1259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_14);
1260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_15);
1261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1262:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1264:/home/lsk/paparazzi/var/include/messages.h **** }
1265:/home/lsk/paparazzi/var/include/messages.h **** 
1266:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_VOLTAGE(_trans, _dev, ch_1_p, ch_1_t, ch_2_p, ch_2_t, ch_3_p, c
1267:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_VOLTAGE(struct transport_tx *trans, struct link_devi
1268:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_VOLTAG
1273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_p);
1274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_t);
1275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_p);
1276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_t);
1277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_p);
1278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_t);
1279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_p);
1280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_t);
1281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_p);
1282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_t);
1283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_p);
1284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_t);
1285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_p);
1286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_t);
1287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd1);
1288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd2);
1289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1292:/home/lsk/paparazzi/var/include/messages.h **** }
1293:/home/lsk/paparazzi/var/include/messages.h **** 
1294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM_POINT(_trans, _dev, cam_point_distance_from_home, cam_point_lat, cam_poin
1295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM_POINT(struct transport_tx *trans, struct link_device *dev, uin
1296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM_POINT, "CAM_POIN
1301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cam_point_dist
1302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lat);
1303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lon);
1304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1307:/home/lsk/paparazzi/var/include/messages.h **** }
1308:/home/lsk/paparazzi/var/include/messages.h **** 
1309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_INFO(_trans, _dev, mode, lat, lon, alt, course, photo_nr, dist, next_dist,
1310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_INFO(struct transport_tx *trans, struct link_device *dev, uint8
1311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4
1312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1
1313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1 +2 /* msg header overhead
1314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_INFO, "DC_INFO");
1316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
1317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
1321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
1322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist);
1323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _next_dist);
1324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_x);
1325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_y);
1326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_angle);
1327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _angle);
1328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _last_block);
1329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _count);
1330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _shutter);
1331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1332:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1334:/home/lsk/paparazzi/var/include/messages.h **** }
1335:/home/lsk/paparazzi/var/include/messages.h **** 
1336:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_BARO(_trans, _dev, pBaroRaw, pBaro, pHomePressure, AltOffset, aktuell, 
1337:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_BARO(struct transport_tx *trans, struct link_device *dev, ui
1338:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 
1339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 /* msg heade
1340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4 +2 /* msg header overhead */);
1341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_BARO, "AMSYS_B
1343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pBaroRaw);
1344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pBaro);
1345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pHomePressure);
1346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AltOffset);
1347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _aktuell);
1348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Over_Ground);
1349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tempBaro);
1350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1353:/home/lsk/paparazzi/var/include/messages.h **** }
1354:/home/lsk/paparazzi/var/include/messages.h **** 
1355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_AIRSPEED(_trans, _dev, asRaw, asPresure, asAirspeed, asAirsFilt, asTemp
1356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_AIRSPEED(struct transport_tx *trans, struct link_device *dev
1357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* m
1358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* msg header ov
1359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4 +2 /* msg header overhead */);
1360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_AIRSPEED, "AMS
1362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _asRaw);
1363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asPresure);
1364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirspeed);
1365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirsFilt);
1366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asTemp);
1367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1368:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1370:/home/lsk/paparazzi/var/include/messages.h **** }
1371:/home/lsk/paparazzi/var/include/messages.h **** 
1372:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLIGHT_BENCHMARK(_trans, _dev, SE_As, SE_Alt, SE_Pos, Err_As, Err_Alt, Err_Po
1373:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLIGHT_BENCHMARK(struct transport_tx *trans, struct link_device *d
1374:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
1375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
1376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
1377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLIGHT_BENCHMARK, "F
1379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_As);
1380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Alt);
1381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Pos);
1382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_As);
1383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Alt);
1384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Pos);
1385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1386:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1388:/home/lsk/paparazzi/var/include/messages.h **** }
1389:/home/lsk/paparazzi/var/include/messages.h **** 
1390:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPL3115_BARO(_trans, _dev, pressure, temp, alt) pprz_msg_send_MPL3115_BARO(&(
1391:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPL3115_BARO(struct transport_tx *trans, struct link_device *dev, 
1392:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
1393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
1394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
1395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPL3115_BARO, "MPL31
1397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
1398:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1401:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1403:/home/lsk/paparazzi/var/include/messages.h **** }
1404:/home/lsk/paparazzi/var/include/messages.h **** 
1405:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AOA_ADC(_trans, _dev, adcVal, AOA) pprz_msg_send_AOA_ADC(&((_trans).trans_tx)
1406:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AOA_ADC(struct transport_tx *trans, struct link_device *dev, uint8
1407:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AOA_ADC, "AOA_ADC");
1412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adcVal);
1413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AOA);
1414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1415:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1417:/home/lsk/paparazzi/var/include/messages.h **** }
1418:/home/lsk/paparazzi/var/include/messages.h **** 
1419:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XTEND_RSSI(_trans, _dev, datalink_time, rssi_fade_margin, duty) pprz_msg_send
1420:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XTEND_RSSI(struct transport_tx *trans, struct link_device *dev, ui
1421:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg h
1422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg header overhe
1423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+1+1 +2 /* msg header overhead */);
1424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XTEND_RSSI, "XTEND_R
1426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _datalink_time)
1427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rssi_fade_margi
1428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _duty);
1429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1430:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1432:/home/lsk/paparazzi/var/include/messages.h **** }
1433:/home/lsk/paparazzi/var/include/messages.h **** 
1434:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SUPERBITRF(_trans, _dev, status, cyrf_status, irq_count, rx_packet_count, tx_
1435:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SUPERBITRF(struct transport_tx *trans, struct link_device *dev, ui
1436:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4
1437:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_
1438:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_mfg_id*1 +2 /* msg header 
1439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SUPERBITRF, "SUPERBI
1441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cyrf_status);
1443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _irq_count);
1444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rx_packet_coun
1445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tx_packet_coun
1446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _transfer_timeo
1447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _resync_count);
1448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _uplink_count);
1449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_count);
1450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing1);
1451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing2);
1452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _bind_mfg_id);
1453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_mfg_i
1454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_mfg_id, (void *) _mfg_
1455:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1456:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1458:/home/lsk/paparazzi/var/include/messages.h **** }
1459:/home/lsk/paparazzi/var/include/messages.h **** 
1460:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GX3_INFO(_trans, _dev, GX3_freq, chksm_error, hdr_error, GX3_chksm) pprz_msg_
1461:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GX3_INFO(struct transport_tx *trans, struct link_device *dev, uint
1462:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GX3_INFO, "GX3_INFO"
1467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _GX3_freq);
1468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _chksm_error);
1469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _hdr_error);
1470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _GX3_chksm);
1471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1472:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1474:/home/lsk/paparazzi/var/include/messages.h **** }
1475:/home/lsk/paparazzi/var/include/messages.h **** 
1476:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EXPLAIN(_trans, _dev, type, id, nb_string, string) pprz_msg_send_EXPLAIN(&((_
1477:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EXPLAIN(struct transport_tx *trans, struct link_device *dev, uint8
1478:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1
1479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1 +2 /* msg h
1480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_string*1 +2 /* msg header overhead */);
1481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EXPLAIN, "EXPLAIN");
1483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _type);
1484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id);
1485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_strin
1486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_string, (void *) _stri
1487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1488:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1490:/home/lsk/paparazzi/var/include/messages.h **** }
1491:/home/lsk/paparazzi/var/include/messages.h **** 
1492:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VIDEO_TELEMETRY(_trans, _dev, blob_x1, blob_y1, blob_x2, blob_y2, blob_x3, bl
1493:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VIDEO_TELEMETRY(struct transport_tx *trans, struct link_device *de
1494:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
1495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
1496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
1497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VIDEO_TELEMETRY, "VI
1499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x1);
1500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y1);
1501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x2);
1502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y2);
1503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x3);
1504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y3);
1505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x4);
1506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y4);
1507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1508:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1510:/home/lsk/paparazzi/var/include/messages.h **** }
1511:/home/lsk/paparazzi/var/include/messages.h **** 
1512:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_UPDATE(_trans, _dev, baro, range_meter) pprz_msg_send_VF_UPDATE(&((_trans)
1513:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_UPDATE(struct transport_tx *trans, struct link_device *dev, uin
1514:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_UPDATE, "VF_UPDAT
1519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro);
1520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _range_meter);
1521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1522:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1524:/home/lsk/paparazzi/var/include/messages.h **** }
1525:/home/lsk/paparazzi/var/include/messages.h **** 
1526:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_PREDICT(_trans, _dev, accel) pprz_msg_send_VF_PREDICT(&((_trans).trans_tx)
1527:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_PREDICT(struct transport_tx *trans, struct link_device *dev, ui
1528:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
1529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
1530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
1531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_PREDICT, "VF_PRED
1533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _accel);
1534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1535:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1537:/home/lsk/paparazzi/var/include/messages.h **** }
1538:/home/lsk/paparazzi/var/include/messages.h **** 
1539:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INV_FILTER(_trans, _dev, quat, phi_inv, theta_inv, psi_inv, Vx_inv, Vy_inv, V
1540:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INV_FILTER(struct transport_tx *trans, struct link_device *dev, ui
1541:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
1544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INV_FILTER, "INV_FIL
1546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat);
1547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_inv);
1548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_inv);
1549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_inv);
1550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vx_inv);
1551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vy_inv);
1552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vz_inv);
1553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Px_inv);
1554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Py_inv);
1555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pz_inv);
1556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_phi);
1557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_theta);
1558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_psi);
1559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_as);
1560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_hb);
1561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
1562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_gps);
1563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1564:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1566:/home/lsk/paparazzi/var/include/messages.h **** }
1567:/home/lsk/paparazzi/var/include/messages.h **** 
1568:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MISSION_STATUS(_trans, _dev, remaining_time, nb_task_list, task_list) pprz_ms
1569:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MISSION_STATUS(struct transport_tx *trans, struct link_device *dev
1570:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*
1571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*1 +2 /* msg 
1572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_task_list*1 +2 /* msg header overhead */);
1573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MISSION_STATUS, "MIS
1575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _remaining_time)
1576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_task_
1577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_task_list, (void *) _t
1578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1579:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1581:/home/lsk/paparazzi/var/include/messages.h **** }
1582:/home/lsk/paparazzi/var/include/messages.h **** 
1583:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CROSS_TRACK_ERROR(_trans, _dev, cross_track_error, cte_int) pprz_msg_send_CRO
1584:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CROSS_TRACK_ERROR(struct transport_tx *trans, struct link_device *
1585:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CROSS_TRACK_ERROR, "
1590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cross_track_err
1591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cte_int);
1592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1595:/home/lsk/paparazzi/var/include/messages.h **** }
1596:/home/lsk/paparazzi/var/include/messages.h **** 
1597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GENERIC_COM(_trans, _dev, lat, lon, alt, gspeed, course, airspeed, vsupply, e
1598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GENERIC_COM(struct transport_tx *trans, struct link_device *dev, u
1599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1
1600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /*
1601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /* msg header overhead */);
1602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GENERIC_COM, "GENERI
1604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _alt);
1607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _gspeed);
1608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed);
1610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _vsupply);
1611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _energy);
1612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle);
1613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
1614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nav_block);
1615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
1616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1617:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1619:/home/lsk/paparazzi/var/include/messages.h **** }
1620:/home/lsk/paparazzi/var/include/messages.h **** 
1621:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_SLOT_TM(_trans, _dev, ac_id, mode, slot_east, slot_north, slot_alt)
1622:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_SLOT_TM(struct transport_tx *trans, struct link_device *
1623:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* m
1624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* msg header ov
1625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4 +2 /* msg header overhead */);
1626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_SLOT_TM, "
1628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_east);
1631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_north);
1632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_alt);
1633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1634:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1636:/home/lsk/paparazzi/var/include/messages.h **** }
1637:/home/lsk/paparazzi/var/include/messages.h **** 
1638:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_STATUS_TM(_trans, _dev, ac_id, leader_id, status) pprz_msg_send_FOR
1639:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_STATUS_TM(struct transport_tx *trans, struct link_device
1640:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_STATUS_TM,
1645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _leader_id);
1647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1649:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1651:/home/lsk/paparazzi/var/include/messages.h **** }
1652:/home/lsk/paparazzi/var/include/messages.h **** 
1653:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BMP_STATUS(_trans, _dev, UP, UT, press, temp) pprz_msg_send_BMP_STATUS(&((_tr
1654:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1655:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BMP_STATUS, "BMP_STA
1660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
1661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
1662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _temp);
1664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1665:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1667:/home/lsk/paparazzi/var/include/messages.h **** }
1668:/home/lsk/paparazzi/var/include/messages.h **** 
1669:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_STATUS(_trans, _dev, itemp_case, temp_case, itemp_obj, temp_obj) pprz_msg
1670:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1671:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg
1672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg header over
1673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+2+4 +2 /* msg header overhead */);
1674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_STATUS, "MLX_STA
1676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_case);
1677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_case);
1678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_obj);
1679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_obj);
1680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1681:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1683:/home/lsk/paparazzi/var/include/messages.h **** }
1684:/home/lsk/paparazzi/var/include/messages.h **** 
1685:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TMP_STATUS(_trans, _dev, itemp, temp) pprz_msg_send_TMP_STATUS(&((_trans).tra
1686:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1687:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TMP_STATUS, "TMP_STA
1692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1695:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1697:/home/lsk/paparazzi/var/include/messages.h **** }
1698:/home/lsk/paparazzi/var/include/messages.h **** 
1699:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WIND_INFO_RET(_trans, _dev, east, north, airspeed) pprz_msg_send_WIND_INFO_RE
1700:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WIND_INFO_RET(struct transport_tx *trans, struct link_device *dev,
1701:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
1702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
1703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
1704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WIND_INFO_RET, "WIND
1706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
1707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
1708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1709:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1710:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1712:/home/lsk/paparazzi/var/include/messages.h **** }
1713:/home/lsk/paparazzi/var/include/messages.h **** 
1714:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SCP_STATUS(_trans, _dev, press, temp) pprz_msg_send_SCP_STATUS(&((_trans).tra
1715:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SCP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1716:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg hea
1717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg header overhead
1718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2 +2 /* msg header overhead */);
1719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SCP_STATUS, "SCP_STA
1721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1724:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1726:/home/lsk/paparazzi/var/include/messages.h **** }
1727:/home/lsk/paparazzi/var/include/messages.h **** 
1728:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_STATUS
1729:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1730:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_STATUS, "SHT_STA
1735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
1736:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
1738:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1739:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1740:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1742:/home/lsk/paparazzi/var/include/messages.h **** }
1743:/home/lsk/paparazzi/var/include/messages.h **** 
1744:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENOSE_STATUS(_trans, _dev, val1, val2, val3, PID, nb_heat, heat) pprz_msg_sen
1745:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENOSE_STATUS(struct transport_tx *trans, struct link_device *dev, 
1746:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat
1747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat*1 +2 /* msg
1748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+nb_heat*1 +2 /* msg header overhead */);
1749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENOSE_STATUS, "ENOSE
1751:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
1752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
1753:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
1754:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PID);
1755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_heat)
1756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_heat, (void *) _heat);
1757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1758:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1760:/home/lsk/paparazzi/var/include/messages.h **** }
1761:/home/lsk/paparazzi/var/include/messages.h **** 
1762:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DPICCO_STATUS(_trans, _dev, humid, temp, fhumid, ftemp) pprz_msg_send_DPICCO_
1763:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DPICCO_STATUS(struct transport_tx *trans, struct link_device *dev,
1764:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DPICCO_STATUS, "DPIC
1769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1774:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1776:/home/lsk/paparazzi/var/include/messages.h **** }
1777:/home/lsk/paparazzi/var/include/messages.h **** 
1778:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_DEBUG(_trans, _dev, mag_xraw, mag_yraw, mag_xcal, mag_ycal, mag_headi
1779:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_DEBUG(struct transport_tx *trans, struct link_device *dev,
1780:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1
1781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1 +2 /* msg h
1782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1+1 +2 /* msg header overhead */);
1783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_DEBUG, "ANTE
1785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_xraw);
1786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_yraw);
1787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_xcal);
1788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_ycal);
1789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_heading);
1790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_magnitude);
1791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_temp);
1792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_distor);
1793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_cal_status)
1794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1797:/home/lsk/paparazzi/var/include/messages.h **** }
1798:/home/lsk/paparazzi/var/include/messages.h **** 
1799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_STATUS(_trans, _dev, azim_sp, elev_sp, id_sp, mode) pprz_msg_send_ANT
1800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_STATUS(struct transport_tx *trans, struct link_device *dev
1801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg
1802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg header over
1803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+1 +2 /* msg header overhead */);
1804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_STATUS, "ANT
1806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _azim_sp);
1807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _elev_sp);
1808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id_sp);
1809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1813:/home/lsk/paparazzi/var/include/messages.h **** }
1814:/home/lsk/paparazzi/var/include/messages.h **** 
1815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATUS(_trans, _dev, time_ticks, throttle, rpm, current, thrust, 
1816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATUS(struct transport_tx *trans, struct link_device 
1817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +
1818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +2 /* msg hea
1819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+2+1 +2 /* msg header overhead */);
1820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATUS, 
1822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time_ticks);
1823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
1824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
1825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _current);
1826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _thrust);
1827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _torque);
1828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _time_s);
1829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1831:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1833:/home/lsk/paparazzi/var/include/messages.h **** }
1834:/home/lsk/paparazzi/var/include/messages.h **** 
1835:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATIC(_trans, _dev, av_rpm, av_thrust, av_current, throttle) ppr
1836:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATIC(struct transport_tx *trans, struct link_device 
1837:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATIC, 
1842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_rpm);
1843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_thrust);
1844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_current);
1845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
1846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1847:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1849:/home/lsk/paparazzi/var/include/messages.h **** }
1850:/home/lsk/paparazzi/var/include/messages.h **** 
1851:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HIH_STATUS(_trans, _dev, humid, fhumid, ftemp) pprz_msg_send_HIH_STATUS(&((_t
1852:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HIH_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1853:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HIH_STATUS, "HIH_STA
1858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1864:/home/lsk/paparazzi/var/include/messages.h **** }
1865:/home/lsk/paparazzi/var/include/messages.h **** 
1866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMT_STATUS(_trans, _dev, light, f_light) pprz_msg_send_TEMT_STATUS(&((_trans
1867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMT_STATUS(struct transport_tx *trans, struct link_device *dev, u
1868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMT_STATUS, "TEMT_S
1873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _light);
1874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f_light);
1875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1876:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1878:/home/lsk/paparazzi/var/include/messages.h **** }
1879:/home/lsk/paparazzi/var/include/messages.h **** 
1880:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GP2Y_STATUS(_trans, _dev, idensity, density) pprz_msg_send_GP2Y_STATUS(&((_tr
1881:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GP2Y_STATUS(struct transport_tx *trans, struct link_device *dev, u
1882:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GP2Y_STATUS, "GP2Y_S
1887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _idensity);
1888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _density);
1889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1892:/home/lsk/paparazzi/var/include/messages.h **** }
1893:/home/lsk/paparazzi/var/include/messages.h **** 
1894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_SHT_I2C_SERIAL(&
1895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_SERIAL(struct transport_tx *trans, struct link_device *dev
1896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_SERIAL, "SHT
1901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
1902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
1903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1904:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1906:/home/lsk/paparazzi/var/include/messages.h **** }
1907:/home/lsk/paparazzi/var/include/messages.h **** 
1908:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPM(_trans, _dev, ppm_rate, nb_values, values) pprz_msg_send_PPM(&((_trans).t
1909:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPM(struct transport_tx *trans, struct link_device *dev, uint8_t a
1910:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1911:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1912:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1913:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1914:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPM, "PPM");
1915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
1916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1919:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1921:/home/lsk/paparazzi/var/include/messages.h **** }
1922:/home/lsk/paparazzi/var/include/messages.h **** 
1923:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC(_trans, _dev, nb_values, values) pprz_msg_send_RC(&((_trans).trans_tx), &(
1924:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC(struct transport_tx *trans, struct link_device *dev, uint8_t ac
1925:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC, "RC");
1930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1933:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1935:/home/lsk/paparazzi/var/include/messages.h **** }
1936:/home/lsk/paparazzi/var/include/messages.h **** 
1937:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_COMMANDS(_trans, _dev, nb_values, values) pprz_msg_send_COMMANDS(&((_trans).t
1938:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_COMMANDS(struct transport_tx *trans, struct link_device *dev, uint
1939:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_COMMANDS, "COMMANDS"
1944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1947:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1949:/home/lsk/paparazzi/var/include/messages.h **** }
1950:/home/lsk/paparazzi/var/include/messages.h **** 
1951:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FBW_STATUS(_trans, _dev, rc_status, frame_rate, mode, vsupply, current) pprz_
1952:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FBW_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1953:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* m
1954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* msg header ov
1955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+2+4 +2 /* msg header overhead */);
1956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FBW_STATUS, "FBW_STA
1958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rc_status);
1959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _frame_rate);
1960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
1962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
1963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1964:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1966:/home/lsk/paparazzi/var/include/messages.h **** }
1967:/home/lsk/paparazzi/var/include/messages.h **** 
1968:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC(_trans, _dev, mcu, nb_values, values) pprz_msg_send_ADC(&((_trans).trans_
1969:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC(struct transport_tx *trans, struct link_device *dev, uint8_t a
1970:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC, "ADC");
1975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu);
1976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1979:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1981:/home/lsk/paparazzi/var/include/messages.h **** }
1982:/home/lsk/paparazzi/var/include/messages.h **** 
1983:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ACTUATORS(_trans, _dev, nb_values, values) pprz_msg_send_ACTUATORS(&((_trans)
1984:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ACTUATORS(struct transport_tx *trans, struct link_device *dev, uin
1985:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ACTUATORS, "ACTUATOR
1990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1993:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1995:/home/lsk/paparazzi/var/include/messages.h **** }
1996:/home/lsk/paparazzi/var/include/messages.h **** 
1997:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_SHOT(_trans, _dev, photo_nr, lat, lon, alt, hmsl, phi, theta, psi, course,
1998:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_SHOT(struct transport_tx *trans, struct link_device *dev, uint8
1999:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2
2000:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* m
2001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* msg header overhead */);
2002:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2003:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_SHOT, "DC_SHOT");
2004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
2005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
2010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
2011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _psi);
2012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
2013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
2014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
2015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2018:/home/lsk/paparazzi/var/include/messages.h **** }
2019:/home/lsk/paparazzi/var/include/messages.h **** 
2020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_BOARD_RESULTS(_trans, _dev, uart, ppm, nb_servo, servo) pprz_msg_send_TE
2021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_BOARD_RESULTS(struct transport_tx *trans, struct link_device 
2022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 
2023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 +2 /* msg he
2024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_servo*2 +2 /* msg header overhead */);
2025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_BOARD_RESULTS, 
2027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _uart);
2028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm);
2029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_servo
2030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_servo, (void *) _serv
2031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2032:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2034:/home/lsk/paparazzi/var/include/messages.h **** }
2035:/home/lsk/paparazzi/var/include/messages.h **** 
2036:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_MLX_SERIAL(&((_trans
2037:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_SERIAL(struct transport_tx *trans, struct link_device *dev, ui
2038:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
2039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
2040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
2041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_SERIAL, "MLX_SER
2043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
2044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
2045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2048:/home/lsk/paparazzi/var/include/messages.h **** }
2049:/home/lsk/paparazzi/var/include/messages.h **** 
2050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PAYLOAD(_trans, _dev, nb_values, values) pprz_msg_send_PAYLOAD(&((_trans).tra
2051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PAYLOAD(struct transport_tx *trans, struct link_device *dev, uint8
2052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 
2053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 /* msg heade
2054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*1 +2 /* msg header overhead */);
2055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PAYLOAD, "PAYLOAD");
2057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
2058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_values, (void *) _valu
2059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2060:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2062:/home/lsk/paparazzi/var/include/messages.h **** }
2063:/home/lsk/paparazzi/var/include/messages.h **** 
2064:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HTM_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_HTM_STATUS
2065:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HTM_STATUS(struct transport_tx *trans, struct link_device *dev, ui
2066:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HTM_STATUS, "HTM_STA
2071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2076:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2078:/home/lsk/paparazzi/var/include/messages.h **** }
2079:/home/lsk/paparazzi/var/include/messages.h **** 
2080:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5611(_trans, _dev, d1, d2, pressure, temp) pprz_msg_send_BARO_MS5611(&
2081:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5611(struct transport_tx *trans, struct link_device *dev, u
2082:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5611, "BARO_M
2087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d1);
2088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d2);
2089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
2090:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2092:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2093:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2094:/home/lsk/paparazzi/var/include/messages.h **** }
2095:/home/lsk/paparazzi/var/include/messages.h **** 
2096:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MS5611_COEFF(_trans, _dev, c0, c1, c2, c3, c4, c5, c6, c7) pprz_msg_send_MS56
2097:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MS5611_COEFF(struct transport_tx *trans, struct link_device *dev, 
2098:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +
2099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +2 /* msg hea
2100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MS5611_COEFF, "MS561
2103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c0);
2104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c1);
2105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c2);
2106:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c3);
2107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c4);
2108:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c5);
2109:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c6);
2110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c7);
2111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2112:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2114:/home/lsk/paparazzi/var/include/messages.h **** }
2115:/home/lsk/paparazzi/var/include/messages.h **** 
2116:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATMOSPHERE_CHARGE(_trans, _dev, t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) pprz_
2117:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATMOSPHERE_CHARGE(struct transport_tx *trans, struct link_device *
2118:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg
2120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATMOSPHERE_CHARGE, "
2123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t0);
2124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t1);
2125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t2);
2126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t3);
2127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t4);
2128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t5);
2129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t6);
2130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t7);
2131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t8);
2132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t9);
2133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2134:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2136:/home/lsk/paparazzi/var/include/messages.h **** }
2137:/home/lsk/paparazzi/var/include/messages.h **** 
2138:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SOLAR_RADIATION(_trans, _dev, up_t0, dn_t0, up_t1, dn_t1, up_t2, dn_t2, up_t3
2139:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SOLAR_RADIATION(struct transport_tx *trans, struct link_device *de
2140:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
2142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg heade
2143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SOLAR_RADIATION, "SO
2145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t0);
2146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t0);
2147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t1);
2148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t1);
2149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t2);
2150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t2);
2151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t3);
2152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t3);
2153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t4);
2154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t4);
2155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t5);
2156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t5);
2157:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t6);
2158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t6);
2159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t7);
2160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t7);
2161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t8);
2162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t8);
2163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t9);
2164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t9);
2165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2166:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2168:/home/lsk/paparazzi/var/include/messages.h **** }
2169:/home/lsk/paparazzi/var/include/messages.h **** 
2170:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_TA(_trans, _dev, ac_id) pprz_msg_send_TCAS_TA(&((_trans).trans_tx), &((_
2171:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_TA(struct transport_tx *trans, struct link_device *dev, uint8
2172:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2175:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2176:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_TA, "TCAS_TA");
2177:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2178:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2179:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2181:/home/lsk/paparazzi/var/include/messages.h **** }
2182:/home/lsk/paparazzi/var/include/messages.h **** 
2183:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RA(_trans, _dev, ac_id, resolve) pprz_msg_send_TCAS_RA(&((_trans).trans_
2184:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RA(struct transport_tx *trans, struct link_device *dev, uint8
2185:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg hea
2186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg header overhead
2187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1 +2 /* msg header overhead */);
2188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RA, "TCAS_RA");
2190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _resolve);
2192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2193:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2195:/home/lsk/paparazzi/var/include/messages.h **** }
2196:/home/lsk/paparazzi/var/include/messages.h **** 
2197:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RESOLVED(_trans, _dev, ac_id) pprz_msg_send_TCAS_RESOLVED(&((_trans).tra
2198:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RESOLVED(struct transport_tx *trans, struct link_device *dev,
2199:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RESOLVED, "TCAS
2204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2206:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2208:/home/lsk/paparazzi/var/include/messages.h **** }
2209:/home/lsk/paparazzi/var/include/messages.h **** 
2210:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_DEBUG(_trans, _dev, ac_id, tau) pprz_msg_send_TCAS_DEBUG(&((_trans).tran
2211:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
2212:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
2213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
2214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
2215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_DEBUG, "TCAS_DE
2217:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tau);
2219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2220:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2222:/home/lsk/paparazzi/var/include/messages.h **** }
2223:/home/lsk/paparazzi/var/include/messages.h **** 
2224:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_POTENTIAL(_trans, _dev, east, north, alt, speed, climb) pprz_msg_send_POTENTI
2225:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_POTENTIAL(struct transport_tx *trans, struct link_device *dev, uin
2226:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
2227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
2228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
2229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_POTENTIAL, "POTENTIA
2231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
2232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
2233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
2234:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed);
2235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
2236:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2237:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2238:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2239:/home/lsk/paparazzi/var/include/messages.h **** }
2240:/home/lsk/paparazzi/var/include/messages.h **** 
2241:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERTICAL_ENERGY(_trans, _dev, Epot_err, Ekin_err, Etot_err, Edis_err, throttl
2242:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERTICAL_ENERGY(struct transport_tx *trans, struct link_device *de
2243:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERTICAL_ENERGY, "VE
2248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Epot_err);
2249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Ekin_err);
2250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Etot_err);
2251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Edis_err);
2252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
2253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _nav_pitch);
2254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed_sp);
2255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2256:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2258:/home/lsk/paparazzi/var/include/messages.h **** }
2259:/home/lsk/paparazzi/var/include/messages.h **** 
2260:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_TCOUPLE(_trans, _dev, fval0, fval1, fval2, fval3, fref0, fref1, fref2, f
2261:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_TCOUPLE(struct transport_tx *trans, struct link_device *dev, 
2262:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2
2263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2
2264:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2+2 +2 /* msg header overhe
2265:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2266:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_TCOUPLE, "TEMP_
2267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval0);
2268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval1);
2269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval2);
2270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval3);
2271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref0);
2272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref1);
2273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref2);
2274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref3);
2275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val0);
2276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
2277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
2278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
2279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref0);
2280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref1);
2281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref2);
2282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref3);
2283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2284:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2286:/home/lsk/paparazzi/var/include/messages.h **** }
2287:/home/lsk/paparazzi/var/include/messages.h **** 
2288:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_I2
2289:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_STATUS(struct transport_tx *trans, struct link_device *dev
2290:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2292:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2293:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_STATUS, "SHT
2295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2302:/home/lsk/paparazzi/var/include/messages.h **** }
2303:/home/lsk/paparazzi/var/include/messages.h **** 
2304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAMERA_SNAPSHOT(_trans, _dev, snapshot_image_number) pprz_msg_send_CAMERA_SNA
2305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAMERA_SNAPSHOT(struct transport_tx *trans, struct link_device *de
2306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
2307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
2308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
2309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAMERA_SNAPSHOT, "CA
2311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _snapshot_image
2312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2313:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2315:/home/lsk/paparazzi/var/include/messages.h **** }
2316:/home/lsk/paparazzi/var/include/messages.h **** 
2317:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TIMESTAMP(_trans, _dev, timestamp) pprz_msg_send_TIMESTAMP(&((_trans).trans_t
2318:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TIMESTAMP(struct transport_tx *trans, struct link_device *dev, uin
2319:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
2320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
2321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
2322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TIMESTAMP, "TIMESTAM
2324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timestamp);
2325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2326:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2328:/home/lsk/paparazzi/var/include/messages.h **** }
2329:/home/lsk/paparazzi/var/include/messages.h **** 
2330:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_FLOAT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, es
2331:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_FLOAT(struct transport_tx *trans, struct link_device
2332:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* m
2335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_FLOAT,
2337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2356:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p_d);
2359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q_d);
2360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r_d);
2361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2362:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2364:/home/lsk/paparazzi/var/include/messages.h **** }
2365:/home/lsk/paparazzi/var/include/messages.h **** 
2366:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_SCALED(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_SCALED(&((_t
2367:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_SCALED(struct transport_tx *trans, struct link_device *de
2368:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_SCALED, "IM
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2377:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2379:/home/lsk/paparazzi/var/include/messages.h **** }
2380:/home/lsk/paparazzi/var/include/messages.h **** 
2381:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_SCALED(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_SCALED(&((
2382:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_SCALED(struct transport_tx *trans, struct link_device *d
2383:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_SCALED, "I
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
2389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
2390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
2391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2392:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2394:/home/lsk/paparazzi/var/include/messages.h **** }
2395:/home/lsk/paparazzi/var/include/messages.h **** 
2396:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_SCALED(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_SCALED(&((_tra
2397:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_SCALED(struct transport_tx *trans, struct link_device *dev
2398:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2401:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SCALED, "IMU
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
2404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
2405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
2406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2407:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2409:/home/lsk/paparazzi/var/include/messages.h **** }
2410:/home/lsk/paparazzi/var/include/messages.h **** 
2411:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER(_trans, _dev, phi, theta, psi, measure_phi, measure_theta, measure_psi
2412:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER(struct transport_tx *trans, struct link_device *dev, uint8_
2413:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER, "FILTER");
2418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_phi);
2422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_theta);
2423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_psi);
2424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_phi);
2425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_theta
2426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_psi);
2427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_phi)
2428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_thet
2429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_psi)
2430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
2431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
2432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
2433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2434:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2435:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2436:/home/lsk/paparazzi/var/include/messages.h **** }
2437:/home/lsk/paparazzi/var/include/messages.h **** 
2438:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER2(_trans, _dev, px, py, pz, gsx, gsy, gsz) pprz_msg_send_FILTER2(&((_tr
2439:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER2(struct transport_tx *trans, struct link_device *dev, uint8
2440:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER2, "FILTER2");
2445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _px);
2446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _py);
2447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pz);
2448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsx);
2449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsy);
2450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsz);
2451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2452:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2454:/home/lsk/paparazzi/var/include/messages.h **** }
2455:/home/lsk/paparazzi/var/include/messages.h **** 
2456:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RATE_LOOP(_trans, _dev, sp_p, sp_q, sp_r, ref_p, ref_q, ref_r, refdot_p, refd
2457:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RATE_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2458:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header 
2461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RATE_LOOP, "RATE_LOO
2463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_p);
2464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_q);
2465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_r);
2466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_p);
2470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_q);
2471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_r);
2472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_p);
2473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_q);
2474:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_r);
2475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_p);
2476:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_q);
2477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_r);
2478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_p);
2479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_q);
2480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_r);
2481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2483:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2485:/home/lsk/paparazzi/var/include/messages.h **** }
2486:/home/lsk/paparazzi/var/include/messages.h **** 
2487:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_ALIGNER(_trans, _dev, lp_gp, lp_gq, lp_gr, gp, gq, gr, noise, cnt, sta
2488:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_ALIGNER(struct transport_tx *trans, struct link_device *dev
2489:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1
2490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1 +2 /* msg h
2491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
2492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_ALIGNER, "FIL
2494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gp);
2495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gq);
2496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gr);
2497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _noise);
2501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cnt);
2502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2504:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2506:/home/lsk/paparazzi/var/include/messages.h **** }
2507:/home/lsk/paparazzi/var/include/messages.h **** 
2508:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_MS45XX(_trans, _dev, diffPress, temperature, airspeed) pprz_msg_send
2509:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_MS45XX(struct transport_tx *trans, struct link_device *de
2510:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
2511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
2512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
2513:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_MS45XX, "AI
2515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diffPress);
2516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temperature);
2517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
2518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2519:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2521:/home/lsk/paparazzi/var/include/messages.h **** }
2522:/home/lsk/paparazzi/var/include/messages.h **** 
2523:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_COR(_trans, _dev, mphi, mtheta, mpsi, qi, qx, qy, qz) pprz_msg_send_FI
2524:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_COR(struct transport_tx *trans, struct link_device *dev, ui
2525:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_COR, "FILTER_
2530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mphi);
2531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mtheta);
2532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mpsi);
2533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qi);
2534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qx);
2535:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qy);
2536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qz);
2537:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2538:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2540:/home/lsk/paparazzi/var/include/messages.h **** }
2541:/home/lsk/paparazzi/var/include/messages.h **** 
2542:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_INT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, est_
2543:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_INT(struct transport_tx *trans, struct link_device *
2544:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg hea
2547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_INT, "
2549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2571:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2573:/home/lsk/paparazzi/var/include/messages.h **** }
2574:/home/lsk/paparazzi/var/include/messages.h **** 
2575:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_INT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_th
2576:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_INT(struct transport_tx *trans, struct link_devi
2577:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2581:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_IN
2582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2583:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2595:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2597:/home/lsk/paparazzi/var/include/messages.h **** }
2598:/home/lsk/paparazzi/var/include/messages.h **** 
2599:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_FLOAT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_
2600:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_FLOAT(struct transport_tx *trans, struct link_de
2601:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_FL
2606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2619:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2621:/home/lsk/paparazzi/var/include/messages.h **** }
2622:/home/lsk/paparazzi/var/include/messages.h **** 
2623:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CMD(_trans, _dev, cmd_roll, cmd_pitch, cmd_yaw, cmd_thrust) pprz_m
2624:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CMD(struct transport_tx *trans, struct link_device *dev
2625:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CMD, "ROT
2630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2635:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2637:/home/lsk/paparazzi/var/include/messages.h **** }
2638:/home/lsk/paparazzi/var/include/messages.h **** 
2639:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_INT(_trans, _dev, sp_x, sp_y, ref_x, ref_y, est_x, est_y) pprz_msg
2640:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_INT(struct transport_tx *trans, struct link_device *dev
2641:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_INT, "GUI
2646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2649:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2653:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2655:/home/lsk/paparazzi/var/include/messages.h **** }
2656:/home/lsk/paparazzi/var/include/messages.h **** 
2657:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERT_LOOP(_trans, _dev, z_sp, zd_sp, est_z, est_zd, est_zdd, ref_z, ref_zd, r
2658:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERT_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2659:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERT_LOOP, "VERT_LOO
2664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
2665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _zd_sp);
2666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
2667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zd);
2668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zdd);
2669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
2670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
2671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zdd);
2672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_inv_m);
2673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_cov);
2674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_meas);
2675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err);
2676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_cmd);
2677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_cmd);
2678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2680:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2682:/home/lsk/paparazzi/var/include/messages.h **** }
2683:/home/lsk/paparazzi/var/include/messages.h **** 
2684:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HOVER_LOOP(_trans, _dev, sp_x, sp_y, est_x, est_y, est_xd, est_yd, est_xdd, e
2685:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HOVER_LOOP(struct transport_tx *trans, struct link_device *dev, ui
2686:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
2689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HOVER_LOOP, "HOVER_L
2691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xd);
2696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_yd);
2697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xdd);
2698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_ydd);
2699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_x);
2700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_y);
2701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_xd);
2702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_yd);
2703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_x);
2704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_y);
2705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_x);
2706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_y);
2707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_heading);
2708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2709:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2711:/home/lsk/paparazzi/var/include/messages.h **** }
2712:/home/lsk/paparazzi/var/include/messages.h **** 
2713:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_FP(_trans, _dev, east, north, up, veast, vnorth, vup, phi, theta, 
2714:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_FP(struct transport_tx *trans, struct link_device *dev,
2715:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2
2717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2 +2 /* msg header overhead
2718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_FP, "ROTO
2720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
2721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
2722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
2723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _veast);
2724:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vnorth);
2725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vup);
2726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_east);
2730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_north);
2731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_up);
2732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_psi);
2733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _thrust);
2734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
2735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2738:/home/lsk/paparazzi/var/include/messages.h **** }
2739:/home/lsk/paparazzi/var/include/messages.h **** 
2740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_ADC(_trans, _dev, temp1, temp2, temp3) pprz_msg_send_TEMP_ADC(&((_trans)
2741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_ADC(struct transport_tx *trans, struct link_device *dev, uint
2742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_ADC, "TEMP_ADC"
2747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp1);
2748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp2);
2749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp3);
2750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2753:/home/lsk/paparazzi/var/include/messages.h **** }
2754:/home/lsk/paparazzi/var/include/messages.h **** 
2755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_REF_INT(_trans, _dev, sp_x, ref_x, sp_xd, ref_xd, ref_xdd, sp_y, r
2756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_REF_INT(struct transport_tx *trans, struct link_device 
2757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
 761              		.loc 3 2757 0
 762 0004 076A     		ldr	r7, [r0, #32]
 763 0006 D0F80480 		ldr	r8, [r0, #4]
 764 000a 0368     		ldr	r3, [r0]
 765              	.LBE7:
 766              	.LBE6:
 145:firmwares/rotorcraft/guidance/guidance_h.c **** {
 767              		.loc 2 145 0
 768 000c 87B0     		sub	sp, sp, #28
 769              		.cfi_def_cfa_offset 64
 770 000e 0126     		movs	r6, #1
 145:firmwares/rotorcraft/guidance/guidance_h.c **** {
 771              		.loc 2 145 0
 772 0010 0D46     		mov	r5, r1
 773              	.LVL38:
 774 0012 0446     		mov	r4, r0
 775              	.LBB9:
 776              	.LBB8:
 777              		.loc 3 2757 0
 778 0014 2A21     		movs	r1, #42
 779              	.LVL39:
 780 0016 8DF81760 		strb	r6, [sp, #23]
 781              	.LVL40:
 782 001a 3846     		mov	r0, r7
 783              	.LVL41:
 784 001c 9847     		blx	r3
 785              	.LVL42:
 786 001e 2946     		mov	r1, r5
 787 0020 0246     		mov	r2, r0
 788 0022 3846     		mov	r0, r7
 789 0024 C047     		blx	r8
 790              	.LVL43:
 791 0026 0028     		cmp	r0, #0
 792 0028 00F09480 		beq	.L55
2758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
 793              		.loc 3 2758 0
 794 002c 276A     		ldr	r7, [r4, #32]
 795 002e 2368     		ldr	r3, [r4]
 796 0030 D4F81C80 		ldr	r8, [r4, #28]
2759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_REF_INT, 
2762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
 797              		.loc 3 2762 0
 798 0034 DFF83091 		ldr	r9, .L58+4
2763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_xd);
 799              		.loc 3 2764 0
 800 0038 DFF830A1 		ldr	r10, .L58+8
2765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xd);
 801              		.loc 3 2765 0
 802 003c DFF830B1 		ldr	fp, .L58+12
2758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
 803              		.loc 3 2758 0
 804 0040 3846     		mov	r0, r7
 805 0042 2A21     		movs	r1, #42
 806 0044 9847     		blx	r3
 807              	.LVL44:
 808 0046 2946     		mov	r1, r5
 809 0048 0246     		mov	r2, r0
 810 004a 3846     		mov	r0, r7
 811 004c C047     		blx	r8
 812              	.LVL45:
2759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 813              		.loc 3 2759 0
 814 004e 2369     		ldr	r3, [r4, #16]
 815 0050 206A     		ldr	r0, [r4, #32]
2763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
 816              		.loc 3 2763 0
 817 0052 DFF82081 		ldr	r8, .L58+16
2759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 818              		.loc 3 2759 0
 819 0056 2946     		mov	r1, r5
 820 0058 2A22     		movs	r2, #42
 821 005a 9847     		blx	r3
 822              	.LVL46:
2760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 823              		.loc 3 2760 0
 824 005c 0DF11703 		add	r3, sp, #23
 825 0060 0096     		str	r6, [sp]
 826 0062 0193     		str	r3, [sp, #4]
 827 0064 A668     		ldr	r6, [r4, #8]
 828 0066 206A     		ldr	r0, [r4, #32]
 829 0068 2946     		mov	r1, r5
 830 006a 0222     		movs	r2, #2
 831 006c 0023     		movs	r3, #0
 832 006e B047     		blx	r6
 833              	.LVL47:
2761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_REF_INT, 
 834              		.loc 3 2761 0
 835 0070 9523     		movs	r3, #149
 836 0072 0093     		str	r3, [sp]
 837 0074 3B4B     		ldr	r3, .L58
 838 0076 0193     		str	r3, [sp, #4]
 839 0078 E668     		ldr	r6, [r4, #12]
 840 007a 206A     		ldr	r0, [r4, #32]
 841 007c 2946     		mov	r1, r5
 842 007e 0222     		movs	r2, #2
 843 0080 0023     		movs	r3, #0
 844 0082 B047     		blx	r6
 845              	.LVL48:
2762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
 846              		.loc 3 2762 0
 847 0084 0426     		movs	r6, #4
 848 0086 0096     		str	r6, [sp]
 849 0088 A768     		ldr	r7, [r4, #8]
 850 008a 206A     		ldr	r0, [r4, #32]
 851 008c CDF80490 		str	r9, [sp, #4]
 852 0090 2946     		mov	r1, r5
 853 0092 0722     		movs	r2, #7
 854 0094 0023     		movs	r3, #0
 855 0096 B847     		blx	r7
 856              	.LVL49:
2763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
 857              		.loc 3 2763 0
 858 0098 0096     		str	r6, [sp]
 859 009a A768     		ldr	r7, [r4, #8]
 860 009c 206A     		ldr	r0, [r4, #32]
 861 009e CDF80480 		str	r8, [sp, #4]
 862 00a2 2946     		mov	r1, r5
 863 00a4 0722     		movs	r2, #7
 864 00a6 0023     		movs	r3, #0
 865 00a8 B847     		blx	r7
 866              	.LVL50:
2764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_xd);
 867              		.loc 3 2764 0
 868 00aa 0096     		str	r6, [sp]
 869 00ac A768     		ldr	r7, [r4, #8]
 870 00ae 206A     		ldr	r0, [r4, #32]
 871 00b0 CDF804A0 		str	r10, [sp, #4]
 872 00b4 2946     		mov	r1, r5
 873 00b6 0722     		movs	r2, #7
 874 00b8 0023     		movs	r3, #0
 875 00ba B847     		blx	r7
 876              	.LVL51:
 877              		.loc 3 2765 0
 878 00bc 0096     		str	r6, [sp]
 879 00be A768     		ldr	r7, [r4, #8]
 880 00c0 206A     		ldr	r0, [r4, #32]
 881 00c2 CDF804B0 		str	fp, [sp, #4]
 882 00c6 2946     		mov	r1, r5
 883 00c8 0722     		movs	r2, #7
 884 00ca 0023     		movs	r3, #0
 885 00cc B847     		blx	r7
 886              	.LVL52:
2766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xdd);
 887              		.loc 3 2766 0
 888 00ce DFF8A8C0 		ldr	ip, .L58+20
 889 00d2 CDF804C0 		str	ip, [sp, #4]
 890 00d6 CDF80CC0 		str	ip, [sp, #12]
 891 00da 0096     		str	r6, [sp]
 892 00dc 206A     		ldr	r0, [r4, #32]
 893 00de A768     		ldr	r7, [r4, #8]
 894 00e0 2946     		mov	r1, r5
 895 00e2 0722     		movs	r2, #7
 896 00e4 0023     		movs	r3, #0
 897 00e6 B847     		blx	r7
 898              	.LVL53:
2767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
 899              		.loc 3 2767 0
 900 00e8 09EB0603 		add	r3, r9, r6
 901 00ec 0096     		str	r6, [sp]
 902 00ee 0193     		str	r3, [sp, #4]
 903 00f0 206A     		ldr	r0, [r4, #32]
 904 00f2 A768     		ldr	r7, [r4, #8]
 905 00f4 2946     		mov	r1, r5
 906 00f6 0722     		movs	r2, #7
 907 00f8 0023     		movs	r3, #0
 908 00fa B847     		blx	r7
 909              	.LVL54:
2768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
 910              		.loc 3 2768 0
 911 00fc 08EB0603 		add	r3, r8, r6
 912 0100 0096     		str	r6, [sp]
 913 0102 0193     		str	r3, [sp, #4]
 914 0104 206A     		ldr	r0, [r4, #32]
 915 0106 A768     		ldr	r7, [r4, #8]
 916 0108 2946     		mov	r1, r5
 917 010a 0722     		movs	r2, #7
 918 010c 0023     		movs	r3, #0
 919 010e B847     		blx	r7
 920              	.LVL55:
2769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_yd);
 921              		.loc 3 2769 0
 922 0110 0AEB0603 		add	r3, r10, r6
 923 0114 0096     		str	r6, [sp]
 924 0116 0193     		str	r3, [sp, #4]
 925 0118 206A     		ldr	r0, [r4, #32]
 926 011a A768     		ldr	r7, [r4, #8]
 927 011c 2946     		mov	r1, r5
 928 011e 0722     		movs	r2, #7
 929 0120 0023     		movs	r3, #0
 930 0122 B847     		blx	r7
 931              	.LVL56:
2770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_yd);
 932              		.loc 3 2770 0
 933 0124 0BEB0603 		add	r3, fp, r6
 934 0128 0096     		str	r6, [sp]
 935 012a 0193     		str	r3, [sp, #4]
 936 012c 206A     		ldr	r0, [r4, #32]
 937 012e A768     		ldr	r7, [r4, #8]
 938 0130 2946     		mov	r1, r5
 939 0132 0722     		movs	r2, #7
 940 0134 0023     		movs	r3, #0
 941 0136 B847     		blx	r7
 942              	.LVL57:
2771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_ydd);
 943              		.loc 3 2771 0
 944 0138 DDF80CC0 		ldr	ip, [sp, #12]
 945 013c 0096     		str	r6, [sp]
 946 013e 0CEB0603 		add	r3, ip, r6
 947 0142 0193     		str	r3, [sp, #4]
 948 0144 A668     		ldr	r6, [r4, #8]
 949 0146 206A     		ldr	r0, [r4, #32]
 950 0148 0023     		movs	r3, #0
 951 014a 2946     		mov	r1, r5
 952 014c 0722     		movs	r2, #7
 953 014e B047     		blx	r6
 954              	.LVL58:
2772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 955              		.loc 3 2772 0
 956 0150 6369     		ldr	r3, [r4, #20]
 957 0152 00E0     		b	.L57
 958              	.L55:
2773:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 959              		.loc 3 2774 0
 960 0154 A369     		ldr	r3, [r4, #24]
 961              	.L57:
 962 0156 206A     		ldr	r0, [r4, #32]
 963 0158 2946     		mov	r1, r5
 964 015a 9847     		blx	r3
 965              	.LVL59:
 966              	.LBE8:
 967              	.LBE9:
 153:firmwares/rotorcraft/guidance/guidance_h.c **** }
 968              		.loc 2 153 0
 969 015c 07B0     		add	sp, sp, #28
 970              		@ sp needed
 971 015e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 972              	.LVL60:
 973              	.L59:
 974 0162 00BF     		.align	2
 975              	.L58:
 976 0164 00000000 		.word	.LC0
 977 0168 00000000 		.word	.LANCHOR6
 978 016c 00000000 		.word	.LANCHOR5
 979 0170 00000000 		.word	.LANCHOR1
 980 0174 00000000 		.word	.LANCHOR0
 981 0178 00000000 		.word	.LANCHOR2
 982              		.cfi_endproc
 983              	.LFE463:
 985              		.section	.text.send_hover_loop,"ax",%progbits
 986              		.align	1
 987              		.thumb
 988              		.thumb_func
 990              	send_hover_loop:
 991              	.LFB462:
 123:firmwares/rotorcraft/guidance/guidance_h.c **** {
 992              		.loc 2 123 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 8
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              	.LVL61:
 997 0000 2DE9FF47 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 998              		.cfi_def_cfa_offset 48
 999              		.cfi_offset 0, -48
 1000              		.cfi_offset 1, -44
 1001              		.cfi_offset 2, -40
 1002              		.cfi_offset 3, -36
 1003              		.cfi_offset 4, -32
 1004              		.cfi_offset 5, -28
 1005              		.cfi_offset 6, -24
 1006              		.cfi_offset 7, -20
 1007              		.cfi_offset 8, -16
 1008              		.cfi_offset 9, -12
 1009              		.cfi_offset 10, -8
 1010              		.cfi_offset 14, -4
 123:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1011              		.loc 2 123 0
 1012 0004 0C46     		mov	r4, r1
 1013 0006 0646     		mov	r6, r0
 124:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *pos = stateGetPositionNed_i();
 1014              		.loc 2 124 0
 1015 0008 FFF7FEFF 		bl	stateGetPositionNed_i
 1016              	.LVL62:
 1017 000c 8046     		mov	r8, r0
 1018              	.LVL63:
 125:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *speed = stateGetSpeedNed_i();
 1019              		.loc 2 125 0
 1020 000e FFF7FEFF 		bl	stateGetSpeedNed_i
 1021              	.LVL64:
 1022              	.LBB14:
 1023              	.LBB15:
 847:./state.h     **** 
 848:./state.h     **** /// Get ground speed in local ENU coordinates (int).
 849:./state.h     **** static inline struct EnuCoor_i *stateGetSpeedEnu_i(void)
 850:./state.h     **** {
 851:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_I)) {
 852:./state.h     ****     stateCalcSpeedEnu_i();
 853:./state.h     ****   }
 854:./state.h     ****   return &state.enu_speed_i;
 855:./state.h     **** }
 856:./state.h     **** 
 857:./state.h     **** /// Get ground speed in ECEF coordinates (int).
 858:./state.h     **** static inline struct EcefCoor_i *stateGetSpeedEcef_i(void)
 859:./state.h     **** {
 860:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_I)) {
 861:./state.h     ****     stateCalcSpeedEcef_i();
 862:./state.h     ****   }
 863:./state.h     ****   return &state.ecef_speed_i;
 864:./state.h     **** }
 865:./state.h     **** 
 866:./state.h     **** /// Get norm of horizontal ground speed (int).
 867:./state.h     **** static inline uint32_t *stateGetHorizontalSpeedNorm_i(void)
 868:./state.h     **** {
 869:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_I)) {
 870:./state.h     ****     stateCalcHorizontalSpeedNorm_i();
 871:./state.h     ****   }
 872:./state.h     ****   return &state.h_speed_norm_i;
 873:./state.h     **** }
 874:./state.h     **** 
 875:./state.h     **** /// Get dir of horizontal ground speed (int).
 876:./state.h     **** static inline int32_t *stateGetHorizontalSpeedDir_i(void)
 877:./state.h     **** {
 878:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_I)) {
 879:./state.h     ****     stateCalcHorizontalSpeedDir_i();
 880:./state.h     ****   }
 881:./state.h     ****   return &state.h_speed_dir_i;
 882:./state.h     **** }
 883:./state.h     **** 
 884:./state.h     **** /// Get ground speed in local NED coordinates (float).
 885:./state.h     **** static inline struct NedCoor_f *stateGetSpeedNed_f(void)
 886:./state.h     **** {
 887:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_F)) {
 888:./state.h     ****     stateCalcSpeedNed_f();
 889:./state.h     ****   }
 890:./state.h     ****   return &state.ned_speed_f;
 891:./state.h     **** }
 892:./state.h     **** 
 893:./state.h     **** /// Get ground speed in local ENU coordinates (float).
 894:./state.h     **** static inline struct EnuCoor_f *stateGetSpeedEnu_f(void)
 895:./state.h     **** {
 896:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_F)) {
 897:./state.h     ****     stateCalcSpeedEnu_f();
 898:./state.h     ****   }
 899:./state.h     ****   return &state.enu_speed_f;
 900:./state.h     **** }
 901:./state.h     **** 
 902:./state.h     **** /// Get ground speed in ECEF coordinates (float).
 903:./state.h     **** static inline struct EcefCoor_f *stateGetSpeedEcef_f(void)
 904:./state.h     **** {
 905:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_F)) {
 906:./state.h     ****     stateCalcSpeedEcef_f();
 907:./state.h     ****   }
 908:./state.h     ****   return &state.ecef_speed_f;
 909:./state.h     **** }
 910:./state.h     **** 
 911:./state.h     **** /// Get norm of horizontal ground speed (float).
 912:./state.h     **** static inline float *stateGetHorizontalSpeedNorm_f(void)
 913:./state.h     **** {
 914:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_F)) {
 915:./state.h     ****     stateCalcHorizontalSpeedNorm_f();
 916:./state.h     ****   }
 917:./state.h     ****   return &state.h_speed_norm_f;
 918:./state.h     **** }
 919:./state.h     **** 
 920:./state.h     **** /// Get dir of horizontal ground speed (float).
 921:./state.h     **** static inline float *stateGetHorizontalSpeedDir_f(void)
 922:./state.h     **** {
 923:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_F)) {
 924:./state.h     ****     stateCalcHorizontalSpeedDir_f();
 925:./state.h     ****   }
 926:./state.h     ****   return &state.h_speed_dir_f;
 927:./state.h     **** }
 928:./state.h     **** /** @}*/
 929:./state.h     **** 
 930:./state.h     **** 
 931:./state.h     **** 
 932:./state.h     **** /******************************************************************************
 933:./state.h     ****  *                                                                            *
 934:./state.h     ****  * Set and Get functions for the ACCELERATION representations                 *
 935:./state.h     ****  *                                                                            *
 936:./state.h     ****  *****************************************************************************/
 937:./state.h     **** /** @addtogroup state_acceleration
 938:./state.h     ****  *  @{ */
 939:./state.h     **** 
 940:./state.h     **** /************* declaration of transformation functions ************/
 941:./state.h     **** extern void stateCalcAccelNed_i(void);
 942:./state.h     **** extern void stateCalcAccelEcef_i(void);
 943:./state.h     **** extern void stateCalcAccelNed_f(void);
 944:./state.h     **** extern void stateCalcAccelEcef_f(void);
 945:./state.h     **** 
 946:./state.h     **** /*********************** validity test functions ******************/
 947:./state.h     **** 
 948:./state.h     **** /// Test if accelerations are valid.
 949:./state.h     **** static inline bool_t stateIsAccelValid(void)
 950:./state.h     **** {
 951:./state.h     ****   return (state.accel_status);
 952:./state.h     **** }
 953:./state.h     **** 
 954:./state.h     **** /************************ Set functions ****************************/
 955:./state.h     **** 
 956:./state.h     **** /// Set acceleration in NED coordinates (int).
 957:./state.h     **** static inline void stateSetAccelNed_i(struct NedCoor_i *ned_accel)
 958:./state.h     **** {
 959:./state.h     ****   VECT3_COPY(state.ned_accel_i, *ned_accel);
 960:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 961:./state.h     ****   state.accel_status = (1 << ACCEL_NED_I);
 962:./state.h     **** }
 963:./state.h     **** 
 964:./state.h     **** /// Set acceleration in ECEF coordinates (int).
 965:./state.h     **** static inline void stateSetAccelEcef_i(struct EcefCoor_i *ecef_accel)
 966:./state.h     **** {
 967:./state.h     ****   VECT3_COPY(state.ecef_accel_i, *ecef_accel);
 968:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 969:./state.h     ****   state.accel_status = (1 << ACCEL_ECEF_I);
 970:./state.h     **** }
 971:./state.h     **** 
 972:./state.h     **** /// Set acceleration in NED coordinates (float).
 973:./state.h     **** static inline void stateSetAccelNed_f(struct NedCoor_f *ned_accel)
 974:./state.h     **** {
 975:./state.h     ****   VECT3_COPY(state.ned_accel_f, *ned_accel);
 976:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 977:./state.h     ****   state.accel_status = (1 << ACCEL_NED_F);
 978:./state.h     **** }
 979:./state.h     **** 
 980:./state.h     **** /// Set acceleration in ECEF coordinates (float).
 981:./state.h     **** static inline void stateSetAccelEcef_f(struct EcefCoor_f *ecef_accel)
 982:./state.h     **** {
 983:./state.h     ****   VECT3_COPY(state.ecef_accel_f, *ecef_accel);
 984:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 985:./state.h     ****   state.accel_status = (1 << ACCEL_ECEF_F);
 986:./state.h     **** }
 987:./state.h     **** 
 988:./state.h     **** /************************ Get functions ****************************/
 989:./state.h     **** 
 990:./state.h     **** /// Get acceleration in NED coordinates (int).
 991:./state.h     **** static inline struct NedCoor_i *stateGetAccelNed_i(void)
 992:./state.h     **** {
 993:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_NED_I)) {
 1024              		.loc 1 993 0
 1025 0012 794B     		ldr	r3, .L65
 1026 0014 93F87031 		ldrb	r3, [r3, #368]	@ zero_extendqisi2
 1027 0018 9B07     		lsls	r3, r3, #30
 1028              	.LBE15:
 1029              	.LBE14:
 125:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *speed = stateGetSpeedNed_i();
 1030              		.loc 2 125 0
 1031 001a 8146     		mov	r9, r0
 1032              	.LVL65:
 1033              	.LBB17:
 1034              	.LBB16:
 1035              		.loc 1 993 0
 1036 001c 01D4     		bmi	.L61
 994:./state.h     ****     stateCalcAccelNed_i();
 1037              		.loc 1 994 0
 1038 001e FFF7FEFF 		bl	stateCalcAccelNed_i
 1039              	.LVL66:
 1040              	.L61:
 1041              	.LBE16:
 1042              	.LBE17:
 1043              	.LBB18:
 1044              	.LBB19:
2686:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
 1045              		.loc 3 2686 0
 1046 0022 376A     		ldr	r7, [r6, #32]
 1047 0024 3368     		ldr	r3, [r6]
 1048 0026 D6F804A0 		ldr	r10, [r6, #4]
 1049 002a 0125     		movs	r5, #1
 1050 002c 4621     		movs	r1, #70
 1051 002e 8DF80F50 		strb	r5, [sp, #15]
 1052              	.LVL67:
 1053 0032 3846     		mov	r0, r7
 1054 0034 9847     		blx	r3
 1055              	.LVL68:
 1056 0036 2146     		mov	r1, r4
 1057 0038 0246     		mov	r2, r0
 1058 003a 3846     		mov	r0, r7
 1059 003c D047     		blx	r10
 1060              	.LVL69:
 1061 003e 0028     		cmp	r0, #0
 1062 0040 00F0D280 		beq	.L62
2687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
 1063              		.loc 3 2687 0
 1064 0044 376A     		ldr	r7, [r6, #32]
 1065 0046 3368     		ldr	r3, [r6]
 1066 0048 D6F81CA0 		ldr	r10, [r6, #28]
 1067 004c 3846     		mov	r0, r7
 1068 004e 4621     		movs	r1, #70
 1069 0050 9847     		blx	r3
 1070              	.LVL70:
 1071 0052 2146     		mov	r1, r4
 1072 0054 0246     		mov	r2, r0
 1073 0056 3846     		mov	r0, r7
 1074 0058 D047     		blx	r10
 1075              	.LVL71:
2688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
 1076              		.loc 3 2688 0
 1077 005a 3369     		ldr	r3, [r6, #16]
 1078 005c 306A     		ldr	r0, [r6, #32]
2691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
 1079              		.loc 3 2691 0
 1080 005e DFF8A4A1 		ldr	r10, .L65+12
2688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
 1081              		.loc 3 2688 0
 1082 0062 2146     		mov	r1, r4
 1083 0064 4622     		movs	r2, #70
 1084 0066 9847     		blx	r3
 1085              	.LVL72:
2689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1086              		.loc 3 2689 0
 1087 0068 0DF10F03 		add	r3, sp, #15
 1088 006c 0095     		str	r5, [sp]
 1089 006e 0193     		str	r3, [sp, #4]
 1090 0070 B568     		ldr	r5, [r6, #8]
 1091              	.LVL73:
 1092 0072 306A     		ldr	r0, [r6, #32]
 1093 0074 2146     		mov	r1, r4
 1094 0076 0222     		movs	r2, #2
 1095 0078 0023     		movs	r3, #0
 1096              	.LVL74:
 1097 007a A847     		blx	r5
 1098              	.LVL75:
2690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HOVER_LOOP, "HOVER_L
 1099              		.loc 3 2690 0
 1100 007c 9223     		movs	r3, #146
 1101 007e 0093     		str	r3, [sp]
 1102 0080 5E4B     		ldr	r3, .L65+4
 1103 0082 0193     		str	r3, [sp, #4]
 1104 0084 F568     		ldr	r5, [r6, #12]
 1105 0086 306A     		ldr	r0, [r6, #32]
 1106 0088 2146     		mov	r1, r4
 1107 008a 0222     		movs	r2, #2
 1108 008c 0023     		movs	r3, #0
 1109 008e A847     		blx	r5
 1110              	.LVL76:
2691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
 1111              		.loc 3 2691 0
 1112 0090 0425     		movs	r5, #4
 1113 0092 0095     		str	r5, [sp]
 1114 0094 306A     		ldr	r0, [r6, #32]
 1115 0096 B768     		ldr	r7, [r6, #8]
 1116 0098 CDF804A0 		str	r10, [sp, #4]
 1117 009c 2146     		mov	r1, r4
 1118 009e 0722     		movs	r2, #7
 1119 00a0 0023     		movs	r3, #0
 1120 00a2 B847     		blx	r7
 1121              	.LVL77:
2692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
 1122              		.loc 3 2692 0
 1123 00a4 0AEB0503 		add	r3, r10, r5
 1124 00a8 0095     		str	r5, [sp]
 1125 00aa 0193     		str	r3, [sp, #4]
 1126 00ac B768     		ldr	r7, [r6, #8]
 1127 00ae 306A     		ldr	r0, [r6, #32]
 1128 00b0 2146     		mov	r1, r4
 1129 00b2 0722     		movs	r2, #7
 1130 00b4 0023     		movs	r3, #0
 1131 00b6 B847     		blx	r7
 1132              	.LVL78:
2693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
 1133              		.loc 3 2693 0
 1134 00b8 8DE82001 		stmia	sp, {r5, r8}
 1135 00bc B768     		ldr	r7, [r6, #8]
 1136 00be 306A     		ldr	r0, [r6, #32]
 1137 00c0 2146     		mov	r1, r4
 1138 00c2 0722     		movs	r2, #7
 1139 00c4 0023     		movs	r3, #0
 1140 00c6 B847     		blx	r7
 1141              	.LVL79:
 1142              	.LBE19:
 1143              	.LBE18:
 127:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_HOVER_LOOP(trans, dev, AC_ID,
 1144              		.loc 2 127 0
 1145 00c8 08EB0503 		add	r3, r8, r5
 1146              	.LVL80:
 1147              	.LBB22:
 1148              	.LBB20:
2694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
 1149              		.loc 3 2694 0
 1150 00cc 0095     		str	r5, [sp]
 1151 00ce 0193     		str	r3, [sp, #4]
 1152 00d0 B768     		ldr	r7, [r6, #8]
 1153 00d2 306A     		ldr	r0, [r6, #32]
2697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xdd);
 1154              		.loc 3 2697 0
 1155 00d4 DFF83081 		ldr	r8, .L65+16
 1156              	.LVL81:
2694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
 1157              		.loc 3 2694 0
 1158 00d8 2146     		mov	r1, r4
 1159 00da 0722     		movs	r2, #7
 1160 00dc 0023     		movs	r3, #0
 1161              	.LVL82:
 1162 00de B847     		blx	r7
 1163              	.LVL83:
2695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xd);
 1164              		.loc 3 2695 0
 1165 00e0 8DE82002 		stmia	sp, {r5, r9}
 1166 00e4 B768     		ldr	r7, [r6, #8]
 1167 00e6 306A     		ldr	r0, [r6, #32]
 1168 00e8 2146     		mov	r1, r4
 1169 00ea 0722     		movs	r2, #7
 1170 00ec 0023     		movs	r3, #0
 1171 00ee B847     		blx	r7
 1172              	.LVL84:
 1173              	.LBE20:
 1174              	.LBE22:
 127:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_HOVER_LOOP(trans, dev, AC_ID,
 1175              		.loc 2 127 0
 1176 00f0 09EB0503 		add	r3, r9, r5
 1177              	.LVL85:
 1178              	.LBB23:
 1179              	.LBB21:
2696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_yd);
 1180              		.loc 3 2696 0
 1181 00f4 0095     		str	r5, [sp]
 1182 00f6 0193     		str	r3, [sp, #4]
 1183 00f8 B768     		ldr	r7, [r6, #8]
 1184 00fa 306A     		ldr	r0, [r6, #32]
 1185 00fc 2146     		mov	r1, r4
 1186 00fe 0722     		movs	r2, #7
 1187 0100 0023     		movs	r3, #0
 1188              	.LVL86:
 1189 0102 B847     		blx	r7
 1190              	.LVL87:
2697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xdd);
 1191              		.loc 3 2697 0
 1192 0104 0095     		str	r5, [sp]
 1193 0106 CDF80480 		str	r8, [sp, #4]
 1194 010a 306A     		ldr	r0, [r6, #32]
 1195 010c B768     		ldr	r7, [r6, #8]
 1196 010e 2146     		mov	r1, r4
 1197 0110 0722     		movs	r2, #7
 1198 0112 0023     		movs	r3, #0
 1199 0114 B847     		blx	r7
 1200              	.LVL88:
2698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_ydd);
 1201              		.loc 3 2698 0
 1202 0116 08EB0507 		add	r7, r8, r5
 1203 011a 0095     		str	r5, [sp]
2699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_x);
 1204              		.loc 3 2699 0
 1205 011c DFF8EC80 		ldr	r8, .L65+20
 1206              	.LVL89:
2698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_ydd);
 1207              		.loc 3 2698 0
 1208 0120 0197     		str	r7, [sp, #4]
 1209 0122 306A     		ldr	r0, [r6, #32]
 1210 0124 B768     		ldr	r7, [r6, #8]
 1211 0126 2146     		mov	r1, r4
 1212 0128 0722     		movs	r2, #7
 1213 012a 0023     		movs	r3, #0
 1214 012c B847     		blx	r7
 1215              	.LVL90:
2699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_x);
 1216              		.loc 3 2699 0
 1217 012e 0095     		str	r5, [sp]
 1218 0130 CDF80480 		str	r8, [sp, #4]
 1219 0134 306A     		ldr	r0, [r6, #32]
 1220 0136 B768     		ldr	r7, [r6, #8]
 1221 0138 2146     		mov	r1, r4
 1222 013a 0722     		movs	r2, #7
 1223 013c 0023     		movs	r3, #0
 1224 013e B847     		blx	r7
 1225              	.LVL91:
2700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_y);
 1226              		.loc 3 2700 0
 1227 0140 08EB0507 		add	r7, r8, r5
 1228 0144 0095     		str	r5, [sp]
2701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_xd);
 1229              		.loc 3 2701 0
 1230 0146 DFF8C880 		ldr	r8, .L65+24
2700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_y);
 1231              		.loc 3 2700 0
 1232 014a 0197     		str	r7, [sp, #4]
 1233 014c 306A     		ldr	r0, [r6, #32]
 1234 014e B768     		ldr	r7, [r6, #8]
 1235 0150 2146     		mov	r1, r4
 1236 0152 0722     		movs	r2, #7
 1237 0154 0023     		movs	r3, #0
 1238 0156 B847     		blx	r7
 1239              	.LVL92:
2701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_xd);
 1240              		.loc 3 2701 0
 1241 0158 0095     		str	r5, [sp]
 1242 015a CDF80480 		str	r8, [sp, #4]
 1243 015e 306A     		ldr	r0, [r6, #32]
 1244 0160 B768     		ldr	r7, [r6, #8]
 1245 0162 2146     		mov	r1, r4
 1246 0164 0722     		movs	r2, #7
 1247 0166 0023     		movs	r3, #0
 1248 0168 B847     		blx	r7
 1249              	.LVL93:
2702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_yd);
 1250              		.loc 3 2702 0
 1251 016a 08EB0507 		add	r7, r8, r5
 1252 016e 0095     		str	r5, [sp]
2703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_x);
 1253              		.loc 3 2703 0
 1254 0170 DFF8A080 		ldr	r8, .L65+28
2702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_yd);
 1255              		.loc 3 2702 0
 1256 0174 0197     		str	r7, [sp, #4]
 1257 0176 306A     		ldr	r0, [r6, #32]
 1258 0178 B768     		ldr	r7, [r6, #8]
 1259 017a 2146     		mov	r1, r4
 1260 017c 0722     		movs	r2, #7
 1261 017e 0023     		movs	r3, #0
 1262 0180 B847     		blx	r7
 1263              	.LVL94:
2703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_x);
 1264              		.loc 3 2703 0
 1265 0182 0095     		str	r5, [sp]
 1266 0184 CDF80480 		str	r8, [sp, #4]
 1267 0188 306A     		ldr	r0, [r6, #32]
 1268 018a B768     		ldr	r7, [r6, #8]
 1269 018c 2146     		mov	r1, r4
 1270 018e 0722     		movs	r2, #7
 1271 0190 0023     		movs	r3, #0
 1272 0192 B847     		blx	r7
 1273              	.LVL95:
2704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_y);
 1274              		.loc 3 2704 0
 1275 0194 08EB0507 		add	r7, r8, r5
 1276 0198 0095     		str	r5, [sp]
 1277 019a 0197     		str	r7, [sp, #4]
 1278 019c 306A     		ldr	r0, [r6, #32]
 1279 019e B768     		ldr	r7, [r6, #8]
2705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_x);
 1280              		.loc 3 2705 0
 1281 01a0 DFF87480 		ldr	r8, .L65+32
2704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_y);
 1282              		.loc 3 2704 0
 1283 01a4 2146     		mov	r1, r4
 1284 01a6 0722     		movs	r2, #7
 1285 01a8 0023     		movs	r3, #0
 1286 01aa B847     		blx	r7
 1287              	.LVL96:
2705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_x);
 1288              		.loc 3 2705 0
 1289 01ac 0095     		str	r5, [sp]
 1290 01ae 306A     		ldr	r0, [r6, #32]
 1291 01b0 B768     		ldr	r7, [r6, #8]
 1292 01b2 CDF80480 		str	r8, [sp, #4]
 1293 01b6 2146     		mov	r1, r4
 1294 01b8 0722     		movs	r2, #7
 1295 01ba 0023     		movs	r3, #0
 1296 01bc B847     		blx	r7
 1297              	.LVL97:
2706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_y);
 1298              		.loc 3 2706 0
 1299 01be 08EB0507 		add	r7, r8, r5
 1300 01c2 0095     		str	r5, [sp]
 1301 01c4 0197     		str	r7, [sp, #4]
 1302 01c6 306A     		ldr	r0, [r6, #32]
 1303 01c8 B768     		ldr	r7, [r6, #8]
 1304 01ca 2146     		mov	r1, r4
 1305 01cc 0722     		movs	r2, #7
 1306 01ce 0023     		movs	r3, #0
 1307 01d0 B847     		blx	r7
 1308              	.LVL98:
2707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_heading);
 1309              		.loc 3 2707 0
 1310 01d2 0B4B     		ldr	r3, .L65+8
 1311 01d4 0095     		str	r5, [sp]
 1312 01d6 0193     		str	r3, [sp, #4]
 1313 01d8 B568     		ldr	r5, [r6, #8]
 1314 01da 306A     		ldr	r0, [r6, #32]
 1315 01dc 0023     		movs	r3, #0
 1316 01de 2146     		mov	r1, r4
 1317 01e0 0722     		movs	r2, #7
 1318 01e2 A847     		blx	r5
 1319              	.LVL99:
2708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1320              		.loc 3 2708 0
 1321 01e4 7369     		ldr	r3, [r6, #20]
 1322 01e6 00E0     		b	.L64
 1323              	.LVL100:
 1324              	.L62:
2710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1325              		.loc 3 2710 0
 1326 01e8 B369     		ldr	r3, [r6, #24]
 1327              	.LVL101:
 1328              	.L64:
 1329 01ea 306A     		ldr	r0, [r6, #32]
 1330 01ec 2146     		mov	r1, r4
 1331 01ee 9847     		blx	r3
 1332              	.LVL102:
 1333              	.LBE21:
 1334              	.LBE23:
 142:firmwares/rotorcraft/guidance/guidance_h.c **** }
 1335              		.loc 2 142 0
 1336 01f0 04B0     		add	sp, sp, #16
 1337              	.LVL103:
 1338              		@ sp needed
 1339 01f2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1340              	.LVL104:
 1341              	.L66:
 1342 01f6 00BF     		.align	2
 1343              	.L65:
 1344 01f8 00000000 		.word	state
 1345 01fc 13000000 		.word	.LC1
 1346 0200 00000000 		.word	.LANCHOR18
 1347 0204 00000000 		.word	.LANCHOR6
 1348 0208 74010000 		.word	state+372
 1349 020c 00000000 		.word	.LANCHOR8
 1350 0210 00000000 		.word	.LANCHOR9
 1351 0214 00000000 		.word	.LANCHOR3
 1352 0218 00000000 		.word	.LANCHOR14
 1353              		.cfi_endproc
 1354              	.LFE462:
 1356              		.section	.text.send_gh,"ax",%progbits
 1357              		.align	1
 1358              		.thumb
 1359              		.thumb_func
 1361              	send_gh:
 1362              	.LFB461:
 114:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1363              		.loc 2 114 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 8
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367              	.LVL105:
 1368 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1369              		.cfi_def_cfa_offset 28
 1370              		.cfi_offset 4, -28
 1371              		.cfi_offset 5, -24
 1372              		.cfi_offset 6, -20
 1373              		.cfi_offset 7, -16
 1374              		.cfi_offset 8, -12
 1375              		.cfi_offset 9, -8
 1376              		.cfi_offset 14, -4
 1377 0004 0446     		mov	r4, r0
 1378 0006 85B0     		sub	sp, sp, #20
 1379              		.cfi_def_cfa_offset 48
 114:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1380              		.loc 2 114 0
 1381 0008 0D46     		mov	r5, r1
 115:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *pos = stateGetPositionNed_i();
 1382              		.loc 2 115 0
 1383 000a FFF7FEFF 		bl	stateGetPositionNed_i
 1384              	.LVL106:
 1385              	.LBB26:
 1386              	.LBB27:
2641:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 1387              		.loc 3 2641 0
 1388 000e 276A     		ldr	r7, [r4, #32]
 1389 0010 2368     		ldr	r3, [r4]
 1390 0012 D4F80490 		ldr	r9, [r4, #4]
 1391 0016 0126     		movs	r6, #1
 1392 0018 1A21     		movs	r1, #26
 1393              	.LBE27:
 1394              	.LBE26:
 115:firmwares/rotorcraft/guidance/guidance_h.c ****   struct NedCoor_i *pos = stateGetPositionNed_i();
 1395              		.loc 2 115 0
 1396 001a 8046     		mov	r8, r0
 1397              	.LVL107:
 1398 001c 8DF80F60 		strb	r6, [sp, #15]
 1399              	.LVL108:
 1400              	.LBB30:
 1401              	.LBB28:
2641:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 1402              		.loc 3 2641 0
 1403 0020 3846     		mov	r0, r7
 1404              	.LVL109:
 1405 0022 9847     		blx	r3
 1406              	.LVL110:
 1407 0024 2946     		mov	r1, r5
 1408 0026 0246     		mov	r2, r0
 1409 0028 3846     		mov	r0, r7
 1410 002a C847     		blx	r9
 1411              	.LVL111:
 1412 002c 0028     		cmp	r0, #0
 1413 002e 62D0     		beq	.L68
2642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
 1414              		.loc 3 2642 0
 1415 0030 276A     		ldr	r7, [r4, #32]
 1416 0032 2368     		ldr	r3, [r4]
 1417 0034 D4F81C90 		ldr	r9, [r4, #28]
 1418 0038 3846     		mov	r0, r7
 1419 003a 1A21     		movs	r1, #26
 1420 003c 9847     		blx	r3
 1421              	.LVL112:
 1422 003e 2946     		mov	r1, r5
 1423 0040 0246     		mov	r2, r0
 1424 0042 3846     		mov	r0, r7
 1425 0044 C847     		blx	r9
 1426              	.LVL113:
2643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 1427              		.loc 3 2643 0
 1428 0046 2369     		ldr	r3, [r4, #16]
 1429 0048 206A     		ldr	r0, [r4, #32]
2646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
 1430              		.loc 3 2646 0
 1431 004a DFF8BC90 		ldr	r9, .L71+4
2643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 1432              		.loc 3 2643 0
 1433 004e 2946     		mov	r1, r5
 1434 0050 1A22     		movs	r2, #26
 1435 0052 9847     		blx	r3
 1436              	.LVL114:
2644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1437              		.loc 3 2644 0
 1438 0054 0DF10F03 		add	r3, sp, #15
 1439 0058 0096     		str	r6, [sp]
 1440 005a 0193     		str	r3, [sp, #4]
 1441 005c A668     		ldr	r6, [r4, #8]
 1442              	.LVL115:
 1443 005e 206A     		ldr	r0, [r4, #32]
 1444 0060 2946     		mov	r1, r5
 1445 0062 0222     		movs	r2, #2
 1446 0064 0023     		movs	r3, #0
 1447              	.LVL116:
 1448 0066 B047     		blx	r6
 1449              	.LVL117:
2645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_INT, "GUI
 1450              		.loc 3 2645 0
 1451 0068 9023     		movs	r3, #144
 1452 006a 0093     		str	r3, [sp]
 1453 006c 254B     		ldr	r3, .L71
 1454 006e 0193     		str	r3, [sp, #4]
 1455 0070 E668     		ldr	r6, [r4, #12]
 1456 0072 206A     		ldr	r0, [r4, #32]
 1457 0074 2946     		mov	r1, r5
 1458 0076 0222     		movs	r2, #2
 1459 0078 0023     		movs	r3, #0
 1460 007a B047     		blx	r6
 1461              	.LVL118:
2646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
 1462              		.loc 3 2646 0
 1463 007c 0426     		movs	r6, #4
 1464 007e 0096     		str	r6, [sp]
 1465 0080 CDF80490 		str	r9, [sp, #4]
 1466 0084 206A     		ldr	r0, [r4, #32]
 1467 0086 A768     		ldr	r7, [r4, #8]
 1468 0088 2946     		mov	r1, r5
 1469 008a 0722     		movs	r2, #7
 1470 008c 0023     		movs	r3, #0
 1471 008e B847     		blx	r7
 1472              	.LVL119:
2647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
 1473              		.loc 3 2647 0
 1474 0090 09EB0603 		add	r3, r9, r6
 1475 0094 0096     		str	r6, [sp]
 1476 0096 0193     		str	r3, [sp, #4]
 1477 0098 A768     		ldr	r7, [r4, #8]
 1478 009a 206A     		ldr	r0, [r4, #32]
2648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
 1479              		.loc 3 2648 0
 1480 009c DFF86C90 		ldr	r9, .L71+8
2647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
 1481              		.loc 3 2647 0
 1482 00a0 2946     		mov	r1, r5
 1483 00a2 0722     		movs	r2, #7
 1484 00a4 0023     		movs	r3, #0
 1485 00a6 B847     		blx	r7
 1486              	.LVL120:
2648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
 1487              		.loc 3 2648 0
 1488 00a8 0096     		str	r6, [sp]
 1489 00aa 206A     		ldr	r0, [r4, #32]
 1490 00ac A768     		ldr	r7, [r4, #8]
 1491 00ae CDF80490 		str	r9, [sp, #4]
 1492 00b2 2946     		mov	r1, r5
 1493 00b4 0722     		movs	r2, #7
 1494 00b6 0023     		movs	r3, #0
 1495 00b8 B847     		blx	r7
 1496              	.LVL121:
2649:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
 1497              		.loc 3 2649 0
 1498 00ba 09EB0603 		add	r3, r9, r6
 1499 00be 0096     		str	r6, [sp]
 1500 00c0 0193     		str	r3, [sp, #4]
 1501 00c2 A768     		ldr	r7, [r4, #8]
 1502 00c4 206A     		ldr	r0, [r4, #32]
 1503 00c6 2946     		mov	r1, r5
 1504 00c8 0722     		movs	r2, #7
 1505 00ca 0023     		movs	r3, #0
 1506 00cc B847     		blx	r7
 1507              	.LVL122:
2650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
 1508              		.loc 3 2650 0
 1509 00ce 8DE84001 		stmia	sp, {r6, r8}
 1510 00d2 206A     		ldr	r0, [r4, #32]
 1511 00d4 A768     		ldr	r7, [r4, #8]
 1512 00d6 2946     		mov	r1, r5
 1513 00d8 0722     		movs	r2, #7
 1514 00da 0023     		movs	r3, #0
 1515 00dc B847     		blx	r7
 1516              	.LVL123:
 1517              	.LBE28:
 1518              	.LBE30:
 116:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_GUIDANCE_H_INT(trans, dev, AC_ID,
 1519              		.loc 2 116 0
 1520 00de 08EB0603 		add	r3, r8, r6
 1521              	.LVL124:
 1522              	.LBB31:
 1523              	.LBB29:
2651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
 1524              		.loc 3 2651 0
 1525 00e2 0096     		str	r6, [sp]
 1526 00e4 0193     		str	r3, [sp, #4]
 1527 00e6 A668     		ldr	r6, [r4, #8]
 1528 00e8 206A     		ldr	r0, [r4, #32]
 1529 00ea 0023     		movs	r3, #0
 1530              	.LVL125:
 1531 00ec 2946     		mov	r1, r5
 1532 00ee 0722     		movs	r2, #7
 1533 00f0 B047     		blx	r6
 1534              	.LVL126:
2652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1535              		.loc 3 2652 0
 1536 00f2 6369     		ldr	r3, [r4, #20]
 1537 00f4 00E0     		b	.L70
 1538              	.L68:
2654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1539              		.loc 3 2654 0
 1540 00f6 A369     		ldr	r3, [r4, #24]
 1541              	.L70:
 1542 00f8 206A     		ldr	r0, [r4, #32]
 1543 00fa 2946     		mov	r1, r5
 1544 00fc 9847     		blx	r3
 1545              	.LVL127:
 1546              	.LBE29:
 1547              	.LBE31:
 120:firmwares/rotorcraft/guidance/guidance_h.c **** }
 1548              		.loc 2 120 0
 1549 00fe 05B0     		add	sp, sp, #20
 1550              		@ sp needed
 1551 0100 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1552              	.LVL128:
 1553              	.L72:
 1554              		.align	2
 1555              	.L71:
 1556 0104 1E000000 		.word	.LC2
 1557 0108 00000000 		.word	.LANCHOR6
 1558 010c 00000000 		.word	.LANCHOR0
 1559              		.cfi_endproc
 1560              	.LFE461:
 1562              		.section	.text.stateGetNedToBodyEulers_i,"ax",%progbits
 1563              		.align	1
 1564              		.thumb
 1565              		.thumb_func
 1567              	stateGetNedToBodyEulers_i:
 1568              	.LFB130:
 995:./state.h     ****   }
 996:./state.h     ****   return &state.ned_accel_i;
 997:./state.h     **** }
 998:./state.h     **** 
 999:./state.h     **** /// Get acceleration in ECEF coordinates (int).
1000:./state.h     **** static inline struct EcefCoor_i *stateGetAccelEcef_i(void)
1001:./state.h     **** {
1002:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_ECEF_I)) {
1003:./state.h     ****     stateCalcAccelEcef_i();
1004:./state.h     ****   }
1005:./state.h     ****   return &state.ecef_accel_i;
1006:./state.h     **** }
1007:./state.h     **** 
1008:./state.h     **** /// Get acceleration in NED coordinates (float).
1009:./state.h     **** static inline struct NedCoor_f *stateGetAccelNed_f(void)
1010:./state.h     **** {
1011:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_NED_F)) {
1012:./state.h     ****     stateCalcAccelNed_f();
1013:./state.h     ****   }
1014:./state.h     ****   return &state.ned_accel_f;
1015:./state.h     **** }
1016:./state.h     **** 
1017:./state.h     **** /// Get acceleration in ECEF coordinates (float).
1018:./state.h     **** static inline struct EcefCoor_f *stateGetAccelEcef_f(void)
1019:./state.h     **** {
1020:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_ECEF_F)) {
1021:./state.h     ****     stateCalcAccelEcef_f();
1022:./state.h     ****   }
1023:./state.h     ****   return &state.ecef_accel_f;
1024:./state.h     **** }
1025:./state.h     **** /** @}*/
1026:./state.h     **** 
1027:./state.h     **** /******************************************************************************
1028:./state.h     **** *                                                                             *
1029:./state.h     **** * Set and Get functions for the ATTITUDE representations                      *
1030:./state.h     **** * (Calls the functions in math/pprz_orientation_conversion)                   *
1031:./state.h     **** *                                                                             *
1032:./state.h     **** *****************************************************************************/
1033:./state.h     **** /** @addtogroup state_attitude
1034:./state.h     **** * @{ */
1035:./state.h     **** /*********************** validity test functions ******************/
1036:./state.h     **** 
1037:./state.h     **** /// Test if attitudes are valid.
1038:./state.h     **** static inline bool_t stateIsAttitudeValid(void)
1039:./state.h     **** {
1040:./state.h     ****   return (orienationCheckValid(&state.ned_to_body_orientation));
1041:./state.h     **** }
1042:./state.h     **** 
1043:./state.h     **** /************************ Set functions ****************************/
1044:./state.h     **** 
1045:./state.h     **** /// Set vehicle body attitude from quaternion (int).
1046:./state.h     **** static inline void stateSetNedToBodyQuat_i(struct Int32Quat *ned_to_body_quat)
1047:./state.h     **** {
1048:./state.h     ****   orientationSetQuat_i(&state.ned_to_body_orientation, ned_to_body_quat);
1049:./state.h     **** }
1050:./state.h     **** 
1051:./state.h     **** /// Set vehicle body attitude from rotation matrix (int).
1052:./state.h     **** static inline void stateSetNedToBodyRMat_i(struct Int32RMat *ned_to_body_rmat)
1053:./state.h     **** {
1054:./state.h     ****   orientationSetRMat_i(&state.ned_to_body_orientation, ned_to_body_rmat);
1055:./state.h     **** }
1056:./state.h     **** 
1057:./state.h     **** /// Set vehicle body attitude from euler angles (int).
1058:./state.h     **** static inline void stateSetNedToBodyEulers_i(struct Int32Eulers *ned_to_body_eulers)
1059:./state.h     **** {
1060:./state.h     ****   orientationSetEulers_i(&state.ned_to_body_orientation, ned_to_body_eulers);
1061:./state.h     **** }
1062:./state.h     **** 
1063:./state.h     **** /// Set vehicle body attitude from quaternion (float).
1064:./state.h     **** static inline void stateSetNedToBodyQuat_f(struct FloatQuat *ned_to_body_quat)
1065:./state.h     **** {
1066:./state.h     ****   orientationSetQuat_f(&state.ned_to_body_orientation, ned_to_body_quat);
1067:./state.h     **** }
1068:./state.h     **** 
1069:./state.h     **** /// Set vehicle body attitude from rotation matrix (float).
1070:./state.h     **** static inline void stateSetNedToBodyRMat_f(struct FloatRMat *ned_to_body_rmat)
1071:./state.h     **** {
1072:./state.h     ****   orientationSetRMat_f(&state.ned_to_body_orientation, ned_to_body_rmat);
1073:./state.h     **** }
1074:./state.h     **** 
1075:./state.h     **** /// Set vehicle body attitude from euler angles (float).
1076:./state.h     **** static inline void stateSetNedToBodyEulers_f(struct FloatEulers *ned_to_body_eulers)
1077:./state.h     **** {
1078:./state.h     ****   orientationSetEulers_f(&state.ned_to_body_orientation, ned_to_body_eulers);
1079:./state.h     **** }
1080:./state.h     **** 
1081:./state.h     **** /************************ Get functions ****************************/
1082:./state.h     **** 
1083:./state.h     **** /// Get vehicle body attitude quaternion (int).
1084:./state.h     **** static inline struct Int32Quat *stateGetNedToBodyQuat_i(void)
1085:./state.h     **** {
1086:./state.h     ****   return orientationGetQuat_i(&state.ned_to_body_orientation);
1087:./state.h     **** }
1088:./state.h     **** 
1089:./state.h     **** /// Get vehicle body attitude rotation matrix (int).
1090:./state.h     **** static inline struct Int32RMat *stateGetNedToBodyRMat_i(void)
1091:./state.h     **** {
1092:./state.h     ****   return orientationGetRMat_i(&state.ned_to_body_orientation);
1093:./state.h     **** }
1094:./state.h     **** 
1095:./state.h     **** /// Get vehicle body attitude euler angles (int).
1096:./state.h     **** static inline struct Int32Eulers *stateGetNedToBodyEulers_i(void)
1097:./state.h     **** {
 1569              		.loc 1 1097 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 0
 1572              		@ frame_needed = 0, uses_anonymous_args = 0
 1573              	.LVL129:
 1574 0000 08B5     		push	{r3, lr}
 1575              		.cfi_def_cfa_offset 8
 1576              		.cfi_offset 3, -8
 1577              		.cfi_offset 14, -4
 1578              	.LBB34:
 1579              	.LBB35:
 1580              		.file 4 "./math/pprz_orientation_conversion.h"
   1:./math/pprz_orientation_conversion.h **** /*
   2:./math/pprz_orientation_conversion.h ****  * Copyright (C) 2011-2012 The Paparazzi Team
   3:./math/pprz_orientation_conversion.h ****  *
   4:./math/pprz_orientation_conversion.h ****  * This file is part of paparazzi.
   5:./math/pprz_orientation_conversion.h ****  *
   6:./math/pprz_orientation_conversion.h ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./math/pprz_orientation_conversion.h ****  * it under the terms of the GNU General Public License as published by
   8:./math/pprz_orientation_conversion.h ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./math/pprz_orientation_conversion.h ****  * any later version.
  10:./math/pprz_orientation_conversion.h ****  *
  11:./math/pprz_orientation_conversion.h ****  * paparazzi is distributed in the hope that it will be useful,
  12:./math/pprz_orientation_conversion.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./math/pprz_orientation_conversion.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./math/pprz_orientation_conversion.h ****  * GNU General Public License for more details.
  15:./math/pprz_orientation_conversion.h ****  *
  16:./math/pprz_orientation_conversion.h ****  * You should have received a copy of the GNU General Public License
  17:./math/pprz_orientation_conversion.h ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./math/pprz_orientation_conversion.h ****  * <http://www.gnu.org/licenses/>.
  19:./math/pprz_orientation_conversion.h ****  */
  20:./math/pprz_orientation_conversion.h **** 
  21:./math/pprz_orientation_conversion.h **** /**
  22:./math/pprz_orientation_conversion.h ****  * @file math/pprz_orientation_conversion.h
  23:./math/pprz_orientation_conversion.h ****  * Generic orientation representation and conversions.
  24:./math/pprz_orientation_conversion.h ****  *
  25:./math/pprz_orientation_conversion.h ****  * This file contains the functions to automatically convert between
  26:./math/pprz_orientation_conversion.h ****  * the different representations. They should normally not be used
  27:./math/pprz_orientation_conversion.h ****  * directly and instead the stateGet/Set interfaces used.
  28:./math/pprz_orientation_conversion.h ****  * Also see the @ref math_orientation_representation "Generic Orientation Representation" page.
  29:./math/pprz_orientation_conversion.h ****  *
  30:./math/pprz_orientation_conversion.h ****  * @author Felix Ruess <felix.ruess@gmail.com>
  31:./math/pprz_orientation_conversion.h ****  */
  32:./math/pprz_orientation_conversion.h **** 
  33:./math/pprz_orientation_conversion.h **** /**
  34:./math/pprz_orientation_conversion.h ****  * @addtogroup math
  35:./math/pprz_orientation_conversion.h ****  * @{
  36:./math/pprz_orientation_conversion.h ****  */
  37:./math/pprz_orientation_conversion.h **** 
  38:./math/pprz_orientation_conversion.h **** /**
  39:./math/pprz_orientation_conversion.h ****  * This generic orientation representation consists of a struct, containing the 6 orientation
  40:./math/pprz_orientation_conversion.h ****  * representations, and a status variable. The bits in the status variable indicate  which
  41:./math/pprz_orientation_conversion.h ****  * representations of the orientation are up-to-date.
  42:./math/pprz_orientation_conversion.h ****  *
  43:./math/pprz_orientation_conversion.h ****  * When a getter is used to get a certain representation, the status bit is checked to see if
  44:./math/pprz_orientation_conversion.h ****  * the current value is already available in the desired orientation representation.
  45:./math/pprz_orientation_conversion.h ****  * If the desired representation is not available, it will be calculated.
  46:./math/pprz_orientation_conversion.h ****  *
  47:./math/pprz_orientation_conversion.h ****  * When a setter is used to set a representation, all status bits are cleared, and only the
  48:./math/pprz_orientation_conversion.h ****  * status bit for the set representation is set to one.
  49:./math/pprz_orientation_conversion.h ****  */
  50:./math/pprz_orientation_conversion.h **** 
  51:./math/pprz_orientation_conversion.h **** /**
  52:./math/pprz_orientation_conversion.h ****  * @defgroup math_orientation_representation Generic Orientation Representations
  53:./math/pprz_orientation_conversion.h ****  * @{
  54:./math/pprz_orientation_conversion.h ****  */
  55:./math/pprz_orientation_conversion.h **** 
  56:./math/pprz_orientation_conversion.h **** #ifndef PPRZ_ORIENTATION_CONVERSION_H
  57:./math/pprz_orientation_conversion.h **** #define PPRZ_ORIENTATION_CONVERSION_H
  58:./math/pprz_orientation_conversion.h **** 
  59:./math/pprz_orientation_conversion.h **** #ifdef __cplusplus
  60:./math/pprz_orientation_conversion.h **** extern "C" {
  61:./math/pprz_orientation_conversion.h **** #endif
  62:./math/pprz_orientation_conversion.h **** 
  63:./math/pprz_orientation_conversion.h **** #include "math/pprz_algebra_int.h"
  64:./math/pprz_orientation_conversion.h **** #include "math/pprz_algebra_float.h"
  65:./math/pprz_orientation_conversion.h **** 
  66:./math/pprz_orientation_conversion.h **** #include "std.h"
  67:./math/pprz_orientation_conversion.h **** 
  68:./math/pprz_orientation_conversion.h **** 
  69:./math/pprz_orientation_conversion.h **** #define ORREP_QUAT_I  0  ///< Quaternion (BFP int)
  70:./math/pprz_orientation_conversion.h **** #define ORREP_EULER_I 1  ///< zyx Euler (BFP int)
  71:./math/pprz_orientation_conversion.h **** #define ORREP_RMAT_I  2  ///< Rotation Matrix (BFP int)
  72:./math/pprz_orientation_conversion.h **** #define ORREP_QUAT_F  3  ///< Quaternion (float)
  73:./math/pprz_orientation_conversion.h **** #define ORREP_EULER_F 4  ///< zyx Euler (float)
  74:./math/pprz_orientation_conversion.h **** #define ORREP_RMAT_F  5  ///< Rotation Matrix (float)
  75:./math/pprz_orientation_conversion.h **** 
  76:./math/pprz_orientation_conversion.h **** /*
  77:./math/pprz_orientation_conversion.h ****  * @brief Struct with euler/rmat/quaternion orientation representations in BFP int and float
  78:./math/pprz_orientation_conversion.h ****  */
  79:./math/pprz_orientation_conversion.h **** struct OrientationReps {
  80:./math/pprz_orientation_conversion.h ****   /**
  81:./math/pprz_orientation_conversion.h ****    * Holds the status bits for all orientation representations.
  82:./math/pprz_orientation_conversion.h ****    * When the corresponding bit is set, the representation
  83:./math/pprz_orientation_conversion.h ****    * is already computed.
  84:./math/pprz_orientation_conversion.h ****    */
  85:./math/pprz_orientation_conversion.h ****   uint8_t status;
  86:./math/pprz_orientation_conversion.h **** 
  87:./math/pprz_orientation_conversion.h ****   /**
  88:./math/pprz_orientation_conversion.h ****    * Orientation quaternion.
  89:./math/pprz_orientation_conversion.h ****    * Units: #INT32_QUAT_FRAC
  90:./math/pprz_orientation_conversion.h ****    */
  91:./math/pprz_orientation_conversion.h ****   struct Int32Quat quat_i;
  92:./math/pprz_orientation_conversion.h **** 
  93:./math/pprz_orientation_conversion.h ****   /**
  94:./math/pprz_orientation_conversion.h ****    * Orientation in zyx euler angles.
  95:./math/pprz_orientation_conversion.h ****    * Units: rad in BFP with #INT32_ANGLE_FRAC
  96:./math/pprz_orientation_conversion.h ****    */
  97:./math/pprz_orientation_conversion.h ****   struct Int32Eulers eulers_i;
  98:./math/pprz_orientation_conversion.h **** 
  99:./math/pprz_orientation_conversion.h ****   /**
 100:./math/pprz_orientation_conversion.h ****    * Orientation rotation matrix.
 101:./math/pprz_orientation_conversion.h ****    * Units: rad in BFP with #INT32_TRIG_FRAC
 102:./math/pprz_orientation_conversion.h ****    */
 103:./math/pprz_orientation_conversion.h ****   struct Int32RMat rmat_i;
 104:./math/pprz_orientation_conversion.h **** 
 105:./math/pprz_orientation_conversion.h ****   /**
 106:./math/pprz_orientation_conversion.h ****    * Orientation as quaternion.
 107:./math/pprz_orientation_conversion.h ****    * Units: unit length quaternion
 108:./math/pprz_orientation_conversion.h ****    */
 109:./math/pprz_orientation_conversion.h ****   struct FloatQuat quat_f;
 110:./math/pprz_orientation_conversion.h **** 
 111:./math/pprz_orientation_conversion.h ****   /**
 112:./math/pprz_orientation_conversion.h ****    * Orienation in zyx euler angles.
 113:./math/pprz_orientation_conversion.h ****    * Units: rad
 114:./math/pprz_orientation_conversion.h ****    */
 115:./math/pprz_orientation_conversion.h ****   struct FloatEulers eulers_f;
 116:./math/pprz_orientation_conversion.h **** 
 117:./math/pprz_orientation_conversion.h ****   /**
 118:./math/pprz_orientation_conversion.h ****    * Orientation rotation matrix.
 119:./math/pprz_orientation_conversion.h ****    * Units: rad
 120:./math/pprz_orientation_conversion.h ****    */
 121:./math/pprz_orientation_conversion.h ****   struct FloatRMat   rmat_f;
 122:./math/pprz_orientation_conversion.h **** };
 123:./math/pprz_orientation_conversion.h **** 
 124:./math/pprz_orientation_conversion.h **** /************* declaration of transformation functions ************/
 125:./math/pprz_orientation_conversion.h **** extern void orientationCalcQuat_i(struct OrientationReps *orientation);
 126:./math/pprz_orientation_conversion.h **** extern void orientationCalcRMat_i(struct OrientationReps *orientation);
 127:./math/pprz_orientation_conversion.h **** extern void orientationCalcEulers_i(struct OrientationReps *orientation);
 128:./math/pprz_orientation_conversion.h **** extern void orientationCalcQuat_f(struct OrientationReps *orientation);
 129:./math/pprz_orientation_conversion.h **** extern void orientationCalcRMat_f(struct OrientationReps *orientation);
 130:./math/pprz_orientation_conversion.h **** extern void orientationCalcEulers_f(struct OrientationReps *orientation);
 131:./math/pprz_orientation_conversion.h **** 
 132:./math/pprz_orientation_conversion.h **** 
 133:./math/pprz_orientation_conversion.h **** /*********************** validity test functions ******************/
 134:./math/pprz_orientation_conversion.h **** /// Test if orientations are valid.
 135:./math/pprz_orientation_conversion.h **** static inline bool_t orienationCheckValid(struct OrientationReps *orientation)
 136:./math/pprz_orientation_conversion.h **** {
 137:./math/pprz_orientation_conversion.h ****   return (orientation->status);
 138:./math/pprz_orientation_conversion.h **** }
 139:./math/pprz_orientation_conversion.h **** 
 140:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from quaternion (int).
 141:./math/pprz_orientation_conversion.h **** static inline void orientationSetQuat_i(struct OrientationReps *orientation, struct Int32Quat *quat
 142:./math/pprz_orientation_conversion.h **** {
 143:./math/pprz_orientation_conversion.h ****   QUAT_COPY(orientation->quat_i, *quat);
 144:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 145:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_QUAT_I);
 146:./math/pprz_orientation_conversion.h **** }
 147:./math/pprz_orientation_conversion.h **** 
 148:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from rotation matrix (int).
 149:./math/pprz_orientation_conversion.h **** static inline void orientationSetRMat_i(struct OrientationReps *orientation, struct Int32RMat *rmat
 150:./math/pprz_orientation_conversion.h **** {
 151:./math/pprz_orientation_conversion.h ****   RMAT_COPY(orientation->rmat_i, *rmat);
 152:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 153:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_RMAT_I);
 154:./math/pprz_orientation_conversion.h **** }
 155:./math/pprz_orientation_conversion.h **** 
 156:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from euler angles (int).
 157:./math/pprz_orientation_conversion.h **** static inline void orientationSetEulers_i(struct OrientationReps *orientation, struct Int32Eulers *
 158:./math/pprz_orientation_conversion.h **** {
 159:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_i, *eulers);
 160:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 161:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_I);
 162:./math/pprz_orientation_conversion.h **** }
 163:./math/pprz_orientation_conversion.h **** 
 164:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from quaternion (float).
 165:./math/pprz_orientation_conversion.h **** static inline void orientationSetQuat_f(struct OrientationReps *orientation, struct FloatQuat *quat
 166:./math/pprz_orientation_conversion.h **** {
 167:./math/pprz_orientation_conversion.h ****   QUAT_COPY(orientation->quat_f, *quat);
 168:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 169:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_QUAT_F);
 170:./math/pprz_orientation_conversion.h **** }
 171:./math/pprz_orientation_conversion.h **** 
 172:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from rotation matrix (float).
 173:./math/pprz_orientation_conversion.h **** static inline void orientationSetRMat_f(struct OrientationReps *orientation, struct FloatRMat *rmat
 174:./math/pprz_orientation_conversion.h **** {
 175:./math/pprz_orientation_conversion.h ****   RMAT_COPY(orientation->rmat_f, *rmat);
 176:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 177:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_RMAT_F);
 178:./math/pprz_orientation_conversion.h **** }
 179:./math/pprz_orientation_conversion.h **** 
 180:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from euler angles (float).
 181:./math/pprz_orientation_conversion.h **** static inline void orientationSetEulers_f(struct OrientationReps *orientation, struct FloatEulers *
 182:./math/pprz_orientation_conversion.h **** {
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 184:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 186:./math/pprz_orientation_conversion.h **** }
 187:./math/pprz_orientation_conversion.h **** 
 188:./math/pprz_orientation_conversion.h **** 
 189:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude quaternion (int).
 190:./math/pprz_orientation_conversion.h **** static inline struct Int32Quat *orientationGetQuat_i(struct OrientationReps *orientation)
 191:./math/pprz_orientation_conversion.h **** {
 192:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_QUAT_I)) {
 193:./math/pprz_orientation_conversion.h ****     orientationCalcQuat_i(orientation);
 194:./math/pprz_orientation_conversion.h ****   }
 195:./math/pprz_orientation_conversion.h ****   return &orientation->quat_i;
 196:./math/pprz_orientation_conversion.h **** }
 197:./math/pprz_orientation_conversion.h **** 
 198:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude rotation matrix (int).
 199:./math/pprz_orientation_conversion.h **** static inline struct Int32RMat *orientationGetRMat_i(struct OrientationReps *orientation)
 200:./math/pprz_orientation_conversion.h **** {
 201:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_RMAT_I)) {
 202:./math/pprz_orientation_conversion.h ****     orientationCalcRMat_i(orientation);
 203:./math/pprz_orientation_conversion.h ****   }
 204:./math/pprz_orientation_conversion.h ****   return &orientation->rmat_i;
 205:./math/pprz_orientation_conversion.h **** }
 206:./math/pprz_orientation_conversion.h **** 
 207:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude euler angles (int).
 208:./math/pprz_orientation_conversion.h **** static inline struct Int32Eulers *orientationGetEulers_i(struct OrientationReps *orientation)
 209:./math/pprz_orientation_conversion.h **** {
 210:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_EULER_I)) {
 1581              		.loc 4 210 0
 1582 0002 0548     		ldr	r0, .L75
 1583 0004 90F8A431 		ldrb	r3, [r0, #420]	@ zero_extendqisi2
 1584 0008 9B07     		lsls	r3, r3, #30
 1585 000a 03D4     		bmi	.L74
 211:./math/pprz_orientation_conversion.h ****     orientationCalcEulers_i(orientation);
 1586              		.loc 4 211 0
 1587 000c 00F5D270 		add	r0, r0, #420
 1588 0010 FFF7FEFF 		bl	orientationCalcEulers_i
 1589              	.LVL130:
 1590              	.L74:
 1591              	.LBE35:
 1592              	.LBE34:
1098:./state.h     ****   return orientationGetEulers_i(&state.ned_to_body_orientation);
1099:./state.h     **** }
 1593              		.loc 1 1099 0
 1594 0014 0148     		ldr	r0, .L75+4
 1595 0016 08BD     		pop	{r3, pc}
 1596              	.L76:
 1597              		.align	2
 1598              	.L75:
 1599 0018 00000000 		.word	state
 1600 001c B8010000 		.word	state+440
 1601              		.cfi_endproc
 1602              	.LFE130:
 1604              		.section	.text.send_tune_hover,"ax",%progbits
 1605              		.align	1
 1606              		.thumb
 1607              		.thumb_func
 1609              	send_tune_hover:
 1610              	.LFB464:
 156:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1611              		.loc 2 156 0
 1612              		.cfi_startproc
 1613              		@ args = 0, pretend = 0, frame = 8
 1614              		@ frame_needed = 0, uses_anonymous_args = 0
 1615              	.LVL131:
 1616 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1617              		.cfi_def_cfa_offset 36
 1618              		.cfi_offset 4, -36
 1619              		.cfi_offset 5, -32
 1620              		.cfi_offset 6, -28
 1621              		.cfi_offset 7, -24
 1622              		.cfi_offset 8, -20
 1623              		.cfi_offset 9, -16
 1624              		.cfi_offset 10, -12
 1625              		.cfi_offset 11, -8
 1626              		.cfi_offset 14, -4
 1627 0004 85B0     		sub	sp, sp, #20
 1628              		.cfi_def_cfa_offset 56
 156:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1629              		.loc 2 156 0
 1630 0006 0C46     		mov	r4, r1
 1631 0008 0746     		mov	r7, r0
 165:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->phi),
 1632              		.loc 2 165 0
 1633 000a FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 1634              	.LVL132:
 1635 000e 8046     		mov	r8, r0
 166:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->theta),
 1636              		.loc 2 166 0
 1637 0010 FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 1638              	.LVL133:
 1639 0014 8346     		mov	fp, r0
 167:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->psi));
 1640              		.loc 2 167 0
 1641 0016 FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 1642              	.LVL134:
 1643              	.LBB38:
 1644              	.LBB39:
2775:/home/lsk/paparazzi/var/include/messages.h **** }
2776:/home/lsk/paparazzi/var/include/messages.h **** 
2777:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_TUNE_HOVER(_trans, _dev, rc_roll, rc_pitch, rc_yaw, cmd_roll, cmd_
2778:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_TUNE_HOVER(struct transport_tx *trans, struct link_devi
2779:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4
 1645              		.loc 3 2779 0
 1646 001a 3E6A     		ldr	r6, [r7, #32]
 1647 001c 3B68     		ldr	r3, [r7]
 1648 001e D7F80490 		ldr	r9, [r7, #4]
 1649 0022 0125     		movs	r5, #1
 1650 0024 2421     		movs	r1, #36
 1651              	.LBE39:
 1652              	.LBE38:
 167:firmwares/rotorcraft/guidance/guidance_h.c ****                                       &(stateGetNedToBodyEulers_i()->psi));
 1653              		.loc 2 167 0
 1654 0026 8246     		mov	r10, r0
 1655              	.LVL135:
 1656 0028 8DF80F50 		strb	r5, [sp, #15]
 1657              	.LVL136:
 1658              	.LBB43:
 1659              	.LBB40:
 1660              		.loc 3 2779 0
 1661 002c 3046     		mov	r0, r6
 1662              	.LVL137:
 1663 002e 9847     		blx	r3
 1664              	.LVL138:
 1665 0030 2146     		mov	r1, r4
 1666 0032 0246     		mov	r2, r0
 1667 0034 3046     		mov	r0, r6
 1668 0036 C847     		blx	r9
 1669              	.LVL139:
 1670 0038 0028     		cmp	r0, #0
 1671 003a 00F08D80 		beq	.L78
2780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg
 1672              		.loc 3 2780 0
 1673 003e 3E6A     		ldr	r6, [r7, #32]
 1674 0040 3B68     		ldr	r3, [r7]
 1675 0042 D7F81C90 		ldr	r9, [r7, #28]
 1676 0046 3046     		mov	r0, r6
 1677 0048 2421     		movs	r1, #36
 1678 004a 9847     		blx	r3
 1679              	.LVL140:
 1680 004c 2146     		mov	r1, r4
 1681 004e 0246     		mov	r2, r0
 1682 0050 3046     		mov	r0, r6
 1683 0052 C847     		blx	r9
 1684              	.LVL141:
2781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 1685              		.loc 3 2781 0
 1686 0054 3B69     		ldr	r3, [r7, #16]
 1687 0056 386A     		ldr	r0, [r7, #32]
2782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_TUNE_HOVE
2784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_roll);
 1688              		.loc 3 2784 0
 1689 0058 434E     		ldr	r6, .L81
 1690              	.LVL142:
2781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 1691              		.loc 3 2781 0
 1692 005a 2146     		mov	r1, r4
 1693 005c 2422     		movs	r2, #36
 1694 005e 9847     		blx	r3
 1695              	.LVL143:
2782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1696              		.loc 3 2782 0
 1697 0060 0DF10F03 		add	r3, sp, #15
 1698 0064 0193     		str	r3, [sp, #4]
 1699 0066 0095     		str	r5, [sp]
 1700 0068 BD68     		ldr	r5, [r7, #8]
 1701              	.LVL144:
 1702 006a 386A     		ldr	r0, [r7, #32]
 1703 006c 2146     		mov	r1, r4
 1704 006e 0222     		movs	r2, #2
 1705 0070 0023     		movs	r3, #0
 1706              	.LVL145:
 1707 0072 A847     		blx	r5
 1708              	.LVL146:
2783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_TUNE_HOVE
 1709              		.loc 3 2783 0
 1710 0074 9623     		movs	r3, #150
 1711 0076 0093     		str	r3, [sp]
 1712 0078 3C4B     		ldr	r3, .L81+4
 1713 007a 0193     		str	r3, [sp, #4]
 1714              		.loc 3 2784 0
 1715 007c 4FF00209 		mov	r9, #2
2783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_TUNE_HOVE
 1716              		.loc 3 2783 0
 1717 0080 FD68     		ldr	r5, [r7, #12]
 1718 0082 386A     		ldr	r0, [r7, #32]
 1719 0084 2146     		mov	r1, r4
 1720 0086 0222     		movs	r2, #2
 1721 0088 0023     		movs	r3, #0
 1722 008a A847     		blx	r5
 1723              	.LVL147:
 1724              		.loc 3 2784 0
 1725 008c CDF80090 		str	r9, [sp]
 1726 0090 0196     		str	r6, [sp, #4]
 1727 0092 386A     		ldr	r0, [r7, #32]
 1728 0094 BD68     		ldr	r5, [r7, #8]
 1729 0096 2146     		mov	r1, r4
 1730 0098 0522     		movs	r2, #5
 1731 009a 0023     		movs	r3, #0
 1732 009c A847     		blx	r5
 1733              	.LVL148:
2785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_pitch);
 1734              		.loc 3 2785 0
 1735 009e 06EB0903 		add	r3, r6, r9
 1736 00a2 CDF80090 		str	r9, [sp]
 1737 00a6 0193     		str	r3, [sp, #4]
 1738 00a8 386A     		ldr	r0, [r7, #32]
 1739 00aa BD68     		ldr	r5, [r7, #8]
 1740 00ac 2146     		mov	r1, r4
 1741 00ae 0522     		movs	r2, #5
 1742 00b0 0023     		movs	r3, #0
2786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_yaw);
 1743              		.loc 3 2786 0
 1744 00b2 0636     		adds	r6, r6, #6
 1745              	.LVL149:
2785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_pitch);
 1746              		.loc 3 2785 0
 1747 00b4 A847     		blx	r5
 1748              	.LVL150:
 1749              		.loc 3 2786 0
 1750 00b6 CDF80090 		str	r9, [sp]
 1751 00ba 0196     		str	r6, [sp, #4]
 1752 00bc BD68     		ldr	r5, [r7, #8]
 1753 00be 386A     		ldr	r0, [r7, #32]
2787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
 1754              		.loc 3 2787 0
 1755 00c0 DFF8AC90 		ldr	r9, .L81+8
2786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_yaw);
 1756              		.loc 3 2786 0
 1757 00c4 2146     		mov	r1, r4
 1758 00c6 0522     		movs	r2, #5
 1759 00c8 0023     		movs	r3, #0
 1760 00ca A847     		blx	r5
 1761              	.LVL151:
 1762              		.loc 3 2787 0
 1763 00cc 0425     		movs	r5, #4
 1764 00ce 0095     		str	r5, [sp]
 1765 00d0 CDF80490 		str	r9, [sp, #4]
 1766 00d4 386A     		ldr	r0, [r7, #32]
 1767 00d6 BE68     		ldr	r6, [r7, #8]
 1768 00d8 2146     		mov	r1, r4
 1769 00da 0722     		movs	r2, #7
 1770 00dc 0023     		movs	r3, #0
 1771 00de B047     		blx	r6
 1772              	.LVL152:
2788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
 1773              		.loc 3 2788 0
 1774 00e0 09EB0503 		add	r3, r9, r5
 1775 00e4 0095     		str	r5, [sp]
 1776 00e6 0193     		str	r3, [sp, #4]
 1777 00e8 386A     		ldr	r0, [r7, #32]
 1778 00ea BE68     		ldr	r6, [r7, #8]
 1779 00ec 2146     		mov	r1, r4
 1780 00ee 0722     		movs	r2, #7
 1781 00f0 0023     		movs	r3, #0
 1782 00f2 B047     		blx	r6
 1783              	.LVL153:
2789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
 1784              		.loc 3 2789 0
 1785 00f4 09F10803 		add	r3, r9, #8
 1786 00f8 0095     		str	r5, [sp]
 1787 00fa 0193     		str	r3, [sp, #4]
 1788 00fc 386A     		ldr	r0, [r7, #32]
 1789 00fe BE68     		ldr	r6, [r7, #8]
 1790 0100 2146     		mov	r1, r4
 1791 0102 0722     		movs	r2, #7
 1792 0104 0023     		movs	r3, #0
 1793 0106 B047     		blx	r6
 1794              	.LVL154:
2790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
 1795              		.loc 3 2790 0
 1796 0108 09F10C03 		add	r3, r9, #12
 1797 010c 0095     		str	r5, [sp]
 1798 010e 0193     		str	r3, [sp, #4]
 1799 0110 BE68     		ldr	r6, [r7, #8]
 1800 0112 386A     		ldr	r0, [r7, #32]
 1801 0114 2146     		mov	r1, r4
 1802 0116 0722     		movs	r2, #7
 1803 0118 0023     		movs	r3, #0
 1804 011a B047     		blx	r6
 1805              	.LVL155:
2791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
 1806              		.loc 3 2791 0
 1807 011c 8DE82001 		stmia	sp, {r5, r8}
 1808 0120 2146     		mov	r1, r4
 1809 0122 BE68     		ldr	r6, [r7, #8]
 1810 0124 386A     		ldr	r0, [r7, #32]
 1811 0126 0722     		movs	r2, #7
 1812 0128 0023     		movs	r3, #0
 1813 012a B047     		blx	r6
 1814              	.LVL156:
 1815              	.LBE40:
 1816              	.LBE43:
 157:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_ROTORCRAFT_TUNE_HOVER(trans, dev, AC_ID,
 1817              		.loc 2 157 0
 1818 012c 0BEB0503 		add	r3, fp, r5
 1819              	.LVL157:
 1820              	.LBB44:
 1821              	.LBB41:
2792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
 1822              		.loc 3 2792 0
 1823 0130 0095     		str	r5, [sp]
 1824 0132 0193     		str	r3, [sp, #4]
 1825 0134 386A     		ldr	r0, [r7, #32]
 1826 0136 BE68     		ldr	r6, [r7, #8]
 1827 0138 2146     		mov	r1, r4
 1828 013a 0722     		movs	r2, #7
 1829 013c 0023     		movs	r3, #0
 1830              	.LVL158:
 1831 013e B047     		blx	r6
 1832              	.LVL159:
 1833              	.LBE41:
 1834              	.LBE44:
 157:firmwares/rotorcraft/guidance/guidance_h.c ****   pprz_msg_send_ROTORCRAFT_TUNE_HOVER(trans, dev, AC_ID,
 1835              		.loc 2 157 0
 1836 0140 0AF10803 		add	r3, r10, #8
 1837              	.LVL160:
 1838              	.LBB45:
 1839              	.LBB42:
2793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
 1840              		.loc 3 2793 0
 1841 0144 0193     		str	r3, [sp, #4]
 1842 0146 0095     		str	r5, [sp]
 1843 0148 0023     		movs	r3, #0
 1844              	.LVL161:
 1845 014a BD68     		ldr	r5, [r7, #8]
 1846 014c 386A     		ldr	r0, [r7, #32]
 1847 014e 2146     		mov	r1, r4
 1848 0150 0722     		movs	r2, #7
 1849 0152 A847     		blx	r5
 1850              	.LVL162:
2794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1851              		.loc 3 2794 0
 1852 0154 7B69     		ldr	r3, [r7, #20]
 1853 0156 00E0     		b	.L80
 1854              	.L78:
2795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 1855              		.loc 3 2796 0
 1856 0158 BB69     		ldr	r3, [r7, #24]
 1857              	.L80:
 1858 015a 386A     		ldr	r0, [r7, #32]
 1859 015c 2146     		mov	r1, r4
 1860 015e 9847     		blx	r3
 1861              	.LVL163:
 1862              	.LBE42:
 1863              	.LBE45:
 168:firmwares/rotorcraft/guidance/guidance_h.c **** }
 1864              		.loc 2 168 0
 1865 0160 05B0     		add	sp, sp, #20
 1866              		@ sp needed
 1867 0162 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1868              	.LVL164:
 1869              	.L82:
 1870 0166 00BF     		.align	2
 1871              	.L81:
 1872 0168 06000000 		.word	radio_control+6
 1873 016c 2D000000 		.word	.LC3
 1874 0170 00000000 		.word	stabilization_cmd
 1875              		.cfi_endproc
 1876              	.LFE464:
 1878              		.section	.text.guidance_h_hover_enter,"ax",%progbits
 1879              		.align	1
 1880              		.thumb
 1881              		.thumb_func
 1883              	guidance_h_hover_enter:
 1884              	.LFB472:
 525:firmwares/rotorcraft/guidance/guidance_h.c **** 
 526:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_hover_enter(void)
 527:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1885              		.loc 2 527 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889 0000 10B5     		push	{r4, lr}
 1890              		.cfi_def_cfa_offset 8
 1891              		.cfi_offset 4, -8
 1892              		.cfi_offset 14, -4
 528:firmwares/rotorcraft/guidance/guidance_h.c **** 
 529:firmwares/rotorcraft/guidance/guidance_h.c ****   /* set horizontal setpoint to current position */
 530:firmwares/rotorcraft/guidance/guidance_h.c ****   VECT2_COPY(guidance_h_pos_sp, *stateGetPositionNed_i());
 1893              		.loc 2 530 0
 1894 0002 FFF7FEFF 		bl	stateGetPositionNed_i
 1895              	.LVL165:
 1896 0006 074C     		ldr	r4, .L84
 1897 0008 0368     		ldr	r3, [r0]
 1898 000a 2360     		str	r3, [r4]
 1899 000c FFF7FEFF 		bl	stateGetPositionNed_i
 1900              	.LVL166:
 1901 0010 4368     		ldr	r3, [r0, #4]
 1902 0012 6360     		str	r3, [r4, #4]
 531:firmwares/rotorcraft/guidance/guidance_h.c **** 
 532:firmwares/rotorcraft/guidance/guidance_h.c ****   reset_guidance_reference_from_current_position();
 1903              		.loc 2 532 0
 1904 0014 FFF7FEFF 		bl	reset_guidance_reference_from_current_position
 1905              	.LVL167:
 533:firmwares/rotorcraft/guidance/guidance_h.c **** 
 534:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_rc_sp.psi = stateGetNedToBodyEulers_i()->psi;
 1906              		.loc 2 534 0
 1907 0018 FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 1908              	.LVL168:
 1909 001c 024B     		ldr	r3, .L84+4
 1910 001e 8268     		ldr	r2, [r0, #8]
 1911 0020 9A60     		str	r2, [r3, #8]
 1912 0022 10BD     		pop	{r4, pc}
 1913              	.L85:
 1914              		.align	2
 1915              	.L84:
 1916 0024 00000000 		.word	.LANCHOR6
 1917 0028 00000000 		.word	.LANCHOR19
 1918              		.cfi_endproc
 1919              	.LFE472:
 1921              		.section	.text.guidance_h_nav_enter,"ax",%progbits
 1922              		.align	1
 1923              		.thumb
 1924              		.thumb_func
 1926              	guidance_h_nav_enter:
 1927              	.LFB473:
 535:firmwares/rotorcraft/guidance/guidance_h.c **** }
 536:firmwares/rotorcraft/guidance/guidance_h.c **** 
 537:firmwares/rotorcraft/guidance/guidance_h.c **** static void guidance_h_nav_enter(void)
 538:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1928              		.loc 2 538 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 0
 1931              		@ frame_needed = 0, uses_anonymous_args = 0
 539:firmwares/rotorcraft/guidance/guidance_h.c **** 
 540:firmwares/rotorcraft/guidance/guidance_h.c ****   /* horizontal position setpoint from navigation/flightplan */
 541:firmwares/rotorcraft/guidance/guidance_h.c ****   INT32_VECT2_NED_OF_ENU(guidance_h_pos_sp, navigation_carrot);
 1932              		.loc 2 541 0
 1933 0000 074A     		ldr	r2, .L87
 538:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1934              		.loc 2 538 0
 1935 0002 08B5     		push	{r3, lr}
 1936              		.cfi_def_cfa_offset 8
 1937              		.cfi_offset 3, -8
 1938              		.cfi_offset 14, -4
 1939              		.loc 2 541 0
 1940 0004 074B     		ldr	r3, .L87+4
 1941 0006 5168     		ldr	r1, [r2, #4]
 1942 0008 1268     		ldr	r2, [r2]
 1943 000a 5A60     		str	r2, [r3, #4]
 1944 000c 1960     		str	r1, [r3]
 542:firmwares/rotorcraft/guidance/guidance_h.c **** 
 543:firmwares/rotorcraft/guidance/guidance_h.c ****   reset_guidance_reference_from_current_position();
 1945              		.loc 2 543 0
 1946 000e FFF7FEFF 		bl	reset_guidance_reference_from_current_position
 1947              	.LVL169:
 544:firmwares/rotorcraft/guidance/guidance_h.c **** 
 545:firmwares/rotorcraft/guidance/guidance_h.c ****   nav_heading = stateGetNedToBodyEulers_i()->psi;
 1948              		.loc 2 545 0
 1949 0012 FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 1950              	.LVL170:
 1951 0016 044B     		ldr	r3, .L87+8
 1952 0018 8268     		ldr	r2, [r0, #8]
 1953 001a 1A60     		str	r2, [r3]
 1954 001c 08BD     		pop	{r3, pc}
 1955              	.L88:
 1956 001e 00BF     		.align	2
 1957              	.L87:
 1958 0020 00000000 		.word	navigation_carrot
 1959 0024 00000000 		.word	.LANCHOR6
 1960 0028 00000000 		.word	nav_heading
 1961              		.cfi_endproc
 1962              	.LFE473:
 1964              		.section	.text.guidance_h_init,"ax",%progbits
 1965              		.align	1
 1966              		.global	guidance_h_init
 1967              		.thumb
 1968              		.thumb_func
 1970              	guidance_h_init:
 1971              	.LFB465:
 173:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1972              		.loc 2 173 0
 1973              		.cfi_startproc
 1974              		@ args = 0, pretend = 0, frame = 0
 1975              		@ frame_needed = 0, uses_anonymous_args = 0
 175:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_mode = GUIDANCE_H_MODE_KILL;
 1976              		.loc 2 175 0
 1977 0000 1F4A     		ldr	r2, .L90
 1978 0002 0023     		movs	r3, #0
 173:firmwares/rotorcraft/guidance/guidance_h.c **** {
 1979              		.loc 2 173 0
 1980 0004 10B5     		push	{r4, lr}
 1981              		.cfi_def_cfa_offset 8
 1982              		.cfi_offset 4, -8
 1983              		.cfi_offset 14, -4
 175:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_mode = GUIDANCE_H_MODE_KILL;
 1984              		.loc 2 175 0
 1985 0006 1370     		strb	r3, [r2]
 176:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_use_ref = GUIDANCE_H_USE_REF;
 1986              		.loc 2 176 0
 1987 0008 1E4A     		ldr	r2, .L90+4
 194:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "GUIDANCE_H_INT", send_gh);
 1988              		.loc 2 194 0
 1989 000a 1F4C     		ldr	r4, .L90+8
 176:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_use_ref = GUIDANCE_H_USE_REF;
 1990              		.loc 2 176 0
 1991 000c 0121     		movs	r1, #1
 1992 000e 1170     		strb	r1, [r2]
 177:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_approx_force_by_thrust = GUIDANCE_H_APPROX_FORCE_BY_THRUST;
 1993              		.loc 2 177 0
 1994 0010 1E4A     		ldr	r2, .L90+12
 1995 0012 1370     		strb	r3, [r2]
 179:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_VECT2_ZERO(guidance_h_pos_sp);
 1996              		.loc 2 179 0
 1997 0014 1E4A     		ldr	r2, .L90+16
 1998 0016 1360     		str	r3, [r2]
 1999 0018 5360     		str	r3, [r2, #4]
 180:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_VECT2_ZERO(guidance_h_trim_att_integrator);
 2000              		.loc 2 180 0
 2001 001a 1E4A     		ldr	r2, .L90+20
 2002 001c 1360     		str	r3, [r2]
 2003 001e 5360     		str	r3, [r2, #4]
 181:firmwares/rotorcraft/guidance/guidance_h.c ****   INT_EULERS_ZERO(guidance_h_rc_sp);
 2004              		.loc 2 181 0
 2005 0020 1D4A     		ldr	r2, .L90+24
 2006 0022 1360     		str	r3, [r2]
 2007 0024 5360     		str	r3, [r2, #4]
 2008 0026 9360     		str	r3, [r2, #8]
 182:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_heading_sp = 0;
 2009              		.loc 2 182 0
 2010 0028 1C4A     		ldr	r2, .L90+28
 2011 002a 1360     		str	r3, [r2]
 183:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_pgain = GUIDANCE_H_PGAIN;
 2012              		.loc 2 183 0
 2013 002c 1C4A     		ldr	r2, .L90+32
 2014 002e 6421     		movs	r1, #100
 2015 0030 1160     		str	r1, [r2]
 184:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_igain = GUIDANCE_H_IGAIN;
 2016              		.loc 2 184 0
 2017 0032 1C49     		ldr	r1, .L90+36
 2018 0034 0A22     		movs	r2, #10
 2019 0036 0A60     		str	r2, [r1]
 185:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_dgain = GUIDANCE_H_DGAIN;
 2020              		.loc 2 185 0
 2021 0038 1B49     		ldr	r1, .L90+40
 2022 003a 7820     		movs	r0, #120
 2023 003c 0860     		str	r0, [r1]
 186:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_again = GUIDANCE_H_AGAIN;
 2024              		.loc 2 186 0
 2025 003e 1B49     		ldr	r1, .L90+44
 2026 0040 0A60     		str	r2, [r1]
 187:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_vgain = GUIDANCE_H_VGAIN;
 2027              		.loc 2 187 0
 2028 0042 1B4A     		ldr	r2, .L90+48
 2029 0044 1360     		str	r3, [r2]
 188:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_percentage = 0;
 2030              		.loc 2 188 0
 2031 0046 1B4A     		ldr	r2, .L90+52
 2032 0048 1360     		str	r3, [r2]
 189:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_theta_offset = 0;
 2033              		.loc 2 189 0
 2034 004a 1B4A     		ldr	r2, .L90+56
 2035 004c 1360     		str	r3, [r2]
 191:firmwares/rotorcraft/guidance/guidance_h.c ****   gh_ref_init();
 2036              		.loc 2 191 0
 2037 004e FFF7FEFF 		bl	gh_ref_init
 2038              	.LVL171:
 194:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "GUIDANCE_H_INT", send_gh);
 2039              		.loc 2 194 0
 2040 0052 2046     		mov	r0, r4
 2041 0054 1949     		ldr	r1, .L90+60
 2042 0056 1A4A     		ldr	r2, .L90+64
 2043 0058 FFF7FEFF 		bl	register_periodic_telemetry
 2044              	.LVL172:
 195:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "HOVER_LOOP", send_hover_loop);
 2045              		.loc 2 195 0
 2046 005c 2046     		mov	r0, r4
 2047 005e 1949     		ldr	r1, .L90+68
 2048 0060 194A     		ldr	r2, .L90+72
 2049 0062 FFF7FEFF 		bl	register_periodic_telemetry
 2050              	.LVL173:
 196:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "GUIDANCE_H_REF", send_href);
 2051              		.loc 2 196 0
 2052 0066 2046     		mov	r0, r4
 2053 0068 1849     		ldr	r1, .L90+76
 2054 006a 194A     		ldr	r2, .L90+80
 2055 006c FFF7FEFF 		bl	register_periodic_telemetry
 2056              	.LVL174:
 197:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "ROTORCRAFT_TUNE_HOVER", send_tune_hover);
 2057              		.loc 2 197 0
 2058 0070 2046     		mov	r0, r4
 2059 0072 1849     		ldr	r1, .L90+84
 2060 0074 184A     		ldr	r2, .L90+88
 199:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2061              		.loc 2 199 0
 2062 0076 BDE81040 		pop	{r4, lr}
 197:firmwares/rotorcraft/guidance/guidance_h.c ****   register_periodic_telemetry(DefaultPeriodic, "ROTORCRAFT_TUNE_HOVER", send_tune_hover);
 2063              		.loc 2 197 0
 2064 007a FFF7FEBF 		b	register_periodic_telemetry
 2065              	.LVL175:
 2066              	.L91:
 2067 007e 00BF     		.align	2
 2068              	.L90:
 2069 0080 00000000 		.word	.LANCHOR4
 2070 0084 00000000 		.word	.LANCHOR7
 2071 0088 00000000 		.word	pprz_telemetry
 2072 008c 00000000 		.word	.LANCHOR16
 2073 0090 00000000 		.word	.LANCHOR6
 2074 0094 00000000 		.word	.LANCHOR3
 2075 0098 00000000 		.word	.LANCHOR19
 2076 009c 00000000 		.word	.LANCHOR18
 2077 00a0 00000000 		.word	.LANCHOR10
 2078 00a4 00000000 		.word	.LANCHOR15
 2079 00a8 00000000 		.word	.LANCHOR11
 2080 00ac 00000000 		.word	.LANCHOR13
 2081 00b0 00000000 		.word	.LANCHOR12
 2082 00b4 00000000 		.word	.LANCHOR20
 2083 00b8 00000000 		.word	.LANCHOR21
 2084 00bc 1E000000 		.word	.LC2
 2085 00c0 00000000 		.word	send_gh
 2086 00c4 13000000 		.word	.LC1
 2087 00c8 00000000 		.word	send_hover_loop
 2088 00cc 43000000 		.word	.LC4
 2089 00d0 00000000 		.word	send_href
 2090 00d4 2D000000 		.word	.LC3
 2091 00d8 00000000 		.word	send_tune_hover
 2092              		.cfi_endproc
 2093              	.LFE465:
 2095              		.section	.text.guidance_h_mode_changed,"ax",%progbits
 2096              		.align	1
 2097              		.global	guidance_h_mode_changed
 2098              		.thumb
 2099              		.thumb_func
 2101              	guidance_h_mode_changed:
 2102              	.LFB467:
 213:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2103              		.loc 2 213 0
 2104              		.cfi_startproc
 2105              		@ args = 0, pretend = 0, frame = 0
 2106              		@ frame_needed = 0, uses_anonymous_args = 0
 2107              	.LVL176:
 2108 0000 38B5     		push	{r3, r4, r5, lr}
 2109              		.cfi_def_cfa_offset 16
 2110              		.cfi_offset 3, -16
 2111              		.cfi_offset 4, -12
 2112              		.cfi_offset 5, -8
 2113              		.cfi_offset 14, -4
 214:firmwares/rotorcraft/guidance/guidance_h.c ****   if (new_mode == guidance_h_mode) {
 2114              		.loc 2 214 0
 2115 0002 144B     		ldr	r3, .L106
 2116 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2117 0006 8242     		cmp	r2, r0
 213:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2118              		.loc 2 213 0
 2119 0008 0446     		mov	r4, r0
 2120 000a 1D46     		mov	r5, r3
 214:firmwares/rotorcraft/guidance/guidance_h.c ****   if (new_mode == guidance_h_mode) {
 2121              		.loc 2 214 0
 2122 000c 21D0     		beq	.L92
 218:firmwares/rotorcraft/guidance/guidance_h.c ****   if (new_mode != GUIDANCE_H_MODE_FORWARD && new_mode != GUIDANCE_H_MODE_RATE) {
 2123              		.loc 2 218 0
 2124 000e 0728     		cmp	r0, #7
 2125 0010 1CD0     		beq	.L105
 218:firmwares/rotorcraft/guidance/guidance_h.c ****   if (new_mode != GUIDANCE_H_MODE_FORWARD && new_mode != GUIDANCE_H_MODE_RATE) {
 2126              		.loc 2 218 0 is_stmt 0 discriminator 1
 2127 0012 0128     		cmp	r0, #1
 2128 0014 0FD0     		beq	.L95
 219:firmwares/rotorcraft/guidance/guidance_h.c ****     transition_percentage = 0;
 2129              		.loc 2 219 0 is_stmt 1
 2130 0016 104A     		ldr	r2, .L106+4
 2131 0018 0023     		movs	r3, #0
 2132 001a 1360     		str	r3, [r2]
 220:firmwares/rotorcraft/guidance/guidance_h.c ****     transition_theta_offset = 0;
 2133              		.loc 2 220 0
 2134 001c 0F4A     		ldr	r2, .L106+8
 2135 001e 1360     		str	r3, [r2]
 223:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (new_mode) {
 2136              		.loc 2 223 0
 2137 0020 831E     		subs	r3, r0, #2
 2138 0022 052B     		cmp	r3, #5
 2139 0024 14D8     		bhi	.L96
 2140 0026 DFE803F0 		tbb	[pc, r3]
 2141              	.L97:
 2142 002a 11       		.byte	(.L105-.L97)/2
 2143 002b 0C       		.byte	(.L98-.L97)/2
 2144 002c 0F       		.byte	(.L99-.L97)/2
 2145 002d 03       		.byte	(.L100-.L97)/2
 2146 002e 09       		.byte	(.L101-.L97)/2
 2147 002f 11       		.byte	(.L105-.L97)/2
 2148              		.p2align 1
 2149              	.L100:
 225:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_none_enter();
 2150              		.loc 2 225 0
 2151 0030 FFF7FEFF 		bl	stabilization_none_enter
 2152              	.LVL177:
 226:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 2153              		.loc 2 226 0
 2154 0034 0CE0     		b	.L96
 2155              	.LVL178:
 2156              	.L95:
 229:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_enter();
 2157              		.loc 2 229 0
 2158 0036 FFF7FEFF 		bl	stabilization_rate_enter
 2159              	.LVL179:
 230:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 2160              		.loc 2 230 0
 2161 003a 09E0     		b	.L96
 2162              	.LVL180:
 2163              	.L101:
 233:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_reset_care_free_heading();
 2164              		.loc 2 233 0
 2165 003c FFF7FEFF 		bl	stabilization_attitude_reset_care_free_heading
 2166              	.LVL181:
 2167 0040 04E0     		b	.L105
 2168              	.LVL182:
 2169              	.L98:
 246:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_hover_enter();
 2170              		.loc 2 246 0
 2171 0042 FFF7FEFF 		bl	guidance_h_hover_enter
 2172              	.LVL183:
 2173 0046 01E0     		b	.L105
 2174              	.LVL184:
 2175              	.L99:
 263:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_nav_enter();
 2176              		.loc 2 263 0
 2177 0048 FFF7FEFF 		bl	guidance_h_nav_enter
 2178              	.LVL185:
 2179              	.L105:
 270:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_enter();
 2180              		.loc 2 270 0
 2181 004c FFF7FEFF 		bl	stabilization_attitude_enter
 2182              	.LVL186:
 2183              	.L96:
 277:firmwares/rotorcraft/guidance/guidance_h.c ****   guidance_h_mode = new_mode;
 2184              		.loc 2 277 0
 2185 0050 2C70     		strb	r4, [r5]
 2186              	.L92:
 2187 0052 38BD     		pop	{r3, r4, r5, pc}
 2188              	.L107:
 2189              		.align	2
 2190              	.L106:
 2191 0054 00000000 		.word	.LANCHOR4
 2192 0058 00000000 		.word	.LANCHOR20
 2193 005c 00000000 		.word	.LANCHOR21
 2194              		.cfi_endproc
 2195              	.LFE467:
 2197              		.global	__aeabi_ldivmod
 2198              		.section	.text.guidance_h_read_rc,"ax",%progbits
 2199              		.align	1
 2200              		.global	guidance_h_read_rc
 2201              		.thumb
 2202              		.thumb_func
 2204              	guidance_h_read_rc:
 2205              	.LFB468:
 283:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2206              		.loc 2 283 0
 2207              		.cfi_startproc
 2208              		@ args = 0, pretend = 0, frame = 8
 2209              		@ frame_needed = 0, uses_anonymous_args = 0
 2210              	.LVL187:
 2211 0000 2DE9F74F 		push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2212              		.cfi_def_cfa_offset 48
 2213              		.cfi_offset 0, -48
 2214              		.cfi_offset 1, -44
 2215              		.cfi_offset 2, -40
 2216              		.cfi_offset 4, -36
 2217              		.cfi_offset 5, -32
 2218              		.cfi_offset 6, -28
 2219              		.cfi_offset 7, -24
 2220              		.cfi_offset 8, -20
 2221              		.cfi_offset 9, -16
 2222              		.cfi_offset 10, -12
 2223              		.cfi_offset 11, -8
 2224              		.cfi_offset 14, -4
 285:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (guidance_h_mode) {
 2225              		.loc 2 285 0
 2226 0004 6E4B     		ldr	r3, .L127
 2227 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2228 0008 013B     		subs	r3, r3, #1
 283:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2229              		.loc 2 283 0
 2230 000a 0446     		mov	r4, r0
 285:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (guidance_h_mode) {
 2231              		.loc 2 285 0
 2232 000c 062B     		cmp	r3, #6
 2233 000e 00F2D380 		bhi	.L108
 2234 0012 DFE803F0 		tbb	[pc, r3]
 2235              	.L111:
 2236 0016 09       		.byte	(.L110-.L111)/2
 2237 0017 18       		.byte	(.L112-.L111)/2
 2238 0018 1B       		.byte	(.L113-.L111)/2
 2239 0019 C1       		.byte	(.L114-.L111)/2
 2240 001a 04       		.byte	(.L115-.L111)/2
 2241 001b 0E       		.byte	(.L116-.L111)/2
 2242 001c 11       		.byte	(.L117-.L111)/2
 2243 001d 00       		.p2align 1
 2244              	.L115:
 331:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2245              		.loc 2 331 0
 2246 001e 03B0     		add	sp, sp, #12
 2247              		@ sp needed
 2248 0020 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 288:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_none_read_rc();
 2249              		.loc 2 288 0
 2250 0024 FFF7FEBF 		b	stabilization_none_read_rc
 2251              	.LVL188:
 2252              	.L110:
 331:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2253              		.loc 2 331 0
 2254 0028 03B0     		add	sp, sp, #12
 2255              		@ sp needed
 2256 002a BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 295:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_read_rc();
 2257              		.loc 2 295 0
 2258 002e FFF7FEBF 		b	stabilization_rate_read_rc
 2259              	.LVL189:
 2260              	.L116:
 299:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, TRUE, FALSE);
 2261              		.loc 2 299 0
 2262 0032 0121     		movs	r1, #1
 2263 0034 0022     		movs	r2, #0
 2264 0036 01E0     		b	.L126
 2265              	.L117:
 302:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, FALSE, TRUE);
 2266              		.loc 2 302 0
 2267 0038 0021     		movs	r1, #0
 2268 003a 0122     		movs	r2, #1
 2269              	.L126:
 331:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2270              		.loc 2 331 0
 2271 003c 03B0     		add	sp, sp, #12
 2272              		@ sp needed
 2273 003e BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 302:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, FALSE, TRUE);
 2274              		.loc 2 302 0
 2275 0042 FFF7FEBF 		b	stabilization_attitude_read_rc
 2276              	.LVL190:
 2277              	.L112:
 305:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc(in_flight, FALSE, FALSE);
 2278              		.loc 2 305 0
 2279 0046 0021     		movs	r1, #0
 2280 0048 0A46     		mov	r2, r1
 2281 004a F7E7     		b	.L126
 2282              	.L113:
 308:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_read_rc_setpoint_eulers(&guidance_h_rc_sp, in_flight, FALSE, FALSE);
 2283              		.loc 2 308 0
 2284 004c 0022     		movs	r2, #0
 2285 004e 5D48     		ldr	r0, .L127+4
 2286              	.LVL191:
 2287 0050 2146     		mov	r1, r4
 2288 0052 1346     		mov	r3, r2
 2289 0054 FFF7FEFF 		bl	stabilization_attitude_read_rc_setpoint_eulers
 2290              	.LVL192:
 2291              	.LBB49:
 2292              	.LBB50:
 546:firmwares/rotorcraft/guidance/guidance_h.c **** }
 547:firmwares/rotorcraft/guidance/guidance_h.c **** 
 548:firmwares/rotorcraft/guidance/guidance_h.c **** static inline void transition_run(void)
 549:firmwares/rotorcraft/guidance/guidance_h.c **** {
 550:firmwares/rotorcraft/guidance/guidance_h.c ****   //Add 0.00625%
 551:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_percentage += 1 << (INT32_PERCENTAGE_FRAC - 4);
 552:firmwares/rotorcraft/guidance/guidance_h.c **** 
 553:firmwares/rotorcraft/guidance/guidance_h.c **** #ifdef TRANSITION_MAX_OFFSET
 554:firmwares/rotorcraft/guidance/guidance_h.c ****   const int32_t max_offset = ANGLE_BFP_OF_REAL(TRANSITION_MAX_OFFSET);
 555:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_theta_offset = INT_MULT_RSHIFT((transition_percentage << (INT32_ANGLE_FRAC - INT32_PER
 556:firmwares/rotorcraft/guidance/guidance_h.c ****                             max_offset, INT32_ANGLE_FRAC);
 557:firmwares/rotorcraft/guidance/guidance_h.c **** #endif
 558:firmwares/rotorcraft/guidance/guidance_h.c **** }
 559:firmwares/rotorcraft/guidance/guidance_h.c **** 
 560:firmwares/rotorcraft/guidance/guidance_h.c **** /// read speed setpoint from RC
 561:firmwares/rotorcraft/guidance/guidance_h.c **** static void read_rc_setpoint_speed_i(struct Int32Vect2 *speed_sp, bool_t in_flight)
 562:firmwares/rotorcraft/guidance/guidance_h.c **** {
 563:firmwares/rotorcraft/guidance/guidance_h.c ****   if (in_flight) {
 2293              		.loc 2 563 0
 2294 0058 002C     		cmp	r4, #0
 2295 005a 00F09980 		beq	.L118
 2296              	.LBB51:
 564:firmwares/rotorcraft/guidance/guidance_h.c ****     // negative pitch is forward
 565:firmwares/rotorcraft/guidance/guidance_h.c ****     int64_t rc_x = -radio_control.values[RADIO_PITCH];
 2297              		.loc 2 565 0
 2298 005e 5A4B     		ldr	r3, .L127+8
 2299 0060 B3F90810 		ldrsh	r1, [r3, #8]
 566:firmwares/rotorcraft/guidance/guidance_h.c ****     int64_t rc_y = radio_control.values[RADIO_ROLL];
 2300              		.loc 2 566 0
 2301 0064 B3F90660 		ldrsh	r6, [r3, #6]
 565:firmwares/rotorcraft/guidance/guidance_h.c ****     int64_t rc_x = -radio_control.values[RADIO_PITCH];
 2302              		.loc 2 565 0
 2303 0068 4942     		negs	r1, r1
 2304              	.LVL193:
 567:firmwares/rotorcraft/guidance/guidance_h.c ****     DeadBand(rc_x, MAX_PPRZ / 20);
 2305              		.loc 2 567 0
 2306 006a B1F5F07F 		cmp	r1, #480
 566:firmwares/rotorcraft/guidance/guidance_h.c ****     int64_t rc_y = radio_control.values[RADIO_ROLL];
 2307              		.loc 2 566 0
 2308 006e 4FEAE677 		asr	r7, r6, #31
 2309              	.LVL194:
 2310              		.loc 2 567 0
 2311 0072 0A46     		mov	r2, r1
 2312 0074 4FEAE173 		asr	r3, r1, #31
 2313 0078 04DD     		ble	.L119
 2314 007a B1F5F072 		subs	r2, r1, #480
 2315 007e 43F1FF33 		adc	r3, r3, #-1
 2316              	.LVL195:
 2317 0082 0DE0     		b	.L120
 2318              	.LVL196:
 2319              	.L119:
 2320 0084 5148     		ldr	r0, .L127+12
 2321 0086 4FF0FF31 		mov	r1, #-1
 2322              	.LVL197:
 2323 008a 8242     		cmp	r2, r0
 2324 008c 73EB0104 		sbcs	r4, r3, r1
 2325              	.LVL198:
 2326 0090 04DA     		bge	.L124
 2327 0092 12F5F072 		adds	r2, r2, #480
 2328              	.LVL199:
 2329 0096 43F10003 		adc	r3, r3, #0
 2330              	.LVL200:
 2331 009a 01E0     		b	.L120
 2332              	.LVL201:
 2333              	.L124:
 2334 009c 0022     		movs	r2, #0
 2335              	.LVL202:
 2336 009e 0023     		movs	r3, #0
 2337              	.LVL203:
 2338              	.L120:
 568:firmwares/rotorcraft/guidance/guidance_h.c ****     DeadBand(rc_y, MAX_PPRZ / 20);
 2339              		.loc 2 568 0
 2340 00a0 4FF4F070 		mov	r0, #480
 2341 00a4 0021     		movs	r1, #0
 2342 00a6 B042     		cmp	r0, r6
 2343 00a8 71EB0709 		sbcs	r9, r1, r7
 2344 00ac 04DA     		bge	.L121
 2345 00ae B6F5F076 		subs	r6, r6, #480
 2346              	.LVL204:
 2347 00b2 47F1FF37 		adc	r7, r7, #-1
 2348              	.LVL205:
 2349 00b6 0DE0     		b	.L122
 2350              	.L121:
 2351 00b8 4448     		ldr	r0, .L127+12
 2352 00ba 4FF0FF31 		mov	r1, #-1
 2353 00be 8642     		cmp	r6, r0
 2354 00c0 77EB0104 		sbcs	r4, r7, r1
 2355 00c4 04DA     		bge	.L125
 2356 00c6 16F5F076 		adds	r6, r6, #480
 2357              	.LVL206:
 2358 00ca 47F10007 		adc	r7, r7, #0
 2359              	.LVL207:
 2360 00ce 01E0     		b	.L122
 2361              	.L125:
 2362 00d0 0026     		movs	r6, #0
 2363              	.LVL208:
 2364 00d2 0027     		movs	r7, #0
 2365              	.L122:
 2366              	.LVL209:
 569:firmwares/rotorcraft/guidance/guidance_h.c **** 
 570:firmwares/rotorcraft/guidance/guidance_h.c ****     // convert input from MAX_PPRZ range to SPEED_BFP
 571:firmwares/rotorcraft/guidance/guidance_h.c ****     int32_t max_speed = SPEED_BFP_OF_REAL(GUIDANCE_H_REF_MAX_SPEED);
 572:firmwares/rotorcraft/guidance/guidance_h.c ****     /// @todo calc proper scale while making sure a division by zero can't occur
 573:firmwares/rotorcraft/guidance/guidance_h.c ****     //int32_t rc_norm = sqrtf(rc_x * rc_x + rc_y * rc_y);
 574:firmwares/rotorcraft/guidance/guidance_h.c ****     //int32_t max_pprz = rc_norm * MAX_PPRZ / Max(abs(rc_x), abs(rc_y);
 575:firmwares/rotorcraft/guidance/guidance_h.c ****     rc_x = rc_x * max_speed / MAX_PPRZ;
 2367              		.loc 2 575 0
 2368 00d4 1905     		lsls	r1, r3, #20
 2369 00d6 41EA1231 		orr	r1, r1, r2, lsr #12
 2370 00da 1005     		lsls	r0, r2, #20
 2371 00dc 0023     		movs	r3, #0
 2372 00de 4FF41652 		mov	r2, #9600
 2373              	.LVL210:
 2374 00e2 FFF7FEFF 		bl	__aeabi_ldivmod
 2375              	.LVL211:
 2376 00e6 0D46     		mov	r5, r1
 576:firmwares/rotorcraft/guidance/guidance_h.c ****     rc_y = rc_y * max_speed / MAX_PPRZ;
 2377              		.loc 2 576 0
 2378 00e8 3905     		lsls	r1, r7, #20
 575:firmwares/rotorcraft/guidance/guidance_h.c ****     rc_x = rc_x * max_speed / MAX_PPRZ;
 2379              		.loc 2 575 0
 2380 00ea 0446     		mov	r4, r0
 2381              	.LVL212:
 2382              		.loc 2 576 0
 2383 00ec 4FF41652 		mov	r2, #9600
 2384 00f0 0023     		movs	r3, #0
 2385 00f2 41EA1631 		orr	r1, r1, r6, lsr #12
 2386 00f6 3005     		lsls	r0, r6, #20
 2387 00f8 FFF7FEFF 		bl	__aeabi_ldivmod
 2388              	.LVL213:
 2389 00fc 0F46     		mov	r7, r1
 2390 00fe 0646     		mov	r6, r0
 2391              	.LVL214:
 577:firmwares/rotorcraft/guidance/guidance_h.c **** 
 578:firmwares/rotorcraft/guidance/guidance_h.c ****     /* Rotate from body to NED frame by negative psi angle */
 579:firmwares/rotorcraft/guidance/guidance_h.c ****     int32_t psi = -stateGetNedToBodyEulers_i()->psi;
 2392              		.loc 2 579 0
 2393 0100 FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 2394              	.LVL215:
 2395 0104 8368     		ldr	r3, [r0, #8]
 2396 0106 C3F10009 		rsb	r9, r3, #0
 2397              	.LVL216:
 580:firmwares/rotorcraft/guidance/guidance_h.c ****     int32_t s_psi, c_psi;
 581:firmwares/rotorcraft/guidance/guidance_h.c ****     PPRZ_ITRIG_SIN(s_psi, psi);
 2398              		.loc 2 581 0
 2399 010a 4846     		mov	r0, r9
 2400 010c FFF7FEFF 		bl	pprz_itrig_sin
 2401              	.LVL217:
 2402 0110 8046     		mov	r8, r0
 2403              	.LVL218:
 582:firmwares/rotorcraft/guidance/guidance_h.c ****     PPRZ_ITRIG_COS(c_psi, psi);
 2404              		.loc 2 582 0
 2405 0112 4846     		mov	r0, r9
 2406              	.LVL219:
 2407 0114 FFF7FEFF 		bl	pprz_itrig_cos
 2408              	.LVL220:
 583:firmwares/rotorcraft/guidance/guidance_h.c ****     speed_sp->x = (int32_t)(((int64_t)c_psi * rc_x + (int64_t)s_psi * rc_y) >> INT32_TRIG_FRAC);
 2409              		.loc 2 583 0
 2410 0118 4246     		mov	r2, r8
 582:firmwares/rotorcraft/guidance/guidance_h.c ****     PPRZ_ITRIG_COS(c_psi, psi);
 2411              		.loc 2 582 0
 2412 011a 0146     		mov	r1, r0
 2413              	.LVL221:
 2414              		.loc 2 583 0
 2415 011c 4FEAE873 		asr	r3, r8, #31
 2416 0120 4FEAE07B 		asr	fp, r0, #31
 2417 0124 CDE90023 		strd	r2, [sp]
 2418 0128 01FB05FC 		mul	ip, r1, r5
 2419 012c A1FB0423 		umull	r2, r3, r1, r4
 2420 0130 04FB0BCC 		mla	ip, r4, fp, ip
 2421 0134 DDF80490 		ldr	r9, [sp, #4]
 2422              	.LVL222:
 2423 0138 2548     		ldr	r0, .L127+16
 2424              	.LVL223:
 2425 013a 6344     		add	r3, r3, ip
 2426 013c 08FB07FC 		mul	ip, r8, r7
 2427 0140 06FB09CC 		mla	ip, r6, r9, ip
 2428 0144 A8FB0689 		umull	r8, r9, r8, r6
 2429              	.LVL224:
 2430 0148 18EB0208 		adds	r8, r8, r2
 2431 014c E144     		add	r9, r9, ip
 2432 014e 49EB0309 		adc	r9, r9, r3
 2433 0152 4FEA9832 		lsr	r2, r8, #14
 2434 0156 42EA8942 		orr	r2, r2, r9, lsl #18
 2435 015a 0260     		str	r2, [r0]
 584:firmwares/rotorcraft/guidance/guidance_h.c ****     speed_sp->y = (int32_t)((-(int64_t)s_psi * rc_x + (int64_t)c_psi * rc_y) >> INT32_TRIG_FRAC);
 2436              		.loc 2 584 0
 2437 015c DDE90023 		ldrd	r2, [sp]
 2438 0160 5242     		negs	r2, r2
 2439 0162 63EB4303 		sbc	r3, r3, r3, lsl #1
 2440 0166 5543     		muls	r5, r2, r5
 2441 0168 04FB0353 		mla	r3, r4, r3, r5
 2442 016c A2FB0445 		umull	r4, r5, r2, r4
 2443              	.LVL225:
 2444 0170 1D44     		add	r5, r5, r3
 2445 0172 01FB07F3 		mul	r3, r1, r7
 2446 0176 06FB0B33 		mla	r3, r6, fp, r3
 2447 017a A1FB0667 		umull	r6, r7, r1, r6
 2448              	.LVL226:
 2449 017e A419     		adds	r4, r4, r6
 2450 0180 1F44     		add	r7, r7, r3
 2451 0182 45EB0705 		adc	r5, r5, r7
 2452 0186 A20B     		lsrs	r2, r4, #14
 2453 0188 42EA8542 		orr	r2, r2, r5, lsl #18
 2454 018c 4260     		str	r2, [r0, #4]
 2455 018e 13E0     		b	.L108
 2456              	.LVL227:
 2457              	.L118:
 2458              	.LBE51:
 585:firmwares/rotorcraft/guidance/guidance_h.c ****   } else {
 586:firmwares/rotorcraft/guidance/guidance_h.c ****     speed_sp->x = 0;
 2459              		.loc 2 586 0
 2460 0190 0F4B     		ldr	r3, .L127+16
 2461 0192 1C60     		str	r4, [r3]
 587:firmwares/rotorcraft/guidance/guidance_h.c ****     speed_sp->y = 0;
 2462              		.loc 2 587 0
 2463 0194 5C60     		str	r4, [r3, #4]
 2464 0196 0FE0     		b	.L108
 2465              	.LVL228:
 2466              	.L114:
 2467              	.LBE50:
 2468              	.LBE49:
 321:firmwares/rotorcraft/guidance/guidance_h.c ****       if (radio_control.status == RC_OK) {
 2469              		.loc 2 321 0
 2470 0198 0B4B     		ldr	r3, .L127+8
 2471 019a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2472 019c 3AB9     		cbnz	r2, .L123
 322:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_read_rc_setpoint_eulers(&guidance_h_rc_sp, in_flight, FALSE, FALSE);
 2473              		.loc 2 322 0
 2474 019e 0948     		ldr	r0, .L127+4
 2475              	.LVL229:
 2476 01a0 2146     		mov	r1, r4
 2477 01a2 1346     		mov	r3, r2
 331:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2478              		.loc 2 331 0
 2479 01a4 03B0     		add	sp, sp, #12
 2480              		@ sp needed
 2481 01a6 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 322:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_read_rc_setpoint_eulers(&guidance_h_rc_sp, in_flight, FALSE, FALSE);
 2482              		.loc 2 322 0
 2483 01aa FFF7FEBF 		b	stabilization_attitude_read_rc_setpoint_eulers
 2484              	.LVL230:
 2485              	.L123:
 324:firmwares/rotorcraft/guidance/guidance_h.c ****         INT_EULERS_ZERO(guidance_h_rc_sp);
 2486              		.loc 2 324 0
 2487 01ae 054B     		ldr	r3, .L127+4
 2488 01b0 0022     		movs	r2, #0
 2489 01b2 1A60     		str	r2, [r3]
 2490 01b4 5A60     		str	r2, [r3, #4]
 2491 01b6 9A60     		str	r2, [r3, #8]
 2492              	.LVL231:
 2493              	.L108:
 331:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2494              		.loc 2 331 0
 2495 01b8 03B0     		add	sp, sp, #12
 2496              		@ sp needed
 2497 01ba BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2498              	.L128:
 2499 01be 00BF     		.align	2
 2500              	.L127:
 2501 01c0 00000000 		.word	.LANCHOR4
 2502 01c4 00000000 		.word	.LANCHOR19
 2503 01c8 00000000 		.word	radio_control
 2504 01cc 20FEFFFF 		.word	-480
 2505 01d0 00000000 		.word	.LANCHOR5
 2506              		.cfi_endproc
 2507              	.LFE468:
 2509              		.section	.text.guidance_h_run,"ax",%progbits
 2510              		.align	1
 2511              		.global	guidance_h_run
 2512              		.thumb
 2513              		.thumb_func
 2515              	guidance_h_run:
 2516              	.LFB469:
 335:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2517              		.loc 2 335 0
 2518              		.cfi_startproc
 2519              		@ args = 0, pretend = 0, frame = 16
 2520              		@ frame_needed = 0, uses_anonymous_args = 0
 2521              	.LVL232:
 2522 0000 30B5     		push	{r4, r5, lr}
 2523              		.cfi_def_cfa_offset 12
 2524              		.cfi_offset 4, -12
 2525              		.cfi_offset 5, -8
 2526              		.cfi_offset 14, -4
 336:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (guidance_h_mode) {
 2527              		.loc 2 336 0
 2528 0002 304B     		ldr	r3, .L148
 2529 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2530 0006 013B     		subs	r3, r3, #1
 335:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2531              		.loc 2 335 0
 2532 0008 85B0     		sub	sp, sp, #20
 2533              		.cfi_def_cfa_offset 32
 335:firmwares/rotorcraft/guidance/guidance_h.c **** {
 2534              		.loc 2 335 0
 2535 000a 0446     		mov	r4, r0
 336:firmwares/rotorcraft/guidance/guidance_h.c ****   switch (guidance_h_mode) {
 2536              		.loc 2 336 0
 2537 000c 062B     		cmp	r3, #6
 2538 000e 56D8     		bhi	.L129
 2539 0010 DFE803F0 		tbb	[pc, r3]
 2540              	.L132:
 2541 0014 07       		.byte	(.L131-.L132)/2
 2542 0015 52       		.byte	(.L141-.L132)/2
 2543 0016 12       		.byte	(.L134-.L132)/2
 2544 0017 1B       		.byte	(.L135-.L132)/2
 2545 0018 04       		.byte	(.L136-.L132)/2
 2546 0019 52       		.byte	(.L141-.L132)/2
 2547 001a 0A       		.byte	(.L137-.L132)/2
 2548 001b 00       		.p2align 1
 2549              	.L136:
 339:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_none_run(in_flight);
 2550              		.loc 2 339 0
 2551 001c FFF7FEFF 		bl	stabilization_none_run
 2552              	.LVL233:
 340:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 2553              		.loc 2 340 0
 2554 0020 4DE0     		b	.L129
 2555              	.LVL234:
 2556              	.L131:
 343:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_rate_run(in_flight);
 2557              		.loc 2 343 0
 2558 0022 FFF7FEFF 		bl	stabilization_rate_run
 2559              	.LVL235:
 344:firmwares/rotorcraft/guidance/guidance_h.c ****       break;
 2560              		.loc 2 344 0
 2561 0026 4AE0     		b	.L129
 2562              	.LVL236:
 2563              	.L137:
 347:firmwares/rotorcraft/guidance/guidance_h.c ****       if (transition_percentage < (100 << INT32_PERCENTAGE_FRAC)) {
 2564              		.loc 2 347 0
 2565 0028 274B     		ldr	r3, .L148+4
 2566 002a 1A68     		ldr	r2, [r3]
 2567 002c B2F5C83F 		cmp	r2, #102400
 2568 0030 42DA     		bge	.L141
 2569              	.LBB55:
 2570              	.LBB56:
 551:firmwares/rotorcraft/guidance/guidance_h.c ****   transition_percentage += 1 << (INT32_PERCENTAGE_FRAC - 4);
 2571              		.loc 2 551 0
 2572 0032 4032     		adds	r2, r2, #64
 2573 0034 1A60     		str	r2, [r3]
 2574 0036 3FE0     		b	.L141
 2575              	.L134:
 2576              	.LBE56:
 2577              	.LBE55:
 356:firmwares/rotorcraft/guidance/guidance_h.c ****       if (!in_flight) {
 2578              		.loc 2 356 0
 2579 0038 08B9     		cbnz	r0, .L138
 357:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_hover_enter();
 2580              		.loc 2 357 0
 2581 003a FFF7FEFF 		bl	guidance_h_hover_enter
 2582              	.LVL237:
 2583              	.L138:
 360:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_update_reference();
 2584              		.loc 2 360 0
 2585 003e FFF7FEFF 		bl	guidance_h_update_reference
 2586              	.LVL238:
 363:firmwares/rotorcraft/guidance/guidance_h.c ****       guidance_h_heading_sp = guidance_h_rc_sp.psi;
 2587              		.loc 2 363 0
 2588 0042 224B     		ldr	r3, .L148+8
 2589 0044 224D     		ldr	r5, .L148+12
 2590 0046 9B68     		ldr	r3, [r3, #8]
 2591 0048 2EE0     		b	.L146
 2592              	.LVL239:
 2593              	.L135:
 373:firmwares/rotorcraft/guidance/guidance_h.c ****       if (!in_flight) {
 2594              		.loc 2 373 0
 2595 004a 08B9     		cbnz	r0, .L139
 374:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_nav_enter();
 2596              		.loc 2 374 0
 2597 004c FFF7FEFF 		bl	guidance_h_nav_enter
 2598              	.LVL240:
 2599              	.L139:
 377:firmwares/rotorcraft/guidance/guidance_h.c ****       if (horizontal_mode == HORIZONTAL_MODE_ATTITUDE) {
 2600              		.loc 2 377 0
 2601 0050 204B     		ldr	r3, .L148+16
 2602 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2603 0054 032B     		cmp	r3, #3
 2604 0056 0DD1     		bne	.L140
 2605              	.LBB57:
 379:firmwares/rotorcraft/guidance/guidance_h.c ****         sp_cmd_i.phi = nav_roll;
 2606              		.loc 2 379 0
 2607 0058 1F4B     		ldr	r3, .L148+20
 2608 005a 1B68     		ldr	r3, [r3]
 2609 005c 0193     		str	r3, [sp, #4]
 380:firmwares/rotorcraft/guidance/guidance_h.c ****         sp_cmd_i.theta = nav_pitch;
 2610              		.loc 2 380 0
 2611 005e 1F4B     		ldr	r3, .L148+24
 2612 0060 1B68     		ldr	r3, [r3]
 2613 0062 0293     		str	r3, [sp, #8]
 384:firmwares/rotorcraft/guidance/guidance_h.c ****         sp_cmd_i.psi = stateGetNedToBodyEulers_i()->psi;
 2614              		.loc 2 384 0
 2615 0064 FFF7FEFF 		bl	stateGetNedToBodyEulers_i
 2616              	.LVL241:
 2617 0068 8368     		ldr	r3, [r0, #8]
 2618 006a 0393     		str	r3, [sp, #12]
 385:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_set_rpy_setpoint_i(&sp_cmd_i);
 2619              		.loc 2 385 0
 2620 006c 01A8     		add	r0, sp, #4
 2621 006e FFF7FEFF 		bl	stabilization_attitude_set_rpy_setpoint_i
 2622              	.LVL242:
 2623              	.LBE57:
 2624 0072 21E0     		b	.L141
 2625              	.L140:
 387:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_VECT2_NED_OF_ENU(guidance_h_pos_sp, navigation_carrot);
 2626              		.loc 2 387 0
 2627 0074 1A4A     		ldr	r2, .L148+28
 2628 0076 1B4B     		ldr	r3, .L148+32
 2629 0078 5168     		ldr	r1, [r2, #4]
 2630 007a 1268     		ldr	r2, [r2]
 2631 007c 1960     		str	r1, [r3]
 2632 007e 5A60     		str	r2, [r3, #4]
 389:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_update_reference();
 2633              		.loc 2 389 0
 2634 0080 FFF7FEFF 		bl	guidance_h_update_reference
 2635              	.LVL243:
 392:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_heading_sp = nav_heading;
 2636              		.loc 2 392 0
 2637 0084 184B     		ldr	r3, .L148+36
 2638 0086 1B68     		ldr	r3, [r3]
 2639              	.L142:
 393:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_ANGLE_NORMALIZE(guidance_h_heading_sp);
 2640              		.loc 2 393 0 discriminator 1
 2641 0088 43F24322 		movw	r2, #12867
 2642 008c 9342     		cmp	r3, r2
 2643 008e 03DD     		ble	.L144
 393:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_ANGLE_NORMALIZE(guidance_h_heading_sp);
 2644              		.loc 2 393 0 is_stmt 0 discriminator 2
 2645 0090 A3F5C943 		sub	r3, r3, #25728
 2646 0094 073B     		subs	r3, r3, #7
 2647 0096 F7E7     		b	.L142
 2648              	.L144:
 393:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_ANGLE_NORMALIZE(guidance_h_heading_sp);
 2649              		.loc 2 393 0 discriminator 1
 2650 0098 144A     		ldr	r2, .L148+40
 2651 009a 9342     		cmp	r3, r2
 2652 009c 03DA     		bge	.L147
 393:firmwares/rotorcraft/guidance/guidance_h.c ****         INT32_ANGLE_NORMALIZE(guidance_h_heading_sp);
 2653              		.loc 2 393 0 discriminator 2
 2654 009e 03F5C943 		add	r3, r3, #25728
 2655 00a2 0733     		adds	r3, r3, #7
 2656 00a4 F8E7     		b	.L144
 2657              	.L147:
 2658 00a6 0A4D     		ldr	r5, .L148+12
 2659              	.L146:
 395:firmwares/rotorcraft/guidance/guidance_h.c ****         guidance_h_traj_run(in_flight);
 2660              		.loc 2 395 0 is_stmt 1
 2661 00a8 2046     		mov	r0, r4
 2662 00aa 2B60     		str	r3, [r5]
 2663 00ac FFF7FEFF 		bl	guidance_h_traj_run
 2664              	.LVL244:
 397:firmwares/rotorcraft/guidance/guidance_h.c ****         stabilization_attitude_set_earth_cmd_i(&guidance_h_cmd_earth,
 2665              		.loc 2 397 0
 2666 00b0 0F48     		ldr	r0, .L148+44
 2667 00b2 2968     		ldr	r1, [r5]
 2668 00b4 FFF7FEFF 		bl	stabilization_attitude_set_earth_cmd_i
 2669              	.LVL245:
 2670              	.L141:
 400:firmwares/rotorcraft/guidance/guidance_h.c ****       stabilization_attitude_run(in_flight);
 2671              		.loc 2 400 0
 2672 00b8 2046     		mov	r0, r4
 2673 00ba FFF7FEFF 		bl	stabilization_attitude_run
 2674              	.LVL246:
 2675              	.L129:
 412:firmwares/rotorcraft/guidance/guidance_h.c **** }
 2676              		.loc 2 412 0
 2677 00be 05B0     		add	sp, sp, #20
 2678              		@ sp needed
 2679 00c0 30BD     		pop	{r4, r5, pc}
 2680              	.L149:
 2681 00c2 00BF     		.align	2
 2682              	.L148:
 2683 00c4 00000000 		.word	.LANCHOR4
 2684 00c8 00000000 		.word	.LANCHOR20
 2685 00cc 00000000 		.word	.LANCHOR19
 2686 00d0 00000000 		.word	.LANCHOR18
 2687 00d4 00000000 		.word	horizontal_mode
 2688 00d8 00000000 		.word	nav_roll
 2689 00dc 00000000 		.word	nav_pitch
 2690 00e0 00000000 		.word	navigation_carrot
 2691 00e4 00000000 		.word	.LANCHOR6
 2692 00e8 00000000 		.word	nav_heading
 2693 00ec BDCDFFFF 		.word	-12867
 2694 00f0 00000000 		.word	.LANCHOR14
 2695              		.cfi_endproc
 2696              	.LFE469:
 2698              		.global	transition_theta_offset
 2699              		.global	transition_percentage
 2700              		.global	guidance_h_vgain
 2701              		.global	guidance_h_again
 2702              		.global	guidance_h_igain
 2703              		.global	guidance_h_dgain
 2704              		.global	guidance_h_pgain
 2705              		.global	guidance_h_heading_sp
 2706              		.global	guidance_h_rc_sp
 2707              		.global	guidance_h_cmd_earth
 2708              		.global	guidance_h_trim_att_integrator
 2709              		.global	guidance_h_speed_err
 2710              		.global	guidance_h_pos_err
 2711              		.global	guidance_h_speed_sp
 2712              		.global	guidance_h_accel_ref
 2713              		.global	guidance_h_speed_ref
 2714              		.global	guidance_h_pos_ref
 2715              		.global	guidance_h_pos_sp
 2716              		.global	guidance_h_approx_force_by_thrust
 2717              		.global	guidance_h_use_ref
 2718              		.global	guidance_h_mode
 2719              		.section	.bss.guidance_h_trim_att_integrator,"aw",%nobits
 2720              		.align	2
 2721              		.set	.LANCHOR3,. + 0
 2724              	guidance_h_trim_att_integrator:
 2725 0000 00000000 		.space	8
 2725      00000000 
 2726              		.section	.bss.guidance_h_rc_sp,"aw",%nobits
 2727              		.align	2
 2728              		.set	.LANCHOR19,. + 0
 2731              	guidance_h_rc_sp:
 2732 0000 00000000 		.space	12
 2732      00000000 
 2732      00000000 
 2733              		.section	.bss.guidance_h_pos_ref,"aw",%nobits
 2734              		.align	2
 2735              		.set	.LANCHOR0,. + 0
 2738              	guidance_h_pos_ref:
 2739 0000 00000000 		.space	8
 2739      00000000 
 2740              		.section	.bss.guidance_h_speed_ref,"aw",%nobits
 2741              		.align	2
 2742              		.set	.LANCHOR1,. + 0
 2745              	guidance_h_speed_ref:
 2746 0000 00000000 		.space	8
 2746      00000000 
 2747              		.section	.bss.transition_percentage,"aw",%nobits
 2748              		.align	2
 2749              		.set	.LANCHOR20,. + 0
 2752              	transition_percentage:
 2753 0000 00000000 		.space	4
 2754              		.section	.bss.guidance_h_approx_force_by_thrust,"aw",%nobits
 2755              		.set	.LANCHOR16,. + 0
 2758              	guidance_h_approx_force_by_thrust:
 2759 0000 00       		.space	1
 2760              		.section	.bss.guidance_h_again,"aw",%nobits
 2761              		.align	2
 2762              		.set	.LANCHOR13,. + 0
 2765              	guidance_h_again:
 2766 0000 00000000 		.space	4
 2767              		.section	.bss.guidance_h_igain,"aw",%nobits
 2768              		.align	2
 2769              		.set	.LANCHOR15,. + 0
 2772              	guidance_h_igain:
 2773 0000 00000000 		.space	4
 2774              		.section	.bss.guidance_h_pos_err,"aw",%nobits
 2775              		.align	2
 2776              		.set	.LANCHOR8,. + 0
 2779              	guidance_h_pos_err:
 2780 0000 00000000 		.space	8
 2780      00000000 
 2781              		.section	.bss.guidance_h_cmd_earth,"aw",%nobits
 2782              		.align	2
 2783              		.set	.LANCHOR14,. + 0
 2786              	guidance_h_cmd_earth:
 2787 0000 00000000 		.space	8
 2787      00000000 
 2788              		.section	.bss.guidance_h_speed_sp,"aw",%nobits
 2789              		.align	2
 2790              		.set	.LANCHOR5,. + 0
 2793              	guidance_h_speed_sp:
 2794 0000 00000000 		.space	8
 2794      00000000 
 2795              		.section	.bss.guidance_h_use_ref,"aw",%nobits
 2796              		.set	.LANCHOR7,. + 0
 2799              	guidance_h_use_ref:
 2800 0000 00       		.space	1
 2801              		.section	.bss.guidance_h_accel_ref,"aw",%nobits
 2802              		.align	2
 2803              		.set	.LANCHOR2,. + 0
 2806              	guidance_h_accel_ref:
 2807 0000 00000000 		.space	8
 2807      00000000 
 2808              		.section	.bss.thrust_cmd_filt.11194,"aw",%nobits
 2809              		.align	2
 2810              		.set	.LANCHOR17,. + 0
 2813              	thrust_cmd_filt.11194:
 2814 0000 00000000 		.space	4
 2815              		.section	.bss.guidance_h_speed_err,"aw",%nobits
 2816              		.align	2
 2817              		.set	.LANCHOR9,. + 0
 2820              	guidance_h_speed_err:
 2821 0000 00000000 		.space	8
 2821      00000000 
 2822              		.section	.bss.guidance_h_vgain,"aw",%nobits
 2823              		.align	2
 2824              		.set	.LANCHOR12,. + 0
 2827              	guidance_h_vgain:
 2828 0000 00000000 		.space	4
 2829              		.section	.bss.guidance_h_pgain,"aw",%nobits
 2830              		.align	2
 2831              		.set	.LANCHOR10,. + 0
 2834              	guidance_h_pgain:
 2835 0000 00000000 		.space	4
 2836              		.section	.bss.transition_theta_offset,"aw",%nobits
 2837              		.align	2
 2838              		.set	.LANCHOR21,. + 0
 2841              	transition_theta_offset:
 2842 0000 00000000 		.space	4
 2843              		.section	.bss.guidance_h_dgain,"aw",%nobits
 2844              		.align	2
 2845              		.set	.LANCHOR11,. + 0
 2848              	guidance_h_dgain:
 2849 0000 00000000 		.space	4
 2850              		.section	.bss.guidance_h_mode,"aw",%nobits
 2851              		.set	.LANCHOR4,. + 0
 2854              	guidance_h_mode:
 2855 0000 00       		.space	1
 2856              		.section	.rodata.str1.1,"aMS",%progbits,1
 2857              	.LC0:
 2858 0000 47554944 		.ascii	"GUIDANCE_H_REF_INT\000"
 2858      414E4345 
 2858      5F485F52 
 2858      45465F49 
 2858      4E5400
 2859              	.LC1:
 2860 0013 484F5645 		.ascii	"HOVER_LOOP\000"
 2860      525F4C4F 
 2860      4F5000
 2861              	.LC2:
 2862 001e 47554944 		.ascii	"GUIDANCE_H_INT\000"
 2862      414E4345 
 2862      5F485F49 
 2862      4E5400
 2863              	.LC3:
 2864 002d 524F544F 		.ascii	"ROTORCRAFT_TUNE_HOVER\000"
 2864      52435241 
 2864      46545F54 
 2864      554E455F 
 2864      484F5645 
 2865              	.LC4:
 2866 0043 47554944 		.ascii	"GUIDANCE_H_REF\000"
 2866      414E4345 
 2866      5F485F52 
 2866      454600
 2867              		.section	.bss.guidance_h_heading_sp,"aw",%nobits
 2868              		.align	2
 2869              		.set	.LANCHOR18,. + 0
 2872              	guidance_h_heading_sp:
 2873 0000 00000000 		.space	4
 2874              		.section	.bss.guidance_h_pos_sp,"aw",%nobits
 2875              		.align	2
 2876              		.set	.LANCHOR6,. + 0
 2879              	guidance_h_pos_sp:
 2880 0000 00000000 		.space	8
 2880      00000000 
 2881              		.text
 2882              	.Letext0:
 2883              		.file 5 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 2884              		.file 6 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 2885              		.file 7 "/home/lsk/paparazzi/sw/include/std.h"
 2886              		.file 8 "./math/pprz_algebra_int.h"
 2887              		.file 9 "./firmwares/rotorcraft/guidance/guidance_h_ref.h"
 2888              		.file 10 "./mcu_periph/link_device.h"
 2889              		.file 11 "./math/pprz_algebra_float.h"
 2890              		.file 12 "./math/pprz_geodetic_int.h"
 2891              		.file 13 "./math/pprz_geodetic_float.h"
 2892              		.file 14 "./paparazzi.h"
 2893              		.file 15 "./subsystems/radio_control.h"
 2894              		.file 16 "./subsystems/datalink/transport.h"
 2895              		.file 17 "./mcu_periph/sys_time.h"
 2896              		.file 18 "./subsystems/datalink/xbee.h"
 2897              		.file 19 "./subsystems/datalink/telemetry_common.h"
 2898              		.file 20 "./firmwares/rotorcraft/stabilization.h"
 2899              		.file 21 "./firmwares/rotorcraft/navigation.h"
 2900              		.file 22 "./firmwares/rotorcraft/guidance/guidance_v.h"
 2901              		.file 23 "./subsystems/datalink/datalink.h"
 2902              		.file 24 "./subsystems/datalink/w5100.h"
 2903              		.file 25 "/home/lsk/paparazzi/var/aircrafts/kroozsd_lsk/ap/generated/periodic_telemetry.h"
 2904              		.file 26 "./subsystems/datalink/telemetry.h"
 2905              		.file 27 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/math.h"
 2906              		.file 28 "./firmwares/rotorcraft/stabilization/stabilization_none.h"
 2907              		.file 29 "./firmwares/rotorcraft/stabilization/stabilization_rate.h"
 2908              		.file 30 "./firmwares/rotorcraft/stabilization/stabilization_attitude_rc_setpoint.h"
 2909              		.file 31 "./firmwares/rotorcraft/stabilization/stabilization_attitude.h"
 2910              		.file 32 "./math/pprz_trig_int.h"
 2911              		.file 33 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 guidance_h.c
     /tmp/ccktlLVF.s:20     .text.stateGetPositionNed_i:00000000 $t
     /tmp/ccktlLVF.s:24     .text.stateGetPositionNed_i:00000000 stateGetPositionNed_i
     /tmp/ccktlLVF.s:50     .text.stateGetPositionNed_i:00000014 $d
     /tmp/ccktlLVF.s:56     .text.stateGetSpeedNed_i:00000000 $t
     /tmp/ccktlLVF.s:60     .text.stateGetSpeedNed_i:00000000 stateGetSpeedNed_i
     /tmp/ccktlLVF.s:85     .text.stateGetSpeedNed_i:00000014 $d
     /tmp/ccktlLVF.s:91     .text.reset_guidance_reference_from_current_position:00000000 $t
     /tmp/ccktlLVF.s:95     .text.reset_guidance_reference_from_current_position:00000000 reset_guidance_reference_from_current_position
     /tmp/ccktlLVF.s:153    .text.reset_guidance_reference_from_current_position:0000004c $d
     /tmp/ccktlLVF.s:161    .text.guidance_h_update_reference:00000000 $t
     /tmp/ccktlLVF.s:165    .text.guidance_h_update_reference:00000000 guidance_h_update_reference
     /tmp/ccktlLVF.s:271    .text.guidance_h_update_reference:00000088 $d
     /tmp/ccktlLVF.s:286    .text.guidance_h_traj_run:00000000 $t
     /tmp/ccktlLVF.s:290    .text.guidance_h_traj_run:00000000 guidance_h_traj_run
     /tmp/ccktlLVF.s:705    .text.guidance_h_traj_run:000002a8 $d
     /tmp/ccktlLVF.s:736    .text.send_href:00000000 $t
     /tmp/ccktlLVF.s:740    .text.send_href:00000000 send_href
     /tmp/ccktlLVF.s:976    .text.send_href:00000164 $d
     /tmp/ccktlLVF.s:986    .text.send_hover_loop:00000000 $t
     /tmp/ccktlLVF.s:990    .text.send_hover_loop:00000000 send_hover_loop
     /tmp/ccktlLVF.s:1344   .text.send_hover_loop:000001f8 $d
     /tmp/ccktlLVF.s:1357   .text.send_gh:00000000 $t
     /tmp/ccktlLVF.s:1361   .text.send_gh:00000000 send_gh
     /tmp/ccktlLVF.s:1556   .text.send_gh:00000104 $d
     /tmp/ccktlLVF.s:1563   .text.stateGetNedToBodyEulers_i:00000000 $t
     /tmp/ccktlLVF.s:1567   .text.stateGetNedToBodyEulers_i:00000000 stateGetNedToBodyEulers_i
     /tmp/ccktlLVF.s:1599   .text.stateGetNedToBodyEulers_i:00000018 $d
     /tmp/ccktlLVF.s:1605   .text.send_tune_hover:00000000 $t
     /tmp/ccktlLVF.s:1609   .text.send_tune_hover:00000000 send_tune_hover
     /tmp/ccktlLVF.s:1872   .text.send_tune_hover:00000168 $d
     /tmp/ccktlLVF.s:1879   .text.guidance_h_hover_enter:00000000 $t
     /tmp/ccktlLVF.s:1883   .text.guidance_h_hover_enter:00000000 guidance_h_hover_enter
     /tmp/ccktlLVF.s:1916   .text.guidance_h_hover_enter:00000024 $d
     /tmp/ccktlLVF.s:1922   .text.guidance_h_nav_enter:00000000 $t
     /tmp/ccktlLVF.s:1926   .text.guidance_h_nav_enter:00000000 guidance_h_nav_enter
     /tmp/ccktlLVF.s:1958   .text.guidance_h_nav_enter:00000020 $d
     /tmp/ccktlLVF.s:1965   .text.guidance_h_init:00000000 $t
     /tmp/ccktlLVF.s:1970   .text.guidance_h_init:00000000 guidance_h_init
     /tmp/ccktlLVF.s:2069   .text.guidance_h_init:00000080 $d
     /tmp/ccktlLVF.s:2096   .text.guidance_h_mode_changed:00000000 $t
     /tmp/ccktlLVF.s:2101   .text.guidance_h_mode_changed:00000000 guidance_h_mode_changed
     /tmp/ccktlLVF.s:2142   .text.guidance_h_mode_changed:0000002a $d
     /tmp/ccktlLVF.s:2148   .text.guidance_h_mode_changed:00000030 $t
     /tmp/ccktlLVF.s:2191   .text.guidance_h_mode_changed:00000054 $d
     /tmp/ccktlLVF.s:2199   .text.guidance_h_read_rc:00000000 $t
     /tmp/ccktlLVF.s:2204   .text.guidance_h_read_rc:00000000 guidance_h_read_rc
     /tmp/ccktlLVF.s:2236   .text.guidance_h_read_rc:00000016 $d
     /tmp/ccktlLVF.s:2501   .text.guidance_h_read_rc:000001c0 $d
     /tmp/ccktlLVF.s:2510   .text.guidance_h_run:00000000 $t
     /tmp/ccktlLVF.s:2515   .text.guidance_h_run:00000000 guidance_h_run
     /tmp/ccktlLVF.s:2541   .text.guidance_h_run:00000014 $d
     /tmp/ccktlLVF.s:2683   .text.guidance_h_run:000000c4 $d
     /tmp/ccktlLVF.s:2841   .bss.transition_theta_offset:00000000 transition_theta_offset
     /tmp/ccktlLVF.s:2752   .bss.transition_percentage:00000000 transition_percentage
     /tmp/ccktlLVF.s:2827   .bss.guidance_h_vgain:00000000 guidance_h_vgain
     /tmp/ccktlLVF.s:2765   .bss.guidance_h_again:00000000 guidance_h_again
     /tmp/ccktlLVF.s:2772   .bss.guidance_h_igain:00000000 guidance_h_igain
     /tmp/ccktlLVF.s:2848   .bss.guidance_h_dgain:00000000 guidance_h_dgain
     /tmp/ccktlLVF.s:2834   .bss.guidance_h_pgain:00000000 guidance_h_pgain
     /tmp/ccktlLVF.s:2872   .bss.guidance_h_heading_sp:00000000 guidance_h_heading_sp
     /tmp/ccktlLVF.s:2731   .bss.guidance_h_rc_sp:00000000 guidance_h_rc_sp
     /tmp/ccktlLVF.s:2786   .bss.guidance_h_cmd_earth:00000000 guidance_h_cmd_earth
     /tmp/ccktlLVF.s:2724   .bss.guidance_h_trim_att_integrator:00000000 guidance_h_trim_att_integrator
     /tmp/ccktlLVF.s:2820   .bss.guidance_h_speed_err:00000000 guidance_h_speed_err
     /tmp/ccktlLVF.s:2779   .bss.guidance_h_pos_err:00000000 guidance_h_pos_err
     /tmp/ccktlLVF.s:2793   .bss.guidance_h_speed_sp:00000000 guidance_h_speed_sp
     /tmp/ccktlLVF.s:2806   .bss.guidance_h_accel_ref:00000000 guidance_h_accel_ref
     /tmp/ccktlLVF.s:2745   .bss.guidance_h_speed_ref:00000000 guidance_h_speed_ref
     /tmp/ccktlLVF.s:2738   .bss.guidance_h_pos_ref:00000000 guidance_h_pos_ref
     /tmp/ccktlLVF.s:2879   .bss.guidance_h_pos_sp:00000000 guidance_h_pos_sp
     /tmp/ccktlLVF.s:2758   .bss.guidance_h_approx_force_by_thrust:00000000 guidance_h_approx_force_by_thrust
     /tmp/ccktlLVF.s:2799   .bss.guidance_h_use_ref:00000000 guidance_h_use_ref
     /tmp/ccktlLVF.s:2854   .bss.guidance_h_mode:00000000 guidance_h_mode
     /tmp/ccktlLVF.s:2720   .bss.guidance_h_trim_att_integrator:00000000 $d
     /tmp/ccktlLVF.s:2727   .bss.guidance_h_rc_sp:00000000 $d
     /tmp/ccktlLVF.s:2734   .bss.guidance_h_pos_ref:00000000 $d
     /tmp/ccktlLVF.s:2741   .bss.guidance_h_speed_ref:00000000 $d
     /tmp/ccktlLVF.s:2748   .bss.transition_percentage:00000000 $d
     /tmp/ccktlLVF.s:2759   .bss.guidance_h_approx_force_by_thrust:00000000 $d
     /tmp/ccktlLVF.s:2761   .bss.guidance_h_again:00000000 $d
     /tmp/ccktlLVF.s:2768   .bss.guidance_h_igain:00000000 $d
     /tmp/ccktlLVF.s:2775   .bss.guidance_h_pos_err:00000000 $d
     /tmp/ccktlLVF.s:2782   .bss.guidance_h_cmd_earth:00000000 $d
     /tmp/ccktlLVF.s:2789   .bss.guidance_h_speed_sp:00000000 $d
     /tmp/ccktlLVF.s:2800   .bss.guidance_h_use_ref:00000000 $d
     /tmp/ccktlLVF.s:2802   .bss.guidance_h_accel_ref:00000000 $d
     /tmp/ccktlLVF.s:2809   .bss.thrust_cmd_filt.11194:00000000 $d
     /tmp/ccktlLVF.s:2813   .bss.thrust_cmd_filt.11194:00000000 thrust_cmd_filt.11194
     /tmp/ccktlLVF.s:2816   .bss.guidance_h_speed_err:00000000 $d
     /tmp/ccktlLVF.s:2823   .bss.guidance_h_vgain:00000000 $d
     /tmp/ccktlLVF.s:2830   .bss.guidance_h_pgain:00000000 $d
     /tmp/ccktlLVF.s:2837   .bss.transition_theta_offset:00000000 $d
     /tmp/ccktlLVF.s:2844   .bss.guidance_h_dgain:00000000 $d
     /tmp/ccktlLVF.s:2855   .bss.guidance_h_mode:00000000 $d
     /tmp/ccktlLVF.s:2868   .bss.guidance_h_heading_sp:00000000 $d
     /tmp/ccktlLVF.s:2875   .bss.guidance_h_pos_sp:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccktlLVF.s:2243   .text.guidance_h_read_rc:0000001d $d
     /tmp/ccktlLVF.s:2243   .text.guidance_h_read_rc:0000001e $t
     /tmp/ccktlLVF.s:2548   .text.guidance_h_run:0000001b $d
     /tmp/ccktlLVF.s:2548   .text.guidance_h_run:0000001c $t
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.airframe.h.5.1b65f22e2c90217dfc42bdae27fe483a
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.actuators_pwm_arch.h.41.fa66469024778df593e0e3d83e4a3c37
                           .group:00000000 wm4.airframe.h.14.f46e30d413878b482f16a5abf2127a4b
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.1a82a3cc35cb0a04319c41bcf41d2a02
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.guidance_h_ref.h.28.02975291fcd9050282c105dc881ca473
                           .group:00000000 wm4.guidance_h.h.52.9fa60ffd20b98f37d2a6446e3103ac47
                           .group:00000000 wm4.modules.h.5.be642dc363672736d1d1e45a75aad0cf
                           .group:00000000 wm4.pprz_algebra_float.h.32.544614e70075e1ed5693f00f6a441312
                           .group:00000000 wm4.pprz_algebra_double.h.91.82ca62ae962f4b4f295322d977f2dad5
                           .group:00000000 wm4.modules.h.24.27c8342510f0f30e64a55f4e4778474a
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.waypoints.h.33.b7269a35eabfa0f882237a6392dba465
                           .group:00000000 wm4.common_flight_plan.h.28.998f628cac1ef266b3e88de20c1aaea2
                           .group:00000000 wm4.navigation.h.37.11a5e304c9f5272e40689ee17cc5173b
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf
                           .group:00000000 wm4.paparazzi.h.2.903792c4429b74b43ba66cc0d2531abd
                           .group:00000000 wm4.ppm_arch.h.30.0c8951ed5389d834f3146640146f52ff
                           .group:00000000 wm4.radio.h.5.656a6ddaf975d68fb12fc1808da140b2
                           .group:00000000 wm4.ppm.h.47.0149fce522ef0e315e524566a6409a2a
                           .group:00000000 wm4.radio_control.h.42.d43f9142844e08da852d6ed343ba2de3
                           .group:00000000 wm4.stabilization_attitude_ref_int.h.28.ff95e62d0525988a53078c57e1f59bd1
                           .group:00000000 wm4.guidance_v_ref.h.29.0602a27d4bd3b3735125d0ae2d060884
                           .group:00000000 wm4.guidance_v_adapt.h.31.27bb7e62f811df116277369fe7cc10cb
                           .group:00000000 wm4.guidance_v.h.35.a56f97080507d26c60b16012b7fd8373
                           .group:00000000 wm4.pprz_orientation_conversion.h.57.c0c8f5187bc056807e507011653281f4
                           .group:00000000 wm4.state.h.65.b18954aacb3801ec3e27b4e857d620d3
                           .group:00000000 wm4.transport.h.27.9215bbc09b6a8d08d228c20740408d47
                           .group:00000000 wm4.messages.h.9.6fd66bc411dd06866b086a1b57e0f309
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.datalink.h.28.0d234a7c203533b2ec538be3e18eddf4
                           .group:00000000 wm4.dl_protocol.h.5.a12fe27a4b4a3cbb46fbca8acf33e3dd
                           .group:00000000 wm4.datalink.h.46.36a5e0f36fb7d0784f1e7af767537c84
                           .group:00000000 wm4.pprz_transport.h.57.167db0ee96032e142f5d6e570b3339aa
                           .group:00000000 wm4.sys_time.h.31.454ffebb4f6baf6e87ab8a60104a5808
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.xbee24.h.29.a6677f8bcb71d3b07e11290a2de0e179
                           .group:00000000 wm4.xbee.h.41.f36be817f95b74f883aef9324b53817b
                           .group:00000000 wm4.w5100.h.29.d3529bed8de657ab3944b343be960f10
                           .group:00000000 wm4.downlink.h.76.41034157e32fc9012166fd95ec7418fc
                           .group:00000000 wm4.periodic_telemetry.h.11.45a44616e39ae884c5a68828f6bf143a

UNDEFINED SYMBOLS
stateCalcPositionNed_i
state
stateCalcSpeedNed_i
gh_set_ref
gh_update_ref_from_speed_sp
gh_update_ref_from_pos_sp
gh_ref
__aeabi_i2d
__aeabi_dcmplt
__aeabi_dcmpgt
atan2f
stabilization_cmd
guidance_v_thrust_coeff
stateCalcAccelNed_i
orientationCalcEulers_i
radio_control
navigation_carrot
nav_heading
gh_ref_init
register_periodic_telemetry
pprz_telemetry
stabilization_none_enter
stabilization_rate_enter
stabilization_attitude_reset_care_free_heading
stabilization_attitude_enter
__aeabi_ldivmod
stabilization_none_read_rc
stabilization_rate_read_rc
stabilization_attitude_read_rc
stabilization_attitude_read_rc_setpoint_eulers
pprz_itrig_sin
pprz_itrig_cos
stabilization_none_run
stabilization_rate_run
stabilization_attitude_set_rpy_setpoint_i
stabilization_attitude_set_earth_cmd_i
stabilization_attitude_run
horizontal_mode
nav_roll
nav_pitch
