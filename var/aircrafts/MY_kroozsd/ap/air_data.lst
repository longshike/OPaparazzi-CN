   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"air_data.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.stateGetPositionLla_f,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	stateGetPositionLla_f:
  25              	.LFB130:
  26              		.file 1 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: degrees*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   uint32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i *ltp_def)
 441:./state.h     **** {
 442:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 443:./state.h     ****   /* convert to float */
 444:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 445:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 446:./state.h     ****   HIGH_RES_RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 447:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 448:./state.h     **** 
 449:./state.h     ****   /* clear bits for all local frame representations */
 450:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 451:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 453:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 454:./state.h     **** 
 455:./state.h     ****   state.ned_initialized_i = TRUE;
 456:./state.h     ****   state.ned_initialized_f = TRUE;
 457:./state.h     **** }
 458:./state.h     **** 
 459:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 460:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f *utm_def)
 461:./state.h     **** {
 462:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 463:./state.h     ****   state.utm_initialized_f = TRUE;
 464:./state.h     **** 
 465:./state.h     ****   /* clear bits for all local frame representations */
 466:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 467:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 468:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 469:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 470:./state.h     **** }
 471:./state.h     **** /*******************************************************************************
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 474:./state.h     ****  *                                                                             *
 475:./state.h     ****  ******************************************************************************/
 476:./state.h     **** 
 477:./state.h     **** /************* declaration of transformation functions ************/
 478:./state.h     **** extern void stateCalcPositionEcef_i(void);
 479:./state.h     **** extern void stateCalcPositionNed_i(void);
 480:./state.h     **** extern void stateCalcPositionEnu_i(void);
 481:./state.h     **** extern void stateCalcPositionLla_i(void);
 482:./state.h     **** extern void stateCalcPositionUtm_f(void);
 483:./state.h     **** extern void stateCalcPositionEcef_f(void);
 484:./state.h     **** extern void stateCalcPositionNed_f(void);
 485:./state.h     **** extern void stateCalcPositionEnu_f(void);
 486:./state.h     **** extern void stateCalcPositionLla_f(void);
 487:./state.h     **** 
 488:./state.h     **** /*********************** validity test functions ******************/
 489:./state.h     **** 
 490:./state.h     **** /// Test if local coordinates are valid.
 491:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void)
 492:./state.h     **** {
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 495:./state.h     **** }
 496:./state.h     **** 
 497:./state.h     **** /// Test if global coordinates are valid.
 498:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void)
 499:./state.h     **** {
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 501:./state.h     **** }
 502:./state.h     **** 
 503:./state.h     **** /************************ Set functions ****************************/
 504:./state.h     **** 
 505:./state.h     **** /// Set position from ECEF coordinates (int).
 506:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i *ecef_pos)
 507:./state.h     **** {
 508:./state.h     ****   VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 509:./state.h     ****   /* clear bits for all position representations and only set the new one */
 510:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 511:./state.h     **** }
 512:./state.h     **** 
 513:./state.h     **** /// Set position from local NED coordinates (int).
 514:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i *ned_pos)
 515:./state.h     **** {
 516:./state.h     ****   VECT3_COPY(state.ned_pos_i, *ned_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from local ENU coordinates (int).
 522:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i *enu_pos)
 523:./state.h     **** {
 524:./state.h     ****   VECT3_COPY(state.enu_pos_i, *enu_pos);
 525:./state.h     ****   /* clear bits for all position representations and only set the new one */
 526:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 527:./state.h     **** }
 528:./state.h     **** 
 529:./state.h     **** /// Set position from LLA coordinates (int).
 530:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i *lla_pos)
 531:./state.h     **** {
 532:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 533:./state.h     ****   /* clear bits for all position representations and only set the new one */
 534:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 535:./state.h     **** }
 536:./state.h     **** 
 537:./state.h     **** /// Set multiple position coordinates (int).
 538:./state.h     **** static inline void stateSetPosition_i(
 539:./state.h     ****   struct EcefCoor_i *ecef_pos,
 540:./state.h     ****   struct NedCoor_i *ned_pos,
 541:./state.h     ****   struct EnuCoor_i *enu_pos,
 542:./state.h     ****   struct LlaCoor_i *lla_pos)
 543:./state.h     **** {
 544:./state.h     ****   /* clear all status bit */
 545:./state.h     ****   state.pos_status = 0;
 546:./state.h     ****   if (ecef_pos != NULL) {
 547:./state.h     ****     VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 548:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 549:./state.h     ****   }
 550:./state.h     ****   if (ned_pos != NULL) {
 551:./state.h     ****     VECT3_COPY(state.ned_pos_i, *ned_pos);
 552:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 553:./state.h     ****   }
 554:./state.h     ****   if (enu_pos != NULL) {
 555:./state.h     ****     VECT3_COPY(state.enu_pos_i, *enu_pos);
 556:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 557:./state.h     ****   }
 558:./state.h     ****   if (lla_pos != NULL) {
 559:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 560:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 561:./state.h     ****   }
 562:./state.h     **** }
 563:./state.h     **** 
 564:./state.h     **** /// Set position from UTM coordinates (float).
 565:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f *utm_pos)
 566:./state.h     **** {
 567:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 568:./state.h     ****   /* clear bits for all position representations and only set the new one */
 569:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 570:./state.h     **** }
 571:./state.h     **** 
 572:./state.h     **** /// Set position from ECEF coordinates (float).
 573:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f *ecef_pos)
 574:./state.h     **** {
 575:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 576:./state.h     ****   /* clear bits for all position representations and only set the new one */
 577:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 578:./state.h     **** }
 579:./state.h     **** 
 580:./state.h     **** /// Set position from local NED coordinates (float).
 581:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f *ned_pos)
 582:./state.h     **** {
 583:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 584:./state.h     ****   /* clear bits for all position representations and only set the new one */
 585:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 586:./state.h     **** }
 587:./state.h     **** 
 588:./state.h     **** /// Set position from local ENU coordinates (float).
 589:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f *enu_pos)
 590:./state.h     **** {
 591:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 592:./state.h     ****   /* clear bits for all position representations and only set the new one */
 593:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 594:./state.h     **** }
 595:./state.h     **** 
 596:./state.h     **** /// Set position from LLA coordinates (float).
 597:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f *lla_pos)
 598:./state.h     **** {
 599:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 600:./state.h     ****   /* clear bits for all position representations and only set the new one */
 601:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 602:./state.h     **** }
 603:./state.h     **** 
 604:./state.h     **** /// Set multiple position coordinates (float).
 605:./state.h     **** static inline void stateSetPosition_f(
 606:./state.h     ****   struct EcefCoor_f *ecef_pos,
 607:./state.h     ****   struct NedCoor_f *ned_pos,
 608:./state.h     ****   struct EnuCoor_f *enu_pos,
 609:./state.h     ****   struct LlaCoor_f *lla_pos,
 610:./state.h     ****   struct UtmCoor_f *utm_pos)
 611:./state.h     **** {
 612:./state.h     ****   /* clear all status bit */
 613:./state.h     ****   state.pos_status = 0;
 614:./state.h     ****   if (ecef_pos != NULL) {
 615:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 616:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 617:./state.h     ****   }
 618:./state.h     ****   if (ned_pos != NULL) {
 619:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 620:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 621:./state.h     ****   }
 622:./state.h     ****   if (enu_pos != NULL) {
 623:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 624:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 625:./state.h     ****   }
 626:./state.h     ****   if (lla_pos != NULL) {
 627:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 628:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 629:./state.h     ****   }
 630:./state.h     ****   if (utm_pos != NULL) {
 631:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 632:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 633:./state.h     ****   }
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /************************ Get functions ****************************/
 637:./state.h     **** 
 638:./state.h     **** /// Get position in ECEF coordinates (int).
 639:./state.h     **** static inline struct EcefCoor_i *stateGetPositionEcef_i(void)
 640:./state.h     **** {
 641:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I)) {
 642:./state.h     ****     stateCalcPositionEcef_i();
 643:./state.h     ****   }
 644:./state.h     ****   return &state.ecef_pos_i;
 645:./state.h     **** }
 646:./state.h     **** 
 647:./state.h     **** /// Get position in local NED coordinates (int).
 648:./state.h     **** static inline struct NedCoor_i *stateGetPositionNed_i(void)
 649:./state.h     **** {
 650:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I)) {
 651:./state.h     ****     stateCalcPositionNed_i();
 652:./state.h     ****   }
 653:./state.h     ****   return &state.ned_pos_i;
 654:./state.h     **** }
 655:./state.h     **** 
 656:./state.h     **** /// Get position in local ENU coordinates (int).
 657:./state.h     **** static inline struct EnuCoor_i *stateGetPositionEnu_i(void)
 658:./state.h     **** {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I)) {
 660:./state.h     ****     stateCalcPositionEnu_i();
 661:./state.h     ****   }
 662:./state.h     ****   return &state.enu_pos_i;
 663:./state.h     **** }
 664:./state.h     **** 
 665:./state.h     **** /// Get position in LLA coordinates (int).
 666:./state.h     **** static inline struct LlaCoor_i *stateGetPositionLla_i(void)
 667:./state.h     **** {
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 669:./state.h     ****     stateCalcPositionLla_i();
 670:./state.h     ****   }
 671:./state.h     ****   return &state.lla_pos_i;
 672:./state.h     **** }
 673:./state.h     **** 
 674:./state.h     **** /// Get position in UTM coordinates (float).
 675:./state.h     **** static inline struct UtmCoor_f *stateGetPositionUtm_f(void)
 676:./state.h     **** {
 677:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F)) {
 678:./state.h     ****     stateCalcPositionUtm_f();
 679:./state.h     ****   }
 680:./state.h     ****   return &state.utm_pos_f;
 681:./state.h     **** }
 682:./state.h     **** 
 683:./state.h     **** /// Get position in ECEF coordinates (float).
 684:./state.h     **** static inline struct EcefCoor_f *stateGetPositionEcef_f(void)
 685:./state.h     **** {
 686:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F)) {
 687:./state.h     ****     stateCalcPositionEcef_f();
 688:./state.h     ****   }
 689:./state.h     ****   return &state.ecef_pos_f;
 690:./state.h     **** }
 691:./state.h     **** 
 692:./state.h     **** /// Get position in local NED coordinates (float).
 693:./state.h     **** static inline struct NedCoor_f *stateGetPositionNed_f(void)
 694:./state.h     **** {
 695:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F)) {
 696:./state.h     ****     stateCalcPositionNed_f();
 697:./state.h     ****   }
 698:./state.h     ****   return &state.ned_pos_f;
 699:./state.h     **** }
 700:./state.h     **** 
 701:./state.h     **** /// Get position in local ENU coordinates (float).
 702:./state.h     **** static inline struct EnuCoor_f *stateGetPositionEnu_f(void)
 703:./state.h     **** {
 704:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F)) {
 705:./state.h     ****     stateCalcPositionEnu_f();
 706:./state.h     ****   }
 707:./state.h     ****   return &state.enu_pos_f;
 708:./state.h     **** }
 709:./state.h     **** 
 710:./state.h     **** /// Get position in LLA coordinates (float).
 711:./state.h     **** static inline struct LlaCoor_f *stateGetPositionLla_f(void)
 712:./state.h     **** {
  27              		.loc 1 712 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 713:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_F)) {
  35              		.loc 1 713 0
  36 0002 044B     		ldr	r3, .L4
  37 0004 1B88     		ldrh	r3, [r3]
  38 0006 DB05     		lsls	r3, r3, #23
  39 0008 01D4     		bmi	.L2
 714:./state.h     ****     stateCalcPositionLla_f();
  40              		.loc 1 714 0
  41 000a FFF7FEFF 		bl	stateCalcPositionLla_f
  42              	.LVL0:
  43              	.L2:
 715:./state.h     ****   }
 716:./state.h     ****   return &state.lla_pos_f;
 717:./state.h     **** }
  44              		.loc 1 717 0
  45 000e 0248     		ldr	r0, .L4+4
  46 0010 08BD     		pop	{r3, pc}
  47              	.L5:
  48 0012 00BF     		.align	2
  49              	.L4:
  50 0014 00000000 		.word	state
  51 0018 8C000000 		.word	state+140
  52              		.cfi_endproc
  53              	.LFE130:
  55              		.global	__aeabi_f2d
  56              		.global	__aeabi_dmul
  57              		.global	__aeabi_ddiv
  58              		.global	__aeabi_dsub
  59              		.global	__aeabi_d2f
  60              		.section	.text.pressure_abs_cb,"ax",%progbits
  61              		.align	1
  62              		.thumb
  63              		.thumb_func
  65              	pressure_abs_cb:
  66              	.LFB192:
  67              		.file 2 "modules/air_data/air_data.c"
   1:modules/air_data/air_data.c **** /*
   2:modules/air_data/air_data.c ****  * Copyright (C) 2013 Gautier Hattenberger
   3:modules/air_data/air_data.c ****  *               2014 Felix Ruess <felix.ruess@gmail.com>
   4:modules/air_data/air_data.c ****  *
   5:modules/air_data/air_data.c ****  * This file is part of paparazzi
   6:modules/air_data/air_data.c ****  *
   7:modules/air_data/air_data.c ****  * paparazzi is free software; you can redistribute it and/or modify
   8:modules/air_data/air_data.c ****  * it under the terms of the GNU General Public License as published by
   9:modules/air_data/air_data.c ****  * the Free Software Foundation; either version 2, or (at your option)
  10:modules/air_data/air_data.c ****  * any later version.
  11:modules/air_data/air_data.c ****  *
  12:modules/air_data/air_data.c ****  * paparazzi is distributed in the hope that it will be useful,
  13:modules/air_data/air_data.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:modules/air_data/air_data.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:modules/air_data/air_data.c ****  * GNU General Public License for more details.
  16:modules/air_data/air_data.c ****  *
  17:modules/air_data/air_data.c ****  * You should have received a copy of the GNU General Public License
  18:modules/air_data/air_data.c ****  * along with paparazzi; see the file COPYING.  If not, see
  19:modules/air_data/air_data.c ****  * <http://www.gnu.org/licenses/>.
  20:modules/air_data/air_data.c ****  */
  21:modules/air_data/air_data.c **** 
  22:modules/air_data/air_data.c **** /**
  23:modules/air_data/air_data.c ****  * @file modules/air_data/air_data.c
  24:modules/air_data/air_data.c ****  * Air Data interface
  25:modules/air_data/air_data.c ****  *  - pressures
  26:modules/air_data/air_data.c ****  *  - airspeed
  27:modules/air_data/air_data.c ****  *  - angle of attack and sideslip
  28:modules/air_data/air_data.c ****  *  - wind
  29:modules/air_data/air_data.c ****  */
  30:modules/air_data/air_data.c **** 
  31:modules/air_data/air_data.c **** #include "modules/air_data/air_data.h"
  32:modules/air_data/air_data.c **** #include "subsystems/abi.h"
  33:modules/air_data/air_data.c **** #include "math/pprz_isa.h"
  34:modules/air_data/air_data.c **** #include "state.h"
  35:modules/air_data/air_data.c **** #include "generated/airframe.h"
  36:modules/air_data/air_data.c **** 
  37:modules/air_data/air_data.c **** /** global AirData state
  38:modules/air_data/air_data.c ****  */
  39:modules/air_data/air_data.c **** struct AirData air_data;
  40:modules/air_data/air_data.c **** 
  41:modules/air_data/air_data.c **** /** ABI binding for absolute pressure
  42:modules/air_data/air_data.c ****  */
  43:modules/air_data/air_data.c **** #ifndef AIR_DATA_BARO_ABS_ID
  44:modules/air_data/air_data.c **** #define AIR_DATA_BARO_ABS_ID ABI_BROADCAST
  45:modules/air_data/air_data.c **** #endif
  46:modules/air_data/air_data.c **** static abi_event pressure_abs_ev;
  47:modules/air_data/air_data.c **** 
  48:modules/air_data/air_data.c **** /** ABI binding for differential pressure
  49:modules/air_data/air_data.c ****  */
  50:modules/air_data/air_data.c **** #ifndef AIR_DATA_BARO_DIFF_ID
  51:modules/air_data/air_data.c **** #define AIR_DATA_BARO_DIFF_ID ABI_BROADCAST
  52:modules/air_data/air_data.c **** #endif
  53:modules/air_data/air_data.c **** static abi_event pressure_diff_ev;
  54:modules/air_data/air_data.c **** 
  55:modules/air_data/air_data.c **** /** ABI binding for temperature
  56:modules/air_data/air_data.c ****  */
  57:modules/air_data/air_data.c **** #ifndef AIR_DATA_TEMPERATURE_ID
  58:modules/air_data/air_data.c **** #define AIR_DATA_TEMPERATURE_ID ABI_BROADCAST
  59:modules/air_data/air_data.c **** #endif
  60:modules/air_data/air_data.c **** static abi_event temperature_ev;
  61:modules/air_data/air_data.c **** 
  62:modules/air_data/air_data.c **** /** Default factor to convert estimated airspeed (EAS) to true airspeed (TAS) */
  63:modules/air_data/air_data.c **** #ifndef AIR_DATA_TAS_FACTOR
  64:modules/air_data/air_data.c **** #define AIR_DATA_TAS_FACTOR 1.0
  65:modules/air_data/air_data.c **** #endif
  66:modules/air_data/air_data.c **** 
  67:modules/air_data/air_data.c **** /** Calculate Airspeed from differential pressure by default */
  68:modules/air_data/air_data.c **** #ifndef AIR_DATA_CALC_AIRSPEED
  69:modules/air_data/air_data.c **** #define AIR_DATA_CALC_AIRSPEED TRUE
  70:modules/air_data/air_data.c **** #endif
  71:modules/air_data/air_data.c **** 
  72:modules/air_data/air_data.c **** /** Calculate tas_factor from temp and pressure by default */
  73:modules/air_data/air_data.c **** #ifndef AIR_DATA_CALC_TAS_FACTOR
  74:modules/air_data/air_data.c **** #define AIR_DATA_CALC_TAS_FACTOR TRUE
  75:modules/air_data/air_data.c **** #endif
  76:modules/air_data/air_data.c **** 
  77:modules/air_data/air_data.c **** /** Don't calculate AMSL from baro and QNH by default */
  78:modules/air_data/air_data.c **** #ifndef AIR_DATA_CALC_AMSL_BARO
  79:modules/air_data/air_data.c **** #define AIR_DATA_CALC_AMSL_BARO FALSE
  80:modules/air_data/air_data.c **** #endif
  81:modules/air_data/air_data.c **** 
  82:modules/air_data/air_data.c **** 
  83:modules/air_data/air_data.c **** #ifndef USE_AIRSPEED_AIR_DATA
  84:modules/air_data/air_data.c **** #if USE_AIRSPEED
  85:modules/air_data/air_data.c **** #define USE_AIRSPEED_AIR_DATA TRUE
  86:modules/air_data/air_data.c **** PRINT_CONFIG_MSG("USE_AIRSPEED_AIR_DATA automatically set to TRUE")
  87:modules/air_data/air_data.c **** #endif
  88:modules/air_data/air_data.c **** #endif
  89:modules/air_data/air_data.c **** 
  90:modules/air_data/air_data.c **** /*
  91:modules/air_data/air_data.c ****  * Internal variable to keep track of validity.
  92:modules/air_data/air_data.c ****  */
  93:modules/air_data/air_data.c **** 
  94:modules/air_data/air_data.c **** /** counter to check baro health */
  95:modules/air_data/air_data.c **** static uint8_t baro_health_counter;
  96:modules/air_data/air_data.c **** 
  97:modules/air_data/air_data.c **** 
  98:modules/air_data/air_data.c **** static void pressure_abs_cb(uint8_t __attribute__((unused)) sender_id, float pressure)
  99:modules/air_data/air_data.c **** {
  68              		.loc 2 99 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              	.LVL1:
  73 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  74              		.cfi_def_cfa_offset 24
  75              		.cfi_offset 3, -24
  76              		.cfi_offset 4, -20
  77              		.cfi_offset 5, -16
  78              		.cfi_offset 6, -12
  79              		.cfi_offset 7, -8
  80              		.cfi_offset 14, -4
 100:modules/air_data/air_data.c ****   air_data.pressure = pressure;
  81              		.loc 2 100 0
  82 0002 5B4E     		ldr	r6, .L32+24
 101:modules/air_data/air_data.c **** 
 102:modules/air_data/air_data.c ****   // calculate QNH from pressure and absolute altitude if that is available
 103:modules/air_data/air_data.c ****   if (air_data.calc_qnh_once && stateIsGlobalCoordinateValid()) {
  83              		.loc 2 103 0
  84 0004 96F82230 		ldrb	r3, [r6, #34]	@ zero_extendqisi2
 100:modules/air_data/air_data.c ****   air_data.pressure = pressure;
  85              		.loc 2 100 0
  86 0008 3160     		str	r1, [r6]	@ float
  99:modules/air_data/air_data.c **** {
  87              		.loc 2 99 0
  88 000a 2DED028B 		fstmfdd	sp!, {d8}
  89              		.cfi_def_cfa_offset 32
  90              		.cfi_offset 80, -32
  91              		.loc 2 103 0
  92 000e 002B     		cmp	r3, #0
  93 0010 61D0     		beq	.L7
  94              	.LBB24:
  95              	.LBB25:
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
  96              		.loc 1 500 0
  97 0012 584B     		ldr	r3, .L32+28
  98 0014 1988     		ldrh	r1, [r3]
  99              	.LVL2:
 100 0016 40F23932 		movw	r2, #825
 101 001a 0A40     		ands	r2, r2, r1
 102 001c 7AB9     		cbnz	r2, .L16
 103              	.LBB26:
 104              	.LBB27:
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 105              		.loc 1 494 0
 106 001e 93F85C20 		ldrb	r2, [r3, #92]	@ zero_extendqisi2
 107 0022 2AB9     		cbnz	r2, .L9
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 108              		.loc 1 493 0
 109 0024 93F8E420 		ldrb	r2, [r3, #228]	@ zero_extendqisi2
 110 0028 12B9     		cbnz	r2, .L9
 111 002a 93F8F820 		ldrb	r2, [r3, #248]	@ zero_extendqisi2
 112 002e 22B1     		cbz	r2, .L10
 113              	.L9:
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 114              		.loc 1 494 0
 115 0030 11F0C60F 		tst	r1, #198
 116 0034 0CBF     		ite	eq
 117 0036 0022     		moveq	r2, #0
 118 0038 0122     		movne	r2, #1
 119              	.L10:
 120              	.LBE27:
 121              	.LBE26:
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 122              		.loc 1 500 0
 123 003a D2B2     		uxtb	r2, r2
 124 003c 00E0     		b	.L8
 125              	.L16:
 126 003e 0122     		movs	r2, #1
 127              	.L8:
 128              	.LBE25:
 129              	.LBE24:
 130              		.loc 2 103 0
 131 0040 002A     		cmp	r2, #0
 132 0042 48D0     		beq	.L7
 133              	.LVL3:
 134              	.LBB28:
 104:modules/air_data/air_data.c ****     /// FIXME: use height above MSL (geoid) and not WGS84 ellipsoid here
 105:modules/air_data/air_data.c ****     // in the meantime use geoid separation at local reference frame origin
 106:modules/air_data/air_data.c ****     float geoid_separation = 0;
 107:modules/air_data/air_data.c ****     if (state.ned_initialized_f) {
 135              		.loc 2 107 0
 136 0044 93F8E430 		ldrb	r3, [r3, #228]	@ zero_extendqisi2
 137 0048 4A4A     		ldr	r2, .L32+28
 138 004a 33B1     		cbz	r3, .L18
 108:modules/air_data/air_data.c ****       geoid_separation = state.ned_origin_f.lla.alt - state.ned_origin_f.hmsl;
 139              		.loc 2 108 0
 140 004c 92ED2E8A 		flds	s16, [r2, #184]
 141 0050 D2ED387A 		flds	s15, [r2, #224]
 142 0054 38EE678A 		fsubs	s16, s16, s15
 143              	.LVL4:
 144 0058 01E0     		b	.L11
 145              	.LVL5:
 146              	.L18:
 106:modules/air_data/air_data.c ****     float geoid_separation = 0;
 147              		.loc 2 106 0
 148 005a 9FED478A 		flds	s16, .L32+32
 149              	.LVL6:
 150              	.L11:
 109:modules/air_data/air_data.c ****     }
 110:modules/air_data/air_data.c ****     float h = stateGetPositionLla_f()->alt - geoid_separation;
 151              		.loc 2 110 0
 152 005e FFF7FEFF 		bl	stateGetPositionLla_f
 153              	.LVL7:
 154 0062 0746     		mov	r7, r0
 155              	.LVL8:
 156              	.LBB29:
 157              	.LBB30:
 158              		.file 3 "./math/pprz_isa.h"
   1:./math/pprz_isa.h **** /*
   2:./math/pprz_isa.h ****  * Copyright (C) 2013 Gautier Hattenberger
   3:./math/pprz_isa.h ****  *
   4:./math/pprz_isa.h ****  * This file is part of paparazzi.
   5:./math/pprz_isa.h ****  *
   6:./math/pprz_isa.h ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./math/pprz_isa.h ****  * it under the terms of the GNU General Public License as published by
   8:./math/pprz_isa.h ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./math/pprz_isa.h ****  * any later version.
  10:./math/pprz_isa.h ****  *
  11:./math/pprz_isa.h ****  * paparazzi is distributed in the hope that it will be useful,
  12:./math/pprz_isa.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./math/pprz_isa.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./math/pprz_isa.h ****  * GNU General Public License for more details.
  15:./math/pprz_isa.h ****  *
  16:./math/pprz_isa.h ****  * You should have received a copy of the GNU General Public License
  17:./math/pprz_isa.h ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./math/pprz_isa.h ****  * <http://www.gnu.org/licenses/>.
  19:./math/pprz_isa.h ****  */
  20:./math/pprz_isa.h **** 
  21:./math/pprz_isa.h **** /**
  22:./math/pprz_isa.h ****  * @file math/pprz_isa.h
  23:./math/pprz_isa.h ****  * @brief Paparazzi atmospheric pressure conversion utilities
  24:./math/pprz_isa.h ****  *
  25:./math/pprz_isa.h ****  * Conversion functions are use to approximate altitude
  26:./math/pprz_isa.h ****  * from atmospheric pressure based on the standard model
  27:./math/pprz_isa.h ****  * and the International Standard Atmosphere (ISA)
  28:./math/pprz_isa.h ****  *
  29:./math/pprz_isa.h ****  * http://en.wikipedia.org/wiki/Atmospheric_pressure
  30:./math/pprz_isa.h ****  * http://en.wikipedia.org/wiki/International_Standard_Atmosphere
  31:./math/pprz_isa.h ****  *
  32:./math/pprz_isa.h ****  * @addtogroup math
  33:./math/pprz_isa.h ****  * @{
  34:./math/pprz_isa.h ****  * @addtogroup math_isa International Standard Atmosphere utilities
  35:./math/pprz_isa.h ****  * @{
  36:./math/pprz_isa.h ****  */
  37:./math/pprz_isa.h **** 
  38:./math/pprz_isa.h **** #ifndef PPRZ_ISA_H
  39:./math/pprz_isa.h **** #define PPRZ_ISA_H
  40:./math/pprz_isa.h **** 
  41:./math/pprz_isa.h **** #ifdef __cplusplus
  42:./math/pprz_isa.h **** extern "C" {
  43:./math/pprz_isa.h **** #endif
  44:./math/pprz_isa.h **** 
  45:./math/pprz_isa.h **** #include "std.h"
  46:./math/pprz_isa.h **** #include <math.h>
  47:./math/pprz_isa.h **** 
  48:./math/pprz_isa.h **** // Standard Atmosphere constants
  49:./math/pprz_isa.h **** /** ISA sea level standard atmospheric pressure in Pascal */
  50:./math/pprz_isa.h **** #define PPRZ_ISA_SEA_LEVEL_PRESSURE 101325.0
  51:./math/pprz_isa.h **** /** ISA sea level standard temperature in Kelvin */
  52:./math/pprz_isa.h **** #define PPRZ_ISA_SEA_LEVEL_TEMP 288.15
  53:./math/pprz_isa.h **** /** temperature laps rate in K/m */
  54:./math/pprz_isa.h **** #define PPRZ_ISA_TEMP_LAPS_RATE 0.0065
  55:./math/pprz_isa.h **** /** earth-surface gravitational acceleration in m/s^2 */
  56:./math/pprz_isa.h **** #define PPRZ_ISA_GRAVITY 9.80665
  57:./math/pprz_isa.h **** /** universal gas constant in J/(mol*K) */
  58:./math/pprz_isa.h **** #define PPRZ_ISA_GAS_CONSTANT 8.31447
  59:./math/pprz_isa.h **** /** molar mass of dry air in kg/mol */
  60:./math/pprz_isa.h **** #define PPRZ_ISA_MOLAR_MASS 0.0289644
  61:./math/pprz_isa.h **** /** universal gas constant / molar mass of dry air in J*kg/K */
  62:./math/pprz_isa.h **** #define PPRZ_ISA_AIR_GAS_CONSTANT (PPRZ_ISA_GAS_CONSTANT/PPRZ_ISA_MOLAR_MASS)
  63:./math/pprz_isa.h **** /** standard air density in kg/m^3 */
  64:./math/pprz_isa.h **** #define PPRZ_ISA_AIR_DENSITY 1.225
  65:./math/pprz_isa.h **** 
  66:./math/pprz_isa.h **** static const float PPRZ_ISA_M_OF_P_CONST = (PPRZ_ISA_AIR_GAS_CONSTANT *PPRZ_ISA_SEA_LEVEL_TEMP / PP
  67:./math/pprz_isa.h **** 
  68:./math/pprz_isa.h **** /**
  69:./math/pprz_isa.h ****  * Get absolute altitude from pressure (using simplified equation).
  70:./math/pprz_isa.h ****  * Referrence pressure is standard pressure at sea level
  71:./math/pprz_isa.h ****  *
  72:./math/pprz_isa.h ****  * @param pressure current pressure in Pascal (Pa)
  73:./math/pprz_isa.h ****  * @return altitude in m in ISA conditions
  74:./math/pprz_isa.h ****  */
  75:./math/pprz_isa.h **** static inline float pprz_isa_altitude_of_pressure(float pressure)
  76:./math/pprz_isa.h **** {
  77:./math/pprz_isa.h ****   if (pressure > 0.) {
  78:./math/pprz_isa.h ****     return (PPRZ_ISA_M_OF_P_CONST * logf(PPRZ_ISA_SEA_LEVEL_PRESSURE / pressure));
  79:./math/pprz_isa.h ****   } else {
  80:./math/pprz_isa.h ****     return 0.;
  81:./math/pprz_isa.h ****   }
  82:./math/pprz_isa.h **** }
  83:./math/pprz_isa.h **** 
  84:./math/pprz_isa.h **** /**
  85:./math/pprz_isa.h ****  * Get relative altitude from pressure (using simplified equation).
  86:./math/pprz_isa.h ****  * Given the current pressure and a reference pressure (at height=0),
  87:./math/pprz_isa.h ****  * calculate the height above the reference in meters.
  88:./math/pprz_isa.h ****  * If you pass QNH as reference pressure, you get the height above sea level.
  89:./math/pprz_isa.h ****  * Using QFE as reference pressure, you get height above the airfield.
  90:./math/pprz_isa.h ****  *
  91:./math/pprz_isa.h ****  * @param pressure current pressure in Pascal (Pa)
  92:./math/pprz_isa.h ****  * @param ref_p reference pressure (QFE) when height=0 or QNH at sea level
  93:./math/pprz_isa.h ****  * @return height in m above reference in ISA conditions
  94:./math/pprz_isa.h ****  */
  95:./math/pprz_isa.h **** static inline float pprz_isa_height_of_pressure(float pressure, float ref_p)
  96:./math/pprz_isa.h **** {
  97:./math/pprz_isa.h ****   if (pressure > 0. && ref_p > 0.) {
  98:./math/pprz_isa.h ****     return (PPRZ_ISA_M_OF_P_CONST * logf(ref_p / pressure));
  99:./math/pprz_isa.h ****   } else {
 100:./math/pprz_isa.h ****     return 0.;
 101:./math/pprz_isa.h ****   }
 102:./math/pprz_isa.h **** }
 103:./math/pprz_isa.h **** 
 104:./math/pprz_isa.h **** /**
 105:./math/pprz_isa.h ****  * Get pressure in Pa from absolute altitude (using simplified equation).
 106:./math/pprz_isa.h ****  *
 107:./math/pprz_isa.h ****  * @param altitude current absolute altitude in meters
 108:./math/pprz_isa.h ****  * @return static pressure in Pa at given altitude in ISA conditions
 109:./math/pprz_isa.h ****  */
 110:./math/pprz_isa.h **** static inline float pprz_isa_pressure_of_altitude(float altitude)
 111:./math/pprz_isa.h **** {
 112:./math/pprz_isa.h ****   return (PPRZ_ISA_SEA_LEVEL_PRESSURE * expf((-1. / PPRZ_ISA_M_OF_P_CONST) * altitude));
 113:./math/pprz_isa.h **** }
 114:./math/pprz_isa.h **** 
 115:./math/pprz_isa.h **** /**
 116:./math/pprz_isa.h ****  * Get pressure in Pa from height (using simplified equation).
 117:./math/pprz_isa.h ****  *
 118:./math/pprz_isa.h ****  * @param height current height over reference (relative altitude) in meters
 119:./math/pprz_isa.h ****  * @param ref_p reference pressure (QFE or QNH) when height = 0
 120:./math/pprz_isa.h ****  * @return static pressure in Pa at given height in ISA conditions
 121:./math/pprz_isa.h ****  */
 122:./math/pprz_isa.h **** static inline float pprz_isa_pressure_of_height(float height, float ref_p)
 123:./math/pprz_isa.h **** {
 124:./math/pprz_isa.h ****   return (ref_p * expf((-1. / PPRZ_ISA_M_OF_P_CONST) * height));
 125:./math/pprz_isa.h **** }
 126:./math/pprz_isa.h **** 
 127:./math/pprz_isa.h **** 
 128:./math/pprz_isa.h **** /**
 129:./math/pprz_isa.h ****  * Get relative altitude from pressure (using full equation).
 130:./math/pprz_isa.h ****  * Given the current pressure and a reference pressure (at height=0),
 131:./math/pprz_isa.h ****  * calculate the height above the reference in meters.
 132:./math/pprz_isa.h ****  * If you pass QNH as reference pressure, you get the height above sea level.
 133:./math/pprz_isa.h ****  * Using QFE as reference pressure, you get height above the airfield.
 134:./math/pprz_isa.h ****  *
 135:./math/pprz_isa.h ****  * @param pressure current pressure in Pascal (Pa)
 136:./math/pprz_isa.h ****  * @param ref_p reference pressure (QFE or QNH) in Pa
 137:./math/pprz_isa.h ****  * @return height above reference in m in ISA conditions
 138:./math/pprz_isa.h ****  */
 139:./math/pprz_isa.h **** static inline float pprz_isa_height_of_pressure_full(float pressure, float ref_p)
 140:./math/pprz_isa.h **** {
 141:./math/pprz_isa.h ****   if (ref_p > 0.) {
 142:./math/pprz_isa.h ****     const float prel = pressure / ref_p;
 143:./math/pprz_isa.h ****     const float inv_expo = PPRZ_ISA_GAS_CONSTANT * PPRZ_ISA_TEMP_LAPS_RATE /
 144:./math/pprz_isa.h ****                            PPRZ_ISA_GRAVITY / PPRZ_ISA_MOLAR_MASS;
 145:./math/pprz_isa.h ****     return (1 - powf(prel, inv_expo)) * PPRZ_ISA_SEA_LEVEL_TEMP / PPRZ_ISA_TEMP_LAPS_RATE;
 146:./math/pprz_isa.h ****   } else {
 147:./math/pprz_isa.h ****     return 0.;
 148:./math/pprz_isa.h ****   }
 149:./math/pprz_isa.h **** }
 150:./math/pprz_isa.h **** 
 151:./math/pprz_isa.h **** /**
 152:./math/pprz_isa.h ****  * Get reference pressure (QFE or QNH) from current pressure and height.
 153:./math/pprz_isa.h ****  * (using full equation)
 154:./math/pprz_isa.h ****  *
 155:./math/pprz_isa.h ****  * @param pressure current pressure in Pascal (Pa)
 156:./math/pprz_isa.h ****  * @param height height above referece (sea level for QNH, airfield alt for QFE) in m
 157:./math/pprz_isa.h ****  * @return reference pressure at height=0 in Pa
 158:./math/pprz_isa.h ****  */
 159:./math/pprz_isa.h **** static inline float pprz_isa_ref_pressure_of_height_full(float pressure, float height)
 160:./math/pprz_isa.h **** {
 161:./math/pprz_isa.h ****   //  Trel = 1 - L*h/T0;
 162:./math/pprz_isa.h ****   const float Trel = 1.0 - PPRZ_ISA_TEMP_LAPS_RATE * height / PPRZ_ISA_SEA_LEVEL_TEMP;
 163:./math/pprz_isa.h ****   const float expo = PPRZ_ISA_GRAVITY * PPRZ_ISA_MOLAR_MASS / PPRZ_ISA_GAS_CONSTANT /
 164:./math/pprz_isa.h ****                      PPRZ_ISA_TEMP_LAPS_RATE;
 165:./math/pprz_isa.h ****   return pressure / pow(Trel, expo);
 159              		.loc 3 165 0
 160 0064 3068     		ldr	r0, [r6]	@ float
 161              	.LVL9:
 162 0066 FFF7FEFF 		bl	__aeabi_f2d
 163              	.LVL10:
 164              	.LBE30:
 165              	.LBE29:
 166              		.loc 2 110 0
 167 006a D7ED027A 		flds	s15, [r7, #8]
 168              	.LVL11:
 169              	.LBB32:
 170              	.LBB31:
 162:./math/pprz_isa.h ****   const float Trel = 1.0 - PPRZ_ISA_TEMP_LAPS_RATE * height / PPRZ_ISA_SEA_LEVEL_TEMP;
 171              		.loc 3 162 0
 172 006e 77EEC87A 		fsubs	s15, s15, s16
 173              	.LVL12:
 174              		.loc 3 165 0
 175 0072 0446     		mov	r4, r0
 162:./math/pprz_isa.h ****   const float Trel = 1.0 - PPRZ_ISA_TEMP_LAPS_RATE * height / PPRZ_ISA_SEA_LEVEL_TEMP;
 176              		.loc 3 162 0
 177 0074 17EE900A 		fmrs	r0, s15
 178              		.loc 3 165 0
 179 0078 0D46     		mov	r5, r1
 162:./math/pprz_isa.h ****   const float Trel = 1.0 - PPRZ_ISA_TEMP_LAPS_RATE * height / PPRZ_ISA_SEA_LEVEL_TEMP;
 180              		.loc 3 162 0
 181 007a FFF7FEFF 		bl	__aeabi_f2d
 182              	.LVL13:
 183 007e 36A3     		adr	r3, .L32
 184 0080 D3E90023 		ldrd	r2, [r3]
 185 0084 FFF7FEFF 		bl	__aeabi_dmul
 186              	.LVL14:
 187 0088 35A3     		adr	r3, .L32+8
 188 008a D3E90023 		ldrd	r2, [r3]
 189 008e FFF7FEFF 		bl	__aeabi_ddiv
 190              	.LVL15:
 191 0092 0246     		mov	r2, r0
 192 0094 0B46     		mov	r3, r1
 193 0096 0020     		movs	r0, #0
 194 0098 3849     		ldr	r1, .L32+36
 195 009a FFF7FEFF 		bl	__aeabi_dsub
 196              	.LVL16:
 197 009e FFF7FEFF 		bl	__aeabi_d2f
 198              	.LVL17:
 199              		.loc 3 165 0
 200 00a2 FFF7FEFF 		bl	__aeabi_f2d
 201              	.LVL18:
 202 00a6 30A3     		adr	r3, .L32+16
 203 00a8 D3E90023 		ldrd	r2, [r3]
 204 00ac FFF7FEFF 		bl	pow
 205              	.LVL19:
 206 00b0 0B46     		mov	r3, r1
 207 00b2 0246     		mov	r2, r0
 208 00b4 2946     		mov	r1, r5
 209 00b6 2046     		mov	r0, r4
 210 00b8 FFF7FEFF 		bl	__aeabi_ddiv
 211              	.LVL20:
 212 00bc FFF7FEFF 		bl	__aeabi_d2f
 213              	.LVL21:
 214              	.LBE31:
 215              	.LBE32:
 111:modules/air_data/air_data.c ****     air_data.qnh = pprz_isa_ref_pressure_of_height_full(air_data.pressure, h) / 100.f;
 216              		.loc 2 111 0
 217 00c0 DFED2F7A 		flds	s15, .L32+40
 218 00c4 07EE100A 		fmsr	s14, r0
 219 00c8 C7EE277A 		fdivs	s15, s14, s15
 112:modules/air_data/air_data.c ****     air_data.calc_qnh_once = FALSE;
 220              		.loc 2 112 0
 221 00cc 0023     		movs	r3, #0
 222 00ce 86F82230 		strb	r3, [r6, #34]
 111:modules/air_data/air_data.c ****     air_data.qnh = pprz_isa_ref_pressure_of_height_full(air_data.pressure, h) / 100.f;
 223              		.loc 2 111 0
 224 00d2 C6ED067A 		fsts	s15, [r6, #24]
 225              	.LVL22:
 226              	.L7:
 227              	.LBE28:
 113:modules/air_data/air_data.c ****   }
 114:modules/air_data/air_data.c **** 
 115:modules/air_data/air_data.c ****   if (air_data.calc_amsl_baro && air_data.qnh > 0) {
 228              		.loc 2 115 0
 229 00d6 96F82320 		ldrb	r2, [r6, #35]	@ zero_extendqisi2
 230 00da 254B     		ldr	r3, .L32+24
 231 00dc A2B3     		cbz	r2, .L12
 232              		.loc 2 115 0 is_stmt 0 discriminator 1
 233 00de D3ED067A 		flds	s15, [r3, #24]
 234 00e2 F5EEC07A 		fcmpezs	s15
 235 00e6 F1EE10FA 		fmstat
 236 00ea 2DDD     		ble	.L12
 116:modules/air_data/air_data.c ****     air_data.amsl_baro = pprz_isa_height_of_pressure_full(air_data.pressure,
 237              		.loc 2 116 0 is_stmt 1
 238 00ec DFED246A 		flds	s13, .L32+40
 239 00f0 93ED007A 		flds	s14, [r3]
 240 00f4 67EEA67A 		fmuls	s15, s15, s13
 241              	.LVL23:
 242              	.LBB33:
 243              	.LBB34:
 141:./math/pprz_isa.h ****   if (ref_p > 0.) {
 244              		.loc 3 141 0
 245 00f8 F5EEC07A 		fcmpezs	s15
 246 00fc F1EE10FA 		fmstat
 247 0100 1DDD     		ble	.L31
 248              	.LVL24:
 249              	.LBB35:
 145:./math/pprz_isa.h ****     return (1 - powf(prel, inv_expo)) * PPRZ_ISA_SEA_LEVEL_TEMP / PPRZ_ISA_TEMP_LAPS_RATE;
 250              		.loc 3 145 0
 251 0102 C7EE277A 		fdivs	s15, s14, s15
 252              	.LVL25:
 253 0106 1F49     		ldr	r1, .L32+44
 254 0108 17EE900A 		fmrs	r0, s15
 255 010c FFF7FEFF 		bl	powf
 256              	.LVL26:
 257 0110 07EE100A 		fmsr	s14, r0
 258 0114 F7EE007A 		fconsts	s15, #112
 259 0118 37EEC77A 		fsubs	s14, s15, s14
 260 011c 17EE100A 		fmrs	r0, s14
 261 0120 FFF7FEFF 		bl	__aeabi_f2d
 262              	.LVL27:
 263 0124 0EA3     		adr	r3, .L32+8
 264 0126 D3E90023 		ldrd	r2, [r3]
 265 012a FFF7FEFF 		bl	__aeabi_dmul
 266              	.LVL28:
 267 012e 0AA3     		adr	r3, .L32
 268 0130 D3E90023 		ldrd	r2, [r3]
 269 0134 FFF7FEFF 		bl	__aeabi_ddiv
 270              	.LVL29:
 271 0138 FFF7FEFF 		bl	__aeabi_d2f
 272              	.LVL30:
 273 013c 00E0     		b	.L14
 274              	.LVL31:
 275              	.L31:
 276              	.LBE35:
 147:./math/pprz_isa.h ****     return 0.;
 277              		.loc 3 147 0
 278 013e 0020     		movs	r0, #0
 279              	.LVL32:
 280              	.L14:
 281              	.LBE34:
 282              	.LBE33:
 117:modules/air_data/air_data.c ****                          air_data.qnh * 100.f);
 118:modules/air_data/air_data.c ****     air_data.amsl_baro_valid = TRUE;
 283              		.loc 2 118 0
 284 0140 0123     		movs	r3, #1
 116:modules/air_data/air_data.c ****     air_data.amsl_baro = pprz_isa_height_of_pressure_full(air_data.pressure,
 285              		.loc 2 116 0
 286 0142 F061     		str	r0, [r6, #28]	@ float
 287              		.loc 2 118 0
 288 0144 86F82030 		strb	r3, [r6, #32]
 289              	.L12:
 119:modules/air_data/air_data.c ****   }
 120:modules/air_data/air_data.c **** 
 121:modules/air_data/air_data.c ****   /* reset baro health counter */
 122:modules/air_data/air_data.c ****   baro_health_counter = 10;
 290              		.loc 2 122 0
 291 0148 0F4B     		ldr	r3, .L32+48
 292 014a 0A22     		movs	r2, #10
 293 014c 1A70     		strb	r2, [r3]
 123:modules/air_data/air_data.c **** }
 294              		.loc 2 123 0
 295 014e BDEC028B 		fldmfdd	sp!, {d8}
 296 0152 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 297              	.L33:
 298 0154 AFF30080 		.align	3
 299              	.L32:
 300 0158 39B4C876 		.word	1992864825
 301 015c BE9F7A3F 		.word	1065000894
 302 0160 66666666 		.word	1717986918
 303 0164 66027240 		.word	1081213542
 304 0168 00000080 		.word	-2147483648
 305 016c EB051540 		.word	1075119595
 306 0170 00000000 		.word	.LANCHOR0
 307 0174 00000000 		.word	state
 308 0178 00000000 		.word	0
 309 017c 0000F03F 		.word	1072693248
 310 0180 0000C842 		.word	1120403456
 311 0184 44D5423E 		.word	1044567364
 312 0188 00000000 		.word	.LANCHOR1
 313              		.cfi_endproc
 314              	.LFE192:
 316 018c AFF30080 		.section	.text.send_amsl,"ax",%progbits
 317              		.align	1
 318              		.thumb
 319              		.thumb_func
 321              	send_amsl:
 322              	.LFB492:
 124:modules/air_data/air_data.c **** 
 125:modules/air_data/air_data.c **** static void pressure_diff_cb(uint8_t __attribute__((unused)) sender_id, float pressure)
 126:modules/air_data/air_data.c **** {
 127:modules/air_data/air_data.c ****   air_data.differential = pressure;
 128:modules/air_data/air_data.c ****   if (air_data.calc_airspeed) {
 129:modules/air_data/air_data.c ****     air_data.airspeed = eas_from_dynamic_pressure(air_data.differential);
 130:modules/air_data/air_data.c ****     air_data.tas = tas_from_eas(air_data.airspeed);
 131:modules/air_data/air_data.c **** #if USE_AIRSPEED_AIR_DATA
 132:modules/air_data/air_data.c ****     stateSetAirspeed_f(&air_data.airspeed);
 133:modules/air_data/air_data.c **** #endif
 134:modules/air_data/air_data.c ****   }
 135:modules/air_data/air_data.c **** }
 136:modules/air_data/air_data.c **** 
 137:modules/air_data/air_data.c **** static void temperature_cb(uint8_t __attribute__((unused)) sender_id, float temp)
 138:modules/air_data/air_data.c **** {
 139:modules/air_data/air_data.c ****   air_data.temperature = temp;
 140:modules/air_data/air_data.c ****   /* only calculate tas factor if enabled and we have airspeed and valid data */
 141:modules/air_data/air_data.c ****   if (air_data.calc_tas_factor && air_data.airspeed > 0 && baro_health_counter > 0 &&
 142:modules/air_data/air_data.c ****       air_data.pressure > 0) {
 143:modules/air_data/air_data.c ****     air_data.tas_factor = get_tas_factor(air_data.pressure, air_data.temperature);
 144:modules/air_data/air_data.c ****   }
 145:modules/air_data/air_data.c **** }
 146:modules/air_data/air_data.c **** 
 147:modules/air_data/air_data.c **** #if PERIODIC_TELEMETRY
 148:modules/air_data/air_data.c **** #include "subsystems/datalink/telemetry.h"
 149:modules/air_data/air_data.c **** 
 150:modules/air_data/air_data.c **** static void send_baro_raw(struct transport_tx *trans, struct link_device *dev)
 151:modules/air_data/air_data.c **** {
 152:modules/air_data/air_data.c ****   pprz_msg_send_BARO_RAW(trans, dev, AC_ID,
 153:modules/air_data/air_data.c ****                          &air_data.pressure, &air_data.differential);
 154:modules/air_data/air_data.c **** }
 155:modules/air_data/air_data.c **** 
 156:modules/air_data/air_data.c **** static void send_air_data(struct transport_tx *trans, struct link_device *dev)
 157:modules/air_data/air_data.c **** {
 158:modules/air_data/air_data.c ****   pprz_msg_send_AIR_DATA(trans, dev, AC_ID,
 159:modules/air_data/air_data.c ****                          &air_data.pressure, &air_data.differential,
 160:modules/air_data/air_data.c ****                          &air_data.temperature, &air_data.qnh,
 161:modules/air_data/air_data.c ****                          &air_data.amsl_baro, &air_data.airspeed,
 162:modules/air_data/air_data.c ****                          &air_data.tas);
 163:modules/air_data/air_data.c **** }
 164:modules/air_data/air_data.c **** 
 165:modules/air_data/air_data.c **** static void send_amsl(struct transport_tx *trans, struct link_device *dev)
 166:modules/air_data/air_data.c **** {
 323              		.loc 2 166 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 16
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              	.LVL33:
 328 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 329              		.cfi_def_cfa_offset 24
 330              		.cfi_offset 4, -24
 331              		.cfi_offset 5, -20
 332              		.cfi_offset 6, -16
 333              		.cfi_offset 7, -12
 334              		.cfi_offset 8, -8
 335              		.cfi_offset 14, -4
 167:modules/air_data/air_data.c ****   const float MeterPerFeet = 0.3048;
 168:modules/air_data/air_data.c ****   float amsl_baro_ft = air_data.amsl_baro / MeterPerFeet;
 336              		.loc 2 168 0
 337 0004 334B     		ldr	r3, .L38
 166:modules/air_data/air_data.c **** {
 338              		.loc 2 166 0
 339 0006 2DED028B 		fstmfdd	sp!, {d8}
 340              		.cfi_def_cfa_offset 32
 341              		.cfi_offset 80, -32
 342              		.loc 2 168 0
 343 000a D3ED077A 		flds	s15, [r3, #28]
 344 000e 9FED328A 		flds	s16, .L38+4
 345 0012 C7EE887A 		fdivs	s15, s15, s16
 166:modules/air_data/air_data.c **** {
 346              		.loc 2 166 0
 347 0016 86B0     		sub	sp, sp, #24
 348              		.cfi_def_cfa_offset 56
 166:modules/air_data/air_data.c **** {
 349              		.loc 2 166 0
 350 0018 0446     		mov	r4, r0
 351 001a 0D46     		mov	r5, r1
 352 001c 0126     		movs	r6, #1
 353              		.loc 2 168 0
 354 001e CDED047A 		fsts	s15, [sp, #16]
 169:modules/air_data/air_data.c ****   float amsl_gps_ft = stateGetPositionLla_f()->alt / MeterPerFeet;
 355              		.loc 2 169 0
 356 0022 FFF7FEFF 		bl	stateGetPositionLla_f
 357              	.LVL34:
 358 0026 D0ED027A 		flds	s15, [r0, #8]
 359              	.LBB38:
 360              	.LBB39:
 361              		.file 4 "/home/lsk/paparazzi/var/include/messages.h"
   1:/home/lsk/paparazzi/var/include/messages.h **** /* Automatically generated by gen_messages from /home/lsk/paparazzi/conf/messages.xml */
   2:/home/lsk/paparazzi/var/include/messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/messages.h **** /* Macros to send and receive messages of class telemetry */
   4:/home/lsk/paparazzi/var/include/messages.h **** #ifndef _VAR_MESSAGES_telemetry_H_
   5:/home/lsk/paparazzi/var/include/messages.h **** #define _VAR_MESSAGES_telemetry_H_
   6:/home/lsk/paparazzi/var/include/messages.h **** #include "subsystems/datalink/transport.h"
   7:/home/lsk/paparazzi/var/include/messages.h **** #include "mcu_periph/link_device.h"
   8:/home/lsk/paparazzi/var/include/messages.h **** #if DOWNLINK
   9:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AUTOPILOT_VERSION 1
  10:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALIVE 2
  11:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PONG 3
  12:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TAKEOFF 4
  13:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ARDRONE_NAVDATA 5
  14:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATTITUDE 6
  15:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IR_SENSORS 7
  16:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS 8
  17:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION_REF 9
  18:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION 10
  19:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_MODE 11
  20:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BAT 12
  21:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_MCU_LINK 13
  22:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CALIBRATION 14
  23:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SETTINGS 15
  24:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DESIRED 16
  25:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_SOL 17
  26:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC_GENERIC 18
  27:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_FORMAT 19
  28:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM 20
  29:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CIRCLE 21
  30:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SEGMENT 22
  31:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SVINFO 25
  32:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG 26
  33:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SURVEY 27
  34:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WC_RSSI 28
  35:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RANGEFINDER 29
  36:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DATALINK_REPORT 30
  37:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DL_VALUE 31
  38:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MARK 32
  39:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYS_MON 33
  40:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR 34
  41:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED 35
  42:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MKK 36
  43:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENERGY 37
  44:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85_CALIB 38
  45:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85 39
  46:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SPEED_LOOP 40
  47:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALT_KALMAN 41
  48:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ESTIMATOR 42
  49:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_ROLL 43
  50:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5534A 44
  51:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PRESSURE 45
  52:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_WORDS 46
  53:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_LLA 47
  54:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CHRONO 48
  55:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_ENU 49
  56:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WINDTURBINE_STATUS_ 50
  57:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC_3CH_ 51
  58:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPPT 52
  59:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_IR_I2C 53
  60:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED 54
  61:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XSENS 55
  62:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_ETS 56
  63:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_ETS 57
  64:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PBN 58
  65:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_LLA 59
  66:/home/lsk/paparazzi/var/include/messages.h **** #define DL_H_CTL_A 60
  67:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_RAW 61
  68:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_VOLTAGE 62
  69:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM_POINT 63
  70:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_INFO 64
  71:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_BARO 65
  72:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_AIRSPEED 66
  73:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLIGHT_BENCHMARK 67
  74:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPL3115_BARO 68
  75:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AOA_ADC 69
  76:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XTEND_RSSI 70
  77:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SUPERBITRF 72
  78:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GX3_INFO 73
  79:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EXPLAIN 74
  80:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_TELEMETRY 75
  81:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_UPDATE 76
  82:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_PREDICT 77
  83:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INV_FILTER 78
  84:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MISSION_STATUS 79
  85:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CROSS_TRACK_ERROR 80
  86:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GENERIC_COM 81
  87:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_SLOT_TM 82
  88:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_STATUS_TM 83
  89:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BMP_STATUS 84
  90:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_STATUS 85
  91:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TMP_STATUS 86
  92:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WIND_INFO_RET 87
  93:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SCP_STATUS 88
  94:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_STATUS 89
  95:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENOSE_STATUS 90
  96:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DPICCO_STATUS 91
  97:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_DEBUG 92
  98:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_STATUS 93
  99:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATUS 94
 100:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATIC 95
 101:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HIH_STATUS 96
 102:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMT_STATUS 97
 103:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GP2Y_STATUS 98
 104:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_SERIAL 99
 105:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPM 100
 106:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC 101
 107:/home/lsk/paparazzi/var/include/messages.h **** #define DL_COMMANDS 102
 108:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FBW_STATUS 103
 109:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC 104
 110:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ACTUATORS 105
 111:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_SHOT 110
 112:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_BOARD_RESULTS 111
 113:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_SERIAL 113
 114:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD 114
 115:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HTM_STATUS 115
 116:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5611 116
 117:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MS5611_COEFF 117
 118:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATMOSPHERE_CHARGE 118
 119:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SOLAR_RADIATION 119
 120:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_TA 120
 121:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RA 121
 122:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RESOLVED 122
 123:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_DEBUG 123
 124:/home/lsk/paparazzi/var/include/messages.h **** #define DL_POTENTIAL 124
 125:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERTICAL_ENERGY 125
 126:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_TCOUPLE 126
 127:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_STATUS 127
 128:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAMERA_SNAPSHOT 128
 129:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIMESTAMP 129
 130:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_FLOAT 130
 131:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_SCALED 131
 132:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_SCALED 132
 133:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SCALED 133
 134:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER 134
 135:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER2 135
 136:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RATE_LOOP 136
 137:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_ALIGNER 137
 138:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_MS45XX 138
 139:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_COR 139
 140:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INT 140
 141:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_INT 141
 142:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_FLOAT 142
 143:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CMD 143
 144:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_INT 144
 145:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERT_LOOP 145
 146:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HOVER_LOOP 146
 147:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_FP 147
 148:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_ADC 148
 149:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_REF_INT 149
 150:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_TUNE_HOVER 150
 151:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_Z 151
 152:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PCAP01_STATUS 152
 153:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEIGER_COUNTER 153
 154:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_REF 154
 155:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_INT 155
 156:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER_INT 156
 157:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_QUAT_INT 157
 158:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_RMAT_INT 158
 159:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_NAV_STATUS 159
 160:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_RADIO_CONTROL 160
 161:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF_EXTENDED 161
 162:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF 162
 163:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEO_MAG 163
 164:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF 164
 165:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_DBG 165
 166:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_GPS 166
 167:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_SONAR 167
 168:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CAM 168
 169:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_REF_QUAT 169
 170:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_XHAT 170
 171:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_Y 171
 172:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_P_DIAG 172
 173:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER 173
 174:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_MEASUREMENT_EULER 174
 175:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WT 175
 176:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_DEBUG 176
 177:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_MSG 177
 178:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_GYRO_BIAS_INT 178
 179:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLOW_AP_OTF 179
 180:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FMS_TIME 180
 181:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOADCELL 181
 182:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLA_DEBUG 182
 183:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_FAULT_STATUS 183
 184:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_SPEEDS 184
 185:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_DEBUG_QUAT 185
 186:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_BUSVOLTS 186
 187:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYSTEM_STATUS 187
 188:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DYNAMIXEL 188
 189:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RMAT_DEBUG 189
 190:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SIMPLE_COMMANDS 190
 191:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VANE_SENSOR 191
 192:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CONTROLLER_GAINS 192
 193:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF 193
 194:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_DEBUG 194
 195:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_ACC_DBG 195
 196:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_MAG_DBG 196
 197:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SENSORS_SCALED 197
 198:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS 198
 199:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_ERROR 199
 200:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO 200
 201:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG 201
 202:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL 202
 203:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_RAW 203
 204:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_RAW 204
 205:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_RAW 205
 206:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SETTINGS 206
 207:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_CURRENT_CALIBRATION 207
 208:/home/lsk/paparazzi/var/include/messages.h **** #define DL_UART_ERRORS 208
 209:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_LP 209
 210:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_PRESSURE 210
 211:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_HS_GYRO 211
 212:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_PASSTHROUGH_STATUS 212
 213:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_VERT 213
 214:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MF_DAQ_STATE 214
 215:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INFO_MSG 215
 216:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BEBOP_ACTUATORS 218
 217:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WEATHER 219
 218:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_TURNTABLE 220
 219:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_RAW 221
 220:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIR_DATA 222
 221:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSL 223
 222:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_SYNC 225
 223:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PERIODIC_TELEMETRY_ERR 226
 224:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIME 227
 225:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTIC_FLOW_EST 228
 226:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_ARDRONE2 230
 227:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_STATUS 231
 228:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STATE_FILTER_STATUS 232
 229:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PX4FLOW 233
 230:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTICFLOW 234
 231:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VISUALTARGET 235
 232:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SONAR 236
 233:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD_FLOAT 237
 234:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_POS_LLH 238
 235:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RPMS 239
 236:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SPEED_POS 240
 237:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RATE_ATTITUDE 241
 238:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_GYRO_BIAS 242
 239:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RANGE_METER 243
 240:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_WIND 244
 241:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_DEBUG 247
 242:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_ACCEL_LTP 248
 243:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOOSE_INS_GPS 249
 244:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AFL_COEFFS 250
 245:/home/lsk/paparazzi/var/include/messages.h **** #define DL_I2C_ERRORS 253
 246:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RDYB_TRAJECTORY 254
 247:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HENRY_GNSS 255
 248:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MSG_telemetry_NB 239
 249:/home/lsk/paparazzi/var/include/messages.h **** 
 250:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AUTOPILOT_VERSION(_trans, _dev, version, nb_desc, desc) pprz_msg_send_AUTOPIL
 251:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AUTOPILOT_VERSION(struct transport_tx *trans, struct link_device *
 252:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 
 253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 /* msg heade
 254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_desc*1 +2 /* msg header overhead */);
 255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AUTOPILOT_VERSION, "
 257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _version);
 258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_desc)
 259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_desc, (void *) _desc);
 260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 261:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 262:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 263:/home/lsk/paparazzi/var/include/messages.h **** }
 264:/home/lsk/paparazzi/var/include/messages.h **** 
 265:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALIVE(_trans, _dev, nb_md5sum, md5sum) pprz_msg_send_ALIVE(&((_trans).trans_t
 266:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALIVE(struct transport_tx *trans, struct link_device *dev, uint8_t
 267:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 
 268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 /* msg heade
 269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_md5sum*1 +2 /* msg header overhead */);
 270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALIVE, "ALIVE");
 272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_md5su
 273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_md5sum, (void *) _md5s
 274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 275:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 277:/home/lsk/paparazzi/var/include/messages.h **** }
 278:/home/lsk/paparazzi/var/include/messages.h **** 
 279:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PONG(_trans, _dev) pprz_msg_send_PONG(&((_trans).trans_tx), &((_dev).device),
 280:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PONG(struct transport_tx *trans, struct link_device *dev, uint8_t 
 281:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header 
 282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header overhead */)
 283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0 +2 /* msg header overhead */);
 284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PONG, "PONG");
 286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 287:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 289:/home/lsk/paparazzi/var/include/messages.h **** }
 290:/home/lsk/paparazzi/var/include/messages.h **** 
 291:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TAKEOFF(_trans, _dev, cpu_time) pprz_msg_send_TAKEOFF(&((_trans).trans_tx), &
 292:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TAKEOFF(struct transport_tx *trans, struct link_device *dev, uint8
 293:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
 294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
 295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
 296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TAKEOFF, "TAKEOFF");
 298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cpu_time);
 299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 302:/home/lsk/paparazzi/var/include/messages.h **** }
 303:/home/lsk/paparazzi/var/include/messages.h **** 
 304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ARDRONE_NAVDATA(_trans, _dev, taille, nu_trame, ax, ay, az, vx, vy, vz, tempe
 305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ARDRONE_NAVDATA(struct transport_tx *trans, struct link_device *de
 306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
 308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+4+2+2+4+2+2+2+2+2
 309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ARDRONE_NAVDATA, "AR
 311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _taille);
 312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nu_trame);
 313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ax);
 314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ay);
 315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _az);
 316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vx);
 317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vy);
 318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vz);
 319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_ac
 320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_gy
 321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ultrasound);
 322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_debut_echo)
 323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_fin_echo);
 324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_association
 325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_distance_ec
 326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_time)
 327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_value
 328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_ref);
 329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nb_echo);
 330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sum_echo);
 331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _gradient);
 332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flag_echo_ini)
 333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_pr
 335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mx);
 336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _my);
 337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mz);
 338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _chksum);
 339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
 340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 341:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 343:/home/lsk/paparazzi/var/include/messages.h **** }
 344:/home/lsk/paparazzi/var/include/messages.h **** 
 345:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATTITUDE(_trans, _dev, phi, psi, theta) pprz_msg_send_ATTITUDE(&((_trans).tra
 346:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATTITUDE(struct transport_tx *trans, struct link_device *dev, uint
 347:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATTITUDE, "ATTITUDE"
 352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
 354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
 355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 356:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 358:/home/lsk/paparazzi/var/include/messages.h **** }
 359:/home/lsk/paparazzi/var/include/messages.h **** 
 360:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IR_SENSORS(_trans, _dev, ir1, ir2, longitudinal, lateral, vertical) pprz_msg_
 361:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IR_SENSORS(struct transport_tx *trans, struct link_device *dev, ui
 362:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* m
 363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* msg header ov
 364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2 +2 /* msg header overhead */);
 365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IR_SENSORS, "IR_SENS
 367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
 368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
 369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _longitudinal);
 370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lateral);
 371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vertical);
 372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 373:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 375:/home/lsk/paparazzi/var/include/messages.h **** }
 376:/home/lsk/paparazzi/var/include/messages.h **** 
 377:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS(_trans, _dev, mode, utm_east, utm_north, course, alt, speed, climb, week,
 378:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS(struct transport_tx *trans, struct link_device *dev, uint8_t a
 379:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4
 380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* m
 381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* msg header overhead */);
 382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS, "GPS");
 384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
 385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
 388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
 390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
 391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
 392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
 393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
 395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 396:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 398:/home/lsk/paparazzi/var/include/messages.h **** }
 399:/home/lsk/paparazzi/var/include/messages.h **** 
 400:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION_REF(_trans, _dev, utm_east, utm_north, utm_zone, ground_alt) pprz_
 401:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION_REF(struct transport_tx *trans, struct link_device *dev
 402:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg
 403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 412:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 414:/home/lsk/paparazzi/var/include/messages.h **** }
 415:/home/lsk/paparazzi/var/include/messages.h **** 
 416:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION(_trans, _dev, cur_block, cur_stage, pos_x, pos_y, dist_wp, dist_ho
 417:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION(struct transport_tx *trans, struct link_device *dev, ui
 418:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +
 419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 432:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 434:/home/lsk/paparazzi/var/include/messages.h **** }
 435:/home/lsk/paparazzi/var/include/messages.h **** 
 436:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPRZ_MODE(_trans, _dev, ap_mode, ap_gaz, ap_lateral, ap_horizontal, if_calib_
 437:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPRZ_MODE(struct transport_tx *trans, struct link_device *dev, uin
 438:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /*
 439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /* msg header 
 440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1 +2 /* msg header overhead */);
 441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPRZ_MODE, "PPRZ_MOD
 443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
 444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_gaz);
 445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_lateral);
 446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_horizontal);
 447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _if_calib_mode);
 448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu1_status);
 449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 450:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 452:/home/lsk/paparazzi/var/include/messages.h **** }
 453:/home/lsk/paparazzi/var/include/messages.h **** 
 454:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BAT(_trans, _dev, throttle, voltage, amps, flight_time, kill_auto_throttle, b
 455:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BAT(struct transport_tx *trans, struct link_device *dev, uint8_t a
 456:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +
 457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +2 /* msg hea
 458:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+2+2+2 +2 /* msg header overhead */);
 459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BAT, "BAT");
 461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
 462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _voltage);
 463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _amps);
 464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
 465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _kill_auto_throt
 466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
 467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
 468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 470:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 472:/home/lsk/paparazzi/var/include/messages.h **** }
 473:/home/lsk/paparazzi/var/include/messages.h **** 
 474:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_MCU_LINK(_trans, _dev, i2c_nb_err, i2c_mcu1_nb_err, ppm_rate) pprz_msg_
 475:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_MCU_LINK(struct transport_tx *trans, struct link_device *dev
 476:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
 477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
 478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
 479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_MCU_LINK, "DEB
 481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_nb_err);
 482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_mcu1_nb_err
 483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
 484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 485:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 487:/home/lsk/paparazzi/var/include/messages.h **** }
 488:/home/lsk/paparazzi/var/include/messages.h **** 
 489:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CALIBRATION(_trans, _dev, climb_sum_err, climb_gaz_submode) pprz_msg_send_CAL
 490:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CALIBRATION(struct transport_tx *trans, struct link_device *dev, u
 491:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg hea
 492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg header overhead
 493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1 +2 /* msg header overhead */);
 494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CALIBRATION, "CALIBR
 496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb_sum_err);
 497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _climb_gaz_submo
 498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 499:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 501:/home/lsk/paparazzi/var/include/messages.h **** }
 502:/home/lsk/paparazzi/var/include/messages.h **** 
 503:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SETTINGS(_trans, _dev, slider_1_val, slider_2_val) pprz_msg_send_SETTINGS(&((
 504:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SETTINGS(struct transport_tx *trans, struct link_device *dev, uint
 505:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SETTINGS, "SETTINGS"
 510:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_1_val);
 511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_2_val);
 512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 513:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 515:/home/lsk/paparazzi/var/include/messages.h **** }
 516:/home/lsk/paparazzi/var/include/messages.h **** 
 517:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DESIRED(_trans, _dev, roll, pitch, course, x, y, altitude, climb, airspeed) p
 518:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DESIRED(struct transport_tx *trans, struct link_device *dev, uint8
 519:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
 520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
 521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DESIRED, "DESIRED");
 524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll);
 525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch);
 526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
 527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
 528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
 529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
 531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 533:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 535:/home/lsk/paparazzi/var/include/messages.h **** }
 536:/home/lsk/paparazzi/var/include/messages.h **** 
 537:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_SOL(_trans, _dev, Pacc, Sacc, PDOP, numSV) pprz_msg_send_GPS_SOL(&((_tran
 538:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_SOL(struct transport_tx *trans, struct link_device *dev, uint8
 539:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg
 540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg header over
 541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+1 +2 /* msg header overhead */);
 542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_SOL, "GPS_SOL");
 544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Pacc);
 545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Sacc);
 546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PDOP);
 547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numSV);
 548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 549:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 551:/home/lsk/paparazzi/var/include/messages.h **** }
 552:/home/lsk/paparazzi/var/include/messages.h **** 
 553:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC_GENERIC(_trans, _dev, val1, val2) pprz_msg_send_ADC_GENERIC(&((_trans).tr
 554:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC_GENERIC(struct transport_tx *trans, struct link_device *dev, u
 555:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
 556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
 557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
 558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC_GENERIC, "ADC_GE
 560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
 561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
 562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 563:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 565:/home/lsk/paparazzi/var/include/messages.h **** }
 566:/home/lsk/paparazzi/var/include/messages.h **** 
 567:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_FORMAT(_trans, _dev, val1, val2) pprz_msg_send_TEST_FORMAT(&((_trans).tr
 568:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_FORMAT(struct transport_tx *trans, struct link_device *dev, u
 569:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg hea
 570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg header overhead
 571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+8+4 +2 /* msg header overhead */);
 572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_FORMAT, "TEST_F
 574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_DOUBLE, DL_FORMAT_SCALAR, 8, (void *) _val1);
 575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _val2);
 576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 577:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 579:/home/lsk/paparazzi/var/include/messages.h **** }
 580:/home/lsk/paparazzi/var/include/messages.h **** 
 581:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM(_trans, _dev, phi, theta, target_x, target_y) pprz_msg_send_CAM(&((_trans
 582:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM(struct transport_tx *trans, struct link_device *dev, uint8_t a
 583:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM, "CAM");
 588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
 589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
 590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_x);
 591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_y);
 592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 595:/home/lsk/paparazzi/var/include/messages.h **** }
 596:/home/lsk/paparazzi/var/include/messages.h **** 
 597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CIRCLE(_trans, _dev, center_east, center_north, radius) pprz_msg_send_CIRCLE(
 598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CIRCLE(struct transport_tx *trans, struct link_device *dev, uint8_
 599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 610:/home/lsk/paparazzi/var/include/messages.h **** }
 611:/home/lsk/paparazzi/var/include/messages.h **** 
 612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SEGMENT(_trans, _dev, segment_east_1, segment_north_1, segment_east_2, segmen
 613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SEGMENT(struct transport_tx *trans, struct link_device *dev, uint8
 614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 624:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 626:/home/lsk/paparazzi/var/include/messages.h **** }
 627:/home/lsk/paparazzi/var/include/messages.h **** 
 628:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SVINFO(_trans, _dev, chn, SVID, Flags, QI, CNO, Elev, Azim) pprz_msg_send_SVI
 629:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SVINFO(struct transport_tx *trans, struct link_device *dev, uint8_
 630:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 
 631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 /* msg heade
 632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1+2 +2 /* msg header overhead */);
 633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SVINFO, "SVINFO");
 635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _chn);
 636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _SVID);
 637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _Flags);
 638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _QI);
 639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _CNO);
 640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _Elev);
 641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _Azim);
 642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 643:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 645:/home/lsk/paparazzi/var/include/messages.h **** }
 646:/home/lsk/paparazzi/var/include/messages.h **** 
 647:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG(_trans, _dev, nb_msg, msg) pprz_msg_send_DEBUG(&((_trans).trans_tx), &(
 648:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG(struct transport_tx *trans, struct link_device *dev, uint8_t
 649:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
 650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
 651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
 652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG, "DEBUG");
 654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
 655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
 656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 657:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 659:/home/lsk/paparazzi/var/include/messages.h **** }
 660:/home/lsk/paparazzi/var/include/messages.h **** 
 661:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SURVEY(_trans, _dev, east, north, west, south) pprz_msg_send_SURVEY(&((_trans
 662:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SURVEY(struct transport_tx *trans, struct link_device *dev, uint8_
 663:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 673:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 675:/home/lsk/paparazzi/var/include/messages.h **** }
 676:/home/lsk/paparazzi/var/include/messages.h **** 
 677:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WC_RSSI(_trans, _dev, raw_level) pprz_msg_send_WC_RSSI(&((_trans).trans_tx), 
 678:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WC_RSSI(struct transport_tx *trans, struct link_device *dev, uint8
 679:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
 680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
 681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
 682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WC_RSSI, "WC_RSSI");
 684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _raw_level);
 685:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 686:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 688:/home/lsk/paparazzi/var/include/messages.h **** }
 689:/home/lsk/paparazzi/var/include/messages.h **** 
 690:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RANGEFINDER(_trans, _dev, range, z_dot, z_dot_sum_err, z_dot_setpoint, z_sum_
 691:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RANGEFINDER(struct transport_tx *trans, struct link_device *dev, u
 692:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 
 693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 /* msg heade
 694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+1 +2 /* msg header overhead */);
 695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RANGEFINDER, "RANGEF
 697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _range);
 698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_sum_err);
 700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_setpoint)
 701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_sum_err);
 702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_setpoint);
 703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _flying);
 704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 705:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 707:/home/lsk/paparazzi/var/include/messages.h **** }
 708:/home/lsk/paparazzi/var/include/messages.h **** 
 709:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DATALINK_REPORT(_trans, _dev, uplink_lost_time, uplink_nb_msgs, downlink_nb_m
 710:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DATALINK_REPORT(struct transport_tx *trans, struct link_device *de
 711:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* m
 712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* msg header ov
 713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1 +2 /* msg header overhead */);
 714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DATALINK_REPORT, "DA
 716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_lost_ti
 717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_nb_msgs
 718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_nb_ms
 719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_rate)
 720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _downlink_ovrn);
 721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 722:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 724:/home/lsk/paparazzi/var/include/messages.h **** }
 725:/home/lsk/paparazzi/var/include/messages.h **** 
 726:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DL_VALUE(_trans, _dev, index, value) pprz_msg_send_DL_VALUE(&((_trans).trans_
 727:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DL_VALUE(struct transport_tx *trans, struct link_device *dev, uint
 728:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
 729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
 730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
 731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DL_VALUE, "DL_VALUE"
 733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _index);
 734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _value);
 735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 738:/home/lsk/paparazzi/var/include/messages.h **** }
 739:/home/lsk/paparazzi/var/include/messages.h **** 
 740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MARK(_trans, _dev, ac_id, lat, long) pprz_msg_send_MARK(&((_trans).trans_tx),
 741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MARK(struct transport_tx *trans, struct link_device *dev, uint8_t 
 742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg h
 743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg header overhe
 744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4 +2 /* msg header overhead */);
 745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MARK, "MARK");
 747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
 748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
 749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _long);
 750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 753:/home/lsk/paparazzi/var/include/messages.h **** }
 754:/home/lsk/paparazzi/var/include/messages.h **** 
 755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYS_MON(_trans, _dev, periodic_time, periodic_time_min, periodic_time_max, pe
 756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYS_MON(struct transport_tx *trans, struct link_device *dev, uint8
 757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +
 758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +2 /* msg hea
 759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+1 +2 /* msg header overhead */);
 760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYS_MON, "SYS_MON");
 762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time)
 763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _event_number);
 769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cpu_load);
 770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 771:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 773:/home/lsk/paparazzi/var/include/messages.h **** }
 774:/home/lsk/paparazzi/var/include/messages.h **** 
 775:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR(_trans, _dev, rpm, current) pprz_msg_send_MOTOR(&((_trans).trans_tx), &
 776:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR(struct transport_tx *trans, struct link_device *dev, uint8_t
 777:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
 778:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
 779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
 780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR, "MOTOR");
 782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm);
 783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
 784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 785:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 787:/home/lsk/paparazzi/var/include/messages.h **** }
 788:/home/lsk/paparazzi/var/include/messages.h **** 
 789:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED(_trans, _dev, wp_id, utm_east, utm_north, alt, utm_zone) pprz_msg_se
 790:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED(struct transport_tx *trans, struct link_device *dev, uint
 791:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* msg header ov
 793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4+1 +2 /* msg header overhead */);
 794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 795:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED, "WP_MOVED"
 796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 797:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 798:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 799:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 802:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 804:/home/lsk/paparazzi/var/include/messages.h **** }
 805:/home/lsk/paparazzi/var/include/messages.h **** 
 806:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MKK(_trans, _dev, nr, rpm, current, temp) pprz_msg_send_MKK(&((_trans).trans_
 807:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MKK(struct transport_tx *trans, struct link_device *dev, uint8_t a
 808:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg
 809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg header over
 810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1 +2 /* msg header overhead */);
 811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MKK, "MKK");
 813:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nr);
 814:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rpm);
 815:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _current);
 816:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _temp);
 817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 818:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 820:/home/lsk/paparazzi/var/include/messages.h **** }
 821:/home/lsk/paparazzi/var/include/messages.h **** 
 822:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENERGY(_trans, _dev, bat, amp, energy, power) pprz_msg_send_ENERGY(&((_trans)
 823:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENERGY(struct transport_tx *trans, struct link_device *dev, uint8_
 824:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg
 825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg header over
 826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+4 +2 /* msg header overhead */);
 827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENERGY, "ENERGY");
 829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bat);
 830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amp);
 831:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _power);
 833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 834:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 836:/home/lsk/paparazzi/var/include/messages.h **** }
 837:/home/lsk/paparazzi/var/include/messages.h **** 
 838:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85_CALIB(_trans, _dev, a1, a2, a3, a4, a5, a6, b1, b2, mb, mc, md) pp
 839:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85_CALIB(struct transport_tx *trans, struct link_device *d
 840:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* m
 842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
 843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85_CALIB, "B
 845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a1);
 846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a2);
 847:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a3);
 848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a4);
 849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a5);
 850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a6);
 851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b1);
 852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b2);
 853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mb);
 854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mc);
 855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _md);
 856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 859:/home/lsk/paparazzi/var/include/messages.h **** }
 860:/home/lsk/paparazzi/var/include/messages.h **** 
 861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85(_trans, _dev, UT, UP, P, T, MSL) pprz_msg_send_BARO_BMP85(&((_tran
 862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85(struct transport_tx *trans, struct link_device *dev, ui
 863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
 864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
 865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
 866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85, "BARO_BM
 868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
 869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
 870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _P);
 871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _T);
 872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _MSL);
 873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 874:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 876:/home/lsk/paparazzi/var/include/messages.h **** }
 877:/home/lsk/paparazzi/var/include/messages.h **** 
 878:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SPEED_LOOP(_trans, _dev, ve_set_point, ve, vn_set_point, vn, north_sp, east_s
 879:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SPEED_LOOP(struct transport_tx *trans, struct link_device *dev, ui
 880:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
 882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SPEED_LOOP, "SPEED_L
 885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve_set_point);
 886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve);
 887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn_set_point);
 888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn);
 889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north_sp);
 890:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east_sp);
 891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 892:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 894:/home/lsk/paparazzi/var/include/messages.h **** }
 895:/home/lsk/paparazzi/var/include/messages.h **** 
 896:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALT_KALMAN(_trans, _dev, p00, p01, p10, p11) pprz_msg_send_ALT_KALMAN(&((_tra
 897:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALT_KALMAN(struct transport_tx *trans, struct link_device *dev, ui
 898:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALT_KALMAN, "ALT_KAL
 903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p00);
 904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p01);
 905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p10);
 906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p11);
 907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 910:/home/lsk/paparazzi/var/include/messages.h **** }
 911:/home/lsk/paparazzi/var/include/messages.h **** 
 912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ESTIMATOR(_trans, _dev, z, z_dot) pprz_msg_send_ESTIMATOR(&((_trans).trans_tx
 913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ESTIMATOR(struct transport_tx *trans, struct link_device *dev, uin
 914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ESTIMATOR, "ESTIMATO
 919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
 920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 922:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 924:/home/lsk/paparazzi/var/include/messages.h **** }
 925:/home/lsk/paparazzi/var/include/messages.h **** 
 926:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_ROLL(_trans, _dev, p, phi, phi_sp) pprz_msg_send_TUNE_ROLL(&((_trans).tr
 927:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_ROLL(struct transport_tx *trans, struct link_device *dev, uin
 928:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_ROLL, "TUNE_ROL
 933:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
 934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 935:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_sp);
 936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 937:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 939:/home/lsk/paparazzi/var/include/messages.h **** }
 940:/home/lsk/paparazzi/var/include/messages.h **** 
 941:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5534A(_trans, _dev, pressure, temp, alt) pprz_msg_send_BARO_MS5534A(&(
 942:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5534A(struct transport_tx *trans, struct link_device *dev, 
 943:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
 944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
 945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
 946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5534A, "BARO_
 948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
 950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 952:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 954:/home/lsk/paparazzi/var/include/messages.h **** }
 955:/home/lsk/paparazzi/var/include/messages.h **** 
 956:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PRESSURE(_trans, _dev, airspeed_adc, airspeed, altitude_adc, altitude) pprz_m
 957:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PRESSURE(struct transport_tx *trans, struct link_device *dev, uint
 958:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PRESSURE, "PRESSURE"
 963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_adc);
 964:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude_adc);
 966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 968:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 970:/home/lsk/paparazzi/var/include/messages.h **** }
 971:/home/lsk/paparazzi/var/include/messages.h **** 
 972:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_WORDS(_trans, _dev, w1, w2, w3, w4) pprz_msg_send_BARO_WORDS(&((_trans).
 973:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_WORDS(struct transport_tx *trans, struct link_device *dev, ui
 974:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_WORDS, "BARO_WO
 979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w1);
 980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w2);
 981:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w3);
 982:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w4);
 983:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 984:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 986:/home/lsk/paparazzi/var/include/messages.h **** }
 987:/home/lsk/paparazzi/var/include/messages.h **** 
 988:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_LLA(_trans, _dev, wp_id, lat, lon, alt) pprz_msg_send_WP_MOVED_LLA(&
 989:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_LLA(struct transport_tx *trans, struct link_device *dev, 
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_LLA, "WP_MO
 995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
 998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1000:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1002:/home/lsk/paparazzi/var/include/messages.h **** }
1003:/home/lsk/paparazzi/var/include/messages.h **** 
1004:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CHRONO(_trans, _dev, tag, time) pprz_msg_send_CHRONO(&((_trans).trans_tx), &(
1005:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CHRONO(struct transport_tx *trans, struct link_device *dev, uint8_
1006:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
1007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
1008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
1009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CHRONO, "CHRONO");
1011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tag);
1012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time);
1013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1014:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1016:/home/lsk/paparazzi/var/include/messages.h **** }
1017:/home/lsk/paparazzi/var/include/messages.h **** 
1018:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_ENU(_trans, _dev, wp_id, east, north, up) pprz_msg_send_WP_MOVED_ENU
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
1020:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
1021:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
1022:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
1023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_ENU, "WP_MO
1025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
1026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
1027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
1028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
1029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1030:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1032:/home/lsk/paparazzi/var/include/messages.h **** }
1033:/home/lsk/paparazzi/var/include/messages.h **** 
1034:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WINDTURBINE_STATUS_(_trans, _dev, ac_id, tb_id, sync_itow, cycle_time) pprz_m
1035:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WINDTURBINE_STATUS_(struct transport_tx *trans, struct link_device
1036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg
1037:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg header over
1038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4 +2 /* msg header overhead */);
1039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WINDTURBINE_STATUS_,
1041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tb_id);
1043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sync_itow);
1044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _cycle_time);
1045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1048:/home/lsk/paparazzi/var/include/messages.h **** }
1049:/home/lsk/paparazzi/var/include/messages.h **** 
1050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC_3CH_(_trans, _dev, throttle_mode, roll, pitch) pprz_msg_send_RC_3CH_(&((_t
1051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC_3CH_(struct transport_tx *trans, struct link_device *dev, uint8
1052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC_3CH_, "RC_3CH_");
1057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle_mode);
1058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _roll);
1059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _pitch);
1060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1061:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1063:/home/lsk/paparazzi/var/include/messages.h **** }
1064:/home/lsk/paparazzi/var/include/messages.h **** 
1065:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPPT(_trans, _dev, nb_values, values) pprz_msg_send_MPPT(&((_trans).trans_tx)
1066:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPPT(struct transport_tx *trans, struct link_device *dev, uint8_t 
1067:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPPT, "MPPT");
1072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1075:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1077:/home/lsk/paparazzi/var/include/messages.h **** }
1078:/home/lsk/paparazzi/var/include/messages.h **** 
1079:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_IR_I2C(_trans, _dev, ir1, ir2, top) pprz_msg_send_DEBUG_IR_I2C(&((_tran
1080:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_IR_I2C(struct transport_tx *trans, struct link_device *dev, 
1081:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
1082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
1083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
1084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_IR_I2C, "DEBUG
1086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
1087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
1088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _top);
1089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1090:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1092:/home/lsk/paparazzi/var/include/messages.h **** }
1093:/home/lsk/paparazzi/var/include/messages.h **** 
1094:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED(_trans, _dev, airspeed, airspeed_sp, airspeed_cnt, groundspeed_sp) p
1095:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED(struct transport_tx *trans, struct link_device *dev, uint
1096:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED, "AIRSPEED"
1101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_sp);
1103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_cnt);
1104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _groundspeed_sp)
1105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1106:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1108:/home/lsk/paparazzi/var/include/messages.h **** }
1109:/home/lsk/paparazzi/var/include/messages.h **** 
1110:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XSENS(_trans, _dev, counter, p, q, r, phi, theta, psi, ax, ay, az, vx, vy, vz
1111:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XSENS(struct transport_tx *trans, struct link_device *dev, uint8_t
1112:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
1113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+1+1+1+1+4+2+1+1 +2 /* m
1115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XSENS, "XSENS");
1117:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _counter);
1118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
1119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
1120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
1121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
1124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
1125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
1126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
1127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vx);
1128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vy);
1129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vz);
1130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
1131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lon);
1132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1134:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _hour);
1135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _min);
1136:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _sec);
1137:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _nanosec);
1138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _year);
1139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _month);
1140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _day);
1141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1142:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1144:/home/lsk/paparazzi/var/include/messages.h **** }
1145:/home/lsk/paparazzi/var/include/messages.h **** 
1146:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_BARO_ETS(&((_trans)
1147:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_ETS(struct transport_tx *trans, struct link_device *dev, uint
1148:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_ETS, "BARO_ETS"
1153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1157:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1159:/home/lsk/paparazzi/var/include/messages.h **** }
1160:/home/lsk/paparazzi/var/include/messages.h **** 
1161:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_AIRSPEED_ETS(&(
1162:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_ETS(struct transport_tx *trans, struct link_device *dev, 
1163:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_ETS, "AIRSP
1168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1172:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1174:/home/lsk/paparazzi/var/include/messages.h **** }
1175:/home/lsk/paparazzi/var/include/messages.h **** 
1176:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PBN(_trans, _dev, airspeed_adc, altitude_adc, airspeed, altitude, airspeed_of
1177:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PBN(struct transport_tx *trans, struct link_device *dev, uint8_t a
1178:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /*
1179:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /* msg header 
1180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+2+2 +2 /* msg header overhead */);
1181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PBN, "PBN");
1183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_adc);
1184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_adc);
1185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
1187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_offse
1188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_offse
1189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1190:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1192:/home/lsk/paparazzi/var/include/messages.h **** }
1193:/home/lsk/paparazzi/var/include/messages.h **** 
1194:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_LLA(_trans, _dev, lat, lon, alt, course, speed, climb, week, itow, mode, 
1195:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_LLA(struct transport_tx *trans, struct link_device *dev, uint8
1196:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1
1197:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg
1198:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg header overhead */);
1199:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_LLA, "GPS_LLA");
1201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
1206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
1207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
1208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
1209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
1211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1212:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1214:/home/lsk/paparazzi/var/include/messages.h **** }
1215:/home/lsk/paparazzi/var/include/messages.h **** 
1216:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_H_CTL_A(_trans, _dev, roll_sum_err, roll_sp, roll_ref, phi, aileron_sp, pitch
1217:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_H_CTL_A(struct transport_tx *trans, struct link_device *dev, uint8
1218:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4
1219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg
1220:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg header overhead */);
1221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1222:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_H_CTL_A, "H_CTL_A");
1223:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sum_err);
1224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sp);
1225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_ref);
1226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _aileron_sp);
1228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sum_err);
1229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sp);
1230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_ref);
1231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _elevator_sp);
1233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1234:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1236:/home/lsk/paparazzi/var/include/messages.h **** }
1237:/home/lsk/paparazzi/var/include/messages.h **** 
1238:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_RAW(_trans, _dev, ch_0, ch_1, ch_2, ch_3, ch_4, ch_5, ch_6, ch_
1239:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_RAW(struct transport_tx *trans, struct link_device *
1240:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_RAW, "
1245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_0);
1246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_1);
1247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_2);
1248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_3);
1249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_4);
1250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_5);
1251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_6);
1252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_7);
1253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_8);
1254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_9);
1255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_10);
1256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_11);
1257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_12);
1258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_13);
1259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_14);
1260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_15);
1261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1262:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1264:/home/lsk/paparazzi/var/include/messages.h **** }
1265:/home/lsk/paparazzi/var/include/messages.h **** 
1266:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_VOLTAGE(_trans, _dev, ch_1_p, ch_1_t, ch_2_p, ch_2_t, ch_3_p, c
1267:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_VOLTAGE(struct transport_tx *trans, struct link_devi
1268:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_VOLTAG
1273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_p);
1274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_t);
1275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_p);
1276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_t);
1277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_p);
1278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_t);
1279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_p);
1280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_t);
1281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_p);
1282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_t);
1283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_p);
1284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_t);
1285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_p);
1286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_t);
1287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd1);
1288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd2);
1289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1292:/home/lsk/paparazzi/var/include/messages.h **** }
1293:/home/lsk/paparazzi/var/include/messages.h **** 
1294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM_POINT(_trans, _dev, cam_point_distance_from_home, cam_point_lat, cam_poin
1295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM_POINT(struct transport_tx *trans, struct link_device *dev, uin
1296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM_POINT, "CAM_POIN
1301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cam_point_dist
1302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lat);
1303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lon);
1304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1307:/home/lsk/paparazzi/var/include/messages.h **** }
1308:/home/lsk/paparazzi/var/include/messages.h **** 
1309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_INFO(_trans, _dev, mode, lat, lon, alt, course, photo_nr, dist, next_dist,
1310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_INFO(struct transport_tx *trans, struct link_device *dev, uint8
1311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4
1312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1
1313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1 +2 /* msg header overhead
1314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_INFO, "DC_INFO");
1316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
1317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
1321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
1322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist);
1323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _next_dist);
1324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_x);
1325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_y);
1326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_angle);
1327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _angle);
1328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _last_block);
1329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _count);
1330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _shutter);
1331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1332:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1334:/home/lsk/paparazzi/var/include/messages.h **** }
1335:/home/lsk/paparazzi/var/include/messages.h **** 
1336:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_BARO(_trans, _dev, pBaroRaw, pBaro, pHomePressure, AltOffset, aktuell, 
1337:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_BARO(struct transport_tx *trans, struct link_device *dev, ui
1338:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 
1339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 /* msg heade
1340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4 +2 /* msg header overhead */);
1341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_BARO, "AMSYS_B
1343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pBaroRaw);
1344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pBaro);
1345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pHomePressure);
1346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AltOffset);
1347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _aktuell);
1348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Over_Ground);
1349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tempBaro);
1350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1353:/home/lsk/paparazzi/var/include/messages.h **** }
1354:/home/lsk/paparazzi/var/include/messages.h **** 
1355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_AIRSPEED(_trans, _dev, asRaw, asPresure, asAirspeed, asAirsFilt, asTemp
1356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_AIRSPEED(struct transport_tx *trans, struct link_device *dev
1357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* m
1358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* msg header ov
1359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4 +2 /* msg header overhead */);
1360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_AIRSPEED, "AMS
1362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _asRaw);
1363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asPresure);
1364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirspeed);
1365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirsFilt);
1366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asTemp);
1367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1368:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1370:/home/lsk/paparazzi/var/include/messages.h **** }
1371:/home/lsk/paparazzi/var/include/messages.h **** 
1372:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLIGHT_BENCHMARK(_trans, _dev, SE_As, SE_Alt, SE_Pos, Err_As, Err_Alt, Err_Po
1373:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLIGHT_BENCHMARK(struct transport_tx *trans, struct link_device *d
1374:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
1375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
1376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
1377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLIGHT_BENCHMARK, "F
1379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_As);
1380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Alt);
1381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Pos);
1382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_As);
1383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Alt);
1384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Pos);
1385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1386:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1388:/home/lsk/paparazzi/var/include/messages.h **** }
1389:/home/lsk/paparazzi/var/include/messages.h **** 
1390:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPL3115_BARO(_trans, _dev, pressure, temp, alt) pprz_msg_send_MPL3115_BARO(&(
1391:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPL3115_BARO(struct transport_tx *trans, struct link_device *dev, 
1392:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
1393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
1394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
1395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPL3115_BARO, "MPL31
1397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
1398:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1401:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1403:/home/lsk/paparazzi/var/include/messages.h **** }
1404:/home/lsk/paparazzi/var/include/messages.h **** 
1405:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AOA_ADC(_trans, _dev, adcVal, AOA) pprz_msg_send_AOA_ADC(&((_trans).trans_tx)
1406:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AOA_ADC(struct transport_tx *trans, struct link_device *dev, uint8
1407:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AOA_ADC, "AOA_ADC");
1412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adcVal);
1413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AOA);
1414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1415:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1417:/home/lsk/paparazzi/var/include/messages.h **** }
1418:/home/lsk/paparazzi/var/include/messages.h **** 
1419:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XTEND_RSSI(_trans, _dev, datalink_time, rssi_fade_margin, duty) pprz_msg_send
1420:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XTEND_RSSI(struct transport_tx *trans, struct link_device *dev, ui
1421:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg h
1422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg header overhe
1423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+1+1 +2 /* msg header overhead */);
1424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XTEND_RSSI, "XTEND_R
1426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _datalink_time)
1427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rssi_fade_margi
1428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _duty);
1429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1430:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1432:/home/lsk/paparazzi/var/include/messages.h **** }
1433:/home/lsk/paparazzi/var/include/messages.h **** 
1434:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SUPERBITRF(_trans, _dev, status, cyrf_status, irq_count, rx_packet_count, tx_
1435:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SUPERBITRF(struct transport_tx *trans, struct link_device *dev, ui
1436:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4
1437:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_
1438:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_mfg_id*1 +2 /* msg header 
1439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SUPERBITRF, "SUPERBI
1441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cyrf_status);
1443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _irq_count);
1444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rx_packet_coun
1445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tx_packet_coun
1446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _transfer_timeo
1447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _resync_count);
1448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _uplink_count);
1449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_count);
1450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing1);
1451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing2);
1452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _bind_mfg_id);
1453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_mfg_i
1454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_mfg_id, (void *) _mfg_
1455:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1456:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1458:/home/lsk/paparazzi/var/include/messages.h **** }
1459:/home/lsk/paparazzi/var/include/messages.h **** 
1460:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GX3_INFO(_trans, _dev, GX3_freq, chksm_error, hdr_error, GX3_chksm) pprz_msg_
1461:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GX3_INFO(struct transport_tx *trans, struct link_device *dev, uint
1462:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GX3_INFO, "GX3_INFO"
1467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _GX3_freq);
1468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _chksm_error);
1469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _hdr_error);
1470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _GX3_chksm);
1471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1472:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1474:/home/lsk/paparazzi/var/include/messages.h **** }
1475:/home/lsk/paparazzi/var/include/messages.h **** 
1476:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EXPLAIN(_trans, _dev, type, id, nb_string, string) pprz_msg_send_EXPLAIN(&((_
1477:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EXPLAIN(struct transport_tx *trans, struct link_device *dev, uint8
1478:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1
1479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1 +2 /* msg h
1480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_string*1 +2 /* msg header overhead */);
1481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EXPLAIN, "EXPLAIN");
1483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _type);
1484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id);
1485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_strin
1486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_string, (void *) _stri
1487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1488:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1490:/home/lsk/paparazzi/var/include/messages.h **** }
1491:/home/lsk/paparazzi/var/include/messages.h **** 
1492:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VIDEO_TELEMETRY(_trans, _dev, blob_x1, blob_y1, blob_x2, blob_y2, blob_x3, bl
1493:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VIDEO_TELEMETRY(struct transport_tx *trans, struct link_device *de
1494:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
1495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
1496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
1497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VIDEO_TELEMETRY, "VI
1499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x1);
1500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y1);
1501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x2);
1502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y2);
1503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x3);
1504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y3);
1505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x4);
1506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y4);
1507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1508:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1510:/home/lsk/paparazzi/var/include/messages.h **** }
1511:/home/lsk/paparazzi/var/include/messages.h **** 
1512:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_UPDATE(_trans, _dev, baro, range_meter) pprz_msg_send_VF_UPDATE(&((_trans)
1513:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_UPDATE(struct transport_tx *trans, struct link_device *dev, uin
1514:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_UPDATE, "VF_UPDAT
1519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro);
1520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _range_meter);
1521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1522:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1524:/home/lsk/paparazzi/var/include/messages.h **** }
1525:/home/lsk/paparazzi/var/include/messages.h **** 
1526:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_PREDICT(_trans, _dev, accel) pprz_msg_send_VF_PREDICT(&((_trans).trans_tx)
1527:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_PREDICT(struct transport_tx *trans, struct link_device *dev, ui
1528:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
1529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
1530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
1531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_PREDICT, "VF_PRED
1533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _accel);
1534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1535:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1537:/home/lsk/paparazzi/var/include/messages.h **** }
1538:/home/lsk/paparazzi/var/include/messages.h **** 
1539:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INV_FILTER(_trans, _dev, quat, phi_inv, theta_inv, psi_inv, Vx_inv, Vy_inv, V
1540:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INV_FILTER(struct transport_tx *trans, struct link_device *dev, ui
1541:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
1544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INV_FILTER, "INV_FIL
1546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat);
1547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_inv);
1548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_inv);
1549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_inv);
1550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vx_inv);
1551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vy_inv);
1552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vz_inv);
1553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Px_inv);
1554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Py_inv);
1555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pz_inv);
1556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_phi);
1557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_theta);
1558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_psi);
1559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_as);
1560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_hb);
1561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
1562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_gps);
1563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1564:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1566:/home/lsk/paparazzi/var/include/messages.h **** }
1567:/home/lsk/paparazzi/var/include/messages.h **** 
1568:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MISSION_STATUS(_trans, _dev, remaining_time, nb_task_list, task_list) pprz_ms
1569:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MISSION_STATUS(struct transport_tx *trans, struct link_device *dev
1570:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*
1571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*1 +2 /* msg 
1572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_task_list*1 +2 /* msg header overhead */);
1573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MISSION_STATUS, "MIS
1575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _remaining_time)
1576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_task_
1577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_task_list, (void *) _t
1578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1579:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1581:/home/lsk/paparazzi/var/include/messages.h **** }
1582:/home/lsk/paparazzi/var/include/messages.h **** 
1583:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CROSS_TRACK_ERROR(_trans, _dev, cross_track_error, cte_int) pprz_msg_send_CRO
1584:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CROSS_TRACK_ERROR(struct transport_tx *trans, struct link_device *
1585:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CROSS_TRACK_ERROR, "
1590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cross_track_err
1591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cte_int);
1592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1595:/home/lsk/paparazzi/var/include/messages.h **** }
1596:/home/lsk/paparazzi/var/include/messages.h **** 
1597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GENERIC_COM(_trans, _dev, lat, lon, alt, gspeed, course, airspeed, vsupply, e
1598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GENERIC_COM(struct transport_tx *trans, struct link_device *dev, u
1599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1
1600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /*
1601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /* msg header overhead */);
1602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GENERIC_COM, "GENERI
1604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _alt);
1607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _gspeed);
1608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed);
1610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _vsupply);
1611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _energy);
1612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle);
1613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
1614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nav_block);
1615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
1616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1617:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1619:/home/lsk/paparazzi/var/include/messages.h **** }
1620:/home/lsk/paparazzi/var/include/messages.h **** 
1621:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_SLOT_TM(_trans, _dev, ac_id, mode, slot_east, slot_north, slot_alt)
1622:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_SLOT_TM(struct transport_tx *trans, struct link_device *
1623:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* m
1624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* msg header ov
1625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4 +2 /* msg header overhead */);
1626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_SLOT_TM, "
1628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_east);
1631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_north);
1632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_alt);
1633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1634:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1636:/home/lsk/paparazzi/var/include/messages.h **** }
1637:/home/lsk/paparazzi/var/include/messages.h **** 
1638:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_STATUS_TM(_trans, _dev, ac_id, leader_id, status) pprz_msg_send_FOR
1639:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_STATUS_TM(struct transport_tx *trans, struct link_device
1640:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_STATUS_TM,
1645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _leader_id);
1647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1649:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1651:/home/lsk/paparazzi/var/include/messages.h **** }
1652:/home/lsk/paparazzi/var/include/messages.h **** 
1653:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BMP_STATUS(_trans, _dev, UP, UT, press, temp) pprz_msg_send_BMP_STATUS(&((_tr
1654:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1655:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BMP_STATUS, "BMP_STA
1660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
1661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
1662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _temp);
1664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1665:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1667:/home/lsk/paparazzi/var/include/messages.h **** }
1668:/home/lsk/paparazzi/var/include/messages.h **** 
1669:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_STATUS(_trans, _dev, itemp_case, temp_case, itemp_obj, temp_obj) pprz_msg
1670:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1671:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg
1672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg header over
1673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+2+4 +2 /* msg header overhead */);
1674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_STATUS, "MLX_STA
1676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_case);
1677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_case);
1678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_obj);
1679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_obj);
1680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1681:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1683:/home/lsk/paparazzi/var/include/messages.h **** }
1684:/home/lsk/paparazzi/var/include/messages.h **** 
1685:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TMP_STATUS(_trans, _dev, itemp, temp) pprz_msg_send_TMP_STATUS(&((_trans).tra
1686:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1687:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TMP_STATUS, "TMP_STA
1692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1695:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1697:/home/lsk/paparazzi/var/include/messages.h **** }
1698:/home/lsk/paparazzi/var/include/messages.h **** 
1699:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WIND_INFO_RET(_trans, _dev, east, north, airspeed) pprz_msg_send_WIND_INFO_RE
1700:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WIND_INFO_RET(struct transport_tx *trans, struct link_device *dev,
1701:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
1702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
1703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
1704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WIND_INFO_RET, "WIND
1706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
1707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
1708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1709:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1710:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1712:/home/lsk/paparazzi/var/include/messages.h **** }
1713:/home/lsk/paparazzi/var/include/messages.h **** 
1714:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SCP_STATUS(_trans, _dev, press, temp) pprz_msg_send_SCP_STATUS(&((_trans).tra
1715:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SCP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1716:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg hea
1717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg header overhead
1718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2 +2 /* msg header overhead */);
1719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SCP_STATUS, "SCP_STA
1721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1724:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1726:/home/lsk/paparazzi/var/include/messages.h **** }
1727:/home/lsk/paparazzi/var/include/messages.h **** 
1728:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_STATUS
1729:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1730:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_STATUS, "SHT_STA
1735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
1736:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
1738:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1739:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1740:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1742:/home/lsk/paparazzi/var/include/messages.h **** }
1743:/home/lsk/paparazzi/var/include/messages.h **** 
1744:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENOSE_STATUS(_trans, _dev, val1, val2, val3, PID, nb_heat, heat) pprz_msg_sen
1745:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENOSE_STATUS(struct transport_tx *trans, struct link_device *dev, 
1746:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat
1747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat*1 +2 /* msg
1748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+nb_heat*1 +2 /* msg header overhead */);
1749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENOSE_STATUS, "ENOSE
1751:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
1752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
1753:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
1754:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PID);
1755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_heat)
1756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_heat, (void *) _heat);
1757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1758:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1760:/home/lsk/paparazzi/var/include/messages.h **** }
1761:/home/lsk/paparazzi/var/include/messages.h **** 
1762:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DPICCO_STATUS(_trans, _dev, humid, temp, fhumid, ftemp) pprz_msg_send_DPICCO_
1763:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DPICCO_STATUS(struct transport_tx *trans, struct link_device *dev,
1764:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DPICCO_STATUS, "DPIC
1769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1774:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1776:/home/lsk/paparazzi/var/include/messages.h **** }
1777:/home/lsk/paparazzi/var/include/messages.h **** 
1778:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_DEBUG(_trans, _dev, mag_xraw, mag_yraw, mag_xcal, mag_ycal, mag_headi
1779:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_DEBUG(struct transport_tx *trans, struct link_device *dev,
1780:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1
1781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1 +2 /* msg h
1782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1+1 +2 /* msg header overhead */);
1783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_DEBUG, "ANTE
1785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_xraw);
1786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_yraw);
1787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_xcal);
1788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_ycal);
1789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_heading);
1790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_magnitude);
1791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_temp);
1792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_distor);
1793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_cal_status)
1794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1797:/home/lsk/paparazzi/var/include/messages.h **** }
1798:/home/lsk/paparazzi/var/include/messages.h **** 
1799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_STATUS(_trans, _dev, azim_sp, elev_sp, id_sp, mode) pprz_msg_send_ANT
1800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_STATUS(struct transport_tx *trans, struct link_device *dev
1801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg
1802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg header over
1803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+1 +2 /* msg header overhead */);
1804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_STATUS, "ANT
1806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _azim_sp);
1807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _elev_sp);
1808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id_sp);
1809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1813:/home/lsk/paparazzi/var/include/messages.h **** }
1814:/home/lsk/paparazzi/var/include/messages.h **** 
1815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATUS(_trans, _dev, time_ticks, throttle, rpm, current, thrust, 
1816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATUS(struct transport_tx *trans, struct link_device 
1817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +
1818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +2 /* msg hea
1819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+2+1 +2 /* msg header overhead */);
1820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATUS, 
1822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time_ticks);
1823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
1824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
1825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _current);
1826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _thrust);
1827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _torque);
1828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _time_s);
1829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1831:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1833:/home/lsk/paparazzi/var/include/messages.h **** }
1834:/home/lsk/paparazzi/var/include/messages.h **** 
1835:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATIC(_trans, _dev, av_rpm, av_thrust, av_current, throttle) ppr
1836:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATIC(struct transport_tx *trans, struct link_device 
1837:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATIC, 
1842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_rpm);
1843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_thrust);
1844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_current);
1845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
1846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1847:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1849:/home/lsk/paparazzi/var/include/messages.h **** }
1850:/home/lsk/paparazzi/var/include/messages.h **** 
1851:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HIH_STATUS(_trans, _dev, humid, fhumid, ftemp) pprz_msg_send_HIH_STATUS(&((_t
1852:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HIH_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1853:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HIH_STATUS, "HIH_STA
1858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1864:/home/lsk/paparazzi/var/include/messages.h **** }
1865:/home/lsk/paparazzi/var/include/messages.h **** 
1866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMT_STATUS(_trans, _dev, light, f_light) pprz_msg_send_TEMT_STATUS(&((_trans
1867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMT_STATUS(struct transport_tx *trans, struct link_device *dev, u
1868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMT_STATUS, "TEMT_S
1873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _light);
1874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f_light);
1875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1876:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1878:/home/lsk/paparazzi/var/include/messages.h **** }
1879:/home/lsk/paparazzi/var/include/messages.h **** 
1880:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GP2Y_STATUS(_trans, _dev, idensity, density) pprz_msg_send_GP2Y_STATUS(&((_tr
1881:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GP2Y_STATUS(struct transport_tx *trans, struct link_device *dev, u
1882:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GP2Y_STATUS, "GP2Y_S
1887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _idensity);
1888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _density);
1889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1892:/home/lsk/paparazzi/var/include/messages.h **** }
1893:/home/lsk/paparazzi/var/include/messages.h **** 
1894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_SHT_I2C_SERIAL(&
1895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_SERIAL(struct transport_tx *trans, struct link_device *dev
1896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_SERIAL, "SHT
1901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
1902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
1903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1904:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1906:/home/lsk/paparazzi/var/include/messages.h **** }
1907:/home/lsk/paparazzi/var/include/messages.h **** 
1908:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPM(_trans, _dev, ppm_rate, nb_values, values) pprz_msg_send_PPM(&((_trans).t
1909:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPM(struct transport_tx *trans, struct link_device *dev, uint8_t a
1910:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1911:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1912:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1913:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1914:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPM, "PPM");
1915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
1916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1919:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1921:/home/lsk/paparazzi/var/include/messages.h **** }
1922:/home/lsk/paparazzi/var/include/messages.h **** 
1923:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC(_trans, _dev, nb_values, values) pprz_msg_send_RC(&((_trans).trans_tx), &(
1924:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC(struct transport_tx *trans, struct link_device *dev, uint8_t ac
1925:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC, "RC");
1930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1933:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1935:/home/lsk/paparazzi/var/include/messages.h **** }
1936:/home/lsk/paparazzi/var/include/messages.h **** 
1937:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_COMMANDS(_trans, _dev, nb_values, values) pprz_msg_send_COMMANDS(&((_trans).t
1938:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_COMMANDS(struct transport_tx *trans, struct link_device *dev, uint
1939:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_COMMANDS, "COMMANDS"
1944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1947:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1949:/home/lsk/paparazzi/var/include/messages.h **** }
1950:/home/lsk/paparazzi/var/include/messages.h **** 
1951:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FBW_STATUS(_trans, _dev, rc_status, frame_rate, mode, vsupply, current) pprz_
1952:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FBW_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1953:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* m
1954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* msg header ov
1955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+2+4 +2 /* msg header overhead */);
1956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FBW_STATUS, "FBW_STA
1958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rc_status);
1959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _frame_rate);
1960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
1962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
1963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1964:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1966:/home/lsk/paparazzi/var/include/messages.h **** }
1967:/home/lsk/paparazzi/var/include/messages.h **** 
1968:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC(_trans, _dev, mcu, nb_values, values) pprz_msg_send_ADC(&((_trans).trans_
1969:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC(struct transport_tx *trans, struct link_device *dev, uint8_t a
1970:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC, "ADC");
1975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu);
1976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1979:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1981:/home/lsk/paparazzi/var/include/messages.h **** }
1982:/home/lsk/paparazzi/var/include/messages.h **** 
1983:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ACTUATORS(_trans, _dev, nb_values, values) pprz_msg_send_ACTUATORS(&((_trans)
1984:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ACTUATORS(struct transport_tx *trans, struct link_device *dev, uin
1985:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ACTUATORS, "ACTUATOR
1990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1993:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1995:/home/lsk/paparazzi/var/include/messages.h **** }
1996:/home/lsk/paparazzi/var/include/messages.h **** 
1997:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_SHOT(_trans, _dev, photo_nr, lat, lon, alt, hmsl, phi, theta, psi, course,
1998:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_SHOT(struct transport_tx *trans, struct link_device *dev, uint8
1999:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2
2000:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* m
2001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* msg header overhead */);
2002:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2003:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_SHOT, "DC_SHOT");
2004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
2005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
2010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
2011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _psi);
2012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
2013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
2014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
2015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2018:/home/lsk/paparazzi/var/include/messages.h **** }
2019:/home/lsk/paparazzi/var/include/messages.h **** 
2020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_BOARD_RESULTS(_trans, _dev, uart, ppm, nb_servo, servo) pprz_msg_send_TE
2021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_BOARD_RESULTS(struct transport_tx *trans, struct link_device 
2022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 
2023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 +2 /* msg he
2024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_servo*2 +2 /* msg header overhead */);
2025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_BOARD_RESULTS, 
2027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _uart);
2028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm);
2029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_servo
2030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_servo, (void *) _serv
2031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2032:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2034:/home/lsk/paparazzi/var/include/messages.h **** }
2035:/home/lsk/paparazzi/var/include/messages.h **** 
2036:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_MLX_SERIAL(&((_trans
2037:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_SERIAL(struct transport_tx *trans, struct link_device *dev, ui
2038:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
2039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
2040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
2041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_SERIAL, "MLX_SER
2043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
2044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
2045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2048:/home/lsk/paparazzi/var/include/messages.h **** }
2049:/home/lsk/paparazzi/var/include/messages.h **** 
2050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PAYLOAD(_trans, _dev, nb_values, values) pprz_msg_send_PAYLOAD(&((_trans).tra
2051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PAYLOAD(struct transport_tx *trans, struct link_device *dev, uint8
2052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 
2053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 /* msg heade
2054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*1 +2 /* msg header overhead */);
2055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PAYLOAD, "PAYLOAD");
2057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
2058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_values, (void *) _valu
2059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2060:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2062:/home/lsk/paparazzi/var/include/messages.h **** }
2063:/home/lsk/paparazzi/var/include/messages.h **** 
2064:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HTM_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_HTM_STATUS
2065:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HTM_STATUS(struct transport_tx *trans, struct link_device *dev, ui
2066:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HTM_STATUS, "HTM_STA
2071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2076:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2078:/home/lsk/paparazzi/var/include/messages.h **** }
2079:/home/lsk/paparazzi/var/include/messages.h **** 
2080:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5611(_trans, _dev, d1, d2, pressure, temp) pprz_msg_send_BARO_MS5611(&
2081:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5611(struct transport_tx *trans, struct link_device *dev, u
2082:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5611, "BARO_M
2087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d1);
2088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d2);
2089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
2090:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2092:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2093:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2094:/home/lsk/paparazzi/var/include/messages.h **** }
2095:/home/lsk/paparazzi/var/include/messages.h **** 
2096:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MS5611_COEFF(_trans, _dev, c0, c1, c2, c3, c4, c5, c6, c7) pprz_msg_send_MS56
2097:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MS5611_COEFF(struct transport_tx *trans, struct link_device *dev, 
2098:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +
2099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +2 /* msg hea
2100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MS5611_COEFF, "MS561
2103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c0);
2104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c1);
2105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c2);
2106:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c3);
2107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c4);
2108:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c5);
2109:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c6);
2110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c7);
2111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2112:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2114:/home/lsk/paparazzi/var/include/messages.h **** }
2115:/home/lsk/paparazzi/var/include/messages.h **** 
2116:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATMOSPHERE_CHARGE(_trans, _dev, t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) pprz_
2117:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATMOSPHERE_CHARGE(struct transport_tx *trans, struct link_device *
2118:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg
2120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATMOSPHERE_CHARGE, "
2123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t0);
2124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t1);
2125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t2);
2126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t3);
2127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t4);
2128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t5);
2129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t6);
2130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t7);
2131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t8);
2132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t9);
2133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2134:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2136:/home/lsk/paparazzi/var/include/messages.h **** }
2137:/home/lsk/paparazzi/var/include/messages.h **** 
2138:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SOLAR_RADIATION(_trans, _dev, up_t0, dn_t0, up_t1, dn_t1, up_t2, dn_t2, up_t3
2139:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SOLAR_RADIATION(struct transport_tx *trans, struct link_device *de
2140:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
2142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg heade
2143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SOLAR_RADIATION, "SO
2145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t0);
2146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t0);
2147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t1);
2148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t1);
2149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t2);
2150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t2);
2151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t3);
2152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t3);
2153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t4);
2154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t4);
2155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t5);
2156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t5);
2157:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t6);
2158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t6);
2159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t7);
2160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t7);
2161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t8);
2162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t8);
2163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t9);
2164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t9);
2165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2166:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2168:/home/lsk/paparazzi/var/include/messages.h **** }
2169:/home/lsk/paparazzi/var/include/messages.h **** 
2170:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_TA(_trans, _dev, ac_id) pprz_msg_send_TCAS_TA(&((_trans).trans_tx), &((_
2171:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_TA(struct transport_tx *trans, struct link_device *dev, uint8
2172:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2175:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2176:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_TA, "TCAS_TA");
2177:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2178:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2179:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2181:/home/lsk/paparazzi/var/include/messages.h **** }
2182:/home/lsk/paparazzi/var/include/messages.h **** 
2183:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RA(_trans, _dev, ac_id, resolve) pprz_msg_send_TCAS_RA(&((_trans).trans_
2184:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RA(struct transport_tx *trans, struct link_device *dev, uint8
2185:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg hea
2186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg header overhead
2187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1 +2 /* msg header overhead */);
2188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RA, "TCAS_RA");
2190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _resolve);
2192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2193:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2195:/home/lsk/paparazzi/var/include/messages.h **** }
2196:/home/lsk/paparazzi/var/include/messages.h **** 
2197:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RESOLVED(_trans, _dev, ac_id) pprz_msg_send_TCAS_RESOLVED(&((_trans).tra
2198:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RESOLVED(struct transport_tx *trans, struct link_device *dev,
2199:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RESOLVED, "TCAS
2204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2206:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2208:/home/lsk/paparazzi/var/include/messages.h **** }
2209:/home/lsk/paparazzi/var/include/messages.h **** 
2210:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_DEBUG(_trans, _dev, ac_id, tau) pprz_msg_send_TCAS_DEBUG(&((_trans).tran
2211:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
2212:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
2213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
2214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
2215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_DEBUG, "TCAS_DE
2217:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tau);
2219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2220:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2222:/home/lsk/paparazzi/var/include/messages.h **** }
2223:/home/lsk/paparazzi/var/include/messages.h **** 
2224:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_POTENTIAL(_trans, _dev, east, north, alt, speed, climb) pprz_msg_send_POTENTI
2225:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_POTENTIAL(struct transport_tx *trans, struct link_device *dev, uin
2226:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
2227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
2228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
2229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_POTENTIAL, "POTENTIA
2231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
2232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
2233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
2234:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed);
2235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
2236:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2237:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2238:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2239:/home/lsk/paparazzi/var/include/messages.h **** }
2240:/home/lsk/paparazzi/var/include/messages.h **** 
2241:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERTICAL_ENERGY(_trans, _dev, Epot_err, Ekin_err, Etot_err, Edis_err, throttl
2242:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERTICAL_ENERGY(struct transport_tx *trans, struct link_device *de
2243:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERTICAL_ENERGY, "VE
2248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Epot_err);
2249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Ekin_err);
2250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Etot_err);
2251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Edis_err);
2252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
2253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _nav_pitch);
2254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed_sp);
2255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2256:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2258:/home/lsk/paparazzi/var/include/messages.h **** }
2259:/home/lsk/paparazzi/var/include/messages.h **** 
2260:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_TCOUPLE(_trans, _dev, fval0, fval1, fval2, fval3, fref0, fref1, fref2, f
2261:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_TCOUPLE(struct transport_tx *trans, struct link_device *dev, 
2262:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2
2263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2
2264:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2+2 +2 /* msg header overhe
2265:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2266:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_TCOUPLE, "TEMP_
2267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval0);
2268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval1);
2269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval2);
2270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval3);
2271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref0);
2272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref1);
2273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref2);
2274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref3);
2275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val0);
2276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
2277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
2278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
2279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref0);
2280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref1);
2281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref2);
2282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref3);
2283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2284:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2286:/home/lsk/paparazzi/var/include/messages.h **** }
2287:/home/lsk/paparazzi/var/include/messages.h **** 
2288:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_I2
2289:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_STATUS(struct transport_tx *trans, struct link_device *dev
2290:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2292:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2293:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_STATUS, "SHT
2295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2302:/home/lsk/paparazzi/var/include/messages.h **** }
2303:/home/lsk/paparazzi/var/include/messages.h **** 
2304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAMERA_SNAPSHOT(_trans, _dev, snapshot_image_number) pprz_msg_send_CAMERA_SNA
2305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAMERA_SNAPSHOT(struct transport_tx *trans, struct link_device *de
2306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
2307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
2308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
2309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAMERA_SNAPSHOT, "CA
2311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _snapshot_image
2312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2313:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2315:/home/lsk/paparazzi/var/include/messages.h **** }
2316:/home/lsk/paparazzi/var/include/messages.h **** 
2317:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TIMESTAMP(_trans, _dev, timestamp) pprz_msg_send_TIMESTAMP(&((_trans).trans_t
2318:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TIMESTAMP(struct transport_tx *trans, struct link_device *dev, uin
2319:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
2320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
2321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
2322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TIMESTAMP, "TIMESTAM
2324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timestamp);
2325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2326:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2328:/home/lsk/paparazzi/var/include/messages.h **** }
2329:/home/lsk/paparazzi/var/include/messages.h **** 
2330:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_FLOAT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, es
2331:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_FLOAT(struct transport_tx *trans, struct link_device
2332:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* m
2335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_FLOAT,
2337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2356:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p_d);
2359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q_d);
2360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r_d);
2361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2362:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2364:/home/lsk/paparazzi/var/include/messages.h **** }
2365:/home/lsk/paparazzi/var/include/messages.h **** 
2366:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_SCALED(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_SCALED(&((_t
2367:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_SCALED(struct transport_tx *trans, struct link_device *de
2368:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_SCALED, "IM
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2377:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2379:/home/lsk/paparazzi/var/include/messages.h **** }
2380:/home/lsk/paparazzi/var/include/messages.h **** 
2381:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_SCALED(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_SCALED(&((
2382:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_SCALED(struct transport_tx *trans, struct link_device *d
2383:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_SCALED, "I
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
2389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
2390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
2391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2392:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2394:/home/lsk/paparazzi/var/include/messages.h **** }
2395:/home/lsk/paparazzi/var/include/messages.h **** 
2396:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_SCALED(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_SCALED(&((_tra
2397:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_SCALED(struct transport_tx *trans, struct link_device *dev
2398:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2401:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SCALED, "IMU
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
2404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
2405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
2406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2407:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2409:/home/lsk/paparazzi/var/include/messages.h **** }
2410:/home/lsk/paparazzi/var/include/messages.h **** 
2411:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER(_trans, _dev, phi, theta, psi, measure_phi, measure_theta, measure_psi
2412:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER(struct transport_tx *trans, struct link_device *dev, uint8_
2413:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER, "FILTER");
2418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_phi);
2422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_theta);
2423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_psi);
2424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_phi);
2425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_theta
2426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_psi);
2427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_phi)
2428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_thet
2429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_psi)
2430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
2431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
2432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
2433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2434:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2435:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2436:/home/lsk/paparazzi/var/include/messages.h **** }
2437:/home/lsk/paparazzi/var/include/messages.h **** 
2438:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER2(_trans, _dev, px, py, pz, gsx, gsy, gsz) pprz_msg_send_FILTER2(&((_tr
2439:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER2(struct transport_tx *trans, struct link_device *dev, uint8
2440:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER2, "FILTER2");
2445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _px);
2446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _py);
2447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pz);
2448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsx);
2449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsy);
2450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsz);
2451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2452:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2454:/home/lsk/paparazzi/var/include/messages.h **** }
2455:/home/lsk/paparazzi/var/include/messages.h **** 
2456:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RATE_LOOP(_trans, _dev, sp_p, sp_q, sp_r, ref_p, ref_q, ref_r, refdot_p, refd
2457:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RATE_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2458:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header 
2461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RATE_LOOP, "RATE_LOO
2463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_p);
2464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_q);
2465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_r);
2466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_p);
2470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_q);
2471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_r);
2472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_p);
2473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_q);
2474:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_r);
2475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_p);
2476:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_q);
2477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_r);
2478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_p);
2479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_q);
2480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_r);
2481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2483:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2485:/home/lsk/paparazzi/var/include/messages.h **** }
2486:/home/lsk/paparazzi/var/include/messages.h **** 
2487:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_ALIGNER(_trans, _dev, lp_gp, lp_gq, lp_gr, gp, gq, gr, noise, cnt, sta
2488:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_ALIGNER(struct transport_tx *trans, struct link_device *dev
2489:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1
2490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1 +2 /* msg h
2491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
2492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_ALIGNER, "FIL
2494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gp);
2495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gq);
2496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gr);
2497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _noise);
2501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cnt);
2502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2504:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2506:/home/lsk/paparazzi/var/include/messages.h **** }
2507:/home/lsk/paparazzi/var/include/messages.h **** 
2508:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_MS45XX(_trans, _dev, diffPress, temperature, airspeed) pprz_msg_send
2509:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_MS45XX(struct transport_tx *trans, struct link_device *de
2510:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
2511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
2512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
2513:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_MS45XX, "AI
2515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diffPress);
2516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temperature);
2517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
2518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2519:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2521:/home/lsk/paparazzi/var/include/messages.h **** }
2522:/home/lsk/paparazzi/var/include/messages.h **** 
2523:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_COR(_trans, _dev, mphi, mtheta, mpsi, qi, qx, qy, qz) pprz_msg_send_FI
2524:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_COR(struct transport_tx *trans, struct link_device *dev, ui
2525:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_COR, "FILTER_
2530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mphi);
2531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mtheta);
2532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mpsi);
2533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qi);
2534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qx);
2535:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qy);
2536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qz);
2537:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2538:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2540:/home/lsk/paparazzi/var/include/messages.h **** }
2541:/home/lsk/paparazzi/var/include/messages.h **** 
2542:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_INT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, est_
2543:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_INT(struct transport_tx *trans, struct link_device *
2544:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg hea
2547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_INT, "
2549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2571:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2573:/home/lsk/paparazzi/var/include/messages.h **** }
2574:/home/lsk/paparazzi/var/include/messages.h **** 
2575:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_INT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_th
2576:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_INT(struct transport_tx *trans, struct link_devi
2577:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2581:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_IN
2582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2583:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2595:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2597:/home/lsk/paparazzi/var/include/messages.h **** }
2598:/home/lsk/paparazzi/var/include/messages.h **** 
2599:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_FLOAT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_
2600:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_FLOAT(struct transport_tx *trans, struct link_de
2601:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_FL
2606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2619:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2621:/home/lsk/paparazzi/var/include/messages.h **** }
2622:/home/lsk/paparazzi/var/include/messages.h **** 
2623:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CMD(_trans, _dev, cmd_roll, cmd_pitch, cmd_yaw, cmd_thrust) pprz_m
2624:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CMD(struct transport_tx *trans, struct link_device *dev
2625:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CMD, "ROT
2630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2635:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2637:/home/lsk/paparazzi/var/include/messages.h **** }
2638:/home/lsk/paparazzi/var/include/messages.h **** 
2639:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_INT(_trans, _dev, sp_x, sp_y, ref_x, ref_y, est_x, est_y) pprz_msg
2640:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_INT(struct transport_tx *trans, struct link_device *dev
2641:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_INT, "GUI
2646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2649:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2653:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2655:/home/lsk/paparazzi/var/include/messages.h **** }
2656:/home/lsk/paparazzi/var/include/messages.h **** 
2657:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERT_LOOP(_trans, _dev, z_sp, zd_sp, est_z, est_zd, est_zdd, ref_z, ref_zd, r
2658:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERT_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2659:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERT_LOOP, "VERT_LOO
2664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
2665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _zd_sp);
2666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
2667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zd);
2668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zdd);
2669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
2670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
2671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zdd);
2672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_inv_m);
2673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_cov);
2674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_meas);
2675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err);
2676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_cmd);
2677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_cmd);
2678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2680:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2682:/home/lsk/paparazzi/var/include/messages.h **** }
2683:/home/lsk/paparazzi/var/include/messages.h **** 
2684:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HOVER_LOOP(_trans, _dev, sp_x, sp_y, est_x, est_y, est_xd, est_yd, est_xdd, e
2685:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HOVER_LOOP(struct transport_tx *trans, struct link_device *dev, ui
2686:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
2689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HOVER_LOOP, "HOVER_L
2691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xd);
2696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_yd);
2697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xdd);
2698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_ydd);
2699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_x);
2700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_y);
2701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_xd);
2702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_yd);
2703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_x);
2704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_y);
2705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_x);
2706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_y);
2707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_heading);
2708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2709:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2711:/home/lsk/paparazzi/var/include/messages.h **** }
2712:/home/lsk/paparazzi/var/include/messages.h **** 
2713:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_FP(_trans, _dev, east, north, up, veast, vnorth, vup, phi, theta, 
2714:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_FP(struct transport_tx *trans, struct link_device *dev,
2715:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2
2717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2 +2 /* msg header overhead
2718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_FP, "ROTO
2720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
2721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
2722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
2723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _veast);
2724:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vnorth);
2725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vup);
2726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_east);
2730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_north);
2731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_up);
2732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_psi);
2733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _thrust);
2734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
2735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2738:/home/lsk/paparazzi/var/include/messages.h **** }
2739:/home/lsk/paparazzi/var/include/messages.h **** 
2740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_ADC(_trans, _dev, temp1, temp2, temp3) pprz_msg_send_TEMP_ADC(&((_trans)
2741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_ADC(struct transport_tx *trans, struct link_device *dev, uint
2742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_ADC, "TEMP_ADC"
2747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp1);
2748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp2);
2749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp3);
2750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2753:/home/lsk/paparazzi/var/include/messages.h **** }
2754:/home/lsk/paparazzi/var/include/messages.h **** 
2755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_REF_INT(_trans, _dev, sp_x, ref_x, sp_xd, ref_xd, ref_xdd, sp_y, r
2756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_REF_INT(struct transport_tx *trans, struct link_device 
2757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
2759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_REF_INT, 
2762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_xd);
2765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xd);
2766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xdd);
2767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_yd);
2770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_yd);
2771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_ydd);
2772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2773:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2775:/home/lsk/paparazzi/var/include/messages.h **** }
2776:/home/lsk/paparazzi/var/include/messages.h **** 
2777:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_TUNE_HOVER(_trans, _dev, rc_roll, rc_pitch, rc_yaw, cmd_roll, cmd_
2778:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_TUNE_HOVER(struct transport_tx *trans, struct link_devi
2779:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4
2780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg
2781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_TUNE_HOVE
2784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_roll);
2785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_pitch);
2786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_yaw);
2787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
2792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
2793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
2794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2797:/home/lsk/paparazzi/var/include/messages.h **** }
2798:/home/lsk/paparazzi/var/include/messages.h **** 
2799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_Z(_trans, _dev, baro_z, ins_z, ins_zd, ins_zdd) pprz_msg_send_INS_Z(&((_t
2800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_Z(struct transport_tx *trans, struct link_device *dev, uint8_t
2801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_Z, "INS_Z");
2806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro_z);
2807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_z);
2808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zd);
2809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zdd);
2810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2813:/home/lsk/paparazzi/var/include/messages.h **** }
2814:/home/lsk/paparazzi/var/include/messages.h **** 
2815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PCAP01_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_PCAP01_
2816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PCAP01_STATUS(struct transport_tx *trans, struct link_device *dev,
2817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PCAP01_STATUS, "PCAP
2822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _ihumid);
2823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itemp);
2824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2827:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2829:/home/lsk/paparazzi/var/include/messages.h **** }
2830:/home/lsk/paparazzi/var/include/messages.h **** 
2831:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GEIGER_COUNTER(_trans, _dev, tube1, tube2, vsupply) pprz_msg_send_GEIGER_COUN
2832:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GEIGER_COUNTER(struct transport_tx *trans, struct link_device *dev
2833:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2 +2 /* msg h
2834:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2 +2 /* msg header overhe
2835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2 +2 /* msg header overhead */);
2836:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2837:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GEIGER_COUNTER, "GEI
2838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tube1);
2839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tube2);
2840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
2841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2842:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2844:/home/lsk/paparazzi/var/include/messages.h **** }
2845:/home/lsk/paparazzi/var/include/messages.h **** 
2846:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_REF(_trans, _dev, ecef_x0, ecef_y0, ecef_z0, lat0, lon0, alt0, hmsl0, bar
2847:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_REF(struct transport_tx *trans, struct link_device *dev, uint8
2848:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
2849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
2850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_REF, "INS_REF");
2853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_x0);
2854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_y0);
2855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_z0);
2856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat0);
2857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon0);
2858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt0);
2859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl0);
2860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro_qfe);
2861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2864:/home/lsk/paparazzi/var/include/messages.h **** }
2865:/home/lsk/paparazzi/var/include/messages.h **** 
2866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_INT(_trans, _dev, ecef_x, ecef_y, ecef_z, lat, lon, alt, hmsl, ecef_xd, e
2867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_INT(struct transport_tx *trans, struct link_device *dev, uint8
2868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+2+1
2870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+2+1+1 +2 /* msg header overhe
2871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_INT, "GPS_INT");
2873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_x);
2874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_y);
2875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_z);
2876:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2878:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2879:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2880:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_xd);
2881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_yd);
2882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_zd);
2883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pacc);
2884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sacc);
2885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tow);
2886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pdop);
2887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numsv);
2888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _fix);
2889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2892:/home/lsk/paparazzi/var/include/messages.h **** }
2893:/home/lsk/paparazzi/var/include/messages.h **** 
2894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_EULER_INT(_trans, _dev, imu_phi, imu_theta, imu_psi, body_phi, body_thet
2895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_EULER_INT(struct transport_tx *trans, struct link_device *dev
2896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_EULER_INT, "AHR
2901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_phi);
2902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_theta);
2903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_psi);
2904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
2905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
2906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
2907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2910:/home/lsk/paparazzi/var/include/messages.h **** }
2911:/home/lsk/paparazzi/var/include/messages.h **** 
2912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_QUAT_INT(_trans, _dev, weight, imu_qi, imu_qx, imu_qy, imu_qz, body_qi, 
2913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_QUAT_INT(struct transport_tx *trans, struct link_device *dev,
2914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
2916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_QUAT_INT, "AHRS
2919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _weight);
2920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qi);
2921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qx);
2922:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qy);
2923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qz);
2924:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qi);
2925:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qx);
2926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qy);
2927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qz);
2928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2929:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2931:/home/lsk/paparazzi/var/include/messages.h **** }
2932:/home/lsk/paparazzi/var/include/messages.h **** 
2933:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_RMAT_INT(_trans, _dev, imu_m00, imu_m01, imu_m02, imu_m10, imu_m11, imu_
2934:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_RMAT_INT(struct transport_tx *trans, struct link_device *dev,
2935:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2937:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header ov
2938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2939:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_RMAT_INT, "AHRS
2940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m00);
2941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m01);
2942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m02);
2943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m10);
2944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m11);
2945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m12);
2946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m20);
2947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m21);
2948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m22);
2949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m00);
2950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m01);
2951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m02);
2952:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m10);
2953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m11);
2954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m12);
2955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m20);
2956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m21);
2957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m22);
2958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2959:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2961:/home/lsk/paparazzi/var/include/messages.h **** }
2962:/home/lsk/paparazzi/var/include/messages.h **** 
2963:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_NAV_STATUS(_trans, _dev, block_time, stage_time, dist_home, dist_w
2964:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_NAV_STATUS(struct transport_tx *trans, struct link_devi
2965:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+1+1+1 +2 
2966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+1+1+1 +2 /* msg heade
2967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+1+1+1 +2 /* msg header overhead */);
2968:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_NAV_STATU
2970:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
2971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
2972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
2973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
2974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
2975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
2976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _horizontal_mode
2977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2978:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2980:/home/lsk/paparazzi/var/include/messages.h **** }
2981:/home/lsk/paparazzi/var/include/messages.h **** 
2982:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_RADIO_CONTROL(_trans, _dev, roll, pitch, yaw, throttle, mode, kill
2983:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_RADIO_CONTROL(struct transport_tx *trans, struct link_d
2984:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+1 +2 
2985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+1 +2 /* msg heade
2986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+1 +2 /* msg header overhead */);
2987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_RADIO_CON
2989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _roll);
2990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pitch);
2991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _yaw);
2992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
2993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
2994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _kill);
2995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2997:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2999:/home/lsk/paparazzi/var/include/messages.h **** }
3000:/home/lsk/paparazzi/var/include/messages.h **** 
3001:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VFF_EXTENDED(_trans, _dev, meas_baro, meas_alt, z, zd, zdd, bias, offset) ppr
3002:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VFF_EXTENDED(struct transport_tx *trans, struct link_device *dev, 
3003:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VFF_EXTENDED, "VFF_E
3008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
3009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_alt);
3010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
3011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zd);
3012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zdd);
3013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias);
3014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _offset);
3015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3018:/home/lsk/paparazzi/var/include/messages.h **** }
3019:/home/lsk/paparazzi/var/include/messages.h **** 
3020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VFF(_trans, _dev, measure, z, zd, bias, Pzz, Pzdzd, Pbb) pprz_msg_send_VFF(&(
3021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VFF(struct transport_tx *trans, struct link_device *dev, uint8_t a
3022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VFF, "VFF");
3027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _measure);
3028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
3029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zd);
3030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias);
3031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pzz);
3032:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pzdzd);
3033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pbb);
3034:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3035:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3036:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3037:/home/lsk/paparazzi/var/include/messages.h **** }
3038:/home/lsk/paparazzi/var/include/messages.h **** 
3039:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GEO_MAG(_trans, _dev, Hx, Hy, Hz) pprz_msg_send_GEO_MAG(&((_trans).trans_tx),
3040:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GEO_MAG(struct transport_tx *trans, struct link_device *dev, uint8
3041:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GEO_MAG, "GEO_MAG");
3046:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hx);
3047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hy);
3048:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hz);
3049:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3050:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3051:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3052:/home/lsk/paparazzi/var/include/messages.h **** }
3053:/home/lsk/paparazzi/var/include/messages.h **** 
3054:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF(_trans, _dev, x, y, xd, yd, xdd, ydd) pprz_msg_send_HFF(&((_trans).trans_
3055:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF(struct transport_tx *trans, struct link_device *dev, uint8_t a
3056:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF, "HFF");
3061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
3062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
3063:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xd);
3064:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yd);
3065:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xdd);
3066:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ydd);
3067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3068:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3070:/home/lsk/paparazzi/var/include/messages.h **** }
3071:/home/lsk/paparazzi/var/include/messages.h **** 
3072:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF_DBG(_trans, _dev, x_measure, y_measure, xd_measure, yd_measure, Pxx, Pyy,
3073:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF_DBG(struct transport_tx *trans, struct link_device *dev, uint8
3074:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
3075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
3076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3078:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF_DBG, "HFF_DBG");
3079:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_measure);
3080:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_measure);
3081:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xd_measure);
3082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yd_measure);
3083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pxx);
3084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pyy);
3085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pxdxd);
3086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pydyd);
3087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3088:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3090:/home/lsk/paparazzi/var/include/messages.h **** }
3091:/home/lsk/paparazzi/var/include/messages.h **** 
3092:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF_GPS(_trans, _dev, lag_cnt, lag_cnt_err, save_cnt) pprz_msg_send_HFF_GPS(&
3093:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF_GPS(struct transport_tx *trans, struct link_device *dev, uint8
3094:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
3095:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
3096:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
3097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF_GPS, "HFF_GPS");
3099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _lag_cnt);
3100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lag_cnt_err);
3101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _save_cnt);
3102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3103:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3105:/home/lsk/paparazzi/var/include/messages.h **** }
3106:/home/lsk/paparazzi/var/include/messages.h **** 
3107:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_SONAR(_trans, _dev, distance, var) pprz_msg_send_INS_SONAR(&((_trans).tra
3108:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_SONAR(struct transport_tx *trans, struct link_device *dev, uin
3109:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
3110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
3111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
3112:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_SONAR, "INS_SONA
3114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _distance);
3115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _var);
3116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3117:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3119:/home/lsk/paparazzi/var/include/messages.h **** }
3120:/home/lsk/paparazzi/var/include/messages.h **** 
3121:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CAM(_trans, _dev, tilt, pan) pprz_msg_send_ROTORCRAFT_CAM(&((_tran
3122:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CAM(struct transport_tx *trans, struct link_device *dev
3123:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
3124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
3125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
3126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CAM, "ROT
3128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _tilt);
3129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pan);
3130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3131:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3133:/home/lsk/paparazzi/var/include/messages.h **** }
3134:/home/lsk/paparazzi/var/include/messages.h **** 
3135:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_REF_QUAT(_trans, _dev, ref_qi, ref_qx, ref_qy, ref_qz, body_qi, body_qx,
3136:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_REF_QUAT(struct transport_tx *trans, struct link_device *dev,
3137:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
3138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
3139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_REF_QUAT, "AHRS
3142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qi);
3143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qx);
3144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qy);
3145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qz);
3146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qi);
3147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qx);
3148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qy);
3149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qz);
3150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3151:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3153:/home/lsk/paparazzi/var/include/messages.h **** }
3154:/home/lsk/paparazzi/var/include/messages.h **** 
3155:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_XHAT(_trans, _dev, c, s1, s2, s3, p, q, r, bp, bq, br) pprz_msg_send_EKF
3156:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_XHAT(struct transport_tx *trans, struct link_device *dev, uin
3157:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_XHAT, "EKF7_XHA
3162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s1);
3164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s2);
3165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s3);
3166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3172:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3173:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3175:/home/lsk/paparazzi/var/include/messages.h **** }
3176:/home/lsk/paparazzi/var/include/messages.h **** 
3177:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_Y(_trans, _dev, timecount, g1, g2, g3, m1, m2, m3, p, q, r) pprz_msg_sen
3178:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_Y(struct transport_tx *trans, struct link_device *dev, uint8_
3179:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
3180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4 +2 /* msg
3181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_Y, "EKF7_Y");
3184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _timecount);
3185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g1);
3186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g2);
3187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g3);
3188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m1);
3189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m2);
3190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m3);
3191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3193:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3195:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3196:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3197:/home/lsk/paparazzi/var/include/messages.h **** }
3198:/home/lsk/paparazzi/var/include/messages.h **** 
3199:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_P_DIAG(_trans, _dev, c, s1, s2, s3, p, q, r, bp, bq, br) pprz_msg_send_E
3200:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_P_DIAG(struct transport_tx *trans, struct link_device *dev, u
3201:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_P_DIAG, "EKF7_P
3206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s1);
3208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s2);
3209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s3);
3210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3212:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3217:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3219:/home/lsk/paparazzi/var/include/messages.h **** }
3220:/home/lsk/paparazzi/var/include/messages.h **** 
3221:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_EULER(_trans, _dev, phi, theta, psi) pprz_msg_send_AHRS_EULER(&((_trans)
3222:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_EULER(struct transport_tx *trans, struct link_device *dev, ui
3223:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_EULER, "AHRS_EU
3228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3232:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3234:/home/lsk/paparazzi/var/include/messages.h **** }
3235:/home/lsk/paparazzi/var/include/messages.h **** 
3236:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_MEASUREMENT_EULER(_trans, _dev, phi, theta, psi) pprz_msg_send_AHRS_MEAS
3237:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_MEASUREMENT_EULER(struct transport_tx *trans, struct link_dev
3238:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3239:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3240:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_MEASUREMENT_EUL
3243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3247:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3249:/home/lsk/paparazzi/var/include/messages.h **** }
3250:/home/lsk/paparazzi/var/include/messages.h **** 
3251:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WT(_trans, _dev, rpm) pprz_msg_send_WT(&((_trans).trans_tx), &((_dev).device)
3252:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WT(struct transport_tx *trans, struct link_device *dev, uint8_t ac
3253:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WT, "WT");
3258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
3259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3260:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3262:/home/lsk/paparazzi/var/include/messages.h **** }
3263:/home/lsk/paparazzi/var/include/messages.h **** 
3264:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CSC_CAN_DEBUG(_trans, _dev, err_nb, err_code) pprz_msg_send_CSC_CAN_DEBUG(&((
3265:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CSC_CAN_DEBUG(struct transport_tx *trans, struct link_device *dev,
3266:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
3267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
3268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
3269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CSC_CAN_DEBUG, "CSC_
3271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _err_nb);
3272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _err_code);
3273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3274:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3276:/home/lsk/paparazzi/var/include/messages.h **** }
3277:/home/lsk/paparazzi/var/include/messages.h **** 
3278:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CSC_CAN_MSG(_trans, _dev, frame, id, data_a, data_b) pprz_msg_send_CSC_CAN_MS
3279:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CSC_CAN_MSG(struct transport_tx *trans, struct link_device *dev, u
3280:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CSC_CAN_MSG, "CSC_CA
3285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _frame);
3286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _id);
3287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _data_a);
3288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _data_b);
3289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3292:/home/lsk/paparazzi/var/include/messages.h **** }
3293:/home/lsk/paparazzi/var/include/messages.h **** 
3294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_GYRO_BIAS_INT(_trans, _dev, bp, bq, br) pprz_msg_send_AHRS_GYRO_BIAS_INT
3295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_GYRO_BIAS_INT(struct transport_tx *trans, struct link_device 
3296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_GYRO_BIAS_INT, 
3301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
3302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
3303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
3304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3307:/home/lsk/paparazzi/var/include/messages.h **** }
3308:/home/lsk/paparazzi/var/include/messages.h **** 
3309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLOW_AP_OTF(_trans, _dev, counter, velocity, a_attack, a_sidesl, altitude, ch
3310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLOW_AP_OTF(struct transport_tx *trans, struct link_device *dev, u
3311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+2+2+4+1 +2 /*
3312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+2+2+4+1 +2 /* msg header 
3313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+2+2+4+1 +2 /* msg header overhead */);
3314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLOW_AP_OTF, "FLOW_A
3316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _counter);
3317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _velocity);
3318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a_attack);
3319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a_sidesl);
3320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _altitude);
3321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _checksum);
3322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3323:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3325:/home/lsk/paparazzi/var/include/messages.h **** }
3326:/home/lsk/paparazzi/var/include/messages.h **** 
3327:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FMS_TIME(_trans, _dev, tv_sec, tv_nsec, delay_ns) pprz_msg_send_FMS_TIME(&((_
3328:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FMS_TIME(struct transport_tx *trans, struct link_device *dev, uint
3329:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FMS_TIME, "FMS_TIME"
3334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tv_sec);
3335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tv_nsec);
3336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _delay_ns);
3337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3338:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3340:/home/lsk/paparazzi/var/include/messages.h **** }
3341:/home/lsk/paparazzi/var/include/messages.h **** 
3342:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_LOADCELL(_trans, _dev, load) pprz_msg_send_LOADCELL(&((_trans).trans_tx), &((
3343:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_LOADCELL(struct transport_tx *trans, struct link_device *dev, uint
3344:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_LOADCELL, "LOADCELL"
3349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _load);
3350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3353:/home/lsk/paparazzi/var/include/messages.h **** }
3354:/home/lsk/paparazzi/var/include/messages.h **** 
3355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLA_DEBUG(_trans, _dev, past_input, imu_rate, desired_accel, motor_command) p
3356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLA_DEBUG(struct transport_tx *trans, struct link_device *dev, uin
3357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLA_DEBUG, "FLA_DEBU
3362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _past_input);
3363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _imu_rate);
3364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _desired_accel);
3365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _motor_command);
3366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3367:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3369:/home/lsk/paparazzi/var/include/messages.h **** }
3370:/home/lsk/paparazzi/var/include/messages.h **** 
3371:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_FAULT_STATUS(_trans, _dev, nb_raw_fault, raw_fault) pprz_msg_send_BLMC_F
3372:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_FAULT_STATUS(struct transport_tx *trans, struct link_device *
3373:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_raw_fault*2 
3374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_raw_fault*2 +2 /* msg he
3375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_raw_fault*2 +2 /* msg header overhead */);
3376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_FAULT_STATUS, "
3378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_raw_f
3379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_raw_fault, (void *) _
3380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3381:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3383:/home/lsk/paparazzi/var/include/messages.h **** }
3384:/home/lsk/paparazzi/var/include/messages.h **** 
3385:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_SPEEDS(_trans, _dev, nb_speeds, speeds) pprz_msg_send_BLMC_SPEEDS(&((_tr
3386:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_SPEEDS(struct transport_tx *trans, struct link_device *dev, u
3387:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_speeds*2 +2 
3388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_speeds*2 +2 /* msg heade
3389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_speeds*2 +2 /* msg header overhead */);
3390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_SPEEDS, "BLMC_S
3392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_speed
3393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_speeds, (void *) _spee
3394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3395:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3397:/home/lsk/paparazzi/var/include/messages.h **** }
3398:/home/lsk/paparazzi/var/include/messages.h **** 
3399:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_DEBUG_QUAT(_trans, _dev, jqi, jqx, jqy, jqz, xqi, xqx, xqy, xqz, mqi, mq
3400:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_DEBUG_QUAT(struct transport_tx *trans, struct link_device *de
3401:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
3403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_DEBUG_QUAT, "AH
3406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqi);
3407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqx);
3408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqy);
3409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqz);
3410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqi);
3411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqx);
3412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqy);
3413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqz);
3414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqi);
3415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqx);
3416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqy);
3417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqz);
3418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3419:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3421:/home/lsk/paparazzi/var/include/messages.h **** }
3422:/home/lsk/paparazzi/var/include/messages.h **** 
3423:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_BUSVOLTS(_trans, _dev, nb_busvolts, busvolts) pprz_msg_send_BLMC_BUSVOLT
3424:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_BUSVOLTS(struct transport_tx *trans, struct link_device *dev,
3425:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_busvolts*2 +
3426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_busvolts*2 +2 /* msg hea
3427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_busvolts*2 +2 /* msg header overhead */);
3428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_BUSVOLTS, "BLMC
3430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_busvo
3431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_busvolts, (void *) _b
3432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3433:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3434:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3435:/home/lsk/paparazzi/var/include/messages.h **** }
3436:/home/lsk/paparazzi/var/include/messages.h **** 
3437:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYSTEM_STATUS(_trans, _dev, csc1_loop_count, csc1_msg_count, csc2_loop_count,
3438:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYSTEM_STATUS(struct transport_tx *trans, struct link_device *dev,
3439:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1 +
3440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1 +2 /* msg hea
3441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
3442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYSTEM_STATUS, "SYST
3444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc1_loop_coun
3445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc1_msg_count
3446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc2_loop_coun
3447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc2_msg_count
3448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _can_rx_err);
3449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _can_tx_err);
3450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_parser_err)
3451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _system_fault);
3452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3453:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3455:/home/lsk/paparazzi/var/include/messages.h **** }
3456:/home/lsk/paparazzi/var/include/messages.h **** 
3457:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DYNAMIXEL(_trans, _dev, left_wing, right_wing, left_wing_flag, right_wing_fla
3458:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DYNAMIXEL(struct transport_tx *trans, struct link_device *dev, uin
3459:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+1+1+4+4+4+4+4
3460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+1+1+4+4+4+4+4 +2 /* msg h
3461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+1+1+4+4+4+4+4 +2 /* msg header overhead */);
3462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DYNAMIXEL, "DYNAMIXE
3464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _left_wing);
3465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _right_wing);
3466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _left_wing_flag)
3467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _right_wing_flag
3468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _invalid_positi
3469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timeout_events
3470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
3471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fuse_rotation_a
3472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fuse_rotation_r
3473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3474:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3476:/home/lsk/paparazzi/var/include/messages.h **** }
3477:/home/lsk/paparazzi/var/include/messages.h **** 
3478:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RMAT_DEBUG(_trans, _dev, a, b, c, d, e, f, g, h, i) pprz_msg_send_RMAT_DEBUG(
3479:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RMAT_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
3480:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RMAT_DEBUG, "RMAT_DE
3485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _a);
3486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _b);
3487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3488:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _d);
3489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _e);
3490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f);
3491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g);
3492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _h);
3493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _i);
3494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3495:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3497:/home/lsk/paparazzi/var/include/messages.h **** }
3498:/home/lsk/paparazzi/var/include/messages.h **** 
3499:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SIMPLE_COMMANDS(_trans, _dev, roll, pitch, yaw) pprz_msg_send_SIMPLE_COMMANDS
3500:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SIMPLE_COMMANDS(struct transport_tx *trans, struct link_device *de
3501:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
3502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
3503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
3504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SIMPLE_COMMANDS, "SI
3506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _roll);
3507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pitch);
3508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _yaw);
3509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3510:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3512:/home/lsk/paparazzi/var/include/messages.h **** }
3513:/home/lsk/paparazzi/var/include/messages.h **** 
3514:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VANE_SENSOR(_trans, _dev, alpha, alpha_filtered, alpha_target, alpha_vane_err
3515:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VANE_SENSOR(struct transport_tx *trans, struct link_device *dev, u
3516:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VANE_SENSOR, "VANE_S
3521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha);
3522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_filtered)
3523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_target);
3524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_vane_erro
3525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha2);
3526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta);
3527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_filtered);
3528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_target);
3529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_vane_error
3530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta2);
3531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3532:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3534:/home/lsk/paparazzi/var/include/messages.h **** }
3535:/home/lsk/paparazzi/var/include/messages.h **** 
3536:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CONTROLLER_GAINS(_trans, _dev, roll_gamma_p, roll_gamma_d, roll_gamma_i, pitc
3537:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CONTROLLER_GAINS(struct transport_tx *trans, struct link_device *d
3538:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CONTROLLER_GAINS, "C
3543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_p);
3544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_d);
3545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_i);
3546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_p);
3547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_d);
3548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_i);
3549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_p);
3550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_d);
3551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_i);
3552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3553:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3555:/home/lsk/paparazzi/var/include/messages.h **** }
3556:/home/lsk/paparazzi/var/include/messages.h **** 
3557:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF(_trans, _dev, phi, theta, psi, qi, qx, qy, qz, p, q, r, ax, ay, az, 
3558:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF(struct transport_tx *trans, struct link_device *dev, uint
3559:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
3562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF, "AHRS_LKF"
3564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi);
3568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx);
3569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy);
3570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz);
3571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
3578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
3579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
3580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3581:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3583:/home/lsk/paparazzi/var/include/messages.h **** }
3584:/home/lsk/paparazzi/var/include/messages.h **** 
3585:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_DEBUG(_trans, _dev, phi_err, theta_err, psi_err, bp, bq, br, quat_no
3586:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_DEBUG(struct transport_tx *trans, struct link_device *dev
3587:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
3590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_DEBUG, "AHR
3592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_err);
3593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_err);
3594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_err);
3595:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3597:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3598:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat_norm);
3599:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_accel);
3600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_accel);
3601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_cov);
3602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_cov);
3603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_cov);
3604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_cov);
3605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_cov);
3606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_cov);
3607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3610:/home/lsk/paparazzi/var/include/messages.h **** }
3611:/home/lsk/paparazzi/var/include/messages.h **** 
3612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_ACC_DBG(_trans, _dev, qi_err, qx_err, qy_err, qz_err, bp_err, bq_err
3613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_ACC_DBG(struct transport_tx *trans, struct link_device *d
3614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_ACC_DBG, "A
3619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi_err);
3620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx_err);
3621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy_err);
3622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz_err);
3623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_err);
3624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_err);
3625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_err);
3626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3627:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3629:/home/lsk/paparazzi/var/include/messages.h **** }
3630:/home/lsk/paparazzi/var/include/messages.h **** 
3631:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_MAG_DBG(_trans, _dev, qi_err, qx_err, qy_err, qz_err, bp_err, bq_err
3632:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_MAG_DBG(struct transport_tx *trans, struct link_device *d
3633:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_MAG_DBG, "A
3638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi_err);
3639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx_err);
3640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy_err);
3641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz_err);
3642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_err);
3643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_err);
3644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_err);
3645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3646:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3648:/home/lsk/paparazzi/var/include/messages.h **** }
3649:/home/lsk/paparazzi/var/include/messages.h **** 
3650:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NPS_SENSORS_SCALED(_trans, _dev, acc_x, acc_y, acc_z, mag_x, mag_y, mag_z) pp
3651:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NPS_SENSORS_SCALED(struct transport_tx *trans, struct link_device 
3652:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NPS_SENSORS_SCALED, 
3657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_x);
3658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_y);
3659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_z);
3660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_x);
3661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_y);
3662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_z);
3663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3664:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3666:/home/lsk/paparazzi/var/include/messages.h **** }
3667:/home/lsk/paparazzi/var/include/messages.h **** 
3668:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS(_trans, _dev, ins_x, ins_y, ins_z, ins_xd, ins_yd, ins_zd, ins_xdd, ins_y
3669:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS(struct transport_tx *trans, struct link_device *dev, uint8_t a
3670:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS, "INS");
3675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_x);
3676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_y);
3677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_z);
3678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_xd);
3679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_yd);
3680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zd);
3681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_xdd);
3682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_ydd);
3683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zdd);
3684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3685:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3686:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3687:/home/lsk/paparazzi/var/include/messages.h **** }
3688:/home/lsk/paparazzi/var/include/messages.h **** 
3689:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_ERROR(_trans, _dev, x_position, y_position, z_position, x_velocity, y_vel
3690:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_ERROR(struct transport_tx *trans, struct link_device *dev, uin
3691:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_ERROR, "GPS_ERRO
3696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_position);
3697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_position);
3698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_position);
3699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_velocity);
3700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_velocity);
3701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_velocity);
3702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3703:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3705:/home/lsk/paparazzi/var/include/messages.h **** }
3706:/home/lsk/paparazzi/var/include/messages.h **** 
3707:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO(&((_trans).trans_tx
3708:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO(struct transport_tx *trans, struct link_device *dev, uint
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO, "IMU_GYRO"
3714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gp);
3715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gq);
3716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gr);
3717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3718:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3720:/home/lsk/paparazzi/var/include/messages.h **** }
3721:/home/lsk/paparazzi/var/include/messages.h **** 
3722:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG(&((_trans).trans_tx),
3723:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG(struct transport_tx *trans, struct link_device *dev, uint8
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG, "IMU_MAG");
3729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
3730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
3731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
3732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3733:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3735:/home/lsk/paparazzi/var/include/messages.h **** }
3736:/home/lsk/paparazzi/var/include/messages.h **** 
3737:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL(&((_trans).trans_
3738:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL(struct transport_tx *trans, struct link_device *dev, uin
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3740:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3742:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL, "IMU_ACCE
3744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3748:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3750:/home/lsk/paparazzi/var/include/messages.h **** }
3751:/home/lsk/paparazzi/var/include/messages.h **** 
3752:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_RAW(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_RAW(&((_trans).
3753:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_RAW(struct transport_tx *trans, struct link_device *dev, 
3754:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_RAW, "IMU_G
3759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
3760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
3761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
3762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3763:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3765:/home/lsk/paparazzi/var/include/messages.h **** }
3766:/home/lsk/paparazzi/var/include/messages.h **** 
3767:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_RAW(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_RAW(&((_trans
3768:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_RAW(struct transport_tx *trans, struct link_device *dev,
3769:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_RAW, "IMU_
3774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
3775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
3776:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
3777:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3778:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3780:/home/lsk/paparazzi/var/include/messages.h **** }
3781:/home/lsk/paparazzi/var/include/messages.h **** 
3782:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_RAW(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_RAW(&((_trans).tr
3783:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_RAW(struct transport_tx *trans, struct link_device *dev, u
3784:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_RAW, "IMU_MA
3789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
3790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
3791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
3792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3793:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3795:/home/lsk/paparazzi/var/include/messages.h **** }
3796:/home/lsk/paparazzi/var/include/messages.h **** 
3797:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_SETTINGS(_trans, _dev, inclination, declination, hardiron_x, hardiron
3798:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_SETTINGS(struct transport_tx *trans, struct link_device *d
3799:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
3800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
3801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
3802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SETTINGS, "I
3804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _inclination);
3805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _declination);
3806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _hardiron_x);
3807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _hardiron_y);
3808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _hardiron_z);
3809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3810:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3812:/home/lsk/paparazzi/var/include/messages.h **** }
3813:/home/lsk/paparazzi/var/include/messages.h **** 
3814:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_CURRENT_CALIBRATION(_trans, _dev, mx, my, mz, electrical_current) ppr
3815:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_CURRENT_CALIBRATION(struct transport_tx *trans, struct lin
3816:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_CURRENT_CALI
3821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
3822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
3823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
3824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _electrical_curr
3825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3826:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3828:/home/lsk/paparazzi/var/include/messages.h **** }
3829:/home/lsk/paparazzi/var/include/messages.h **** 
3830:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_UART_ERRORS(_trans, _dev, overrun_cnt, noise_err_cnt, framing_err_cnt, bus_nu
3831:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_UART_ERRORS(struct transport_tx *trans, struct link_device *dev, u
3832:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+1 +2 /* msg
3833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+1 +2 /* msg header over
3834:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+1 +2 /* msg header overhead */);
3835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3836:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_UART_ERRORS, "UART_E
3837:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _overrun_cnt);
3838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _noise_err_cnt)
3839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _framing_err_cn
3840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _bus_number);
3841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3842:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3844:/home/lsk/paparazzi/var/include/messages.h **** }
3845:/home/lsk/paparazzi/var/include/messages.h **** 
3846:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_LP(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_LP(&((_trans).tr
3847:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_LP(struct transport_tx *trans, struct link_device *dev, u
3848:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_LP, "IMU_GY
3853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gp);
3854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gq);
3855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gr);
3856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3859:/home/lsk/paparazzi/var/include/messages.h **** }
3860:/home/lsk/paparazzi/var/include/messages.h **** 
3861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_PRESSURE(_trans, _dev, p) pprz_msg_send_IMU_PRESSURE(&((_trans).trans_tx)
3862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_PRESSURE(struct transport_tx *trans, struct link_device *dev, 
3863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_PRESSURE, "IMU_P
3868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3870:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3872:/home/lsk/paparazzi/var/include/messages.h **** }
3873:/home/lsk/paparazzi/var/include/messages.h **** 
3874:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_HS_GYRO(_trans, _dev, axis, nb_samples, samples) pprz_msg_send_IMU_HS_GYR
3875:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_HS_GYRO(struct transport_tx *trans, struct link_device *dev, u
3876:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_samples*4 
3877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_samples*4 +2 /* msg he
3878:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_samples*4 +2 /* msg header overhead */);
3879:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3880:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_HS_GYRO, "IMU_HS
3881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _axis);
3882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_sampl
3883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_ARRAY, 4 * nb_samples, (void *) _sa
3884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3885:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3887:/home/lsk/paparazzi/var/include/messages.h **** }
3888:/home/lsk/paparazzi/var/include/messages.h **** 
3889:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_PASSTHROUGH_STATUS(_trans, _dev, io_proc_msg_cnt, io_proc_err_cnt, io_li
3890:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_PASSTHROUGH_STATUS(struct transport_tx *trans, struct link_de
3891:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+1 +2 /* m
3892:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+1 +2 /* msg header ov
3893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+1 +2 /* msg header overhead */);
3894:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3895:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_PASSTHROUGH_STA
3896:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_proc_msg_cn
3897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_proc_err_cn
3898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_link_msg_cn
3899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_link_err_cn
3900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rc_status);
3901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3902:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3904:/home/lsk/paparazzi/var/include/messages.h **** }
3905:/home/lsk/paparazzi/var/include/messages.h **** 
3906:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_VERT(_trans, _dev, z_sp, est_z, ref_z, ref_zd) pprz_msg_send_TUNE_VERT(&
3907:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_VERT(struct transport_tx *trans, struct link_device *dev, uin
3908:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3910:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3911:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3912:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_VERT, "TUNE_VER
3913:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
3914:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
3915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
3916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
3917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3918:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3920:/home/lsk/paparazzi/var/include/messages.h **** }
3921:/home/lsk/paparazzi/var/include/messages.h **** 
3922:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MF_DAQ_STATE(_trans, _dev, flight_time, p, q, r, phi, theta, psi, ax, ay, az,
3923:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MF_DAQ_STATE(struct transport_tx *trans, struct link_device *dev, 
3924:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
3925:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header ov
3927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MF_DAQ_STATE, "MF_DA
3929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
3930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3933:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3935:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3937:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3939:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve);
3940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn);
3941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vu);
3942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
3943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lon);
3944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
3945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _we);
3946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _wn);
3947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3948:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3950:/home/lsk/paparazzi/var/include/messages.h **** }
3951:/home/lsk/paparazzi/var/include/messages.h **** 
3952:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INFO_MSG(_trans, _dev, nb_msg, msg) pprz_msg_send_INFO_MSG(&((_trans).trans_t
3953:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INFO_MSG(struct transport_tx *trans, struct link_device *dev, uint
3954:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
3955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
3956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
3957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INFO_MSG, "INFO_MSG"
3959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
3960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
3961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3962:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3964:/home/lsk/paparazzi/var/include/messages.h **** }
3965:/home/lsk/paparazzi/var/include/messages.h **** 
3966:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BEBOP_ACTUATORS(_trans, _dev, cmd_thrust, cmd_roll, cmd_pitch, cmd_yaw, rpm_r
3967:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BEBOP_ACTUATORS(struct transport_tx *trans, struct link_device *de
3968:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+2+2+2+2
3969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+2+2+2+2+2+2+2 +2 /*
3970:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
3971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BEBOP_ACTUATORS, "BE
3973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
3974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
3975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
3976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
3977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_ref_lf);
3978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_ref_rf);
3979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_ref_rb);
3980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_ref_lb);
3981:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_obs_lf);
3982:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_obs_rf);
3983:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_obs_rb);
3984:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm_obs_lb);
3985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3986:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3988:/home/lsk/paparazzi/var/include/messages.h **** }
3989:/home/lsk/paparazzi/var/include/messages.h **** 
3990:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WEATHER(_trans, _dev, p_amb, t_amb, windspeed, wind_from, humidity) pprz_msg_
3991:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WEATHER(struct transport_tx *trans, struct link_device *dev, uint8
3992:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
3993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
3994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
3995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WEATHER, "WEATHER");
3997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p_amb);
3998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _t_amb);
3999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _windspeed);
4000:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _wind_from);
4001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humidity);
4002:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
4003:/home/lsk/paparazzi/var/include/messages.h **** 	} else
4004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
4005:/home/lsk/paparazzi/var/include/messages.h **** }
4006:/home/lsk/paparazzi/var/include/messages.h **** 
4007:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_TURNTABLE(_trans, _dev, omega) pprz_msg_send_IMU_TURNTABLE(&((_trans).tra
4008:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_TURNTABLE(struct transport_tx *trans, struct link_device *dev,
4009:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
4010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
4011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
4012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
4013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_TURNTABLE, "IMU_
4014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _omega);
4015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
4016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
4017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
4018:/home/lsk/paparazzi/var/include/messages.h **** }
4019:/home/lsk/paparazzi/var/include/messages.h **** 
4020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_RAW(_trans, _dev, abs, diff) pprz_msg_send_BARO_RAW(&((_trans).trans_tx)
4021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_RAW(struct transport_tx *trans, struct link_device *dev, uint
4022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
4023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
4024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
4025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
4026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_RAW, "BARO_RAW"
4027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _abs);
4028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diff);
4029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
4030:/home/lsk/paparazzi/var/include/messages.h **** 	} else
4031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
4032:/home/lsk/paparazzi/var/include/messages.h **** }
4033:/home/lsk/paparazzi/var/include/messages.h **** 
4034:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIR_DATA(_trans, _dev, pressure, diff_p, temp, qnh, amsl_baro, airspeed, tas)
4035:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIR_DATA(struct transport_tx *trans, struct link_device *dev, uint
4036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
4037:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
4038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
4039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
4040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIR_DATA, "AIR_DATA"
4041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
4042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diff_p);
4043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
4044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qnh);
4045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amsl_baro);
4046:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
4047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tas);
4048:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
4049:/home/lsk/paparazzi/var/include/messages.h **** 	} else
4050:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
4051:/home/lsk/paparazzi/var/include/messages.h **** }
4052:/home/lsk/paparazzi/var/include/messages.h **** 
4053:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSL(_trans, _dev, AMSL_BARO, AMSL_GPS) pprz_msg_send_AMSL(&((_trans).trans_t
4054:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSL(struct transport_tx *trans, struct link_device *dev, uint8_t 
4055:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 362              		.loc 4 4055 0
 363 002a 276A     		ldr	r7, [r4, #32]
 364 002c 8DF80F60 		strb	r6, [sp, #15]
 365              	.LBE39:
 366              	.LBE38:
 367              		.loc 2 169 0
 368 0030 87EE888A 		fdivs	s16, s15, s16
 369              	.LBB42:
 370              	.LBB40:
 371              		.loc 4 4055 0
 372 0034 0A21     		movs	r1, #10
 373 0036 2368     		ldr	r3, [r4]
 374 0038 D4F80480 		ldr	r8, [r4, #4]
 375 003c 3846     		mov	r0, r7
 376              	.LBE40:
 377              	.LBE42:
 378              		.loc 2 169 0
 379 003e 8DED058A 		fsts	s16, [sp, #20]
 380              	.LVL35:
 381              	.LBB43:
 382              	.LBB41:
 383              		.loc 4 4055 0
 384 0042 9847     		blx	r3
 385              	.LVL36:
 386 0044 2946     		mov	r1, r5
 387 0046 0246     		mov	r2, r0
 388 0048 3846     		mov	r0, r7
 389 004a C047     		blx	r8
 390              	.LVL37:
 391 004c 0028     		cmp	r0, #0
 392 004e 38D0     		beq	.L35
4056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 393              		.loc 4 4056 0
 394 0050 276A     		ldr	r7, [r4, #32]
 395 0052 2368     		ldr	r3, [r4]
 396 0054 D4F81C80 		ldr	r8, [r4, #28]
 397 0058 3846     		mov	r0, r7
 398 005a 0A21     		movs	r1, #10
 399 005c 9847     		blx	r3
 400              	.LVL38:
 401 005e 2946     		mov	r1, r5
 402 0060 0246     		mov	r2, r0
 403 0062 3846     		mov	r0, r7
 404 0064 C047     		blx	r8
 405              	.LVL39:
4057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 406              		.loc 4 4057 0
 407 0066 2369     		ldr	r3, [r4, #16]
 408 0068 206A     		ldr	r0, [r4, #32]
 409 006a 2946     		mov	r1, r5
 410 006c 0A22     		movs	r2, #10
 411 006e 9847     		blx	r3
 412              	.LVL40:
4058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 413              		.loc 4 4058 0
 414 0070 0DF10F03 		add	r3, sp, #15
 415 0074 0096     		str	r6, [sp]
 416 0076 0193     		str	r3, [sp, #4]
 417 0078 A668     		ldr	r6, [r4, #8]
 418              	.LVL41:
 419 007a 206A     		ldr	r0, [r4, #32]
 420 007c 2946     		mov	r1, r5
 421 007e 0222     		movs	r2, #2
 422 0080 0023     		movs	r3, #0
 423              	.LVL42:
 424 0082 B047     		blx	r6
 425              	.LVL43:
4059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSL, "AMSL");
 426              		.loc 4 4059 0
 427 0084 DF23     		movs	r3, #223
 428 0086 0093     		str	r3, [sp]
 429 0088 144B     		ldr	r3, .L38+8
 430 008a 0193     		str	r3, [sp, #4]
 431 008c E668     		ldr	r6, [r4, #12]
 432 008e 206A     		ldr	r0, [r4, #32]
 433 0090 2946     		mov	r1, r5
 434 0092 0222     		movs	r2, #2
 435 0094 0023     		movs	r3, #0
 436 0096 B047     		blx	r6
 437              	.LVL44:
4060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AMSL_BARO);
 438              		.loc 4 4060 0
 439 0098 0426     		movs	r6, #4
 440 009a 04AB     		add	r3, sp, #16
 441              	.LVL45:
 442 009c 0096     		str	r6, [sp]
 443 009e 0193     		str	r3, [sp, #4]
 444 00a0 206A     		ldr	r0, [r4, #32]
 445 00a2 A768     		ldr	r7, [r4, #8]
 446 00a4 2946     		mov	r1, r5
 447 00a6 0A22     		movs	r2, #10
 448 00a8 0023     		movs	r3, #0
 449              	.LVL46:
 450 00aa B847     		blx	r7
 451              	.LVL47:
4061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AMSL_GPS);
 452              		.loc 4 4061 0
 453 00ac 05AB     		add	r3, sp, #20
 454              	.LVL48:
 455 00ae 0096     		str	r6, [sp]
 456 00b0 0193     		str	r3, [sp, #4]
 457 00b2 A668     		ldr	r6, [r4, #8]
 458 00b4 206A     		ldr	r0, [r4, #32]
 459 00b6 0023     		movs	r3, #0
 460              	.LVL49:
 461 00b8 2946     		mov	r1, r5
 462 00ba 0A22     		movs	r2, #10
 463 00bc B047     		blx	r6
 464              	.LVL50:
4062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 465              		.loc 4 4062 0
 466 00be 6369     		ldr	r3, [r4, #20]
 467 00c0 00E0     		b	.L37
 468              	.L35:
4063:/home/lsk/paparazzi/var/include/messages.h **** 	} else
4064:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 469              		.loc 4 4064 0
 470 00c2 A369     		ldr	r3, [r4, #24]
 471              	.L37:
 472 00c4 206A     		ldr	r0, [r4, #32]
 473 00c6 2946     		mov	r1, r5
 474 00c8 9847     		blx	r3
 475              	.LVL51:
 476              	.LBE41:
 477              	.LBE43:
 170:modules/air_data/air_data.c ****   pprz_msg_send_AMSL(trans, dev, AC_ID, &amsl_baro_ft, &amsl_gps_ft);
 171:modules/air_data/air_data.c **** }
 478              		.loc 2 171 0
 479 00ca 06B0     		add	sp, sp, #24
 480              		@ sp needed
 481 00cc BDEC028B 		fldmfdd	sp!, {d8}
 482 00d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 483              	.LVL52:
 484              	.L39:
 485              		.align	2
 486              	.L38:
 487 00d4 00000000 		.word	.LANCHOR0
 488 00d8 BF0E9C3E 		.word	1050414783
 489 00dc 00000000 		.word	.LC0
 490              		.cfi_endproc
 491              	.LFE492:
 493              		.section	.text.send_air_data,"ax",%progbits
 494              		.align	1
 495              		.thumb
 496              		.thumb_func
 498              	send_air_data:
 499              	.LFB491:
 157:modules/air_data/air_data.c **** {
 500              		.loc 2 157 0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 8
 503              		@ frame_needed = 0, uses_anonymous_args = 0
 504              	.LVL53:
 505 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 506              		.cfi_def_cfa_offset 40
 507              		.cfi_offset 0, -40
 508              		.cfi_offset 1, -36
 509              		.cfi_offset 2, -32
 510              		.cfi_offset 3, -28
 511              		.cfi_offset 4, -24
 512              		.cfi_offset 5, -20
 513              		.cfi_offset 6, -16
 514              		.cfi_offset 7, -12
 515              		.cfi_offset 8, -8
 516              		.cfi_offset 14, -4
 517              	.LBB46:
 518              	.LBB47:
4036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
 519              		.loc 4 4036 0
 520 0004 076A     		ldr	r7, [r0, #32]
 521 0006 D0F80480 		ldr	r8, [r0, #4]
 522 000a 0368     		ldr	r3, [r0]
 523 000c 0126     		movs	r6, #1
 524              	.LBE47:
 525              	.LBE46:
 157:modules/air_data/air_data.c **** {
 526              		.loc 2 157 0
 527 000e 0D46     		mov	r5, r1
 528              	.LVL54:
 529 0010 0446     		mov	r4, r0
 530              	.LBB49:
 531              	.LBB48:
4036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
 532              		.loc 4 4036 0
 533 0012 1E21     		movs	r1, #30
 534              	.LVL55:
 535 0014 8DF80F60 		strb	r6, [sp, #15]
 536              	.LVL56:
 537 0018 3846     		mov	r0, r7
 538              	.LVL57:
 539 001a 9847     		blx	r3
 540              	.LVL58:
 541 001c 2946     		mov	r1, r5
 542 001e 0246     		mov	r2, r0
 543 0020 3846     		mov	r0, r7
 544 0022 C047     		blx	r8
 545              	.LVL59:
 546 0024 0028     		cmp	r0, #0
 547 0026 6DD0     		beq	.L41
4037:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
 548              		.loc 4 4037 0
 549 0028 276A     		ldr	r7, [r4, #32]
 550 002a 2368     		ldr	r3, [r4]
 551 002c D4F81C80 		ldr	r8, [r4, #28]
 552 0030 3846     		mov	r0, r7
 553 0032 1E21     		movs	r1, #30
 554 0034 9847     		blx	r3
 555              	.LVL60:
 556 0036 2946     		mov	r1, r5
 557 0038 0246     		mov	r2, r0
 558 003a 3846     		mov	r0, r7
 559 003c C047     		blx	r8
 560              	.LVL61:
4038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 561              		.loc 4 4038 0
 562 003e 2369     		ldr	r3, [r4, #16]
 563 0040 206A     		ldr	r0, [r4, #32]
4041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 564              		.loc 4 4041 0
 565 0042 DFF8D480 		ldr	r8, .L44+4
4038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 566              		.loc 4 4038 0
 567 0046 2946     		mov	r1, r5
 568 0048 1E22     		movs	r2, #30
 569 004a 9847     		blx	r3
 570              	.LVL62:
4039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 571              		.loc 4 4039 0
 572 004c 0DF10F03 		add	r3, sp, #15
 573 0050 0096     		str	r6, [sp]
 574 0052 0193     		str	r3, [sp, #4]
 575 0054 A668     		ldr	r6, [r4, #8]
 576              	.LVL63:
 577 0056 206A     		ldr	r0, [r4, #32]
 578 0058 2946     		mov	r1, r5
 579 005a 0222     		movs	r2, #2
 580 005c 0023     		movs	r3, #0
 581              	.LVL64:
 582 005e B047     		blx	r6
 583              	.LVL65:
4040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIR_DATA, "AIR_DATA"
 584              		.loc 4 4040 0
 585 0060 DE23     		movs	r3, #222
 586 0062 0093     		str	r3, [sp]
 587 0064 2B4B     		ldr	r3, .L44
 588 0066 0193     		str	r3, [sp, #4]
4041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 589              		.loc 4 4041 0
 590 0068 0427     		movs	r7, #4
4040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIR_DATA, "AIR_DATA"
 591              		.loc 4 4040 0
 592 006a E668     		ldr	r6, [r4, #12]
 593 006c 206A     		ldr	r0, [r4, #32]
 594 006e 2946     		mov	r1, r5
 595 0070 0222     		movs	r2, #2
 596 0072 0023     		movs	r3, #0
 597 0074 B047     		blx	r6
 598              	.LVL66:
4041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 599              		.loc 4 4041 0
 600 0076 206A     		ldr	r0, [r4, #32]
 601 0078 A668     		ldr	r6, [r4, #8]
 602 007a 0097     		str	r7, [sp]
 603 007c 2946     		mov	r1, r5
 604 007e 0A22     		movs	r2, #10
 605 0080 0023     		movs	r3, #0
 606 0082 CDF80480 		str	r8, [sp, #4]
 607 0086 B047     		blx	r6
 608              	.LVL67:
4042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diff_p);
 609              		.loc 4 4042 0
 610 0088 08EB0703 		add	r3, r8, r7
 611 008c 0193     		str	r3, [sp, #4]
 612 008e 206A     		ldr	r0, [r4, #32]
 613 0090 A668     		ldr	r6, [r4, #8]
 614 0092 0097     		str	r7, [sp]
 615 0094 2946     		mov	r1, r5
 616 0096 0A22     		movs	r2, #10
 617 0098 0023     		movs	r3, #0
 618 009a B047     		blx	r6
 619              	.LVL68:
4043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
 620              		.loc 4 4043 0
 621 009c 08F10803 		add	r3, r8, #8
 622 00a0 0193     		str	r3, [sp, #4]
 623 00a2 206A     		ldr	r0, [r4, #32]
 624 00a4 A668     		ldr	r6, [r4, #8]
 625 00a6 0097     		str	r7, [sp]
 626 00a8 2946     		mov	r1, r5
 627 00aa 0A22     		movs	r2, #10
 628 00ac 0023     		movs	r3, #0
 629 00ae B047     		blx	r6
 630              	.LVL69:
4044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qnh);
 631              		.loc 4 4044 0
 632 00b0 08F11803 		add	r3, r8, #24
 633 00b4 0193     		str	r3, [sp, #4]
 634 00b6 206A     		ldr	r0, [r4, #32]
 635 00b8 A668     		ldr	r6, [r4, #8]
 636 00ba 0097     		str	r7, [sp]
 637 00bc 2946     		mov	r1, r5
 638 00be 0A22     		movs	r2, #10
 639 00c0 0023     		movs	r3, #0
 640 00c2 B047     		blx	r6
 641              	.LVL70:
4045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amsl_baro);
 642              		.loc 4 4045 0
 643 00c4 08F11C03 		add	r3, r8, #28
 644 00c8 0193     		str	r3, [sp, #4]
 645 00ca 206A     		ldr	r0, [r4, #32]
 646 00cc A668     		ldr	r6, [r4, #8]
 647 00ce 0097     		str	r7, [sp]
 648 00d0 2946     		mov	r1, r5
 649 00d2 0A22     		movs	r2, #10
 650 00d4 0023     		movs	r3, #0
 651 00d6 B047     		blx	r6
 652              	.LVL71:
4046:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 653              		.loc 4 4046 0
 654 00d8 08F10C03 		add	r3, r8, #12
 655 00dc 0193     		str	r3, [sp, #4]
 656 00de 206A     		ldr	r0, [r4, #32]
 657 00e0 A668     		ldr	r6, [r4, #8]
 658 00e2 0097     		str	r7, [sp]
 659 00e4 2946     		mov	r1, r5
 660 00e6 0A22     		movs	r2, #10
 661 00e8 0023     		movs	r3, #0
 662 00ea B047     		blx	r6
 663              	.LVL72:
4047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tas);
 664              		.loc 4 4047 0
 665 00ec 08F11006 		add	r6, r8, #16
 666 00f0 0196     		str	r6, [sp, #4]
 667 00f2 0023     		movs	r3, #0
 668 00f4 0097     		str	r7, [sp]
 669 00f6 A668     		ldr	r6, [r4, #8]
 670 00f8 206A     		ldr	r0, [r4, #32]
 671 00fa 2946     		mov	r1, r5
 672 00fc 0A22     		movs	r2, #10
 673 00fe B047     		blx	r6
 674              	.LVL73:
4048:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 675              		.loc 4 4048 0
 676 0100 6369     		ldr	r3, [r4, #20]
 677 0102 00E0     		b	.L43
 678              	.L41:
4050:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 679              		.loc 4 4050 0
 680 0104 A369     		ldr	r3, [r4, #24]
 681              	.L43:
 682 0106 206A     		ldr	r0, [r4, #32]
 683 0108 2946     		mov	r1, r5
 684 010a 9847     		blx	r3
 685              	.LVL74:
 686              	.LBE48:
 687              	.LBE49:
 163:modules/air_data/air_data.c **** }
 688              		.loc 2 163 0
 689 010c 04B0     		add	sp, sp, #16
 690              	.LVL75:
 691              		@ sp needed
 692 010e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 693              	.LVL76:
 694              	.L45:
 695 0112 00BF     		.align	2
 696              	.L44:
 697 0114 05000000 		.word	.LC1
 698 0118 00000000 		.word	.LANCHOR0
 699              		.cfi_endproc
 700              	.LFE491:
 702              		.section	.text.send_baro_raw,"ax",%progbits
 703              		.align	1
 704              		.thumb
 705              		.thumb_func
 707              	send_baro_raw:
 708              	.LFB490:
 151:modules/air_data/air_data.c **** {
 709              		.loc 2 151 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 8
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              	.LVL77:
 714 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 715              		.cfi_def_cfa_offset 40
 716              		.cfi_offset 0, -40
 717              		.cfi_offset 1, -36
 718              		.cfi_offset 2, -32
 719              		.cfi_offset 3, -28
 720              		.cfi_offset 4, -24
 721              		.cfi_offset 5, -20
 722              		.cfi_offset 6, -16
 723              		.cfi_offset 7, -12
 724              		.cfi_offset 8, -8
 725              		.cfi_offset 14, -4
 726              	.LBB52:
 727              	.LBB53:
4022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 728              		.loc 4 4022 0
 729 0004 076A     		ldr	r7, [r0, #32]
 730 0006 D0F80480 		ldr	r8, [r0, #4]
 731 000a 0368     		ldr	r3, [r0]
 732 000c 0126     		movs	r6, #1
 733              	.LBE53:
 734              	.LBE52:
 151:modules/air_data/air_data.c **** {
 735              		.loc 2 151 0
 736 000e 0D46     		mov	r5, r1
 737              	.LVL78:
 738 0010 0446     		mov	r4, r0
 739              	.LBB55:
 740              	.LBB54:
4022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 741              		.loc 4 4022 0
 742 0012 0A21     		movs	r1, #10
 743              	.LVL79:
 744 0014 8DF80F60 		strb	r6, [sp, #15]
 745              	.LVL80:
 746 0018 3846     		mov	r0, r7
 747              	.LVL81:
 748 001a 9847     		blx	r3
 749              	.LVL82:
 750 001c 2946     		mov	r1, r5
 751 001e 0246     		mov	r2, r0
 752 0020 3846     		mov	r0, r7
 753 0022 C047     		blx	r8
 754              	.LVL83:
 755 0024 0028     		cmp	r0, #0
 756 0026 3BD0     		beq	.L47
4023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 757              		.loc 4 4023 0
 758 0028 276A     		ldr	r7, [r4, #32]
 759 002a 2368     		ldr	r3, [r4]
 760 002c D4F81C80 		ldr	r8, [r4, #28]
 761 0030 3846     		mov	r0, r7
 762 0032 0A21     		movs	r1, #10
 763 0034 9847     		blx	r3
 764              	.LVL84:
 765 0036 2946     		mov	r1, r5
 766 0038 0246     		mov	r2, r0
 767 003a 3846     		mov	r0, r7
 768 003c C047     		blx	r8
 769              	.LVL85:
4024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 770              		.loc 4 4024 0
 771 003e 2369     		ldr	r3, [r4, #16]
 772 0040 206A     		ldr	r0, [r4, #32]
4027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _abs);
 773              		.loc 4 4027 0
 774 0042 DFF87080 		ldr	r8, .L50+4
4024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 775              		.loc 4 4024 0
 776 0046 2946     		mov	r1, r5
 777 0048 0A22     		movs	r2, #10
 778 004a 9847     		blx	r3
 779              	.LVL86:
4025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 780              		.loc 4 4025 0
 781 004c 0DF10F03 		add	r3, sp, #15
 782 0050 0096     		str	r6, [sp]
 783 0052 0193     		str	r3, [sp, #4]
 784 0054 A668     		ldr	r6, [r4, #8]
 785              	.LVL87:
 786 0056 206A     		ldr	r0, [r4, #32]
 787 0058 2946     		mov	r1, r5
 788 005a 0222     		movs	r2, #2
 789 005c 0023     		movs	r3, #0
 790              	.LVL88:
 791 005e B047     		blx	r6
 792              	.LVL89:
4026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_RAW, "BARO_RAW"
 793              		.loc 4 4026 0
 794 0060 DD23     		movs	r3, #221
 795 0062 0093     		str	r3, [sp]
 796 0064 124B     		ldr	r3, .L50
 797 0066 0193     		str	r3, [sp, #4]
4027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _abs);
 798              		.loc 4 4027 0
 799 0068 0427     		movs	r7, #4
4026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_RAW, "BARO_RAW"
 800              		.loc 4 4026 0
 801 006a E668     		ldr	r6, [r4, #12]
 802 006c 206A     		ldr	r0, [r4, #32]
 803 006e 2946     		mov	r1, r5
 804 0070 0222     		movs	r2, #2
 805 0072 0023     		movs	r3, #0
 806 0074 B047     		blx	r6
 807              	.LVL90:
4027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _abs);
 808              		.loc 4 4027 0
 809 0076 206A     		ldr	r0, [r4, #32]
 810 0078 A668     		ldr	r6, [r4, #8]
 811 007a 0097     		str	r7, [sp]
 812 007c 2946     		mov	r1, r5
 813 007e 0A22     		movs	r2, #10
 814 0080 0023     		movs	r3, #0
 815 0082 CDF80480 		str	r8, [sp, #4]
 816 0086 B047     		blx	r6
 817              	.LVL91:
4028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diff);
 818              		.loc 4 4028 0
 819 0088 08EB0706 		add	r6, r8, r7
 820 008c 0196     		str	r6, [sp, #4]
 821 008e 0023     		movs	r3, #0
 822 0090 0097     		str	r7, [sp]
 823 0092 A668     		ldr	r6, [r4, #8]
 824 0094 206A     		ldr	r0, [r4, #32]
 825 0096 2946     		mov	r1, r5
 826 0098 0A22     		movs	r2, #10
 827 009a B047     		blx	r6
 828              	.LVL92:
4029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 829              		.loc 4 4029 0
 830 009c 6369     		ldr	r3, [r4, #20]
 831 009e 00E0     		b	.L49
 832              	.L47:
4031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 833              		.loc 4 4031 0
 834 00a0 A369     		ldr	r3, [r4, #24]
 835              	.L49:
 836 00a2 206A     		ldr	r0, [r4, #32]
 837 00a4 2946     		mov	r1, r5
 838 00a6 9847     		blx	r3
 839              	.LVL93:
 840              	.LBE54:
 841              	.LBE55:
 154:modules/air_data/air_data.c **** }
 842              		.loc 2 154 0
 843 00a8 04B0     		add	sp, sp, #16
 844              	.LVL94:
 845              		@ sp needed
 846 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 847              	.LVL95:
 848              	.L51:
 849 00ae 00BF     		.align	2
 850              	.L50:
 851 00b0 0E000000 		.word	.LC2
 852 00b4 00000000 		.word	.LANCHOR0
 853              		.cfi_endproc
 854              	.LFE490:
 856              		.section	.text.air_data_init,"ax",%progbits
 857              		.align	1
 858              		.global	air_data_init
 859              		.thumb
 860              		.thumb_func
 862              	air_data_init:
 863              	.LFB493:
 172:modules/air_data/air_data.c **** #endif
 173:modules/air_data/air_data.c **** 
 174:modules/air_data/air_data.c **** /** AirData initialization. Called at startup.
 175:modules/air_data/air_data.c ****  *  Bind ABI messages
 176:modules/air_data/air_data.c ****  */
 177:modules/air_data/air_data.c **** void air_data_init(void)
 178:modules/air_data/air_data.c **** {
 864              		.loc 2 178 0
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 0, uses_anonymous_args = 0
 179:modules/air_data/air_data.c ****   air_data.calc_airspeed = AIR_DATA_CALC_AIRSPEED;
 868              		.loc 2 179 0
 869 0000 244B     		ldr	r3, .L53
 870 0002 0121     		movs	r1, #1
 178:modules/air_data/air_data.c **** {
 871              		.loc 2 178 0
 872 0004 10B5     		push	{r4, lr}
 873              		.cfi_def_cfa_offset 8
 874              		.cfi_offset 4, -8
 875              		.cfi_offset 14, -4
 876              		.loc 2 179 0
 877 0006 83F82110 		strb	r1, [r3, #33]
 180:modules/air_data/air_data.c ****   air_data.calc_tas_factor = AIR_DATA_CALC_TAS_FACTOR;
 878              		.loc 2 180 0
 879 000a 83F82410 		strb	r1, [r3, #36]
 181:modules/air_data/air_data.c ****   air_data.calc_amsl_baro = AIR_DATA_CALC_AMSL_BARO;
 182:modules/air_data/air_data.c ****   air_data.tas_factor = AIR_DATA_TAS_FACTOR;
 183:modules/air_data/air_data.c ****   air_data.calc_qnh_once = TRUE;
 880              		.loc 2 183 0
 881 000e 83F82210 		strb	r1, [r3, #34]
 184:modules/air_data/air_data.c ****   air_data.amsl_baro_valid = FALSE;
 185:modules/air_data/air_data.c **** 
 186:modules/air_data/air_data.c ****   /* initialize the output variables
 187:modules/air_data/air_data.c ****    * pressure, qnh, temperature and airspeed to invalid values,
 188:modules/air_data/air_data.c ****    * rest to zero
 189:modules/air_data/air_data.c ****    */
 190:modules/air_data/air_data.c ****   air_data.pressure = -1.0f;
 882              		.loc 2 190 0
 883 0012 2149     		ldr	r1, .L53+4
 884 0014 1960     		str	r1, [r3]	@ float
 191:modules/air_data/air_data.c ****   air_data.qnh = -1.0f;
 192:modules/air_data/air_data.c ****   air_data.airspeed = -1.0f;
 885              		.loc 2 192 0
 886 0016 D960     		str	r1, [r3, #12]	@ float
 191:modules/air_data/air_data.c ****   air_data.qnh = -1.0f;
 887              		.loc 2 191 0
 888 0018 9961     		str	r1, [r3, #24]	@ float
 193:modules/air_data/air_data.c ****   air_data.tas = -1.0f;
 889              		.loc 2 193 0
 890 001a 1961     		str	r1, [r3, #16]	@ float
 194:modules/air_data/air_data.c ****   air_data.temperature = -1000.0f;
 891              		.loc 2 194 0
 892 001c 1F49     		ldr	r1, .L53+8
 893 001e 9960     		str	r1, [r3, #8]	@ float
 181:modules/air_data/air_data.c ****   air_data.calc_amsl_baro = AIR_DATA_CALC_AMSL_BARO;
 894              		.loc 2 181 0
 895 0020 0022     		movs	r2, #0
 195:modules/air_data/air_data.c ****   air_data.differential = 0.0f;
 896              		.loc 2 195 0
 897 0022 0021     		movs	r1, #0
 182:modules/air_data/air_data.c ****   air_data.tas_factor = AIR_DATA_TAS_FACTOR;
 898              		.loc 2 182 0
 899 0024 4FF07E50 		mov	r0, #1065353216
 900              		.loc 2 195 0
 901 0028 5960     		str	r1, [r3, #4]	@ float
 181:modules/air_data/air_data.c ****   air_data.calc_amsl_baro = AIR_DATA_CALC_AMSL_BARO;
 902              		.loc 2 181 0
 903 002a 83F82320 		strb	r2, [r3, #35]
 182:modules/air_data/air_data.c ****   air_data.tas_factor = AIR_DATA_TAS_FACTOR;
 904              		.loc 2 182 0
 905 002e 5861     		str	r0, [r3, #20]	@ float
 184:modules/air_data/air_data.c ****   air_data.amsl_baro_valid = FALSE;
 906              		.loc 2 184 0
 907 0030 83F82020 		strb	r2, [r3, #32]
 196:modules/air_data/air_data.c ****   air_data.amsl_baro = 0.0f;
 908              		.loc 2 196 0
 909 0034 D961     		str	r1, [r3, #28]	@ float
 197:modules/air_data/air_data.c ****   air_data.aoa = 0.0f;
 910              		.loc 2 197 0
 911 0036 9962     		str	r1, [r3, #40]	@ float
 198:modules/air_data/air_data.c ****   air_data.sideslip = 0.0f;
 912              		.loc 2 198 0
 913 0038 D962     		str	r1, [r3, #44]	@ float
 199:modules/air_data/air_data.c ****   air_data.wind_speed = 0.0f;
 914              		.loc 2 199 0
 915 003a 1963     		str	r1, [r3, #48]	@ float
 200:modules/air_data/air_data.c ****   air_data.wind_dir = 0.0f;
 916              		.loc 2 200 0
 917 003c 5963     		str	r1, [r3, #52]	@ float
 201:modules/air_data/air_data.c **** 
 202:modules/air_data/air_data.c ****   /* internal variables */
 203:modules/air_data/air_data.c ****   baro_health_counter = 0;
 918              		.loc 2 203 0
 919 003e 184B     		ldr	r3, .L53+12
 920              	.LBB56:
 921              	.LBB57:
 922              		.file 5 "/home/lsk/paparazzi/var/include/abi_messages.h"
   1:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Automatically generated by gen_abi from /home/lsk/paparazzi/conf/abi.xml */
   2:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/abi_messages.h **** 
   4:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Onboard middleware library ABI
   5:/home/lsk/paparazzi/var/include/abi_messages.h ****  * send and receive messages of class airborne
   6:/home/lsk/paparazzi/var/include/abi_messages.h ****  */
   7:/home/lsk/paparazzi/var/include/abi_messages.h **** 
   8:/home/lsk/paparazzi/var/include/abi_messages.h **** #ifndef ABI_MESSAGES_H
   9:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_MESSAGES_H
  10:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  11:/home/lsk/paparazzi/var/include/abi_messages.h **** #include "subsystems/abi_common.h"
  12:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  13:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Messages IDs */
  14:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_BARO_ABS_ID 0
  15:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_BARO_DIFF_ID 1
  16:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_AGL_ID 2
  17:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_TEMPERATURE_ID 3
  18:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_GYRO_INT32_ID 4
  19:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_ACCEL_INT32_ID 5
  20:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_MAG_INT32_ID 6
  21:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_LOWPASSED_ID 7
  22:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_BODY_TO_IMU_QUAT_ID 8
  23:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_GEO_MAG_ID 9
  24:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_GPS_ID 10
  25:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  26:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Array and linked list structure */
  27:/home/lsk/paparazzi/var/include/abi_messages.h **** #define ABI_MESSAGE_NB 11
  28:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  29:/home/lsk/paparazzi/var/include/abi_messages.h **** ABI_EXTERN abi_event* abi_queues[ABI_MESSAGE_NB];
  30:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  31:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Callbacks */
  32:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBARO_ABS)(uint8_t sender_id, float pressure);
  33:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBARO_DIFF)(uint8_t sender_id, float pressure);
  34:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackAGL)(uint8_t sender_id, float distance);
  35:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackTEMPERATURE)(uint8_t sender_id, float temp);
  36:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_GYRO_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Rates * g
  37:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_ACCEL_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * 
  38:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_MAG_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * ma
  39:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_LOWPASSED)(uint8_t sender_id, uint32_t stamp, struct Int32Rates * gy
  40:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBODY_TO_IMU_QUAT)(uint8_t sender_id, struct FloatQuat * q_b2i_f);
  41:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackGEO_MAG)(uint8_t sender_id, struct FloatVect3 * h);
  42:/home/lsk/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackGPS)(uint8_t sender_id, uint32_t stamp, struct GpsState * gps_s);
  43:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  44:/home/lsk/paparazzi/var/include/abi_messages.h **** /* Bind and Send functions */
  45:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  46:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBARO_ABS(uint8_t sender_id, abi_event * ev, abi_callbackBARO_ABS cb) {
  47:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 923              		.loc 5 47 0
 924 0040 1849     		ldr	r1, .L53+16
 925              	.LBE57:
 926              	.LBE56:
 927              		.loc 2 203 0
 928 0042 1A70     		strb	r2, [r3]
 929              	.LVL96:
 930              	.LBB59:
 931              	.LBB58:
  48:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 932              		.loc 5 48 0
 933 0044 184B     		ldr	r3, .L53+20
 934 0046 4B60     		str	r3, [r1, #4]
  49:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BARO_ABS_ID],ev);
 935              		.loc 5 49 0
 936 0048 184B     		ldr	r3, .L53+24
  47:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 937              		.loc 5 47 0
 938 004a 0A70     		strb	r2, [r1]
 939              		.loc 5 49 0
 940 004c 1868     		ldr	r0, [r3]
 941 004e 8860     		str	r0, [r1, #8]
 942 0050 1960     		str	r1, [r3]
 943              	.LVL97:
 944              	.LBE58:
 945              	.LBE59:
 946              	.LBB60:
 947              	.LBB61:
  50:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  51:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  52:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBARO_ABS(uint8_t sender_id, float pressure) {
  53:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  54:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BARO_ABS_ID],e) {
  55:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  56:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackBARO_ABS cb = (abi_callbackBARO_ABS)(e->cb);
  57:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, pressure);
  58:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
  59:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
  60:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  61:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  62:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBARO_DIFF(uint8_t sender_id, abi_event * ev, abi_callbackBARO_DIFF cb)
  63:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 948              		.loc 5 63 0
 949 0052 1749     		ldr	r1, .L53+28
  64:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 950              		.loc 5 64 0
 951 0054 1748     		ldr	r0, .L53+32
 952 0056 4860     		str	r0, [r1, #4]
  65:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BARO_DIFF_ID],ev);
 953              		.loc 5 65 0
 954 0058 5868     		ldr	r0, [r3, #4]
  63:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 955              		.loc 5 63 0
 956 005a 0A70     		strb	r2, [r1]
 957              		.loc 5 65 0
 958 005c 8860     		str	r0, [r1, #8]
 959 005e 5960     		str	r1, [r3, #4]
 960              	.LVL98:
 961              	.LBE61:
 962              	.LBE60:
 963              	.LBB62:
 964              	.LBB63:
  66:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  67:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  68:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBARO_DIFF(uint8_t sender_id, float pressure) {
  69:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  70:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BARO_DIFF_ID],e) {
  71:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  72:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackBARO_DIFF cb = (abi_callbackBARO_DIFF)(e->cb);
  73:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, pressure);
  74:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
  75:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
  76:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  77:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  78:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgAGL(uint8_t sender_id, abi_event * ev, abi_callbackAGL cb) {
  79:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  80:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  81:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_AGL_ID],ev);
  82:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  83:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  84:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgAGL(uint8_t sender_id, float distance) {
  85:/home/lsk/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  86:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_AGL_ID],e) {
  87:/home/lsk/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  88:/home/lsk/paparazzi/var/include/abi_messages.h ****       abi_callbackAGL cb = (abi_callbackAGL)(e->cb);
  89:/home/lsk/paparazzi/var/include/abi_messages.h ****       cb(sender_id, distance);
  90:/home/lsk/paparazzi/var/include/abi_messages.h ****     }
  91:/home/lsk/paparazzi/var/include/abi_messages.h ****   }
  92:/home/lsk/paparazzi/var/include/abi_messages.h **** }
  93:/home/lsk/paparazzi/var/include/abi_messages.h **** 
  94:/home/lsk/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgTEMPERATURE(uint8_t sender_id, abi_event * ev, abi_callbackTEMPERATURE
  95:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
 965              		.loc 5 95 0
 966 0060 1549     		ldr	r1, .L53+36
 967              	.LBE63:
 968              	.LBE62:
 204:modules/air_data/air_data.c **** 
 205:modules/air_data/air_data.c ****   AbiBindMsgBARO_ABS(AIR_DATA_BARO_ABS_ID, &pressure_abs_ev, pressure_abs_cb);
 206:modules/air_data/air_data.c ****   AbiBindMsgBARO_DIFF(AIR_DATA_BARO_DIFF_ID, &pressure_diff_ev, pressure_diff_cb);
 207:modules/air_data/air_data.c ****   AbiBindMsgTEMPERATURE(AIR_DATA_TEMPERATURE_ID, &temperature_ev, temperature_cb);
 208:modules/air_data/air_data.c **** 
 209:modules/air_data/air_data.c **** #if PERIODIC_TELEMETRY
 210:modules/air_data/air_data.c ****   register_periodic_telemetry(DefaultPeriodic, "BARO_RAW", send_baro_raw);
 969              		.loc 2 210 0
 970 0062 164C     		ldr	r4, .L53+40
 971              	.LBB66:
 972              	.LBB64:
 973              		.loc 5 95 0
 974 0064 0A70     		strb	r2, [r1]
  96:/home/lsk/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
 975              		.loc 5 96 0
 976 0066 164A     		ldr	r2, .L53+44
 977 0068 4A60     		str	r2, [r1, #4]
  97:/home/lsk/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_TEMPERATURE_ID],ev);
 978              		.loc 5 97 0
 979 006a DA68     		ldr	r2, [r3, #12]
 980 006c 8A60     		str	r2, [r1, #8]
 981              	.LBE64:
 982              	.LBE66:
 983              		.loc 2 210 0
 984 006e 2046     		mov	r0, r4
 985              	.LBB67:
 986              	.LBB65:
 987              		.loc 5 97 0
 988 0070 D960     		str	r1, [r3, #12]
 989              	.LBE65:
 990              	.LBE67:
 991              		.loc 2 210 0
 992 0072 144A     		ldr	r2, .L53+48
 993 0074 1449     		ldr	r1, .L53+52
 994 0076 FFF7FEFF 		bl	register_periodic_telemetry
 995              	.LVL99:
 211:modules/air_data/air_data.c ****   register_periodic_telemetry(DefaultPeriodic, "AIR_DATA", send_air_data);
 996              		.loc 2 211 0
 997 007a 2046     		mov	r0, r4
 998 007c 1349     		ldr	r1, .L53+56
 999 007e 144A     		ldr	r2, .L53+60
 1000 0080 FFF7FEFF 		bl	register_periodic_telemetry
 1001              	.LVL100:
 212:modules/air_data/air_data.c ****   register_periodic_telemetry(DefaultPeriodic, "AMSL", send_amsl);
 1002              		.loc 2 212 0
 1003 0084 2046     		mov	r0, r4
 1004 0086 1349     		ldr	r1, .L53+64
 1005 0088 134A     		ldr	r2, .L53+68
 213:modules/air_data/air_data.c **** #endif
 214:modules/air_data/air_data.c **** }
 1006              		.loc 2 214 0
 1007 008a BDE81040 		pop	{r4, lr}
 212:modules/air_data/air_data.c ****   register_periodic_telemetry(DefaultPeriodic, "AMSL", send_amsl);
 1008              		.loc 2 212 0
 1009 008e FFF7FEBF 		b	register_periodic_telemetry
 1010              	.LVL101:
 1011              	.L54:
 1012 0092 00BF     		.align	2
 1013              	.L53:
 1014 0094 00000000 		.word	.LANCHOR0
 1015 0098 000080BF 		.word	-1082130432
 1016 009c 00007AC4 		.word	-998637568
 1017 00a0 00000000 		.word	.LANCHOR1
 1018 00a4 00000000 		.word	.LANCHOR2
 1019 00a8 00000000 		.word	pressure_abs_cb
 1020 00ac 00000000 		.word	abi_queues
 1021 00b0 00000000 		.word	.LANCHOR3
 1022 00b4 00000000 		.word	pressure_diff_cb
 1023 00b8 00000000 		.word	.LANCHOR4
 1024 00bc 00000000 		.word	pprz_telemetry
 1025 00c0 00000000 		.word	temperature_cb
 1026 00c4 00000000 		.word	send_baro_raw
 1027 00c8 0E000000 		.word	.LC2
 1028 00cc 05000000 		.word	.LC1
 1029 00d0 00000000 		.word	send_air_data
 1030 00d4 00000000 		.word	.LC0
 1031 00d8 00000000 		.word	send_amsl
 1032              		.cfi_endproc
 1033              	.LFE493:
 1035              		.section	.text.air_data_get_amsl,"ax",%progbits
 1036              		.align	1
 1037              		.global	air_data_get_amsl
 1038              		.thumb
 1039              		.thumb_func
 1041              	air_data_get_amsl:
 1042              	.LFB494:
 215:modules/air_data/air_data.c **** 
 216:modules/air_data/air_data.c **** float air_data_get_amsl(void)
 217:modules/air_data/air_data.c **** {
 1043              		.loc 2 217 0
 1044              		.cfi_startproc
 1045              		@ args = 0, pretend = 0, frame = 0
 1046              		@ frame_needed = 0, uses_anonymous_args = 0
 1047 0000 08B5     		push	{r3, lr}
 1048              		.cfi_def_cfa_offset 8
 1049              		.cfi_offset 3, -8
 1050              		.cfi_offset 14, -4
 218:modules/air_data/air_data.c ****   // If it has be calculated and baro is OK
 219:modules/air_data/air_data.c ****   if (air_data.amsl_baro_valid) {
 1051              		.loc 2 219 0
 1052 0002 054B     		ldr	r3, .L58
 1053 0004 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 1054 0008 0AB1     		cbz	r2, .L56
 220:modules/air_data/air_data.c ****     return air_data.amsl_baro;
 1055              		.loc 2 220 0
 1056 000a D869     		ldr	r0, [r3, #28]	@ float
 1057 000c 08BD     		pop	{r3, pc}
 1058              	.L56:
 221:modules/air_data/air_data.c ****   }
 222:modules/air_data/air_data.c ****   // Otherwise use real altitude (from GPS)
 223:modules/air_data/air_data.c ****   return stateGetPositionLla_f()->alt;
 1059              		.loc 2 223 0
 1060 000e FFF7FEFF 		bl	stateGetPositionLla_f
 1061              	.LVL102:
 1062 0012 8068     		ldr	r0, [r0, #8]	@ float
 224:modules/air_data/air_data.c **** }
 1063              		.loc 2 224 0
 1064 0014 08BD     		pop	{r3, pc}
 1065              	.L59:
 1066 0016 00BF     		.align	2
 1067              	.L58:
 1068 0018 00000000 		.word	.LANCHOR0
 1069              		.cfi_endproc
 1070              	.LFE494:
 1072              		.section	.text.air_data_periodic,"ax",%progbits
 1073              		.align	1
 1074              		.global	air_data_periodic
 1075              		.thumb
 1076              		.thumb_func
 1078              	air_data_periodic:
 1079              	.LFB495:
 225:modules/air_data/air_data.c **** 
 226:modules/air_data/air_data.c **** void air_data_periodic(void)
 227:modules/air_data/air_data.c **** {
 1080              		.loc 2 227 0
 1081              		.cfi_startproc
 1082              		@ args = 0, pretend = 0, frame = 0
 1083              		@ frame_needed = 0, uses_anonymous_args = 0
 1084              		@ link register save eliminated.
 228:modules/air_data/air_data.c ****   // Watchdog on baro
 229:modules/air_data/air_data.c ****   if (baro_health_counter > 0) {
 1085              		.loc 2 229 0
 1086 0000 044A     		ldr	r2, .L63
 1087 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1088 0004 13B1     		cbz	r3, .L61
 230:modules/air_data/air_data.c ****     baro_health_counter--;
 1089              		.loc 2 230 0
 1090 0006 013B     		subs	r3, r3, #1
 1091 0008 1370     		strb	r3, [r2]
 1092 000a 7047     		bx	lr
 1093              	.L61:
 231:modules/air_data/air_data.c ****   } else {
 232:modules/air_data/air_data.c ****     air_data.amsl_baro_valid = FALSE;
 1094              		.loc 2 232 0
 1095 000c 024A     		ldr	r2, .L63+4
 1096 000e 82F82030 		strb	r3, [r2, #32]
 1097 0012 7047     		bx	lr
 1098              	.L64:
 1099              		.align	2
 1100              	.L63:
 1101 0014 00000000 		.word	.LANCHOR1
 1102 0018 00000000 		.word	.LANCHOR0
 1103              		.cfi_endproc
 1104              	.LFE495:
 1106              		.section	.text.eas_from_dynamic_pressure,"ax",%progbits
 1107              		.align	1
 1108              		.global	eas_from_dynamic_pressure
 1109              		.thumb
 1110              		.thumb_func
 1112              	eas_from_dynamic_pressure:
 1113              	.LFB496:
 233:modules/air_data/air_data.c ****   }
 234:modules/air_data/air_data.c **** }
 235:modules/air_data/air_data.c **** 
 236:modules/air_data/air_data.c **** 
 237:modules/air_data/air_data.c **** /**
 238:modules/air_data/air_data.c ****  * Calculate equivalent airspeed from dynamic pressure.
 239:modules/air_data/air_data.c ****  * Dynamic pressure @f$q@f$ (also called impact pressure) is the
 240:modules/air_data/air_data.c ****  * difference between total(pitot) and static pressure.
 241:modules/air_data/air_data.c ****  *
 242:modules/air_data/air_data.c ****  * Airspeed from dynamic pressure:
 243:modules/air_data/air_data.c ****  * @f[ v = \frac12 \sqrt{\frac{2q}{\rho}} @f]
 244:modules/air_data/air_data.c ****  * with @f$\rho@f$ as air density.
 245:modules/air_data/air_data.c ****  * Using standard sea level air density @f$\rho_0@f$ gives you equivalent airspeed (EAS).
 246:modules/air_data/air_data.c ****  *
 247:modules/air_data/air_data.c ****  * @param q dynamic pressure in Pa
 248:modules/air_data/air_data.c ****  * @return equivalent airspeed in m/s
 249:modules/air_data/air_data.c ****  */
 250:modules/air_data/air_data.c **** float eas_from_dynamic_pressure(float q)
 251:modules/air_data/air_data.c **** {
 1114              		.loc 2 251 0
 1115              		.cfi_startproc
 1116              		@ args = 0, pretend = 0, frame = 0
 1117              		@ frame_needed = 0, uses_anonymous_args = 0
 1118              		@ link register save eliminated.
 1119              	.LVL103:
 252:modules/air_data/air_data.c ****   /* q (dynamic pressure) = total pressure - static pressure
 253:modules/air_data/air_data.c ****    * q = 1/2*rho*speed^2
 254:modules/air_data/air_data.c ****    * speed = sqrt(2*q/rho)
 255:modules/air_data/air_data.c ****    * With rho = air density at sea level.
 256:modules/air_data/air_data.c ****    * Lower bound of q at zero, no flying backwards guys...
 257:modules/air_data/air_data.c ****    */
 258:modules/air_data/air_data.c ****   const float two_div_rho_0 = 2.0 / PPRZ_ISA_AIR_DENSITY;
 259:modules/air_data/air_data.c ****   return sqrtf(Max(q * two_div_rho_0, 0));
 1120              		.loc 2 259 0
 1121 0000 07EE900A 		fmsr	s15, r0
 1122 0004 9FED087A 		flds	s14, .L68
 1123 0008 27EE877A 		fmuls	s14, s15, s14
 1124 000c DFED077A 		flds	s15, .L68+4
 1125 0010 B4EEE77A 		fcmpes	s14, s15
 1126 0014 F1EE10FA 		fmstat
 1127 0018 D4BF     		ite	le
 1128 001a 17EE900A 		fmrsle	r0, s15
 1129 001e 17EE100A 		fmrsgt	r0, s14
 1130              	.LVL104:
 1131 0022 FFF7FEBF 		b	sqrtf
 1132              	.LVL105:
 1133              	.L69:
 1134 0026 00BF     		.align	2
 1135              	.L68:
 1136 0028 C7FAD03F 		.word	1070660295
 1137 002c 00000000 		.word	0
 1138              		.cfi_endproc
 1139              	.LFE496:
 1141              		.section	.text.pressure_diff_cb,"ax",%progbits
 1142              		.align	1
 1143              		.thumb
 1144              		.thumb_func
 1146              	pressure_diff_cb:
 1147              	.LFB193:
 126:modules/air_data/air_data.c **** {
 1148              		.loc 2 126 0
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 0, uses_anonymous_args = 0
 1152              	.LVL106:
 1153 0000 10B5     		push	{r4, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 4, -8
 1156              		.cfi_offset 14, -4
 127:modules/air_data/air_data.c ****   air_data.differential = pressure;
 1157              		.loc 2 127 0
 1158 0002 094C     		ldr	r4, .L75
 128:modules/air_data/air_data.c ****   if (air_data.calc_airspeed) {
 1159              		.loc 2 128 0
 1160 0004 94F82130 		ldrb	r3, [r4, #33]	@ zero_extendqisi2
 127:modules/air_data/air_data.c ****   air_data.differential = pressure;
 1161              		.loc 2 127 0
 1162 0008 6160     		str	r1, [r4, #4]	@ float
 128:modules/air_data/air_data.c ****   if (air_data.calc_airspeed) {
 1163              		.loc 2 128 0
 1164 000a 5BB1     		cbz	r3, .L70
 1165              	.LVL107:
 1166              	.LBB72:
 1167              	.LBB73:
 129:modules/air_data/air_data.c ****     air_data.airspeed = eas_from_dynamic_pressure(air_data.differential);
 1168              		.loc 2 129 0
 1169 000c 0846     		mov	r0, r1	@ float
 1170              	.LVL108:
 1171 000e FFF7FEFF 		bl	eas_from_dynamic_pressure
 1172              	.LVL109:
 1173              	.LBB74:
 1174              	.LBB75:
 260:modules/air_data/air_data.c **** }
 261:modules/air_data/air_data.c **** 
 262:modules/air_data/air_data.c **** /**
 263:modules/air_data/air_data.c ****  * Calculate true airspeed (TAS) factor.
 264:modules/air_data/air_data.c ****  * TAS = tas_factor * EAS
 265:modules/air_data/air_data.c ****  *
 266:modules/air_data/air_data.c ****  * True airspeed (TAS) from equivalent airspeed (EAS):
 267:modules/air_data/air_data.c ****  * @f[\mbox{TAS} = \mbox{EAS} \sqrt{\frac{\rho_0}{\rho}}@f]
 268:modules/air_data/air_data.c ****  * and @f$ \frac{\rho_0}{\rho} = \frac{p_0T}{pT_0}@f$ where
 269:modules/air_data/air_data.c ****  * - @f$p@f$ is the air pressure at the flight condition
 270:modules/air_data/air_data.c ****  * - @f$p_0@f$ is the air pressure at sea level = 101325 Pa
 271:modules/air_data/air_data.c ****  * - @f$T@f$ is the air temperature at the flight condition
 272:modules/air_data/air_data.c ****  * - @f$T_0@f$ is the air temperature at sea level = 288.15 K
 273:modules/air_data/air_data.c ****  *
 274:modules/air_data/air_data.c ****  * @param p current air pressure in Pa
 275:modules/air_data/air_data.c ****  * @param t current air temperature in degrees Celcius
 276:modules/air_data/air_data.c ****  * @return tas factor
 277:modules/air_data/air_data.c ****  */
 278:modules/air_data/air_data.c **** float get_tas_factor(float p, float t)
 279:modules/air_data/air_data.c **** {
 280:modules/air_data/air_data.c ****   /* factor to convert EAS to TAS:
 281:modules/air_data/air_data.c ****    * sqrt(rho0 / rho) = sqrt((p0 * T) / (p * T0))
 282:modules/air_data/air_data.c ****    * convert input temp to Kelvin
 283:modules/air_data/air_data.c ****    */
 284:modules/air_data/air_data.c ****   return sqrtf((PPRZ_ISA_SEA_LEVEL_PRESSURE * (t + 274.15)) /
 285:modules/air_data/air_data.c ****                (p * PPRZ_ISA_SEA_LEVEL_TEMP));
 286:modules/air_data/air_data.c **** }
 287:modules/air_data/air_data.c **** 
 288:modules/air_data/air_data.c **** /**
 289:modules/air_data/air_data.c ****  * Calculate true airspeed from equivalent airspeed.
 290:modules/air_data/air_data.c ****  *
 291:modules/air_data/air_data.c ****  * True airspeed (TAS) from EAS:
 292:modules/air_data/air_data.c ****  * TAS = air_data.tas_factor * EAS
 293:modules/air_data/air_data.c ****  *
 294:modules/air_data/air_data.c ****  * @param eas equivalent airspeed (EAS) in m/s
 295:modules/air_data/air_data.c ****  * @return true airspeed in m/s
 296:modules/air_data/air_data.c ****  */
 297:modules/air_data/air_data.c **** float tas_from_eas(float eas)
 298:modules/air_data/air_data.c **** {
 299:modules/air_data/air_data.c ****   return air_data.tas_factor * eas;
 1175              		.loc 2 299 0
 1176 0012 94ED057A 		flds	s14, [r4, #20]
 1177              	.LBE75:
 1178              	.LBE74:
 129:modules/air_data/air_data.c ****     air_data.airspeed = eas_from_dynamic_pressure(air_data.differential);
 1179              		.loc 2 129 0
 1180 0016 E060     		str	r0, [r4, #12]	@ float
 1181 0018 07EE900A 		fmsr	s15, r0
 1182              	.LVL110:
 1183              	.LBB77:
 1184              	.LBB76:
 1185              		.loc 2 299 0
 1186 001c 67EE277A 		fmuls	s15, s14, s15
 1187              	.LBE76:
 1188              	.LBE77:
 130:modules/air_data/air_data.c ****     air_data.tas = tas_from_eas(air_data.airspeed);
 1189              		.loc 2 130 0
 1190 0020 C4ED047A 		fsts	s15, [r4, #16]
 1191              	.LVL111:
 1192              	.L70:
 1193 0024 10BD     		pop	{r4, pc}
 1194              	.L76:
 1195 0026 00BF     		.align	2
 1196              	.L75:
 1197 0028 00000000 		.word	.LANCHOR0
 1198              	.LBE73:
 1199              	.LBE72:
 1200              		.cfi_endproc
 1201              	.LFE193:
 1203              		.global	__aeabi_dadd
 1204              		.section	.text.get_tas_factor,"ax",%progbits
 1205              		.align	1
 1206              		.global	get_tas_factor
 1207              		.thumb
 1208              		.thumb_func
 1210              	get_tas_factor:
 1211              	.LFB497:
 279:modules/air_data/air_data.c **** {
 1212              		.loc 2 279 0
 1213              		.cfi_startproc
 1214              		@ args = 0, pretend = 0, frame = 0
 1215              		@ frame_needed = 0, uses_anonymous_args = 0
 1216              	.LVL112:
 1217 0000 70B5     		push	{r4, r5, r6, lr}
 1218              		.cfi_def_cfa_offset 16
 1219              		.cfi_offset 4, -16
 1220              		.cfi_offset 5, -12
 1221              		.cfi_offset 6, -8
 1222              		.cfi_offset 14, -4
 279:modules/air_data/air_data.c **** {
 1223              		.loc 2 279 0
 1224 0002 0646     		mov	r6, r0	@ float
 284:modules/air_data/air_data.c ****   return sqrtf((PPRZ_ISA_SEA_LEVEL_PRESSURE * (t + 274.15)) /
 1225              		.loc 2 284 0
 1226 0004 0846     		mov	r0, r1	@ float
 1227              	.LVL113:
 1228 0006 FFF7FEFF 		bl	__aeabi_f2d
 1229              	.LVL114:
 1230 000a 11A3     		adr	r3, .L78
 1231 000c D3E90023 		ldrd	r2, [r3]
 1232 0010 FFF7FEFF 		bl	__aeabi_dadd
 1233              	.LVL115:
 1234 0014 10A3     		adr	r3, .L78+8
 1235 0016 D3E90023 		ldrd	r2, [r3]
 1236 001a FFF7FEFF 		bl	__aeabi_dmul
 1237              	.LVL116:
 1238 001e 0446     		mov	r4, r0
 285:modules/air_data/air_data.c ****                (p * PPRZ_ISA_SEA_LEVEL_TEMP));
 1239              		.loc 2 285 0
 1240 0020 3046     		mov	r0, r6	@ float
 284:modules/air_data/air_data.c ****   return sqrtf((PPRZ_ISA_SEA_LEVEL_PRESSURE * (t + 274.15)) /
 1241              		.loc 2 284 0
 1242 0022 0D46     		mov	r5, r1
 285:modules/air_data/air_data.c ****                (p * PPRZ_ISA_SEA_LEVEL_TEMP));
 1243              		.loc 2 285 0
 1244 0024 FFF7FEFF 		bl	__aeabi_f2d
 1245              	.LVL117:
 1246 0028 0DA3     		adr	r3, .L78+16
 1247 002a D3E90023 		ldrd	r2, [r3]
 1248 002e FFF7FEFF 		bl	__aeabi_dmul
 1249              	.LVL118:
 1250 0032 0246     		mov	r2, r0
 1251 0034 0B46     		mov	r3, r1
 284:modules/air_data/air_data.c ****   return sqrtf((PPRZ_ISA_SEA_LEVEL_PRESSURE * (t + 274.15)) /
 1252              		.loc 2 284 0
 1253 0036 2046     		mov	r0, r4
 1254 0038 2946     		mov	r1, r5
 1255 003a FFF7FEFF 		bl	__aeabi_ddiv
 1256              	.LVL119:
 1257 003e FFF7FEFF 		bl	__aeabi_d2f
 1258              	.LVL120:
 286:modules/air_data/air_data.c **** }
 1259              		.loc 2 286 0
 1260 0042 BDE87040 		pop	{r4, r5, r6, lr}
 1261              	.LVL121:
 284:modules/air_data/air_data.c ****   return sqrtf((PPRZ_ISA_SEA_LEVEL_PRESSURE * (t + 274.15)) /
 1262              		.loc 2 284 0
 1263 0046 FFF7FEBF 		b	sqrtf
 1264              	.LVL122:
 1265              	.L79:
 1266 004a 00BFAFF3 		.align	3
 1266      0080
 1267              	.L78:
 1268 0050 66666666 		.word	1717986918
 1269 0054 66227140 		.word	1081156198
 1270 0058 00000000 		.word	0
 1271 005c D0BCF840 		.word	1090043088
 1272 0060 66666666 		.word	1717986918
 1273 0064 66027240 		.word	1081213542
 1274              		.cfi_endproc
 1275              	.LFE497:
 1277              		.section	.text.temperature_cb,"ax",%progbits
 1278              		.align	1
 1279              		.thumb
 1280              		.thumb_func
 1282              	temperature_cb:
 1283              	.LFB194:
 138:modules/air_data/air_data.c **** {
 1284              		.loc 2 138 0
 1285              		.cfi_startproc
 1286              		@ args = 0, pretend = 0, frame = 0
 1287              		@ frame_needed = 0, uses_anonymous_args = 0
 1288              	.LVL123:
 1289 0000 10B5     		push	{r4, lr}
 1290              		.cfi_def_cfa_offset 8
 1291              		.cfi_offset 4, -8
 1292              		.cfi_offset 14, -4
 139:modules/air_data/air_data.c ****   air_data.temperature = temp;
 1293              		.loc 2 139 0
 1294 0002 0E4C     		ldr	r4, .L92
 141:modules/air_data/air_data.c ****   if (air_data.calc_tas_factor && air_data.airspeed > 0 && baro_health_counter > 0 &&
 1295              		.loc 2 141 0
 1296 0004 94F82430 		ldrb	r3, [r4, #36]	@ zero_extendqisi2
 139:modules/air_data/air_data.c ****   air_data.temperature = temp;
 1297              		.loc 2 139 0
 1298 0008 A160     		str	r1, [r4, #8]	@ float
 141:modules/air_data/air_data.c ****   if (air_data.calc_tas_factor && air_data.airspeed > 0 && baro_health_counter > 0 &&
 1299              		.loc 2 141 0
 1300 000a ABB1     		cbz	r3, .L80
 141:modules/air_data/air_data.c ****   if (air_data.calc_tas_factor && air_data.airspeed > 0 && baro_health_counter > 0 &&
 1301              		.loc 2 141 0 is_stmt 0 discriminator 1
 1302 000c D4ED037A 		flds	s15, [r4, #12]
 1303 0010 F5EEC07A 		fcmpezs	s15
 1304 0014 F1EE10FA 		fmstat
 1305 0018 0EDD     		ble	.L80
 1306 001a 094B     		ldr	r3, .L92+4
 1307 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 001e 5BB1     		cbz	r3, .L80
 1309              	.LVL124:
 1310              	.LBB80:
 1311              	.LBB81:
 142:modules/air_data/air_data.c ****       air_data.pressure > 0) {
 1312              		.loc 2 142 0 is_stmt 1
 1313 0020 D4ED007A 		flds	s15, [r4]
 141:modules/air_data/air_data.c ****   if (air_data.calc_tas_factor && air_data.airspeed > 0 && baro_health_counter > 0 &&
 1314              		.loc 2 141 0
 1315 0024 F5EEC07A 		fcmpezs	s15
 1316 0028 F1EE10FA 		fmstat
 1317 002c 04DD     		ble	.L80
 143:modules/air_data/air_data.c ****     air_data.tas_factor = get_tas_factor(air_data.pressure, air_data.temperature);
 1318              		.loc 2 143 0
 1319 002e 17EE900A 		fmrs	r0, s15
 1320              	.LVL125:
 1321 0032 FFF7FEFF 		bl	get_tas_factor
 1322              	.LVL126:
 1323 0036 6061     		str	r0, [r4, #20]	@ float
 1324              	.LVL127:
 1325              	.L80:
 1326 0038 10BD     		pop	{r4, pc}
 1327              	.L93:
 1328 003a 00BF     		.align	2
 1329              	.L92:
 1330 003c 00000000 		.word	.LANCHOR0
 1331 0040 00000000 		.word	.LANCHOR1
 1332              	.LBE81:
 1333              	.LBE80:
 1334              		.cfi_endproc
 1335              	.LFE194:
 1337              		.section	.text.tas_from_eas,"ax",%progbits
 1338              		.align	1
 1339              		.global	tas_from_eas
 1340              		.thumb
 1341              		.thumb_func
 1343              	tas_from_eas:
 1344              	.LFB498:
 298:modules/air_data/air_data.c **** {
 1345              		.loc 2 298 0
 1346              		.cfi_startproc
 1347              		@ args = 0, pretend = 0, frame = 0
 1348              		@ frame_needed = 0, uses_anonymous_args = 0
 1349              		@ link register save eliminated.
 1350              	.LVL128:
 1351              		.loc 2 299 0
 1352 0000 044B     		ldr	r3, .L95
 300:modules/air_data/air_data.c **** }
 1353              		.loc 2 300 0
 1354 0002 07EE100A 		fmsr	s14, r0
 299:modules/air_data/air_data.c ****   return air_data.tas_factor * eas;
 1355              		.loc 2 299 0
 1356 0006 D3ED057A 		flds	s15, [r3, #20]
 1357              		.loc 2 300 0
 1358 000a 27EE277A 		fmuls	s14, s14, s15
 1359 000e 17EE100A 		fmrs	r0, s14
 1360              	.LVL129:
 1361 0012 7047     		bx	lr
 1362              	.L96:
 1363              		.align	2
 1364              	.L95:
 1365 0014 00000000 		.word	.LANCHOR0
 1366              		.cfi_endproc
 1367              	.LFE498:
 1369              		.section	.text.tas_from_dynamic_pressure,"ax",%progbits
 1370              		.align	1
 1371              		.global	tas_from_dynamic_pressure
 1372              		.thumb
 1373              		.thumb_func
 1375              	tas_from_dynamic_pressure:
 1376              	.LFB499:
 301:modules/air_data/air_data.c **** 
 302:modules/air_data/air_data.c **** /**
 303:modules/air_data/air_data.c ****  * Calculate true airspeed from dynamic pressure.
 304:modules/air_data/air_data.c ****  * Dynamic pressure @f$q@f$ (also called impact pressure) is the
 305:modules/air_data/air_data.c ****  * difference between total(pitot) and static pressure.
 306:modules/air_data/air_data.c ****  *
 307:modules/air_data/air_data.c ****  * @param q dynamic pressure in Pa
 308:modules/air_data/air_data.c ****  * @return true airspeed in m/s
 309:modules/air_data/air_data.c ****  */
 310:modules/air_data/air_data.c **** float tas_from_dynamic_pressure(float q)
 311:modules/air_data/air_data.c **** {
 1377              		.loc 2 311 0
 1378              		.cfi_startproc
 1379              		@ args = 0, pretend = 0, frame = 0
 1380              		@ frame_needed = 0, uses_anonymous_args = 0
 1381              	.LVL130:
 1382 0000 08B5     		push	{r3, lr}
 1383              		.cfi_def_cfa_offset 8
 1384              		.cfi_offset 3, -8
 1385              		.cfi_offset 14, -4
 312:modules/air_data/air_data.c ****   return tas_from_eas(eas_from_dynamic_pressure(q));
 1386              		.loc 2 312 0
 1387 0002 FFF7FEFF 		bl	eas_from_dynamic_pressure
 1388              	.LVL131:
 1389              	.LBB82:
 1390              	.LBB83:
 299:modules/air_data/air_data.c ****   return air_data.tas_factor * eas;
 1391              		.loc 2 299 0
 1392 0006 054B     		ldr	r3, .L98
 1393              	.LBE83:
 1394              	.LBE82:
 313:modules/air_data/air_data.c **** }
 1395              		.loc 2 313 0
 1396 0008 07EE100A 		fmsr	s14, r0
 1397              	.LBB85:
 1398              	.LBB84:
 299:modules/air_data/air_data.c ****   return air_data.tas_factor * eas;
 1399              		.loc 2 299 0
 1400 000c D3ED057A 		flds	s15, [r3, #20]
 1401              	.LBE84:
 1402              	.LBE85:
 1403              		.loc 2 313 0
 1404 0010 27EE277A 		fmuls	s14, s14, s15
 1405 0014 17EE100A 		fmrs	r0, s14
 1406              	.LVL132:
 1407 0018 08BD     		pop	{r3, pc}
 1408              	.L99:
 1409 001a 00BF     		.align	2
 1410              	.L98:
 1411 001c 00000000 		.word	.LANCHOR0
 1412              		.cfi_endproc
 1413              	.LFE499:
 1415              		.global	air_data
 1416              		.section	.bss.pressure_abs_ev,"aw",%nobits
 1417              		.align	2
 1418              		.set	.LANCHOR2,. + 0
 1421              	pressure_abs_ev:
 1422 0000 00000000 		.space	12
 1422      00000000 
 1422      00000000 
 1423              		.section	.bss.air_data,"aw",%nobits
 1424              		.align	2
 1425              		.set	.LANCHOR0,. + 0
 1428              	air_data:
 1429 0000 00000000 		.space	56
 1429      00000000 
 1429      00000000 
 1429      00000000 
 1429      00000000 
 1430              		.section	.rodata.str1.1,"aMS",%progbits,1
 1431              	.LC0:
 1432 0000 414D534C 		.ascii	"AMSL\000"
 1432      00
 1433              	.LC1:
 1434 0005 4149525F 		.ascii	"AIR_DATA\000"
 1434      44415441 
 1434      00
 1435              	.LC2:
 1436 000e 4241524F 		.ascii	"BARO_RAW\000"
 1436      5F524157 
 1436      00
 1437              		.section	.bss.temperature_ev,"aw",%nobits
 1438              		.align	2
 1439              		.set	.LANCHOR4,. + 0
 1442              	temperature_ev:
 1443 0000 00000000 		.space	12
 1443      00000000 
 1443      00000000 
 1444              		.section	.bss.baro_health_counter,"aw",%nobits
 1445              		.set	.LANCHOR1,. + 0
 1448              	baro_health_counter:
 1449 0000 00       		.space	1
 1450              		.section	.bss.pressure_diff_ev,"aw",%nobits
 1451              		.align	2
 1452              		.set	.LANCHOR3,. + 0
 1455              	pressure_diff_ev:
 1456 0000 00000000 		.space	12
 1456      00000000 
 1456      00000000 
 1457              		.text
 1458              	.Letext0:
 1459              		.file 6 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 1460              		.file 7 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 1461              		.file 8 "/home/lsk/paparazzi/sw/include/std.h"
 1462              		.file 9 "./modules/air_data/air_data.h"
 1463              		.file 10 "./math/pprz_algebra_int.h"
 1464              		.file 11 "./math/pprz_algebra_float.h"
 1465              		.file 12 "./math/pprz_geodetic_int.h"
 1466              		.file 13 "./mcu_periph/sys_time.h"
 1467              		.file 14 "./mcu_periph/link_device.h"
 1468              		.file 15 "./mcu_periph/uart.h"
 1469              		.file 16 "./subsystems/gps/gps_ubx.h"
 1470              		.file 17 "./subsystems/gps.h"
 1471              		.file 18 "./subsystems/abi_common.h"
 1472              		.file 19 "./math/pprz_geodetic_float.h"
 1473              		.file 20 "./math/pprz_orientation_conversion.h"
 1474              		.file 21 "./subsystems/datalink/transport.h"
 1475              		.file 22 "./subsystems/datalink/xbee.h"
 1476              		.file 23 "./subsystems/datalink/telemetry_common.h"
 1477              		.file 24 "./subsystems/datalink/datalink.h"
 1478              		.file 25 "./subsystems/datalink/w5100.h"
 1479              		.file 26 "/home/lsk/paparazzi/var/aircrafts/kroozsd_lsk/ap/generated/periodic_telemetry.h"
 1480              		.file 27 "./subsystems/datalink/telemetry.h"
 1481              		.file 28 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 air_data.c
     /tmp/cctuJ6ni.s:20     .text.stateGetPositionLla_f:00000000 $t
     /tmp/cctuJ6ni.s:24     .text.stateGetPositionLla_f:00000000 stateGetPositionLla_f
     /tmp/cctuJ6ni.s:50     .text.stateGetPositionLla_f:00000014 $d
     /tmp/cctuJ6ni.s:61     .text.pressure_abs_cb:00000000 $t
     /tmp/cctuJ6ni.s:65     .text.pressure_abs_cb:00000000 pressure_abs_cb
     /tmp/cctuJ6ni.s:300    .text.pressure_abs_cb:00000158 $d
     /tmp/cctuJ6ni.s:317    .text.send_amsl:00000000 $t
     /tmp/cctuJ6ni.s:321    .text.send_amsl:00000000 send_amsl
     /tmp/cctuJ6ni.s:487    .text.send_amsl:000000d4 $d
     /tmp/cctuJ6ni.s:494    .text.send_air_data:00000000 $t
     /tmp/cctuJ6ni.s:498    .text.send_air_data:00000000 send_air_data
     /tmp/cctuJ6ni.s:697    .text.send_air_data:00000114 $d
     /tmp/cctuJ6ni.s:703    .text.send_baro_raw:00000000 $t
     /tmp/cctuJ6ni.s:707    .text.send_baro_raw:00000000 send_baro_raw
     /tmp/cctuJ6ni.s:851    .text.send_baro_raw:000000b0 $d
     /tmp/cctuJ6ni.s:857    .text.air_data_init:00000000 $t
     /tmp/cctuJ6ni.s:862    .text.air_data_init:00000000 air_data_init
     /tmp/cctuJ6ni.s:1014   .text.air_data_init:00000094 $d
     /tmp/cctuJ6ni.s:1146   .text.pressure_diff_cb:00000000 pressure_diff_cb
     /tmp/cctuJ6ni.s:1282   .text.temperature_cb:00000000 temperature_cb
     /tmp/cctuJ6ni.s:1036   .text.air_data_get_amsl:00000000 $t
     /tmp/cctuJ6ni.s:1041   .text.air_data_get_amsl:00000000 air_data_get_amsl
     /tmp/cctuJ6ni.s:1068   .text.air_data_get_amsl:00000018 $d
     /tmp/cctuJ6ni.s:1073   .text.air_data_periodic:00000000 $t
     /tmp/cctuJ6ni.s:1078   .text.air_data_periodic:00000000 air_data_periodic
     /tmp/cctuJ6ni.s:1101   .text.air_data_periodic:00000014 $d
     /tmp/cctuJ6ni.s:1107   .text.eas_from_dynamic_pressure:00000000 $t
     /tmp/cctuJ6ni.s:1112   .text.eas_from_dynamic_pressure:00000000 eas_from_dynamic_pressure
     /tmp/cctuJ6ni.s:1136   .text.eas_from_dynamic_pressure:00000028 $d
     /tmp/cctuJ6ni.s:1142   .text.pressure_diff_cb:00000000 $t
     /tmp/cctuJ6ni.s:1197   .text.pressure_diff_cb:00000028 $d
     /tmp/cctuJ6ni.s:1205   .text.get_tas_factor:00000000 $t
     /tmp/cctuJ6ni.s:1210   .text.get_tas_factor:00000000 get_tas_factor
     /tmp/cctuJ6ni.s:1268   .text.get_tas_factor:00000050 $d
     /tmp/cctuJ6ni.s:1278   .text.temperature_cb:00000000 $t
     /tmp/cctuJ6ni.s:1330   .text.temperature_cb:0000003c $d
     /tmp/cctuJ6ni.s:1338   .text.tas_from_eas:00000000 $t
     /tmp/cctuJ6ni.s:1343   .text.tas_from_eas:00000000 tas_from_eas
     /tmp/cctuJ6ni.s:1365   .text.tas_from_eas:00000014 $d
     /tmp/cctuJ6ni.s:1370   .text.tas_from_dynamic_pressure:00000000 $t
     /tmp/cctuJ6ni.s:1375   .text.tas_from_dynamic_pressure:00000000 tas_from_dynamic_pressure
     /tmp/cctuJ6ni.s:1411   .text.tas_from_dynamic_pressure:0000001c $d
     /tmp/cctuJ6ni.s:1428   .bss.air_data:00000000 air_data
     /tmp/cctuJ6ni.s:1417   .bss.pressure_abs_ev:00000000 $d
     /tmp/cctuJ6ni.s:1421   .bss.pressure_abs_ev:00000000 pressure_abs_ev
     /tmp/cctuJ6ni.s:1424   .bss.air_data:00000000 $d
     /tmp/cctuJ6ni.s:1438   .bss.temperature_ev:00000000 $d
     /tmp/cctuJ6ni.s:1442   .bss.temperature_ev:00000000 temperature_ev
     /tmp/cctuJ6ni.s:1448   .bss.baro_health_counter:00000000 baro_health_counter
     /tmp/cctuJ6ni.s:1449   .bss.baro_health_counter:00000000 $d
     /tmp/cctuJ6ni.s:1451   .bss.pressure_diff_ev:00000000 $d
     /tmp/cctuJ6ni.s:1455   .bss.pressure_diff_ev:00000000 pressure_diff_ev
                     .debug_frame:00000010 $d
     /tmp/cctuJ6ni.s:316    .text.pressure_abs_cb:0000018c $t
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.1a82a3cc35cb0a04319c41bcf41d2a02
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.sys_time.h.40.92f532b5cea824e0ec5ea845e7275d34
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.gps_ubx.h.36.d4183b0b154441c99ce352aae50967b5
                           .group:00000000 wm4.gps.h.41.79d1c69e44dd427f855100ff8e932fbe
                           .group:00000000 wm4.abi_sender_ids.h.29.e18315036ac250e614ad78ed4bcb93da
                           .group:00000000 wm4.abi_common.h.46.0bb6611719a01752e88980049d8d5177
                           .group:00000000 wm4.abi_messages.h.14.a63139ccdcd5241f8ab897fe12fc8134
                           .group:00000000 wm4.pprz_isa.h.39.3bb4e21976c78cd4235af3c11d87136f
                           .group:00000000 wm4.pprz_orientation_conversion.h.57.c0c8f5187bc056807e507011653281f4
                           .group:00000000 wm4.state.h.65.b18954aacb3801ec3e27b4e857d620d3
                           .group:00000000 wm4.airframe.h.5.1b65f22e2c90217dfc42bdae27fe483a
                           .group:00000000 wm4.actuators_pwm_arch.h.27.274c2fe245167861139e341fd233f9ea
                           .group:00000000 wm4.airframe.h.14.f46e30d413878b482f16a5abf2127a4b
                           .group:00000000 wm4.transport.h.27.9215bbc09b6a8d08d228c20740408d47
                           .group:00000000 wm4.messages.h.9.6fd66bc411dd06866b086a1b57e0f309
                           .group:00000000 wm4.modules.h.5.be642dc363672736d1d1e45a75aad0cf
                           .group:00000000 wm4.gps_ubx_ucenter.h.29.30a3f1ed020dbc7085e412c29746d829
                           .group:00000000 wm4.pprz_algebra_double.h.32.ffddb69f4b2468d251e675e232b5bba1
                           .group:00000000 wm4.modules.h.24.27c8342510f0f30e64a55f4e4778474a
                           .group:00000000 wm4.datalink.h.28.0d234a7c203533b2ec538be3e18eddf4
                           .group:00000000 wm4.dl_protocol.h.5.a12fe27a4b4a3cbb46fbca8acf33e3dd
                           .group:00000000 wm4.datalink.h.46.36a5e0f36fb7d0784f1e7af767537c84
                           .group:00000000 wm4.pprz_transport.h.57.167db0ee96032e142f5d6e570b3339aa
                           .group:00000000 wm4.xbee24.h.29.a6677f8bcb71d3b07e11290a2de0e179
                           .group:00000000 wm4.xbee.h.41.f36be817f95b74f883aef9324b53817b
                           .group:00000000 wm4.w5100.h.29.d3529bed8de657ab3944b343be960f10
                           .group:00000000 wm4.downlink.h.76.41034157e32fc9012166fd95ec7418fc
                           .group:00000000 wm4.periodic_telemetry.h.11.45a44616e39ae884c5a68828f6bf143a

UNDEFINED SYMBOLS
stateCalcPositionLla_f
state
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_dsub
__aeabi_d2f
pow
powf
register_periodic_telemetry
abi_queues
pprz_telemetry
sqrtf
__aeabi_dadd
