   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"guidance_v.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.stateGetPositionNed_i,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	stateGetPositionNed_i:
  25              	.LFB82:
  26              		.file 1 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: degrees*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   uint32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i *ltp_def)
 441:./state.h     **** {
 442:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 443:./state.h     ****   /* convert to float */
 444:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 445:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 446:./state.h     ****   HIGH_RES_RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 447:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 448:./state.h     **** 
 449:./state.h     ****   /* clear bits for all local frame representations */
 450:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 451:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 453:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 454:./state.h     **** 
 455:./state.h     ****   state.ned_initialized_i = TRUE;
 456:./state.h     ****   state.ned_initialized_f = TRUE;
 457:./state.h     **** }
 458:./state.h     **** 
 459:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 460:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f *utm_def)
 461:./state.h     **** {
 462:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 463:./state.h     ****   state.utm_initialized_f = TRUE;
 464:./state.h     **** 
 465:./state.h     ****   /* clear bits for all local frame representations */
 466:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 467:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 468:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 469:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 470:./state.h     **** }
 471:./state.h     **** /*******************************************************************************
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 474:./state.h     ****  *                                                                             *
 475:./state.h     ****  ******************************************************************************/
 476:./state.h     **** 
 477:./state.h     **** /************* declaration of transformation functions ************/
 478:./state.h     **** extern void stateCalcPositionEcef_i(void);
 479:./state.h     **** extern void stateCalcPositionNed_i(void);
 480:./state.h     **** extern void stateCalcPositionEnu_i(void);
 481:./state.h     **** extern void stateCalcPositionLla_i(void);
 482:./state.h     **** extern void stateCalcPositionUtm_f(void);
 483:./state.h     **** extern void stateCalcPositionEcef_f(void);
 484:./state.h     **** extern void stateCalcPositionNed_f(void);
 485:./state.h     **** extern void stateCalcPositionEnu_f(void);
 486:./state.h     **** extern void stateCalcPositionLla_f(void);
 487:./state.h     **** 
 488:./state.h     **** /*********************** validity test functions ******************/
 489:./state.h     **** 
 490:./state.h     **** /// Test if local coordinates are valid.
 491:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void)
 492:./state.h     **** {
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 495:./state.h     **** }
 496:./state.h     **** 
 497:./state.h     **** /// Test if global coordinates are valid.
 498:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void)
 499:./state.h     **** {
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 501:./state.h     **** }
 502:./state.h     **** 
 503:./state.h     **** /************************ Set functions ****************************/
 504:./state.h     **** 
 505:./state.h     **** /// Set position from ECEF coordinates (int).
 506:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i *ecef_pos)
 507:./state.h     **** {
 508:./state.h     ****   VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 509:./state.h     ****   /* clear bits for all position representations and only set the new one */
 510:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 511:./state.h     **** }
 512:./state.h     **** 
 513:./state.h     **** /// Set position from local NED coordinates (int).
 514:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i *ned_pos)
 515:./state.h     **** {
 516:./state.h     ****   VECT3_COPY(state.ned_pos_i, *ned_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from local ENU coordinates (int).
 522:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i *enu_pos)
 523:./state.h     **** {
 524:./state.h     ****   VECT3_COPY(state.enu_pos_i, *enu_pos);
 525:./state.h     ****   /* clear bits for all position representations and only set the new one */
 526:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 527:./state.h     **** }
 528:./state.h     **** 
 529:./state.h     **** /// Set position from LLA coordinates (int).
 530:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i *lla_pos)
 531:./state.h     **** {
 532:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 533:./state.h     ****   /* clear bits for all position representations and only set the new one */
 534:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 535:./state.h     **** }
 536:./state.h     **** 
 537:./state.h     **** /// Set multiple position coordinates (int).
 538:./state.h     **** static inline void stateSetPosition_i(
 539:./state.h     ****   struct EcefCoor_i *ecef_pos,
 540:./state.h     ****   struct NedCoor_i *ned_pos,
 541:./state.h     ****   struct EnuCoor_i *enu_pos,
 542:./state.h     ****   struct LlaCoor_i *lla_pos)
 543:./state.h     **** {
 544:./state.h     ****   /* clear all status bit */
 545:./state.h     ****   state.pos_status = 0;
 546:./state.h     ****   if (ecef_pos != NULL) {
 547:./state.h     ****     VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 548:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 549:./state.h     ****   }
 550:./state.h     ****   if (ned_pos != NULL) {
 551:./state.h     ****     VECT3_COPY(state.ned_pos_i, *ned_pos);
 552:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 553:./state.h     ****   }
 554:./state.h     ****   if (enu_pos != NULL) {
 555:./state.h     ****     VECT3_COPY(state.enu_pos_i, *enu_pos);
 556:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 557:./state.h     ****   }
 558:./state.h     ****   if (lla_pos != NULL) {
 559:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 560:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 561:./state.h     ****   }
 562:./state.h     **** }
 563:./state.h     **** 
 564:./state.h     **** /// Set position from UTM coordinates (float).
 565:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f *utm_pos)
 566:./state.h     **** {
 567:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 568:./state.h     ****   /* clear bits for all position representations and only set the new one */
 569:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 570:./state.h     **** }
 571:./state.h     **** 
 572:./state.h     **** /// Set position from ECEF coordinates (float).
 573:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f *ecef_pos)
 574:./state.h     **** {
 575:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 576:./state.h     ****   /* clear bits for all position representations and only set the new one */
 577:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 578:./state.h     **** }
 579:./state.h     **** 
 580:./state.h     **** /// Set position from local NED coordinates (float).
 581:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f *ned_pos)
 582:./state.h     **** {
 583:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 584:./state.h     ****   /* clear bits for all position representations and only set the new one */
 585:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 586:./state.h     **** }
 587:./state.h     **** 
 588:./state.h     **** /// Set position from local ENU coordinates (float).
 589:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f *enu_pos)
 590:./state.h     **** {
 591:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 592:./state.h     ****   /* clear bits for all position representations and only set the new one */
 593:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 594:./state.h     **** }
 595:./state.h     **** 
 596:./state.h     **** /// Set position from LLA coordinates (float).
 597:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f *lla_pos)
 598:./state.h     **** {
 599:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 600:./state.h     ****   /* clear bits for all position representations and only set the new one */
 601:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 602:./state.h     **** }
 603:./state.h     **** 
 604:./state.h     **** /// Set multiple position coordinates (float).
 605:./state.h     **** static inline void stateSetPosition_f(
 606:./state.h     ****   struct EcefCoor_f *ecef_pos,
 607:./state.h     ****   struct NedCoor_f *ned_pos,
 608:./state.h     ****   struct EnuCoor_f *enu_pos,
 609:./state.h     ****   struct LlaCoor_f *lla_pos,
 610:./state.h     ****   struct UtmCoor_f *utm_pos)
 611:./state.h     **** {
 612:./state.h     ****   /* clear all status bit */
 613:./state.h     ****   state.pos_status = 0;
 614:./state.h     ****   if (ecef_pos != NULL) {
 615:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 616:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 617:./state.h     ****   }
 618:./state.h     ****   if (ned_pos != NULL) {
 619:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 620:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 621:./state.h     ****   }
 622:./state.h     ****   if (enu_pos != NULL) {
 623:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 624:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 625:./state.h     ****   }
 626:./state.h     ****   if (lla_pos != NULL) {
 627:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 628:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 629:./state.h     ****   }
 630:./state.h     ****   if (utm_pos != NULL) {
 631:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 632:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 633:./state.h     ****   }
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /************************ Get functions ****************************/
 637:./state.h     **** 
 638:./state.h     **** /// Get position in ECEF coordinates (int).
 639:./state.h     **** static inline struct EcefCoor_i *stateGetPositionEcef_i(void)
 640:./state.h     **** {
 641:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I)) {
 642:./state.h     ****     stateCalcPositionEcef_i();
 643:./state.h     ****   }
 644:./state.h     ****   return &state.ecef_pos_i;
 645:./state.h     **** }
 646:./state.h     **** 
 647:./state.h     **** /// Get position in local NED coordinates (int).
 648:./state.h     **** static inline struct NedCoor_i *stateGetPositionNed_i(void)
 649:./state.h     **** {
  27              		.loc 1 649 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 650:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I)) {
  35              		.loc 1 650 0
  36 0002 044B     		ldr	r3, .L4
  37 0004 1B88     		ldrh	r3, [r3]
  38 0006 9B07     		lsls	r3, r3, #30
  39 0008 01D4     		bmi	.L2
 651:./state.h     ****     stateCalcPositionNed_i();
  40              		.loc 1 651 0
  41 000a FFF7FEFF 		bl	stateCalcPositionNed_i
  42              	.LVL0:
  43              	.L2:
 652:./state.h     ****   }
 653:./state.h     ****   return &state.ned_pos_i;
 654:./state.h     **** }
  44              		.loc 1 654 0
  45 000e 0248     		ldr	r0, .L4+4
  46 0010 08BD     		pop	{r3, pc}
  47              	.L5:
  48 0012 00BF     		.align	2
  49              	.L4:
  50 0014 00000000 		.word	state
  51 0018 60000000 		.word	state+96
  52              		.cfi_endproc
  53              	.LFE82:
  55              		.section	.text.stateGetSpeedNed_i,"ax",%progbits
  56              		.align	1
  57              		.thumb
  58              		.thumb_func
  60              	stateGetSpeedNed_i:
  61              	.LFB98:
 655:./state.h     **** 
 656:./state.h     **** /// Get position in local ENU coordinates (int).
 657:./state.h     **** static inline struct EnuCoor_i *stateGetPositionEnu_i(void)
 658:./state.h     **** {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I)) {
 660:./state.h     ****     stateCalcPositionEnu_i();
 661:./state.h     ****   }
 662:./state.h     ****   return &state.enu_pos_i;
 663:./state.h     **** }
 664:./state.h     **** 
 665:./state.h     **** /// Get position in LLA coordinates (int).
 666:./state.h     **** static inline struct LlaCoor_i *stateGetPositionLla_i(void)
 667:./state.h     **** {
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 669:./state.h     ****     stateCalcPositionLla_i();
 670:./state.h     ****   }
 671:./state.h     ****   return &state.lla_pos_i;
 672:./state.h     **** }
 673:./state.h     **** 
 674:./state.h     **** /// Get position in UTM coordinates (float).
 675:./state.h     **** static inline struct UtmCoor_f *stateGetPositionUtm_f(void)
 676:./state.h     **** {
 677:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F)) {
 678:./state.h     ****     stateCalcPositionUtm_f();
 679:./state.h     ****   }
 680:./state.h     ****   return &state.utm_pos_f;
 681:./state.h     **** }
 682:./state.h     **** 
 683:./state.h     **** /// Get position in ECEF coordinates (float).
 684:./state.h     **** static inline struct EcefCoor_f *stateGetPositionEcef_f(void)
 685:./state.h     **** {
 686:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F)) {
 687:./state.h     ****     stateCalcPositionEcef_f();
 688:./state.h     ****   }
 689:./state.h     ****   return &state.ecef_pos_f;
 690:./state.h     **** }
 691:./state.h     **** 
 692:./state.h     **** /// Get position in local NED coordinates (float).
 693:./state.h     **** static inline struct NedCoor_f *stateGetPositionNed_f(void)
 694:./state.h     **** {
 695:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F)) {
 696:./state.h     ****     stateCalcPositionNed_f();
 697:./state.h     ****   }
 698:./state.h     ****   return &state.ned_pos_f;
 699:./state.h     **** }
 700:./state.h     **** 
 701:./state.h     **** /// Get position in local ENU coordinates (float).
 702:./state.h     **** static inline struct EnuCoor_f *stateGetPositionEnu_f(void)
 703:./state.h     **** {
 704:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F)) {
 705:./state.h     ****     stateCalcPositionEnu_f();
 706:./state.h     ****   }
 707:./state.h     ****   return &state.enu_pos_f;
 708:./state.h     **** }
 709:./state.h     **** 
 710:./state.h     **** /// Get position in LLA coordinates (float).
 711:./state.h     **** static inline struct LlaCoor_f *stateGetPositionLla_f(void)
 712:./state.h     **** {
 713:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_F)) {
 714:./state.h     ****     stateCalcPositionLla_f();
 715:./state.h     ****   }
 716:./state.h     ****   return &state.lla_pos_f;
 717:./state.h     **** }
 718:./state.h     **** 
 719:./state.h     **** /** @}*/
 720:./state.h     **** 
 721:./state.h     **** 
 722:./state.h     **** 
 723:./state.h     **** /******************************************************************************
 724:./state.h     ****  *                                                                            *
 725:./state.h     ****  * Set and Get functions for the SPEED representations                        *
 726:./state.h     ****  *                                                                            *
 727:./state.h     ****  *****************************************************************************/
 728:./state.h     **** /** @addtogroup state_velocity
 729:./state.h     ****  *  @{ */
 730:./state.h     **** 
 731:./state.h     **** /************* declaration of transformation functions ************/
 732:./state.h     **** extern void stateCalcSpeedNed_i(void);
 733:./state.h     **** extern void stateCalcSpeedEnu_i(void);
 734:./state.h     **** extern void stateCalcSpeedEcef_i(void);
 735:./state.h     **** extern void stateCalcHorizontalSpeedNorm_i(void);
 736:./state.h     **** extern void stateCalcHorizontalSpeedDir_i(void);
 737:./state.h     **** extern void stateCalcSpeedNed_f(void);
 738:./state.h     **** extern void stateCalcSpeedEnu_f(void);
 739:./state.h     **** extern void stateCalcSpeedEcef_f(void);
 740:./state.h     **** extern void stateCalcHorizontalSpeedNorm_f(void);
 741:./state.h     **** extern void stateCalcHorizontalSpeedDir_f(void);
 742:./state.h     **** 
 743:./state.h     **** /************************ Set functions ****************************/
 744:./state.h     **** 
 745:./state.h     **** /// Set ground speed in local NED coordinates (int).
 746:./state.h     **** static inline void stateSetSpeedNed_i(struct NedCoor_i *ned_speed)
 747:./state.h     **** {
 748:./state.h     ****   VECT3_COPY(state.ned_speed_i, *ned_speed);
 749:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 750:./state.h     ****   state.speed_status = (1 << SPEED_NED_I);
 751:./state.h     **** }
 752:./state.h     **** 
 753:./state.h     **** /// Set ground speed in local ENU coordinates (int).
 754:./state.h     **** static inline void stateSetSpeedEnu_i(struct EnuCoor_i *enu_speed)
 755:./state.h     **** {
 756:./state.h     ****   VECT3_COPY(state.enu_speed_i, *enu_speed);
 757:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 758:./state.h     ****   state.speed_status = (1 << SPEED_ENU_I);
 759:./state.h     **** }
 760:./state.h     **** 
 761:./state.h     **** /// Set ground speed in ECEF coordinates (int).
 762:./state.h     **** static inline void stateSetSpeedEcef_i(struct EcefCoor_i *ecef_speed)
 763:./state.h     **** {
 764:./state.h     ****   VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 765:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 766:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_I);
 767:./state.h     **** }
 768:./state.h     **** 
 769:./state.h     **** /// Set multiple speed coordinates (int).
 770:./state.h     **** static inline void stateSetSpeed_i(
 771:./state.h     ****   struct EcefCoor_i *ecef_speed,
 772:./state.h     ****   struct NedCoor_i *ned_speed,
 773:./state.h     ****   struct EnuCoor_i *enu_speed)
 774:./state.h     **** {
 775:./state.h     ****   /* clear all status bit */
 776:./state.h     ****   state.speed_status = 0;
 777:./state.h     ****   if (ecef_speed != NULL) {
 778:./state.h     ****     VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 779:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_I);
 780:./state.h     ****   }
 781:./state.h     ****   if (ned_speed != NULL) {
 782:./state.h     ****     VECT3_COPY(state.ned_speed_i, *ned_speed);
 783:./state.h     ****     state.speed_status |= (1 << SPEED_NED_I);
 784:./state.h     ****   }
 785:./state.h     ****   if (enu_speed != NULL) {
 786:./state.h     ****     VECT3_COPY(state.enu_speed_i, *enu_speed);
 787:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_I);
 788:./state.h     ****   }
 789:./state.h     **** }
 790:./state.h     **** 
 791:./state.h     **** /// Set ground speed in local NED coordinates (float).
 792:./state.h     **** static inline void stateSetSpeedNed_f(struct NedCoor_f *ned_speed)
 793:./state.h     **** {
 794:./state.h     ****   VECT3_COPY(state.ned_speed_f, *ned_speed);
 795:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 796:./state.h     ****   state.speed_status = (1 << SPEED_NED_F);
 797:./state.h     **** }
 798:./state.h     **** 
 799:./state.h     **** /// Set ground speed in local ENU coordinates (float).
 800:./state.h     **** static inline void stateSetSpeedEnu_f(struct EnuCoor_f *enu_speed)
 801:./state.h     **** {
 802:./state.h     ****   VECT3_COPY(state.enu_speed_f, *enu_speed);
 803:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 804:./state.h     ****   state.speed_status = (1 << SPEED_ENU_F);
 805:./state.h     **** }
 806:./state.h     **** 
 807:./state.h     **** /// Set ground speed in ECEF coordinates (float).
 808:./state.h     **** static inline void stateSetSpeedEcef_f(struct EcefCoor_f *ecef_speed)
 809:./state.h     **** {
 810:./state.h     ****   VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 811:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 812:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_F);
 813:./state.h     **** }
 814:./state.h     **** 
 815:./state.h     **** /// Set multiple speed coordinates (float).
 816:./state.h     **** static inline void stateSetSpeed_f(
 817:./state.h     ****   struct EcefCoor_f *ecef_speed,
 818:./state.h     ****   struct NedCoor_f *ned_speed,
 819:./state.h     ****   struct EnuCoor_f *enu_speed)
 820:./state.h     **** {
 821:./state.h     ****   /* clear all status bit */
 822:./state.h     ****   state.speed_status = 0;
 823:./state.h     ****   if (ecef_speed != NULL) {
 824:./state.h     ****     VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 825:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_F);
 826:./state.h     ****   }
 827:./state.h     ****   if (ned_speed != NULL) {
 828:./state.h     ****     VECT3_COPY(state.ned_speed_f, *ned_speed);
 829:./state.h     ****     state.speed_status |= (1 << SPEED_NED_F);
 830:./state.h     ****   }
 831:./state.h     ****   if (enu_speed != NULL) {
 832:./state.h     ****     VECT3_COPY(state.enu_speed_f, *enu_speed);
 833:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_F);
 834:./state.h     ****   }
 835:./state.h     **** }
 836:./state.h     **** 
 837:./state.h     **** /************************ Get functions ****************************/
 838:./state.h     **** 
 839:./state.h     **** /// Get ground speed in local NED coordinates (int).
 840:./state.h     **** static inline struct NedCoor_i *stateGetSpeedNed_i(void)
 841:./state.h     **** {
  62              		.loc 1 841 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66 0000 08B5     		push	{r3, lr}
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 3, -8
  69              		.cfi_offset 14, -4
 842:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_I)) {
  70              		.loc 1 842 0
  71 0002 044B     		ldr	r3, .L8
  72 0004 B3F81431 		ldrh	r3, [r3, #276]
  73 0008 9B07     		lsls	r3, r3, #30
  74 000a 01D4     		bmi	.L7
 843:./state.h     ****     stateCalcSpeedNed_i();
  75              		.loc 1 843 0
  76 000c FFF7FEFF 		bl	stateCalcSpeedNed_i
  77              	.LVL1:
  78              	.L7:
 844:./state.h     ****   }
 845:./state.h     ****   return &state.ned_speed_i;
 846:./state.h     **** }
  79              		.loc 1 846 0
  80 0010 0148     		ldr	r0, .L8+4
  81 0012 08BD     		pop	{r3, pc}
  82              	.L9:
  83              		.align	2
  84              	.L8:
  85 0014 00000000 		.word	state
  86 0018 24010000 		.word	state+292
  87              		.cfi_endproc
  88              	.LFE98:
  90              		.global	__aeabi_i2d
  91              		.global	__aeabi_dcmpgt
  92              		.global	__aeabi_dcmplt
  93              		.global	__aeabi_f2d
  94              		.global	__aeabi_ddiv
  95              		.global	__aeabi_dmul
  96              		.global	__aeabi_d2iz
  97              		.section	.text.run_hover_loop,"ax",%progbits
  98              		.align	1
  99              		.thumb
 100              		.thumb_func
 102              	run_hover_loop:
 103              	.LFB465:
 104              		.file 2 "firmwares/rotorcraft/guidance/guidance_v.c"
   1:firmwares/rotorcraft/guidance/guidance_v.c **** /*
   2:firmwares/rotorcraft/guidance/guidance_v.c ****  * Copyright (C) 2008-2009 Antoine Drouin <poinix@gmail.com>
   3:firmwares/rotorcraft/guidance/guidance_v.c ****  *
   4:firmwares/rotorcraft/guidance/guidance_v.c ****  * This file is part of paparazzi.
   5:firmwares/rotorcraft/guidance/guidance_v.c ****  *
   6:firmwares/rotorcraft/guidance/guidance_v.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/rotorcraft/guidance/guidance_v.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/rotorcraft/guidance/guidance_v.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/rotorcraft/guidance/guidance_v.c ****  * any later version.
  10:firmwares/rotorcraft/guidance/guidance_v.c ****  *
  11:firmwares/rotorcraft/guidance/guidance_v.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/rotorcraft/guidance/guidance_v.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/rotorcraft/guidance/guidance_v.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/rotorcraft/guidance/guidance_v.c ****  * GNU General Public License for more details.
  15:firmwares/rotorcraft/guidance/guidance_v.c ****  *
  16:firmwares/rotorcraft/guidance/guidance_v.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/rotorcraft/guidance/guidance_v.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/rotorcraft/guidance/guidance_v.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/rotorcraft/guidance/guidance_v.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/rotorcraft/guidance/guidance_v.c ****  */
  21:firmwares/rotorcraft/guidance/guidance_v.c **** 
  22:firmwares/rotorcraft/guidance/guidance_v.c **** /** @file firmwares/rotorcraft/guidance/guidance_v.c
  23:firmwares/rotorcraft/guidance/guidance_v.c ****  *  Vertical guidance for rotorcrafts.
  24:firmwares/rotorcraft/guidance/guidance_v.c ****  *
  25:firmwares/rotorcraft/guidance/guidance_v.c ****  */
  26:firmwares/rotorcraft/guidance/guidance_v.c **** 
  27:firmwares/rotorcraft/guidance/guidance_v.c **** #include "generated/airframe.h"
  28:firmwares/rotorcraft/guidance/guidance_v.c **** #include "firmwares/rotorcraft/guidance/guidance_v.h"
  29:firmwares/rotorcraft/guidance/guidance_v.c **** #include "firmwares/rotorcraft/guidance/guidance_module.h"
  30:firmwares/rotorcraft/guidance/guidance_v.c **** 
  31:firmwares/rotorcraft/guidance/guidance_v.c **** #include "subsystems/radio_control.h"
  32:firmwares/rotorcraft/guidance/guidance_v.c **** #include "firmwares/rotorcraft/stabilization.h"
  33:firmwares/rotorcraft/guidance/guidance_v.c **** #include "firmwares/rotorcraft/navigation.h"
  34:firmwares/rotorcraft/guidance/guidance_v.c **** 
  35:firmwares/rotorcraft/guidance/guidance_v.c **** #include "state.h"
  36:firmwares/rotorcraft/guidance/guidance_v.c **** 
  37:firmwares/rotorcraft/guidance/guidance_v.c **** #include "math/pprz_algebra_int.h"
  38:firmwares/rotorcraft/guidance/guidance_v.c **** 
  39:firmwares/rotorcraft/guidance/guidance_v.c **** 
  40:firmwares/rotorcraft/guidance/guidance_v.c **** /* error if some gains are negative */
  41:firmwares/rotorcraft/guidance/guidance_v.c **** #if (GUIDANCE_V_HOVER_KP < 0) ||                   \
  42:firmwares/rotorcraft/guidance/guidance_v.c ****   (GUIDANCE_V_HOVER_KD < 0)   ||                   \
  43:firmwares/rotorcraft/guidance/guidance_v.c ****   (GUIDANCE_V_HOVER_KI < 0)
  44:firmwares/rotorcraft/guidance/guidance_v.c **** #error "ALL control gains must be positive!!!"
  45:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  46:firmwares/rotorcraft/guidance/guidance_v.c **** 
  47:firmwares/rotorcraft/guidance/guidance_v.c **** 
  48:firmwares/rotorcraft/guidance/guidance_v.c **** /* If only GUIDANCE_V_NOMINAL_HOVER_THROTTLE is defined,
  49:firmwares/rotorcraft/guidance/guidance_v.c ****  * disable the adaptive throttle estimation by default.
  50:firmwares/rotorcraft/guidance/guidance_v.c ****  * Otherwise enable adaptive estimation by default.
  51:firmwares/rotorcraft/guidance/guidance_v.c ****  */
  52:firmwares/rotorcraft/guidance/guidance_v.c **** #ifdef GUIDANCE_V_NOMINAL_HOVER_THROTTLE
  53:firmwares/rotorcraft/guidance/guidance_v.c **** #  ifndef GUIDANCE_V_ADAPT_THROTTLE_ENABLED
  54:firmwares/rotorcraft/guidance/guidance_v.c **** #    define GUIDANCE_V_ADAPT_THROTTLE_ENABLED FALSE
  55:firmwares/rotorcraft/guidance/guidance_v.c **** #  endif
  56:firmwares/rotorcraft/guidance/guidance_v.c **** #else
  57:firmwares/rotorcraft/guidance/guidance_v.c **** #  define GUIDANCE_V_NOMINAL_HOVER_THROTTLE 0.4
  58:firmwares/rotorcraft/guidance/guidance_v.c **** #  ifndef GUIDANCE_V_ADAPT_THROTTLE_ENABLED
  59:firmwares/rotorcraft/guidance/guidance_v.c **** #    define GUIDANCE_V_ADAPT_THROTTLE_ENABLED TRUE
  60:firmwares/rotorcraft/guidance/guidance_v.c **** #  endif
  61:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  62:firmwares/rotorcraft/guidance/guidance_v.c **** PRINT_CONFIG_VAR(GUIDANCE_V_NOMINAL_HOVER_THROTTLE)
  63:firmwares/rotorcraft/guidance/guidance_v.c **** PRINT_CONFIG_VAR(GUIDANCE_V_ADAPT_THROTTLE_ENABLED)
  64:firmwares/rotorcraft/guidance/guidance_v.c **** 
  65:firmwares/rotorcraft/guidance/guidance_v.c **** 
  66:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_CLIMB_RC_DEADBAND
  67:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_CLIMB_RC_DEADBAND MAX_PPRZ/10
  68:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  69:firmwares/rotorcraft/guidance/guidance_v.c **** 
  70:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MAX_RC_CLIMB_SPEED
  71:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MAX_RC_CLIMB_SPEED GUIDANCE_V_REF_MIN_ZD
  72:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  73:firmwares/rotorcraft/guidance/guidance_v.c **** 
  74:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MAX_RC_DESCENT_SPEED
  75:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MAX_RC_DESCENT_SPEED GUIDANCE_V_REF_MAX_ZD
  76:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  77:firmwares/rotorcraft/guidance/guidance_v.c **** 
  78:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MIN_ERR_Z
  79:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MIN_ERR_Z POS_BFP_OF_REAL(-10.)
  80:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  81:firmwares/rotorcraft/guidance/guidance_v.c **** 
  82:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MAX_ERR_Z
  83:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MAX_ERR_Z POS_BFP_OF_REAL(10.)
  84:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  85:firmwares/rotorcraft/guidance/guidance_v.c **** 
  86:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MIN_ERR_ZD
  87:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MIN_ERR_ZD SPEED_BFP_OF_REAL(-10.)
  88:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  89:firmwares/rotorcraft/guidance/guidance_v.c **** 
  90:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MAX_ERR_ZD
  91:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MAX_ERR_ZD SPEED_BFP_OF_REAL(10.)
  92:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  93:firmwares/rotorcraft/guidance/guidance_v.c **** 
  94:firmwares/rotorcraft/guidance/guidance_v.c **** #ifndef GUIDANCE_V_MAX_SUM_ERR
  95:firmwares/rotorcraft/guidance/guidance_v.c **** #define GUIDANCE_V_MAX_SUM_ERR 2000000
  96:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
  97:firmwares/rotorcraft/guidance/guidance_v.c **** 
  98:firmwares/rotorcraft/guidance/guidance_v.c **** uint8_t guidance_v_mode;
  99:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_ff_cmd;
 100:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_fb_cmd;
 101:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_delta_t;
 102:firmwares/rotorcraft/guidance/guidance_v.c **** 
 103:firmwares/rotorcraft/guidance/guidance_v.c **** float guidance_v_nominal_throttle;
 104:firmwares/rotorcraft/guidance/guidance_v.c **** bool_t guidance_v_adapt_throttle_enabled;
 105:firmwares/rotorcraft/guidance/guidance_v.c **** 
 106:firmwares/rotorcraft/guidance/guidance_v.c **** 
 107:firmwares/rotorcraft/guidance/guidance_v.c **** /** Direct throttle from radio control.
 108:firmwares/rotorcraft/guidance/guidance_v.c ****  *  range 0:#MAX_PPRZ
 109:firmwares/rotorcraft/guidance/guidance_v.c ****  */
 110:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_rc_delta_t;
 111:firmwares/rotorcraft/guidance/guidance_v.c **** 
 112:firmwares/rotorcraft/guidance/guidance_v.c **** /** Vertical speed setpoint from radio control.
 113:firmwares/rotorcraft/guidance/guidance_v.c ****  *  fixed point representation: Q12.19
 114:firmwares/rotorcraft/guidance/guidance_v.c ****  *  accuracy 0.0000019, range +/-4096
 115:firmwares/rotorcraft/guidance/guidance_v.c ****  */
 116:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_rc_zd_sp;
 117:firmwares/rotorcraft/guidance/guidance_v.c **** 
 118:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_z_sp;
 119:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_zd_sp;
 120:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_z_ref;
 121:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_zd_ref;
 122:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_zdd_ref;
 123:firmwares/rotorcraft/guidance/guidance_v.c **** 
 124:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_kp;
 125:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_kd;
 126:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_ki;
 127:firmwares/rotorcraft/guidance/guidance_v.c **** 
 128:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_z_sum_err;
 129:firmwares/rotorcraft/guidance/guidance_v.c **** 
 130:firmwares/rotorcraft/guidance/guidance_v.c **** int32_t guidance_v_thrust_coeff;
 131:firmwares/rotorcraft/guidance/guidance_v.c **** 
 132:firmwares/rotorcraft/guidance/guidance_v.c **** 
 133:firmwares/rotorcraft/guidance/guidance_v.c **** #define GuidanceVSetRef(_pos, _speed, _accel) { \
 134:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_set_ref(_pos, _speed, _accel);        \
 135:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_z_ref = _pos;             \
 136:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_zd_ref = _speed;          \
 137:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_zdd_ref = _accel;             \
 138:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 139:firmwares/rotorcraft/guidance/guidance_v.c **** 
 140:firmwares/rotorcraft/guidance/guidance_v.c **** static int32_t get_vertical_thrust_coeff(void);
 141:firmwares/rotorcraft/guidance/guidance_v.c **** static void run_hover_loop(bool_t in_flight);
 142:firmwares/rotorcraft/guidance/guidance_v.c **** 
 143:firmwares/rotorcraft/guidance/guidance_v.c **** #if PERIODIC_TELEMETRY
 144:firmwares/rotorcraft/guidance/guidance_v.c **** #include "subsystems/datalink/telemetry.h"
 145:firmwares/rotorcraft/guidance/guidance_v.c **** 
 146:firmwares/rotorcraft/guidance/guidance_v.c **** static void send_vert_loop(struct transport_tx *trans, struct link_device *dev)
 147:firmwares/rotorcraft/guidance/guidance_v.c **** {
 148:firmwares/rotorcraft/guidance/guidance_v.c ****   pprz_msg_send_VERT_LOOP(trans, dev, AC_ID,
 149:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_z_sp, &guidance_v_zd_sp,
 150:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetPositionNed_i()->z),
 151:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetSpeedNed_i()->z),
 152:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetAccelNed_i()->z),
 153:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_z_ref, &guidance_v_zd_ref,
 154:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_zdd_ref,
 155:firmwares/rotorcraft/guidance/guidance_v.c ****                           &gv_adapt_X,
 156:firmwares/rotorcraft/guidance/guidance_v.c ****                           &gv_adapt_P,
 157:firmwares/rotorcraft/guidance/guidance_v.c ****                           &gv_adapt_Xmeas,
 158:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_z_sum_err,
 159:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_ff_cmd,
 160:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_fb_cmd,
 161:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_delta_t);
 162:firmwares/rotorcraft/guidance/guidance_v.c **** }
 163:firmwares/rotorcraft/guidance/guidance_v.c **** 
 164:firmwares/rotorcraft/guidance/guidance_v.c **** static void send_tune_vert(struct transport_tx *trans, struct link_device *dev)
 165:firmwares/rotorcraft/guidance/guidance_v.c **** {
 166:firmwares/rotorcraft/guidance/guidance_v.c ****   pprz_msg_send_TUNE_VERT(trans, dev, AC_ID,
 167:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_z_sp,
 168:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetPositionNed_i()->z),
 169:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_z_ref,
 170:firmwares/rotorcraft/guidance/guidance_v.c ****                           &guidance_v_zd_ref);
 171:firmwares/rotorcraft/guidance/guidance_v.c **** }
 172:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 173:firmwares/rotorcraft/guidance/guidance_v.c **** 
 174:firmwares/rotorcraft/guidance/guidance_v.c **** void guidance_v_init(void)
 175:firmwares/rotorcraft/guidance/guidance_v.c **** {
 176:firmwares/rotorcraft/guidance/guidance_v.c **** 
 177:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_mode = GUIDANCE_V_MODE_KILL;
 178:firmwares/rotorcraft/guidance/guidance_v.c **** 
 179:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_kp = GUIDANCE_V_HOVER_KP;
 180:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_kd = GUIDANCE_V_HOVER_KD;
 181:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_ki = GUIDANCE_V_HOVER_KI;
 182:firmwares/rotorcraft/guidance/guidance_v.c **** 
 183:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_z_sum_err = 0;
 184:firmwares/rotorcraft/guidance/guidance_v.c **** 
 185:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_nominal_throttle = GUIDANCE_V_NOMINAL_HOVER_THROTTLE;
 186:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_adapt_throttle_enabled = GUIDANCE_V_ADAPT_THROTTLE_ENABLED;
 187:firmwares/rotorcraft/guidance/guidance_v.c **** 
 188:firmwares/rotorcraft/guidance/guidance_v.c ****   gv_adapt_init();
 189:firmwares/rotorcraft/guidance/guidance_v.c **** 
 190:firmwares/rotorcraft/guidance/guidance_v.c **** #if PERIODIC_TELEMETRY
 191:firmwares/rotorcraft/guidance/guidance_v.c ****   register_periodic_telemetry(DefaultPeriodic, "VERT_LOOP", send_vert_loop);
 192:firmwares/rotorcraft/guidance/guidance_v.c ****   register_periodic_telemetry(DefaultPeriodic, "TUNE_VERT", send_tune_vert);
 193:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 194:firmwares/rotorcraft/guidance/guidance_v.c **** }
 195:firmwares/rotorcraft/guidance/guidance_v.c **** 
 196:firmwares/rotorcraft/guidance/guidance_v.c **** 
 197:firmwares/rotorcraft/guidance/guidance_v.c **** void guidance_v_read_rc(void)
 198:firmwares/rotorcraft/guidance/guidance_v.c **** {
 199:firmwares/rotorcraft/guidance/guidance_v.c **** 
 200:firmwares/rotorcraft/guidance/guidance_v.c ****   /* used in RC_DIRECT directly and as saturation in CLIMB and HOVER */
 201:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_rc_delta_t = (int32_t)radio_control.values[RADIO_THROTTLE];
 202:firmwares/rotorcraft/guidance/guidance_v.c **** 
 203:firmwares/rotorcraft/guidance/guidance_v.c ****   /* used in RC_CLIMB */
 204:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_rc_zd_sp = (MAX_PPRZ / 2) - (int32_t)radio_control.values[RADIO_THROTTLE];
 205:firmwares/rotorcraft/guidance/guidance_v.c ****   DeadBand(guidance_v_rc_zd_sp, GUIDANCE_V_CLIMB_RC_DEADBAND);
 206:firmwares/rotorcraft/guidance/guidance_v.c **** 
 207:firmwares/rotorcraft/guidance/guidance_v.c ****   static const int32_t climb_scale = ABS(SPEED_BFP_OF_REAL(GUIDANCE_V_MAX_RC_CLIMB_SPEED) /
 208:firmwares/rotorcraft/guidance/guidance_v.c ****                                          (MAX_PPRZ / 2 - GUIDANCE_V_CLIMB_RC_DEADBAND));
 209:firmwares/rotorcraft/guidance/guidance_v.c ****   static const int32_t descent_scale = ABS(SPEED_BFP_OF_REAL(GUIDANCE_V_MAX_RC_DESCENT_SPEED) /
 210:firmwares/rotorcraft/guidance/guidance_v.c ****                                        (MAX_PPRZ / 2 - GUIDANCE_V_CLIMB_RC_DEADBAND));
 211:firmwares/rotorcraft/guidance/guidance_v.c **** 
 212:firmwares/rotorcraft/guidance/guidance_v.c ****   if (guidance_v_rc_zd_sp > 0) {
 213:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_rc_zd_sp *= descent_scale;
 214:firmwares/rotorcraft/guidance/guidance_v.c ****   } else {
 215:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_rc_zd_sp *= climb_scale;
 216:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 217:firmwares/rotorcraft/guidance/guidance_v.c **** }
 218:firmwares/rotorcraft/guidance/guidance_v.c **** 
 219:firmwares/rotorcraft/guidance/guidance_v.c **** void guidance_v_mode_changed(uint8_t new_mode)
 220:firmwares/rotorcraft/guidance/guidance_v.c **** {
 221:firmwares/rotorcraft/guidance/guidance_v.c **** 
 222:firmwares/rotorcraft/guidance/guidance_v.c ****   if (new_mode == guidance_v_mode) {
 223:firmwares/rotorcraft/guidance/guidance_v.c ****     return;
 224:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 225:firmwares/rotorcraft/guidance/guidance_v.c **** 
 226:firmwares/rotorcraft/guidance/guidance_v.c ****   switch (new_mode) {
 227:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_HOVER:
 228:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sp = stateGetPositionNed_i()->z; // set current altitude as setpoint
 229:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sum_err = 0;
 230:firmwares/rotorcraft/guidance/guidance_v.c ****       GuidanceVSetRef(stateGetPositionNed_i()->z, 0, 0);
 231:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 232:firmwares/rotorcraft/guidance/guidance_v.c **** 
 233:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_RC_CLIMB:
 234:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_CLIMB:
 235:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_zd_sp = 0;
 236:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_NAV:
 237:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sum_err = 0;
 238:firmwares/rotorcraft/guidance/guidance_v.c ****       GuidanceVSetRef(stateGetPositionNed_i()->z, stateGetSpeedNed_i()->z, 0);
 239:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 240:firmwares/rotorcraft/guidance/guidance_v.c **** 
 241:firmwares/rotorcraft/guidance/guidance_v.c **** #if GUIDANCE_V_MODE_MODULE_SETTING == GUIDANCE_V_MODE_MODULE
 242:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_MODULE:
 243:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_module_enter();
 244:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 245:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 246:firmwares/rotorcraft/guidance/guidance_v.c **** 
 247:firmwares/rotorcraft/guidance/guidance_v.c ****     default:
 248:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 249:firmwares/rotorcraft/guidance/guidance_v.c **** 
 250:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 251:firmwares/rotorcraft/guidance/guidance_v.c **** 
 252:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_mode = new_mode;
 253:firmwares/rotorcraft/guidance/guidance_v.c **** 
 254:firmwares/rotorcraft/guidance/guidance_v.c **** }
 255:firmwares/rotorcraft/guidance/guidance_v.c **** 
 256:firmwares/rotorcraft/guidance/guidance_v.c **** void guidance_v_notify_in_flight(bool_t in_flight)
 257:firmwares/rotorcraft/guidance/guidance_v.c **** {
 258:firmwares/rotorcraft/guidance/guidance_v.c ****   if (in_flight) {
 259:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_adapt_init();
 260:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 261:firmwares/rotorcraft/guidance/guidance_v.c **** }
 262:firmwares/rotorcraft/guidance/guidance_v.c **** 
 263:firmwares/rotorcraft/guidance/guidance_v.c **** 
 264:firmwares/rotorcraft/guidance/guidance_v.c **** void guidance_v_run(bool_t in_flight)
 265:firmwares/rotorcraft/guidance/guidance_v.c **** {
 266:firmwares/rotorcraft/guidance/guidance_v.c **** 
 267:firmwares/rotorcraft/guidance/guidance_v.c ****   // FIXME... SATURATIONS NOT TAKEN INTO ACCOUNT
 268:firmwares/rotorcraft/guidance/guidance_v.c ****   // AKA SUPERVISION and co
 269:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_thrust_coeff = get_vertical_thrust_coeff();
 270:firmwares/rotorcraft/guidance/guidance_v.c ****   if (in_flight) {
 271:firmwares/rotorcraft/guidance/guidance_v.c ****     int32_t vertical_thrust = (stabilization_cmd[COMMAND_THRUST] * guidance_v_thrust_coeff) >> INT3
 272:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_adapt_run(stateGetAccelNed_i()->z, vertical_thrust, guidance_v_zd_ref);
 273:firmwares/rotorcraft/guidance/guidance_v.c ****   } else {
 274:firmwares/rotorcraft/guidance/guidance_v.c ****     /* reset estimate while not in_flight */
 275:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_adapt_init();
 276:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 277:firmwares/rotorcraft/guidance/guidance_v.c **** 
 278:firmwares/rotorcraft/guidance/guidance_v.c ****   switch (guidance_v_mode) {
 279:firmwares/rotorcraft/guidance/guidance_v.c **** 
 280:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_RC_DIRECT:
 281:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sp = stateGetPositionNed_i()->z; // for display only
 282:firmwares/rotorcraft/guidance/guidance_v.c ****       stabilization_cmd[COMMAND_THRUST] = guidance_v_rc_delta_t;
 283:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 284:firmwares/rotorcraft/guidance/guidance_v.c **** 
 285:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_RC_CLIMB:
 286:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_zd_sp = guidance_v_rc_zd_sp;
 287:firmwares/rotorcraft/guidance/guidance_v.c ****       gv_update_ref_from_zd_sp(guidance_v_zd_sp, stateGetPositionNed_i()->z);
 288:firmwares/rotorcraft/guidance/guidance_v.c ****       run_hover_loop(in_flight);
 289:firmwares/rotorcraft/guidance/guidance_v.c ****       stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 290:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 291:firmwares/rotorcraft/guidance/guidance_v.c **** 
 292:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_CLIMB:
 293:firmwares/rotorcraft/guidance/guidance_v.c ****       gv_update_ref_from_zd_sp(guidance_v_zd_sp, stateGetPositionNed_i()->z);
 294:firmwares/rotorcraft/guidance/guidance_v.c ****       run_hover_loop(in_flight);
 295:firmwares/rotorcraft/guidance/guidance_v.c **** #if !NO_RC_THRUST_LIMIT
 296:firmwares/rotorcraft/guidance/guidance_v.c ****       /* use rc limitation if available */
 297:firmwares/rotorcraft/guidance/guidance_v.c ****       if (radio_control.status == RC_OK) {
 298:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = Min(guidance_v_rc_delta_t, guidance_v_delta_t);
 299:firmwares/rotorcraft/guidance/guidance_v.c ****       } else
 300:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 301:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 302:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 303:firmwares/rotorcraft/guidance/guidance_v.c **** 
 304:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_HOVER:
 305:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_zd_sp = 0;
 306:firmwares/rotorcraft/guidance/guidance_v.c ****       gv_update_ref_from_z_sp(guidance_v_z_sp);
 307:firmwares/rotorcraft/guidance/guidance_v.c ****       run_hover_loop(in_flight);
 308:firmwares/rotorcraft/guidance/guidance_v.c **** #if !NO_RC_THRUST_LIMIT
 309:firmwares/rotorcraft/guidance/guidance_v.c ****       /* use rc limitation if available */
 310:firmwares/rotorcraft/guidance/guidance_v.c ****       if (radio_control.status == RC_OK) {
 311:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = Min(guidance_v_rc_delta_t, guidance_v_delta_t);
 312:firmwares/rotorcraft/guidance/guidance_v.c ****       } else
 313:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 314:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 315:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 316:firmwares/rotorcraft/guidance/guidance_v.c **** 
 317:firmwares/rotorcraft/guidance/guidance_v.c **** #if GUIDANCE_V_MODE_MODULE_SETTING == GUIDANCE_V_MODE_MODULE
 318:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_MODULE:
 319:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_module_run(in_flight);
 320:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 321:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 322:firmwares/rotorcraft/guidance/guidance_v.c **** 
 323:firmwares/rotorcraft/guidance/guidance_v.c ****     case GUIDANCE_V_MODE_NAV: {
 324:firmwares/rotorcraft/guidance/guidance_v.c ****       if (vertical_mode == VERTICAL_MODE_ALT) {
 325:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sp = -nav_flight_altitude;
 326:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = 0;
 327:firmwares/rotorcraft/guidance/guidance_v.c ****         gv_update_ref_from_z_sp(guidance_v_z_sp);
 328:firmwares/rotorcraft/guidance/guidance_v.c ****         run_hover_loop(in_flight);
 329:firmwares/rotorcraft/guidance/guidance_v.c ****       } else if (vertical_mode == VERTICAL_MODE_CLIMB) {
 330:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sp = stateGetPositionNed_i()->z;
 331:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = -nav_climb;
 332:firmwares/rotorcraft/guidance/guidance_v.c ****         gv_update_ref_from_zd_sp(guidance_v_zd_sp, stateGetPositionNed_i()->z);
 333:firmwares/rotorcraft/guidance/guidance_v.c ****         run_hover_loop(in_flight);
 334:firmwares/rotorcraft/guidance/guidance_v.c ****       } else if (vertical_mode == VERTICAL_MODE_MANUAL) {
 335:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sp = stateGetPositionNed_i()->z;
 336:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = stateGetSpeedNed_i()->z;
 337:firmwares/rotorcraft/guidance/guidance_v.c ****         GuidanceVSetRef(guidance_v_z_sp, guidance_v_zd_sp, 0);
 338:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sum_err = 0;
 339:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_delta_t = nav_throttle;
 340:firmwares/rotorcraft/guidance/guidance_v.c ****       }
 341:firmwares/rotorcraft/guidance/guidance_v.c **** #if !NO_RC_THRUST_LIMIT
 342:firmwares/rotorcraft/guidance/guidance_v.c ****       /* use rc limitation if available */
 343:firmwares/rotorcraft/guidance/guidance_v.c ****       if (radio_control.status == RC_OK) {
 344:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = Min(guidance_v_rc_delta_t, guidance_v_delta_t);
 345:firmwares/rotorcraft/guidance/guidance_v.c ****       } else
 346:firmwares/rotorcraft/guidance/guidance_v.c **** #endif
 347:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 348:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 349:firmwares/rotorcraft/guidance/guidance_v.c ****     }
 350:firmwares/rotorcraft/guidance/guidance_v.c ****     default:
 351:firmwares/rotorcraft/guidance/guidance_v.c ****       break;
 352:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 353:firmwares/rotorcraft/guidance/guidance_v.c **** }
 354:firmwares/rotorcraft/guidance/guidance_v.c **** 
 355:firmwares/rotorcraft/guidance/guidance_v.c **** /// get the cosine of the angle between thrust vector and gravity vector
 356:firmwares/rotorcraft/guidance/guidance_v.c **** static int32_t get_vertical_thrust_coeff(void)
 357:firmwares/rotorcraft/guidance/guidance_v.c **** {
 358:firmwares/rotorcraft/guidance/guidance_v.c ****   static const int32_t max_bank_coef = BFP_OF_REAL(RadOfDeg(30.), INT32_TRIG_FRAC);
 359:firmwares/rotorcraft/guidance/guidance_v.c **** 
 360:firmwares/rotorcraft/guidance/guidance_v.c ****   struct Int32RMat *att = stateGetNedToBodyRMat_i();
 361:firmwares/rotorcraft/guidance/guidance_v.c ****   /* thrust vector:
 362:firmwares/rotorcraft/guidance/guidance_v.c ****    *  int32_rmat_vmult(&thrust_vect, &att, &zaxis)
 363:firmwares/rotorcraft/guidance/guidance_v.c ****    * same as last colum of rmat with INT32_TRIG_FRAC
 364:firmwares/rotorcraft/guidance/guidance_v.c ****    * struct Int32Vect thrust_vect = {att.m[2], att.m[5], att.m[8]};
 365:firmwares/rotorcraft/guidance/guidance_v.c ****    *
 366:firmwares/rotorcraft/guidance/guidance_v.c ****    * Angle between two vectors v1 and v2:
 367:firmwares/rotorcraft/guidance/guidance_v.c ****    *  angle = acos(dot(v1, v2) / (norm(v1) * norm(v2)))
 368:firmwares/rotorcraft/guidance/guidance_v.c ****    * since here both are already of unit length:
 369:firmwares/rotorcraft/guidance/guidance_v.c ****    *  angle = acos(dot(v1, v2))
 370:firmwares/rotorcraft/guidance/guidance_v.c ****    * since we we want the cosine of the angle we simply need
 371:firmwares/rotorcraft/guidance/guidance_v.c ****    *  thrust_coeff = dot(v1, v2)
 372:firmwares/rotorcraft/guidance/guidance_v.c ****    * also can be simplified considering: v1 is zaxis with (0,0,1)
 373:firmwares/rotorcraft/guidance/guidance_v.c ****    *  dot(v1, v2) = v1.z * v2.z = v2.z
 374:firmwares/rotorcraft/guidance/guidance_v.c ****    */
 375:firmwares/rotorcraft/guidance/guidance_v.c ****   int32_t coef = att->m[8];
 376:firmwares/rotorcraft/guidance/guidance_v.c ****   if (coef < max_bank_coef) {
 377:firmwares/rotorcraft/guidance/guidance_v.c ****     coef = max_bank_coef;
 378:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 379:firmwares/rotorcraft/guidance/guidance_v.c ****   return coef;
 380:firmwares/rotorcraft/guidance/guidance_v.c **** }
 381:firmwares/rotorcraft/guidance/guidance_v.c **** 
 382:firmwares/rotorcraft/guidance/guidance_v.c **** 
 383:firmwares/rotorcraft/guidance/guidance_v.c **** #define FF_CMD_FRAC 18
 384:firmwares/rotorcraft/guidance/guidance_v.c **** 
 385:firmwares/rotorcraft/guidance/guidance_v.c **** static void run_hover_loop(bool_t in_flight)
 386:firmwares/rotorcraft/guidance/guidance_v.c **** {
 105              		.loc 2 386 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              	.LVL2:
 387:firmwares/rotorcraft/guidance/guidance_v.c **** 
 388:firmwares/rotorcraft/guidance/guidance_v.c ****   /* convert our reference to generic representation */
 389:firmwares/rotorcraft/guidance/guidance_v.c ****   int64_t tmp  = gv_z_ref >> (GV_Z_REF_FRAC - INT32_POS_FRAC);
 110              		.loc 2 389 0
 111 0000 634A     		ldr	r2, .L31+8
 112              	.LVL3:
 386:firmwares/rotorcraft/guidance/guidance_v.c **** {
 113              		.loc 2 386 0
 114 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 115              		.cfi_def_cfa_offset 32
 116              		.cfi_offset 3, -32
 117              		.cfi_offset 4, -28
 118              		.cfi_offset 5, -24
 119              		.cfi_offset 6, -20
 120              		.cfi_offset 7, -16
 121              		.cfi_offset 8, -12
 122              		.cfi_offset 9, -8
 123              		.cfi_offset 14, -4
 124              		.loc 2 389 0
 125 0006 0CCA     		ldmia	r2, {r2, r3}
 126              	.LVL4:
 127 0008 940C     		lsrs	r4, r2, #18
 128 000a 44EA8334 		orr	r4, r4, r3, lsl #14
 390:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_z_ref = (int32_t)tmp;
 129              		.loc 2 390 0
 130 000e 614B     		ldr	r3, .L31+12
 391:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_zd_ref = gv_zd_ref << (INT32_SPEED_FRAC - GV_ZD_REF_FRAC);
 131              		.loc 2 391 0
 132 0010 DFF8E891 		ldr	r9, .L31+116
 390:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_z_ref = (int32_t)tmp;
 133              		.loc 2 390 0
 134 0014 1C60     		str	r4, [r3]
 135              		.loc 2 391 0
 136 0016 604B     		ldr	r3, .L31+16
 392:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_zdd_ref = gv_zdd_ref << (INT32_ACCEL_FRAC - GV_ZDD_REF_FRAC);
 137              		.loc 2 392 0
 138 0018 604D     		ldr	r5, .L31+20
 391:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_zd_ref = gv_zd_ref << (INT32_SPEED_FRAC - GV_ZD_REF_FRAC);
 139              		.loc 2 391 0
 140 001a 1B68     		ldr	r3, [r3]
 141 001c 9B00     		lsls	r3, r3, #2
 142 001e C9F80030 		str	r3, [r9]
 143              		.loc 2 392 0
 144 0022 5F4B     		ldr	r3, .L31+24
 145 0024 1B68     		ldr	r3, [r3]
 146 0026 9B00     		lsls	r3, r3, #2
 147 0028 2B60     		str	r3, [r5]
 386:firmwares/rotorcraft/guidance/guidance_v.c **** {
 148              		.loc 2 386 0
 149 002a 8046     		mov	r8, r0
 393:firmwares/rotorcraft/guidance/guidance_v.c ****   /* compute the error to our reference */
 394:firmwares/rotorcraft/guidance/guidance_v.c ****   int32_t err_z  = guidance_v_z_ref - stateGetPositionNed_i()->z;
 150              		.loc 2 394 0
 151 002c FFF7FEFF 		bl	stateGetPositionNed_i
 152              	.LVL5:
 153 0030 8368     		ldr	r3, [r0, #8]
 154 0032 E41A     		subs	r4, r4, r3
 155              	.LVL6:
 395:firmwares/rotorcraft/guidance/guidance_v.c ****   Bound(err_z, GUIDANCE_V_MIN_ERR_Z, GUIDANCE_V_MAX_ERR_Z);
 156              		.loc 2 395 0
 157 0034 2046     		mov	r0, r4
 158 0036 FFF7FEFF 		bl	__aeabi_i2d
 159              	.LVL7:
 160 003a 0022     		movs	r2, #0
 161 003c 594B     		ldr	r3, .L31+28
 162 003e 0646     		mov	r6, r0
 163 0040 0F46     		mov	r7, r1
 164 0042 FFF7FEFF 		bl	__aeabi_dcmpgt
 165              	.LVL8:
 166 0046 50B9     		cbnz	r0, .L25
 167              		.loc 2 395 0 is_stmt 0 discriminator 2
 168 0048 574B     		ldr	r3, .L31+32
 169 004a 3046     		mov	r0, r6
 170 004c 3946     		mov	r1, r7
 171 004e 0022     		movs	r2, #0
 172 0050 FFF7FEFF 		bl	__aeabi_dcmplt
 173              	.LVL9:
 174 0054 554B     		ldr	r3, .L31+36
 175 0056 0028     		cmp	r0, #0
 176 0058 18BF     		it	ne
 177 005a 1C46     		movne	r4, r3
 178              	.LVL10:
 179 005c 01E0     		b	.L11
 180              	.LVL11:
 181              	.L25:
 182              		.loc 2 395 0
 183 005e 4FF42064 		mov	r4, #2560
 184              	.LVL12:
 185              	.L11:
 396:firmwares/rotorcraft/guidance/guidance_v.c ****   int32_t err_zd = guidance_v_zd_ref - stateGetSpeedNed_i()->z;
 186              		.loc 2 396 0 is_stmt 1
 187 0062 D9F80060 		ldr	r6, [r9]
 188 0066 FFF7FEFF 		bl	stateGetSpeedNed_i
 189              	.LVL13:
 190 006a 8368     		ldr	r3, [r0, #8]
 191 006c C3EB0609 		rsb	r9, r3, r6
 192              	.LVL14:
 397:firmwares/rotorcraft/guidance/guidance_v.c ****   Bound(err_zd, GUIDANCE_V_MIN_ERR_ZD, GUIDANCE_V_MAX_ERR_ZD);
 193              		.loc 2 397 0
 194 0070 4846     		mov	r0, r9
 195 0072 FFF7FEFF 		bl	__aeabi_i2d
 196              	.LVL15:
 197 0076 0022     		movs	r2, #0
 198 0078 4D4B     		ldr	r3, .L31+40
 199 007a 0646     		mov	r6, r0
 200 007c 0F46     		mov	r7, r1
 201 007e FFF7FEFF 		bl	__aeabi_dcmpgt
 202              	.LVL16:
 203 0082 50B9     		cbnz	r0, .L27
 204              		.loc 2 397 0 is_stmt 0 discriminator 2
 205 0084 4B4B     		ldr	r3, .L31+44
 206 0086 3046     		mov	r0, r6
 207 0088 3946     		mov	r1, r7
 208 008a 0022     		movs	r2, #0
 209 008c FFF7FEFF 		bl	__aeabi_dcmplt
 210              	.LVL17:
 211 0090 494B     		ldr	r3, .L31+48
 212 0092 0028     		cmp	r0, #0
 213 0094 18BF     		it	ne
 214 0096 9946     		movne	r9, r3
 215              	.LVL18:
 216 0098 01E0     		b	.L12
 217              	.LVL19:
 218              	.L27:
 219              		.loc 2 397 0
 220 009a 4FF4A009 		mov	r9, #5242880
 221              	.LVL20:
 222              	.L12:
 223 009e 474E     		ldr	r6, .L31+52
 398:firmwares/rotorcraft/guidance/guidance_v.c **** 
 399:firmwares/rotorcraft/guidance/guidance_v.c ****   if (in_flight) {
 224              		.loc 2 399 0 is_stmt 1
 225 00a0 B8F1000F 		cmp	r8, #0
 226 00a4 0CD0     		beq	.L13
 400:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_z_sum_err += err_z;
 227              		.loc 2 400 0
 228 00a6 3368     		ldr	r3, [r6]
 401:firmwares/rotorcraft/guidance/guidance_v.c ****     Bound(guidance_v_z_sum_err, -GUIDANCE_V_MAX_SUM_ERR, GUIDANCE_V_MAX_SUM_ERR);
 229              		.loc 2 401 0
 230 00a8 454A     		ldr	r2, .L31+56
 400:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_z_sum_err += err_z;
 231              		.loc 2 400 0
 232 00aa 2344     		add	r3, r3, r4
 233              		.loc 2 401 0
 234 00ac 9342     		cmp	r3, r2
 235 00ae 01DD     		ble	.L14
 236              		.loc 2 401 0 is_stmt 0 discriminator 1
 237 00b0 3260     		str	r2, [r6]
 238 00b2 07E0     		b	.L15
 239              	.L14:
 400:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_z_sum_err += err_z;
 240              		.loc 2 400 0 is_stmt 1 discriminator 2
 241 00b4 434A     		ldr	r2, .L31+60
 242 00b6 9342     		cmp	r3, r2
 243 00b8 ACBF     		ite	ge
 244 00ba 3360     		strge	r3, [r6]
 245 00bc 3260     		strlt	r2, [r6]
 246 00be 01E0     		b	.L15
 247              	.L13:
 402:firmwares/rotorcraft/guidance/guidance_v.c ****   } else {
 403:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_z_sum_err = 0;
 248              		.loc 2 403 0
 249 00c0 C6F80080 		str	r8, [r6]
 250              	.L15:
 404:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 405:firmwares/rotorcraft/guidance/guidance_v.c **** 
 406:firmwares/rotorcraft/guidance/guidance_v.c ****   /* our nominal command : (g + zdd)*m   */
 407:firmwares/rotorcraft/guidance/guidance_v.c ****   int32_t inv_m;
 408:firmwares/rotorcraft/guidance/guidance_v.c ****   if (guidance_v_adapt_throttle_enabled) {
 251              		.loc 2 408 0
 252 00c4 404B     		ldr	r3, .L31+64
 253 00c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 254 00c8 1BB1     		cbz	r3, .L17
 409:firmwares/rotorcraft/guidance/guidance_v.c ****     inv_m =  gv_adapt_X >> (GV_ADAPT_X_FRAC - FF_CMD_FRAC);
 255              		.loc 2 409 0
 256 00ca 404B     		ldr	r3, .L31+68
 257 00cc 1868     		ldr	r0, [r3]
 258 00ce 8011     		asrs	r0, r0, #6
 259              	.LVL21:
 260 00d0 17E0     		b	.L18
 261              	.LVL22:
 262              	.L17:
 410:firmwares/rotorcraft/guidance/guidance_v.c ****   } else {
 411:firmwares/rotorcraft/guidance/guidance_v.c ****     /* use the fixed nominal throttle */
 412:firmwares/rotorcraft/guidance/guidance_v.c ****     inv_m = BFP_OF_REAL(9.81 / (guidance_v_nominal_throttle * MAX_PPRZ), FF_CMD_FRAC);
 263              		.loc 2 412 0
 264 00d2 3F4B     		ldr	r3, .L31+72
 265 00d4 DFED3F7A 		flds	s15, .L31+76
 266 00d8 93ED007A 		flds	s14, [r3]
 267 00dc 67EE277A 		fmuls	s15, s14, s15
 268 00e0 17EE900A 		fmrs	r0, s15
 269 00e4 FFF7FEFF 		bl	__aeabi_f2d
 270              	.LVL23:
 271 00e8 0246     		mov	r2, r0
 272 00ea 0B46     		mov	r3, r1
 273 00ec 26A1     		adr	r1, .L31
 274 00ee D1E90001 		ldrd	r0, [r1]
 275 00f2 FFF7FEFF 		bl	__aeabi_ddiv
 276              	.LVL24:
 277 00f6 0022     		movs	r2, #0
 278 00f8 374B     		ldr	r3, .L31+80
 279 00fa FFF7FEFF 		bl	__aeabi_dmul
 280              	.LVL25:
 281 00fe FFF7FEFF 		bl	__aeabi_d2iz
 282              	.LVL26:
 283              	.L18:
 413:firmwares/rotorcraft/guidance/guidance_v.c ****   }
 414:firmwares/rotorcraft/guidance/guidance_v.c **** 
 415:firmwares/rotorcraft/guidance/guidance_v.c ****   const int32_t g_m_zdd = (int32_t)BFP_OF_REAL(9.81, FF_CMD_FRAC) -
 416:firmwares/rotorcraft/guidance/guidance_v.c ****                           (guidance_v_zdd_ref << (FF_CMD_FRAC - INT32_ACCEL_FRAC));
 284              		.loc 2 416 0
 285 0102 2A68     		ldr	r2, [r5]
 415:firmwares/rotorcraft/guidance/guidance_v.c ****   const int32_t g_m_zdd = (int32_t)BFP_OF_REAL(9.81, FF_CMD_FRAC) -
 286              		.loc 2 415 0
 287 0104 354B     		ldr	r3, .L31+84
 288              		.loc 2 416 0
 289 0106 1202     		lsls	r2, r2, #8
 415:firmwares/rotorcraft/guidance/guidance_v.c ****   const int32_t g_m_zdd = (int32_t)BFP_OF_REAL(9.81, FF_CMD_FRAC) -
 290              		.loc 2 415 0
 291 0108 9B1A     		subs	r3, r3, r2
 292              	.LVL27:
 417:firmwares/rotorcraft/guidance/guidance_v.c **** 
 418:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_ff_cmd = g_m_zdd / inv_m;
 293              		.loc 2 418 0
 294 010a 93FBF0F0 		sdiv	r0, r3, r0
 295              	.LVL28:
 419:firmwares/rotorcraft/guidance/guidance_v.c ****   /* feed forward command */
 420:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_ff_cmd = (guidance_v_ff_cmd << INT32_TRIG_FRAC) / guidance_v_thrust_coeff;
 296              		.loc 2 420 0
 297 010e 344B     		ldr	r3, .L31+88
 298              	.LVL29:
 299 0110 1A68     		ldr	r2, [r3]
 300 0112 344B     		ldr	r3, .L31+92
 301 0114 8003     		lsls	r0, r0, #14
 302 0116 90FBF2F0 		sdiv	r0, r0, r2
 421:firmwares/rotorcraft/guidance/guidance_v.c **** 
 422:firmwares/rotorcraft/guidance/guidance_v.c ****   /* bound the nominal command to 0.9*MAX_PPRZ */
 423:firmwares/rotorcraft/guidance/guidance_v.c ****   Bound(guidance_v_ff_cmd, 0, 8640);
 303              		.loc 2 423 0
 304 011a B0F5075F 		cmp	r0, #8640
 305 011e 02DD     		ble	.L19
 306              		.loc 2 423 0 is_stmt 0 discriminator 1
 307 0120 4FF40752 		mov	r2, #8640
 308 0124 04E0     		b	.L29
 309              	.L19:
 310              		.loc 2 423 0 discriminator 2
 311 0126 0028     		cmp	r0, #0
 312 0128 01DB     		blt	.L21
 420:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_ff_cmd = (guidance_v_ff_cmd << INT32_TRIG_FRAC) / guidance_v_thrust_coeff;
 313              		.loc 2 420 0 is_stmt 1
 314 012a 1860     		str	r0, [r3]
 315 012c 01E0     		b	.L20
 316              	.L21:
 317              		.loc 2 423 0 discriminator 1
 318 012e 0022     		movs	r2, #0
 319              	.L29:
 320 0130 1A60     		str	r2, [r3]
 321              	.L20:
 424:firmwares/rotorcraft/guidance/guidance_v.c **** 
 425:firmwares/rotorcraft/guidance/guidance_v.c **** 
 426:firmwares/rotorcraft/guidance/guidance_v.c ****   /* our error feed back command                   */
 427:firmwares/rotorcraft/guidance/guidance_v.c ****   /* z-axis pointing down -> positive error means we need less thrust */
 428:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_fb_cmd = ((-guidance_v_kp * err_z)  >> 7) +
 322              		.loc 2 428 0
 323 0132 2D4A     		ldr	r2, .L31+96
 429:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_kd * err_zd) >> 16) +
 430:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_ki * guidance_v_z_sum_err) >> 16);
 431:firmwares/rotorcraft/guidance/guidance_v.c **** 
 432:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_delta_t = guidance_v_ff_cmd + guidance_v_fb_cmd;
 324              		.loc 2 432 0
 325 0134 1B68     		ldr	r3, [r3]
 428:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_fb_cmd = ((-guidance_v_kp * err_z)  >> 7) +
 326              		.loc 2 428 0
 327 0136 1268     		ldr	r2, [r2]
 328 0138 5242     		negs	r2, r2
 329 013a 5443     		muls	r4, r2, r4
 330              	.LVL30:
 429:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_kd * err_zd) >> 16) +
 331              		.loc 2 429 0
 332 013c 2B4A     		ldr	r2, .L31+100
 333 013e 1268     		ldr	r2, [r2]
 334 0140 5242     		negs	r2, r2
 335 0142 09FB02F9 		mul	r9, r9, r2
 336              	.LVL31:
 430:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_ki * guidance_v_z_sum_err) >> 16);
 337              		.loc 2 430 0
 338 0146 2A4A     		ldr	r2, .L31+104
 429:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_kd * err_zd) >> 16) +
 339              		.loc 2 429 0
 340 0148 4FEA2949 		asr	r9, r9, #16
 428:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_fb_cmd = ((-guidance_v_kp * err_z)  >> 7) +
 341              		.loc 2 428 0
 342 014c 09EBE419 		add	r9, r9, r4, asr #7
 430:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_ki * guidance_v_z_sum_err) >> 16);
 343              		.loc 2 430 0
 344 0150 1468     		ldr	r4, [r2]
 345 0152 3268     		ldr	r2, [r6]
 346 0154 6442     		negs	r4, r4
 347 0156 5443     		muls	r4, r2, r4
 428:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_fb_cmd = ((-guidance_v_kp * err_z)  >> 7) +
 348              		.loc 2 428 0
 349 0158 264A     		ldr	r2, .L31+108
 429:firmwares/rotorcraft/guidance/guidance_v.c ****                       ((-guidance_v_kd * err_zd) >> 16) +
 350              		.loc 2 429 0
 351 015a 09EB2444 		add	r4, r9, r4, asr #16
 428:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_fb_cmd = ((-guidance_v_kp * err_z)  >> 7) +
 352              		.loc 2 428 0
 353 015e 1460     		str	r4, [r2]
 354              		.loc 2 432 0
 355 0160 1C44     		add	r4, r4, r3
 433:firmwares/rotorcraft/guidance/guidance_v.c **** 
 434:firmwares/rotorcraft/guidance/guidance_v.c ****   /* bound the result */
 435:firmwares/rotorcraft/guidance/guidance_v.c ****   Bound(guidance_v_delta_t, 0, MAX_PPRZ);
 356              		.loc 2 435 0
 357 0162 B4F5165F 		cmp	r4, #9600
 358 0166 244B     		ldr	r3, .L31+112
 359 0168 02DD     		ble	.L22
 360              		.loc 2 435 0 is_stmt 0 discriminator 1
 361 016a 4FF41652 		mov	r2, #9600
 362 016e 05E0     		b	.L30
 363              	.L22:
 364              		.loc 2 435 0 discriminator 2
 365 0170 002C     		cmp	r4, #0
 366 0172 02DB     		blt	.L24
 432:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_delta_t = guidance_v_ff_cmd + guidance_v_fb_cmd;
 367              		.loc 2 432 0 is_stmt 1
 368 0174 1C60     		str	r4, [r3]
 369 0176 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 370              	.L24:
 371              		.loc 2 435 0 discriminator 1
 372 017a 0022     		movs	r2, #0
 373              	.L30:
 374 017c 1A60     		str	r2, [r3]
 375 017e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 376              	.L32:
 377 0182 00BFAFF3 		.align	3
 377      0080
 378              	.L31:
 379 0188 1F85EB51 		.word	1374389535
 380 018c B89E2340 		.word	1076076216
 381 0190 00000000 		.word	gv_z_ref
 382 0194 00000000 		.word	.LANCHOR0
 383 0198 00000000 		.word	gv_zd_ref
 384 019c 00000000 		.word	.LANCHOR2
 385 01a0 00000000 		.word	gv_zdd_ref
 386 01a4 0000A440 		.word	1084489728
 387 01a8 0000A4C0 		.word	-1062993920
 388 01ac 00F6FFFF 		.word	-2560
 389 01b0 00005441 		.word	1096024064
 390 01b4 000054C1 		.word	-1051459584
 391 01b8 0000B0FF 		.word	-5242880
 392 01bc 00000000 		.word	.LANCHOR3
 393 01c0 80841E00 		.word	2000000
 394 01c4 807BE1FF 		.word	-2000000
 395 01c8 00000000 		.word	.LANCHOR4
 396 01cc 00000000 		.word	gv_adapt_X
 397 01d0 00000000 		.word	.LANCHOR5
 398 01d4 00001646 		.word	1175846912
 399 01d8 00001041 		.word	1091567616
 400 01dc 703D2700 		.word	2571632
 401 01e0 00000000 		.word	.LANCHOR6
 402 01e4 00000000 		.word	.LANCHOR7
 403 01e8 00000000 		.word	.LANCHOR8
 404 01ec 00000000 		.word	.LANCHOR9
 405 01f0 00000000 		.word	.LANCHOR10
 406 01f4 00000000 		.word	.LANCHOR11
 407 01f8 00000000 		.word	.LANCHOR12
 408 01fc 00000000 		.word	.LANCHOR1
 409              		.cfi_endproc
 410              	.LFE465:
 412              		.section	.text.send_tune_vert,"ax",%progbits
 413              		.align	1
 414              		.thumb
 415              		.thumb_func
 417              	send_tune_vert:
 418              	.LFB458:
 165:firmwares/rotorcraft/guidance/guidance_v.c **** {
 419              		.loc 2 165 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 0, uses_anonymous_args = 0
 423              	.LVL32:
 424 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 425              		.cfi_def_cfa_offset 28
 426              		.cfi_offset 4, -28
 427              		.cfi_offset 5, -24
 428              		.cfi_offset 6, -20
 429              		.cfi_offset 7, -16
 430              		.cfi_offset 8, -12
 431              		.cfi_offset 9, -8
 432              		.cfi_offset 14, -4
 433 0004 0446     		mov	r4, r0
 434 0006 85B0     		sub	sp, sp, #20
 435              		.cfi_def_cfa_offset 48
 165:firmwares/rotorcraft/guidance/guidance_v.c **** {
 436              		.loc 2 165 0
 437 0008 0D46     		mov	r5, r1
 168:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetPositionNed_i()->z),
 438              		.loc 2 168 0
 439 000a FFF7FEFF 		bl	stateGetPositionNed_i
 440              	.LVL33:
 441              	.LBB4:
 442              	.LBB5:
 443              		.file 3 "/home/lsk/paparazzi/var/include/messages.h"
   1:/home/lsk/paparazzi/var/include/messages.h **** /* Automatically generated by gen_messages from /home/lsk/paparazzi/conf/messages.xml */
   2:/home/lsk/paparazzi/var/include/messages.h **** /* Please DO NOT EDIT */
   3:/home/lsk/paparazzi/var/include/messages.h **** /* Macros to send and receive messages of class telemetry */
   4:/home/lsk/paparazzi/var/include/messages.h **** #ifndef _VAR_MESSAGES_telemetry_H_
   5:/home/lsk/paparazzi/var/include/messages.h **** #define _VAR_MESSAGES_telemetry_H_
   6:/home/lsk/paparazzi/var/include/messages.h **** #include "subsystems/datalink/transport.h"
   7:/home/lsk/paparazzi/var/include/messages.h **** #include "mcu_periph/link_device.h"
   8:/home/lsk/paparazzi/var/include/messages.h **** #if DOWNLINK
   9:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AUTOPILOT_VERSION 1
  10:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALIVE 2
  11:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PONG 3
  12:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TAKEOFF 4
  13:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ARDRONE_NAVDATA 5
  14:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATTITUDE 6
  15:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IR_SENSORS 7
  16:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS 8
  17:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION_REF 9
  18:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NAVIGATION 10
  19:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_MODE 11
  20:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BAT 12
  21:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_MCU_LINK 13
  22:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CALIBRATION 14
  23:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SETTINGS 15
  24:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DESIRED 16
  25:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_SOL 17
  26:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC_GENERIC 18
  27:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_FORMAT 19
  28:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM 20
  29:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CIRCLE 21
  30:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SEGMENT 22
  31:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SVINFO 25
  32:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG 26
  33:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SURVEY 27
  34:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WC_RSSI 28
  35:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RANGEFINDER 29
  36:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DATALINK_REPORT 30
  37:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DL_VALUE 31
  38:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MARK 32
  39:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYS_MON 33
  40:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR 34
  41:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED 35
  42:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MKK 36
  43:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENERGY 37
  44:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85_CALIB 38
  45:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85 39
  46:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SPEED_LOOP 40
  47:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ALT_KALMAN 41
  48:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ESTIMATOR 42
  49:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_ROLL 43
  50:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5534A 44
  51:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PRESSURE 45
  52:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_WORDS 46
  53:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_LLA 47
  54:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CHRONO 48
  55:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_ENU 49
  56:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WINDTURBINE_STATUS_ 50
  57:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC_3CH_ 51
  58:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPPT 52
  59:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DEBUG_IR_I2C 53
  60:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED 54
  61:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XSENS 55
  62:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_ETS 56
  63:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_ETS 57
  64:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PBN 58
  65:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_LLA 59
  66:/home/lsk/paparazzi/var/include/messages.h **** #define DL_H_CTL_A 60
  67:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_RAW 61
  68:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_VOLTAGE 62
  69:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAM_POINT 63
  70:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_INFO 64
  71:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_BARO 65
  72:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSYS_AIRSPEED 66
  73:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLIGHT_BENCHMARK 67
  74:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MPL3115_BARO 68
  75:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AOA_ADC 69
  76:/home/lsk/paparazzi/var/include/messages.h **** #define DL_XTEND_RSSI 70
  77:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SUPERBITRF 72
  78:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GX3_INFO 73
  79:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EXPLAIN 74
  80:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_TELEMETRY 75
  81:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_UPDATE 76
  82:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VF_PREDICT 77
  83:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INV_FILTER 78
  84:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MISSION_STATUS 79
  85:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CROSS_TRACK_ERROR 80
  86:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GENERIC_COM 81
  87:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_SLOT_TM 82
  88:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FORMATION_STATUS_TM 83
  89:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BMP_STATUS 84
  90:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_STATUS 85
  91:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TMP_STATUS 86
  92:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WIND_INFO_RET 87
  93:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SCP_STATUS 88
  94:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_STATUS 89
  95:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ENOSE_STATUS 90
  96:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DPICCO_STATUS 91
  97:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_DEBUG 92
  98:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ANTENNA_STATUS 93
  99:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATUS 94
 100:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATIC 95
 101:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HIH_STATUS 96
 102:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMT_STATUS 97
 103:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GP2Y_STATUS 98
 104:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_SERIAL 99
 105:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPM 100
 106:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RC 101
 107:/home/lsk/paparazzi/var/include/messages.h **** #define DL_COMMANDS 102
 108:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FBW_STATUS 103
 109:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ADC 104
 110:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ACTUATORS 105
 111:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DC_SHOT 110
 112:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_BOARD_RESULTS 111
 113:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MLX_SERIAL 113
 114:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD 114
 115:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HTM_STATUS 115
 116:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_MS5611 116
 117:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MS5611_COEFF 117
 118:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ATMOSPHERE_CHARGE 118
 119:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SOLAR_RADIATION 119
 120:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_TA 120
 121:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RA 121
 122:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_RESOLVED 122
 123:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TCAS_DEBUG 123
 124:/home/lsk/paparazzi/var/include/messages.h **** #define DL_POTENTIAL 124
 125:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERTICAL_ENERGY 125
 126:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_TCOUPLE 126
 127:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_STATUS 127
 128:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CAMERA_SNAPSHOT 128
 129:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIMESTAMP 129
 130:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_FLOAT 130
 131:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_SCALED 131
 132:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_SCALED 132
 133:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SCALED 133
 134:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER 134
 135:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER2 135
 136:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RATE_LOOP 136
 137:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_ALIGNER 137
 138:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_MS45XX 138
 139:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FILTER_COR 139
 140:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INT 140
 141:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_INT 141
 142:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_FLOAT 142
 143:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CMD 143
 144:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_INT 144
 145:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VERT_LOOP 145
 146:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HOVER_LOOP 146
 147:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_FP 147
 148:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEMP_ADC 148
 149:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_REF_INT 149
 150:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_TUNE_HOVER 150
 151:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_Z 151
 152:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PCAP01_STATUS 152
 153:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEIGER_COUNTER 153
 154:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_REF 154
 155:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_INT 155
 156:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER_INT 156
 157:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_QUAT_INT 157
 158:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_RMAT_INT 158
 159:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_NAV_STATUS 159
 160:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_RADIO_CONTROL 160
 161:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF_EXTENDED 161
 162:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VFF 162
 163:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GEO_MAG 163
 164:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF 164
 165:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_DBG 165
 166:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HFF_GPS 166
 167:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS_SONAR 167
 168:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CAM 168
 169:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_REF_QUAT 169
 170:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_XHAT 170
 171:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_Y 171
 172:/home/lsk/paparazzi/var/include/messages.h **** #define DL_EKF7_P_DIAG 172
 173:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER 173
 174:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_MEASUREMENT_EULER 174
 175:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WT 175
 176:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_DEBUG 176
 177:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_MSG 177
 178:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_GYRO_BIAS_INT 178
 179:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLOW_AP_OTF 179
 180:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FMS_TIME 180
 181:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOADCELL 181
 182:/home/lsk/paparazzi/var/include/messages.h **** #define DL_FLA_DEBUG 182
 183:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_FAULT_STATUS 183
 184:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_SPEEDS 184
 185:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_DEBUG_QUAT 185
 186:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BLMC_BUSVOLTS 186
 187:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SYSTEM_STATUS 187
 188:/home/lsk/paparazzi/var/include/messages.h **** #define DL_DYNAMIXEL 188
 189:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RMAT_DEBUG 189
 190:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SIMPLE_COMMANDS 190
 191:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VANE_SENSOR 191
 192:/home/lsk/paparazzi/var/include/messages.h **** #define DL_CONTROLLER_GAINS 192
 193:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF 193
 194:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_DEBUG 194
 195:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_ACC_DBG 195
 196:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_MAG_DBG 196
 197:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SENSORS_SCALED 197
 198:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INS 198
 199:/home/lsk/paparazzi/var/include/messages.h **** #define DL_GPS_ERROR 199
 200:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO 200
 201:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG 201
 202:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL 202
 203:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_RAW 203
 204:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_RAW 204
 205:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_RAW 205
 206:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SETTINGS 206
 207:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_CURRENT_CALIBRATION 207
 208:/home/lsk/paparazzi/var/include/messages.h **** #define DL_UART_ERRORS 208
 209:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_LP 209
 210:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_PRESSURE 210
 211:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_HS_GYRO 211
 212:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TEST_PASSTHROUGH_STATUS 212
 213:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TUNE_VERT 213
 214:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MF_DAQ_STATE 214
 215:/home/lsk/paparazzi/var/include/messages.h **** #define DL_INFO_MSG 215
 216:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BEBOP_ACTUATORS 218
 217:/home/lsk/paparazzi/var/include/messages.h **** #define DL_WEATHER 219
 218:/home/lsk/paparazzi/var/include/messages.h **** #define DL_IMU_TURNTABLE 220
 219:/home/lsk/paparazzi/var/include/messages.h **** #define DL_BARO_RAW 221
 220:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AIR_DATA 222
 221:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AMSL 223
 222:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VIDEO_SYNC 225
 223:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PERIODIC_TELEMETRY_ERR 226
 224:/home/lsk/paparazzi/var/include/messages.h **** #define DL_TIME 227
 225:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTIC_FLOW_EST 228
 226:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AHRS_ARDRONE2 230
 227:/home/lsk/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_STATUS 231
 228:/home/lsk/paparazzi/var/include/messages.h **** #define DL_STATE_FILTER_STATUS 232
 229:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PX4FLOW 233
 230:/home/lsk/paparazzi/var/include/messages.h **** #define DL_OPTICFLOW 234
 231:/home/lsk/paparazzi/var/include/messages.h **** #define DL_VISUALTARGET 235
 232:/home/lsk/paparazzi/var/include/messages.h **** #define DL_SONAR 236
 233:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PAYLOAD_FLOAT 237
 234:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_POS_LLH 238
 235:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RPMS 239
 236:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_SPEED_POS 240
 237:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RATE_ATTITUDE 241
 238:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_GYRO_BIAS 242
 239:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_RANGE_METER 243
 240:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_WIND 244
 241:/home/lsk/paparazzi/var/include/messages.h **** #define DL_PPRZ_DEBUG 247
 242:/home/lsk/paparazzi/var/include/messages.h **** #define DL_NPS_ACCEL_LTP 248
 243:/home/lsk/paparazzi/var/include/messages.h **** #define DL_LOOSE_INS_GPS 249
 244:/home/lsk/paparazzi/var/include/messages.h **** #define DL_AFL_COEFFS 250
 245:/home/lsk/paparazzi/var/include/messages.h **** #define DL_I2C_ERRORS 253
 246:/home/lsk/paparazzi/var/include/messages.h **** #define DL_RDYB_TRAJECTORY 254
 247:/home/lsk/paparazzi/var/include/messages.h **** #define DL_HENRY_GNSS 255
 248:/home/lsk/paparazzi/var/include/messages.h **** #define DL_MSG_telemetry_NB 239
 249:/home/lsk/paparazzi/var/include/messages.h **** 
 250:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AUTOPILOT_VERSION(_trans, _dev, version, nb_desc, desc) pprz_msg_send_AUTOPIL
 251:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AUTOPILOT_VERSION(struct transport_tx *trans, struct link_device *
 252:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 
 253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 /* msg heade
 254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_desc*1 +2 /* msg header overhead */);
 255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AUTOPILOT_VERSION, "
 257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _version);
 258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_desc)
 259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_desc, (void *) _desc);
 260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 261:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 262:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 263:/home/lsk/paparazzi/var/include/messages.h **** }
 264:/home/lsk/paparazzi/var/include/messages.h **** 
 265:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALIVE(_trans, _dev, nb_md5sum, md5sum) pprz_msg_send_ALIVE(&((_trans).trans_t
 266:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALIVE(struct transport_tx *trans, struct link_device *dev, uint8_t
 267:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 
 268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 /* msg heade
 269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_md5sum*1 +2 /* msg header overhead */);
 270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALIVE, "ALIVE");
 272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_md5su
 273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_md5sum, (void *) _md5s
 274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 275:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 277:/home/lsk/paparazzi/var/include/messages.h **** }
 278:/home/lsk/paparazzi/var/include/messages.h **** 
 279:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PONG(_trans, _dev) pprz_msg_send_PONG(&((_trans).trans_tx), &((_dev).device),
 280:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PONG(struct transport_tx *trans, struct link_device *dev, uint8_t 
 281:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header 
 282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header overhead */)
 283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0 +2 /* msg header overhead */);
 284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PONG, "PONG");
 286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 287:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 289:/home/lsk/paparazzi/var/include/messages.h **** }
 290:/home/lsk/paparazzi/var/include/messages.h **** 
 291:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TAKEOFF(_trans, _dev, cpu_time) pprz_msg_send_TAKEOFF(&((_trans).trans_tx), &
 292:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TAKEOFF(struct transport_tx *trans, struct link_device *dev, uint8
 293:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
 294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
 295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
 296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TAKEOFF, "TAKEOFF");
 298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cpu_time);
 299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 302:/home/lsk/paparazzi/var/include/messages.h **** }
 303:/home/lsk/paparazzi/var/include/messages.h **** 
 304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ARDRONE_NAVDATA(_trans, _dev, taille, nu_trame, ax, ay, az, vx, vy, vz, tempe
 305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ARDRONE_NAVDATA(struct transport_tx *trans, struct link_device *de
 306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
 308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+4+2+2+4+2+2+2+2+2
 309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ARDRONE_NAVDATA, "AR
 311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _taille);
 312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nu_trame);
 313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ax);
 314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ay);
 315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _az);
 316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vx);
 317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vy);
 318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vz);
 319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_ac
 320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_gy
 321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ultrasound);
 322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_debut_echo)
 323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_fin_echo);
 324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_association
 325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_distance_ec
 326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_time)
 327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_value
 328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_ref);
 329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nb_echo);
 330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sum_echo);
 331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _gradient);
 332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flag_echo_ini)
 333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_pr
 335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mx);
 336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _my);
 337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mz);
 338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _chksum);
 339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
 340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 341:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 343:/home/lsk/paparazzi/var/include/messages.h **** }
 344:/home/lsk/paparazzi/var/include/messages.h **** 
 345:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATTITUDE(_trans, _dev, phi, psi, theta) pprz_msg_send_ATTITUDE(&((_trans).tra
 346:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATTITUDE(struct transport_tx *trans, struct link_device *dev, uint
 347:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATTITUDE, "ATTITUDE"
 352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
 354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
 355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 356:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 358:/home/lsk/paparazzi/var/include/messages.h **** }
 359:/home/lsk/paparazzi/var/include/messages.h **** 
 360:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IR_SENSORS(_trans, _dev, ir1, ir2, longitudinal, lateral, vertical) pprz_msg_
 361:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IR_SENSORS(struct transport_tx *trans, struct link_device *dev, ui
 362:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* m
 363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* msg header ov
 364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2 +2 /* msg header overhead */);
 365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IR_SENSORS, "IR_SENS
 367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
 368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
 369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _longitudinal);
 370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lateral);
 371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vertical);
 372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 373:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 375:/home/lsk/paparazzi/var/include/messages.h **** }
 376:/home/lsk/paparazzi/var/include/messages.h **** 
 377:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS(_trans, _dev, mode, utm_east, utm_north, course, alt, speed, climb, week,
 378:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS(struct transport_tx *trans, struct link_device *dev, uint8_t a
 379:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4
 380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* m
 381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* msg header overhead */);
 382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS, "GPS");
 384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
 385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
 388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
 390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
 391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
 392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
 393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
 395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 396:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 398:/home/lsk/paparazzi/var/include/messages.h **** }
 399:/home/lsk/paparazzi/var/include/messages.h **** 
 400:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION_REF(_trans, _dev, utm_east, utm_north, utm_zone, ground_alt) pprz_
 401:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION_REF(struct transport_tx *trans, struct link_device *dev
 402:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg
 403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 412:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 414:/home/lsk/paparazzi/var/include/messages.h **** }
 415:/home/lsk/paparazzi/var/include/messages.h **** 
 416:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION(_trans, _dev, cur_block, cur_stage, pos_x, pos_y, dist_wp, dist_ho
 417:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION(struct transport_tx *trans, struct link_device *dev, ui
 418:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +
 419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 432:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 434:/home/lsk/paparazzi/var/include/messages.h **** }
 435:/home/lsk/paparazzi/var/include/messages.h **** 
 436:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPRZ_MODE(_trans, _dev, ap_mode, ap_gaz, ap_lateral, ap_horizontal, if_calib_
 437:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPRZ_MODE(struct transport_tx *trans, struct link_device *dev, uin
 438:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /*
 439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /* msg header 
 440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1 +2 /* msg header overhead */);
 441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPRZ_MODE, "PPRZ_MOD
 443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
 444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_gaz);
 445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_lateral);
 446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_horizontal);
 447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _if_calib_mode);
 448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu1_status);
 449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 450:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 452:/home/lsk/paparazzi/var/include/messages.h **** }
 453:/home/lsk/paparazzi/var/include/messages.h **** 
 454:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BAT(_trans, _dev, throttle, voltage, amps, flight_time, kill_auto_throttle, b
 455:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BAT(struct transport_tx *trans, struct link_device *dev, uint8_t a
 456:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +
 457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +2 /* msg hea
 458:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+2+2+2 +2 /* msg header overhead */);
 459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BAT, "BAT");
 461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
 462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _voltage);
 463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _amps);
 464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
 465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _kill_auto_throt
 466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
 467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
 468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 470:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 472:/home/lsk/paparazzi/var/include/messages.h **** }
 473:/home/lsk/paparazzi/var/include/messages.h **** 
 474:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_MCU_LINK(_trans, _dev, i2c_nb_err, i2c_mcu1_nb_err, ppm_rate) pprz_msg_
 475:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_MCU_LINK(struct transport_tx *trans, struct link_device *dev
 476:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
 477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
 478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
 479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_MCU_LINK, "DEB
 481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_nb_err);
 482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_mcu1_nb_err
 483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
 484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 485:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 487:/home/lsk/paparazzi/var/include/messages.h **** }
 488:/home/lsk/paparazzi/var/include/messages.h **** 
 489:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CALIBRATION(_trans, _dev, climb_sum_err, climb_gaz_submode) pprz_msg_send_CAL
 490:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CALIBRATION(struct transport_tx *trans, struct link_device *dev, u
 491:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg hea
 492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg header overhead
 493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1 +2 /* msg header overhead */);
 494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CALIBRATION, "CALIBR
 496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb_sum_err);
 497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _climb_gaz_submo
 498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 499:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 501:/home/lsk/paparazzi/var/include/messages.h **** }
 502:/home/lsk/paparazzi/var/include/messages.h **** 
 503:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SETTINGS(_trans, _dev, slider_1_val, slider_2_val) pprz_msg_send_SETTINGS(&((
 504:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SETTINGS(struct transport_tx *trans, struct link_device *dev, uint
 505:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SETTINGS, "SETTINGS"
 510:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_1_val);
 511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_2_val);
 512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 513:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 515:/home/lsk/paparazzi/var/include/messages.h **** }
 516:/home/lsk/paparazzi/var/include/messages.h **** 
 517:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DESIRED(_trans, _dev, roll, pitch, course, x, y, altitude, climb, airspeed) p
 518:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DESIRED(struct transport_tx *trans, struct link_device *dev, uint8
 519:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
 520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
 521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DESIRED, "DESIRED");
 524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll);
 525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch);
 526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
 527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
 528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
 529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
 531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 533:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 535:/home/lsk/paparazzi/var/include/messages.h **** }
 536:/home/lsk/paparazzi/var/include/messages.h **** 
 537:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_SOL(_trans, _dev, Pacc, Sacc, PDOP, numSV) pprz_msg_send_GPS_SOL(&((_tran
 538:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_SOL(struct transport_tx *trans, struct link_device *dev, uint8
 539:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg
 540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg header over
 541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+1 +2 /* msg header overhead */);
 542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_SOL, "GPS_SOL");
 544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Pacc);
 545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Sacc);
 546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PDOP);
 547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numSV);
 548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 549:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 551:/home/lsk/paparazzi/var/include/messages.h **** }
 552:/home/lsk/paparazzi/var/include/messages.h **** 
 553:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC_GENERIC(_trans, _dev, val1, val2) pprz_msg_send_ADC_GENERIC(&((_trans).tr
 554:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC_GENERIC(struct transport_tx *trans, struct link_device *dev, u
 555:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
 556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
 557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
 558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC_GENERIC, "ADC_GE
 560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
 561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
 562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 563:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 565:/home/lsk/paparazzi/var/include/messages.h **** }
 566:/home/lsk/paparazzi/var/include/messages.h **** 
 567:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_FORMAT(_trans, _dev, val1, val2) pprz_msg_send_TEST_FORMAT(&((_trans).tr
 568:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_FORMAT(struct transport_tx *trans, struct link_device *dev, u
 569:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg hea
 570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg header overhead
 571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+8+4 +2 /* msg header overhead */);
 572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_FORMAT, "TEST_F
 574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_DOUBLE, DL_FORMAT_SCALAR, 8, (void *) _val1);
 575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _val2);
 576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 577:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 579:/home/lsk/paparazzi/var/include/messages.h **** }
 580:/home/lsk/paparazzi/var/include/messages.h **** 
 581:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM(_trans, _dev, phi, theta, target_x, target_y) pprz_msg_send_CAM(&((_trans
 582:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM(struct transport_tx *trans, struct link_device *dev, uint8_t a
 583:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM, "CAM");
 588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
 589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
 590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_x);
 591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_y);
 592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 595:/home/lsk/paparazzi/var/include/messages.h **** }
 596:/home/lsk/paparazzi/var/include/messages.h **** 
 597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CIRCLE(_trans, _dev, center_east, center_north, radius) pprz_msg_send_CIRCLE(
 598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CIRCLE(struct transport_tx *trans, struct link_device *dev, uint8_
 599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 610:/home/lsk/paparazzi/var/include/messages.h **** }
 611:/home/lsk/paparazzi/var/include/messages.h **** 
 612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SEGMENT(_trans, _dev, segment_east_1, segment_north_1, segment_east_2, segmen
 613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SEGMENT(struct transport_tx *trans, struct link_device *dev, uint8
 614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 624:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 626:/home/lsk/paparazzi/var/include/messages.h **** }
 627:/home/lsk/paparazzi/var/include/messages.h **** 
 628:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SVINFO(_trans, _dev, chn, SVID, Flags, QI, CNO, Elev, Azim) pprz_msg_send_SVI
 629:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SVINFO(struct transport_tx *trans, struct link_device *dev, uint8_
 630:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 
 631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 /* msg heade
 632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1+2 +2 /* msg header overhead */);
 633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SVINFO, "SVINFO");
 635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _chn);
 636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _SVID);
 637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _Flags);
 638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _QI);
 639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _CNO);
 640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _Elev);
 641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _Azim);
 642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 643:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 645:/home/lsk/paparazzi/var/include/messages.h **** }
 646:/home/lsk/paparazzi/var/include/messages.h **** 
 647:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG(_trans, _dev, nb_msg, msg) pprz_msg_send_DEBUG(&((_trans).trans_tx), &(
 648:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG(struct transport_tx *trans, struct link_device *dev, uint8_t
 649:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
 650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
 651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
 652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG, "DEBUG");
 654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
 655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
 656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 657:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 659:/home/lsk/paparazzi/var/include/messages.h **** }
 660:/home/lsk/paparazzi/var/include/messages.h **** 
 661:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SURVEY(_trans, _dev, east, north, west, south) pprz_msg_send_SURVEY(&((_trans
 662:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SURVEY(struct transport_tx *trans, struct link_device *dev, uint8_
 663:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 673:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 675:/home/lsk/paparazzi/var/include/messages.h **** }
 676:/home/lsk/paparazzi/var/include/messages.h **** 
 677:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WC_RSSI(_trans, _dev, raw_level) pprz_msg_send_WC_RSSI(&((_trans).trans_tx), 
 678:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WC_RSSI(struct transport_tx *trans, struct link_device *dev, uint8
 679:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
 680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
 681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
 682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WC_RSSI, "WC_RSSI");
 684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _raw_level);
 685:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 686:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 688:/home/lsk/paparazzi/var/include/messages.h **** }
 689:/home/lsk/paparazzi/var/include/messages.h **** 
 690:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RANGEFINDER(_trans, _dev, range, z_dot, z_dot_sum_err, z_dot_setpoint, z_sum_
 691:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RANGEFINDER(struct transport_tx *trans, struct link_device *dev, u
 692:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 
 693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 /* msg heade
 694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+1 +2 /* msg header overhead */);
 695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RANGEFINDER, "RANGEF
 697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _range);
 698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_sum_err);
 700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_setpoint)
 701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_sum_err);
 702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_setpoint);
 703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _flying);
 704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 705:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 707:/home/lsk/paparazzi/var/include/messages.h **** }
 708:/home/lsk/paparazzi/var/include/messages.h **** 
 709:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DATALINK_REPORT(_trans, _dev, uplink_lost_time, uplink_nb_msgs, downlink_nb_m
 710:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DATALINK_REPORT(struct transport_tx *trans, struct link_device *de
 711:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* m
 712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* msg header ov
 713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1 +2 /* msg header overhead */);
 714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DATALINK_REPORT, "DA
 716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_lost_ti
 717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_nb_msgs
 718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_nb_ms
 719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_rate)
 720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _downlink_ovrn);
 721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 722:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 724:/home/lsk/paparazzi/var/include/messages.h **** }
 725:/home/lsk/paparazzi/var/include/messages.h **** 
 726:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DL_VALUE(_trans, _dev, index, value) pprz_msg_send_DL_VALUE(&((_trans).trans_
 727:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DL_VALUE(struct transport_tx *trans, struct link_device *dev, uint
 728:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
 729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
 730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
 731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DL_VALUE, "DL_VALUE"
 733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _index);
 734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _value);
 735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 738:/home/lsk/paparazzi/var/include/messages.h **** }
 739:/home/lsk/paparazzi/var/include/messages.h **** 
 740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MARK(_trans, _dev, ac_id, lat, long) pprz_msg_send_MARK(&((_trans).trans_tx),
 741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MARK(struct transport_tx *trans, struct link_device *dev, uint8_t 
 742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg h
 743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg header overhe
 744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4 +2 /* msg header overhead */);
 745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MARK, "MARK");
 747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
 748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
 749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _long);
 750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 753:/home/lsk/paparazzi/var/include/messages.h **** }
 754:/home/lsk/paparazzi/var/include/messages.h **** 
 755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYS_MON(_trans, _dev, periodic_time, periodic_time_min, periodic_time_max, pe
 756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYS_MON(struct transport_tx *trans, struct link_device *dev, uint8
 757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +
 758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +2 /* msg hea
 759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+1 +2 /* msg header overhead */);
 760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYS_MON, "SYS_MON");
 762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time)
 763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _event_number);
 769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cpu_load);
 770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 771:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 773:/home/lsk/paparazzi/var/include/messages.h **** }
 774:/home/lsk/paparazzi/var/include/messages.h **** 
 775:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR(_trans, _dev, rpm, current) pprz_msg_send_MOTOR(&((_trans).trans_tx), &
 776:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR(struct transport_tx *trans, struct link_device *dev, uint8_t
 777:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
 778:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
 779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
 780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR, "MOTOR");
 782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm);
 783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
 784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 785:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 787:/home/lsk/paparazzi/var/include/messages.h **** }
 788:/home/lsk/paparazzi/var/include/messages.h **** 
 789:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED(_trans, _dev, wp_id, utm_east, utm_north, alt, utm_zone) pprz_msg_se
 790:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED(struct transport_tx *trans, struct link_device *dev, uint
 791:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* msg header ov
 793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4+1 +2 /* msg header overhead */);
 794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 795:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED, "WP_MOVED"
 796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 797:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 798:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 799:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 802:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 804:/home/lsk/paparazzi/var/include/messages.h **** }
 805:/home/lsk/paparazzi/var/include/messages.h **** 
 806:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MKK(_trans, _dev, nr, rpm, current, temp) pprz_msg_send_MKK(&((_trans).trans_
 807:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MKK(struct transport_tx *trans, struct link_device *dev, uint8_t a
 808:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg
 809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1 +2 /* msg header over
 810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1 +2 /* msg header overhead */);
 811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MKK, "MKK");
 813:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nr);
 814:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rpm);
 815:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _current);
 816:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _temp);
 817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 818:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 820:/home/lsk/paparazzi/var/include/messages.h **** }
 821:/home/lsk/paparazzi/var/include/messages.h **** 
 822:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENERGY(_trans, _dev, bat, amp, energy, power) pprz_msg_send_ENERGY(&((_trans)
 823:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENERGY(struct transport_tx *trans, struct link_device *dev, uint8_
 824:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg
 825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+4 +2 /* msg header over
 826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+4 +2 /* msg header overhead */);
 827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENERGY, "ENERGY");
 829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bat);
 830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _amp);
 831:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _power);
 833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 834:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 836:/home/lsk/paparazzi/var/include/messages.h **** }
 837:/home/lsk/paparazzi/var/include/messages.h **** 
 838:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85_CALIB(_trans, _dev, a1, a2, a3, a4, a5, a6, b1, b2, mb, mc, md) pp
 839:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85_CALIB(struct transport_tx *trans, struct link_device *d
 840:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* m
 842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
 843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85_CALIB, "B
 845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a1);
 846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a2);
 847:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a3);
 848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a4);
 849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a5);
 850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _a6);
 851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b1);
 852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _b2);
 853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mb);
 854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mc);
 855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _md);
 856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 859:/home/lsk/paparazzi/var/include/messages.h **** }
 860:/home/lsk/paparazzi/var/include/messages.h **** 
 861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_BMP85(_trans, _dev, UT, UP, P, T, MSL) pprz_msg_send_BARO_BMP85(&((_tran
 862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_BMP85(struct transport_tx *trans, struct link_device *dev, ui
 863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
 864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
 865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
 866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_BMP85, "BARO_BM
 868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
 869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
 870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _P);
 871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _T);
 872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _MSL);
 873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 874:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 876:/home/lsk/paparazzi/var/include/messages.h **** }
 877:/home/lsk/paparazzi/var/include/messages.h **** 
 878:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SPEED_LOOP(_trans, _dev, ve_set_point, ve, vn_set_point, vn, north_sp, east_s
 879:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SPEED_LOOP(struct transport_tx *trans, struct link_device *dev, ui
 880:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
 881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
 882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
 883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SPEED_LOOP, "SPEED_L
 885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve_set_point);
 886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ve);
 887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn_set_point);
 888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vn);
 889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north_sp);
 890:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east_sp);
 891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 892:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 894:/home/lsk/paparazzi/var/include/messages.h **** }
 895:/home/lsk/paparazzi/var/include/messages.h **** 
 896:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALT_KALMAN(_trans, _dev, p00, p01, p10, p11) pprz_msg_send_ALT_KALMAN(&((_tra
 897:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALT_KALMAN(struct transport_tx *trans, struct link_device *dev, ui
 898:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALT_KALMAN, "ALT_KAL
 903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p00);
 904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p01);
 905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p10);
 906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p11);
 907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 910:/home/lsk/paparazzi/var/include/messages.h **** }
 911:/home/lsk/paparazzi/var/include/messages.h **** 
 912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ESTIMATOR(_trans, _dev, z, z_dot) pprz_msg_send_ESTIMATOR(&((_trans).trans_tx
 913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ESTIMATOR(struct transport_tx *trans, struct link_device *dev, uin
 914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ESTIMATOR, "ESTIMATO
 919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
 920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 922:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 924:/home/lsk/paparazzi/var/include/messages.h **** }
 925:/home/lsk/paparazzi/var/include/messages.h **** 
 926:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_ROLL(_trans, _dev, p, phi, phi_sp) pprz_msg_send_TUNE_ROLL(&((_trans).tr
 927:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_ROLL(struct transport_tx *trans, struct link_device *dev, uin
 928:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_ROLL, "TUNE_ROL
 933:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
 934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 935:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_sp);
 936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 937:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 939:/home/lsk/paparazzi/var/include/messages.h **** }
 940:/home/lsk/paparazzi/var/include/messages.h **** 
 941:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5534A(_trans, _dev, pressure, temp, alt) pprz_msg_send_BARO_MS5534A(&(
 942:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5534A(struct transport_tx *trans, struct link_device *dev, 
 943:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
 944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
 945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
 946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5534A, "BARO_
 948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
 950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 952:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 954:/home/lsk/paparazzi/var/include/messages.h **** }
 955:/home/lsk/paparazzi/var/include/messages.h **** 
 956:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PRESSURE(_trans, _dev, airspeed_adc, airspeed, altitude_adc, altitude) pprz_m
 957:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PRESSURE(struct transport_tx *trans, struct link_device *dev, uint
 958:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PRESSURE, "PRESSURE"
 963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_adc);
 964:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude_adc);
 966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 968:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 970:/home/lsk/paparazzi/var/include/messages.h **** }
 971:/home/lsk/paparazzi/var/include/messages.h **** 
 972:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_WORDS(_trans, _dev, w1, w2, w3, w4) pprz_msg_send_BARO_WORDS(&((_trans).
 973:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_WORDS(struct transport_tx *trans, struct link_device *dev, ui
 974:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_WORDS, "BARO_WO
 979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w1);
 980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w2);
 981:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w3);
 982:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _w4);
 983:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 984:/home/lsk/paparazzi/var/include/messages.h **** 	} else
 985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 986:/home/lsk/paparazzi/var/include/messages.h **** }
 987:/home/lsk/paparazzi/var/include/messages.h **** 
 988:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_LLA(_trans, _dev, wp_id, lat, lon, alt) pprz_msg_send_WP_MOVED_LLA(&
 989:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_LLA(struct transport_tx *trans, struct link_device *dev, 
 990:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
 991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
 992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
 993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_LLA, "WP_MO
 995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
 997:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
 998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 999:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1000:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1002:/home/lsk/paparazzi/var/include/messages.h **** }
1003:/home/lsk/paparazzi/var/include/messages.h **** 
1004:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CHRONO(_trans, _dev, tag, time) pprz_msg_send_CHRONO(&((_trans).trans_tx), &(
1005:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CHRONO(struct transport_tx *trans, struct link_device *dev, uint8_
1006:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
1007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
1008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
1009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CHRONO, "CHRONO");
1011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tag);
1012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time);
1013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1014:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1016:/home/lsk/paparazzi/var/include/messages.h **** }
1017:/home/lsk/paparazzi/var/include/messages.h **** 
1018:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED_ENU(_trans, _dev, wp_id, east, north, up) pprz_msg_send_WP_MOVED_ENU
1019:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED_ENU(struct transport_tx *trans, struct link_device *dev, 
1020:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg
1021:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4 +2 /* msg header over
1022:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4 +2 /* msg header overhead */);
1023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED_ENU, "WP_MO
1025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
1026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
1027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
1028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
1029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1030:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1032:/home/lsk/paparazzi/var/include/messages.h **** }
1033:/home/lsk/paparazzi/var/include/messages.h **** 
1034:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WINDTURBINE_STATUS_(_trans, _dev, ac_id, tb_id, sync_itow, cycle_time) pprz_m
1035:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WINDTURBINE_STATUS_(struct transport_tx *trans, struct link_device
1036:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg
1037:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4 +2 /* msg header over
1038:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4 +2 /* msg header overhead */);
1039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WINDTURBINE_STATUS_,
1041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _tb_id);
1043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sync_itow);
1044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _cycle_time);
1045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1048:/home/lsk/paparazzi/var/include/messages.h **** }
1049:/home/lsk/paparazzi/var/include/messages.h **** 
1050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC_3CH_(_trans, _dev, throttle_mode, roll, pitch) pprz_msg_send_RC_3CH_(&((_t
1051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC_3CH_(struct transport_tx *trans, struct link_device *dev, uint8
1052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC_3CH_, "RC_3CH_");
1057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle_mode);
1058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _roll);
1059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _pitch);
1060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1061:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1063:/home/lsk/paparazzi/var/include/messages.h **** }
1064:/home/lsk/paparazzi/var/include/messages.h **** 
1065:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPPT(_trans, _dev, nb_values, values) pprz_msg_send_MPPT(&((_trans).trans_tx)
1066:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPPT(struct transport_tx *trans, struct link_device *dev, uint8_t 
1067:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPPT, "MPPT");
1072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1075:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1077:/home/lsk/paparazzi/var/include/messages.h **** }
1078:/home/lsk/paparazzi/var/include/messages.h **** 
1079:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_IR_I2C(_trans, _dev, ir1, ir2, top) pprz_msg_send_DEBUG_IR_I2C(&((_tran
1080:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_IR_I2C(struct transport_tx *trans, struct link_device *dev, 
1081:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
1082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
1083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
1084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_IR_I2C, "DEBUG
1086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
1087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
1088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _top);
1089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1090:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1092:/home/lsk/paparazzi/var/include/messages.h **** }
1093:/home/lsk/paparazzi/var/include/messages.h **** 
1094:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED(_trans, _dev, airspeed, airspeed_sp, airspeed_cnt, groundspeed_sp) p
1095:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED(struct transport_tx *trans, struct link_device *dev, uint
1096:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED, "AIRSPEED"
1101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_sp);
1103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed_cnt);
1104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _groundspeed_sp)
1105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1106:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1108:/home/lsk/paparazzi/var/include/messages.h **** }
1109:/home/lsk/paparazzi/var/include/messages.h **** 
1110:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XSENS(_trans, _dev, counter, p, q, r, phi, theta, psi, ax, ay, az, vx, vy, vz
1111:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XSENS(struct transport_tx *trans, struct link_device *dev, uint8_t
1112:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
1113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+1+1+1+1+4+2+1+1 +2 /* m
1115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XSENS, "XSENS");
1117:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _counter);
1118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
1119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
1120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
1121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
1124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
1125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
1126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
1127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vx);
1128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vy);
1129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _vz);
1130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
1131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lon);
1132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1134:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _hour);
1135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _min);
1136:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _sec);
1137:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _nanosec);
1138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _year);
1139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _month);
1140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _day);
1141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1142:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1144:/home/lsk/paparazzi/var/include/messages.h **** }
1145:/home/lsk/paparazzi/var/include/messages.h **** 
1146:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_BARO_ETS(&((_trans)
1147:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_ETS(struct transport_tx *trans, struct link_device *dev, uint
1148:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_ETS, "BARO_ETS"
1153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1157:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1159:/home/lsk/paparazzi/var/include/messages.h **** }
1160:/home/lsk/paparazzi/var/include/messages.h **** 
1161:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_ETS(_trans, _dev, adc, offset, scaled) pprz_msg_send_AIRSPEED_ETS(&(
1162:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_ETS(struct transport_tx *trans, struct link_device *dev, 
1163:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg h
1164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4 +2 /* msg header overhe
1165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4 +2 /* msg header overhead */);
1166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_ETS, "AIRSP
1168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adc);
1169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _offset);
1170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _scaled);
1171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1172:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1174:/home/lsk/paparazzi/var/include/messages.h **** }
1175:/home/lsk/paparazzi/var/include/messages.h **** 
1176:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PBN(_trans, _dev, airspeed_adc, altitude_adc, airspeed, altitude, airspeed_of
1177:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PBN(struct transport_tx *trans, struct link_device *dev, uint8_t a
1178:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /*
1179:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+2+2 +2 /* msg header 
1180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+2+2 +2 /* msg header overhead */);
1181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PBN, "PBN");
1183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_adc);
1184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_adc);
1185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
1187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed_offse
1188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _altitude_offse
1189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1190:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1192:/home/lsk/paparazzi/var/include/messages.h **** }
1193:/home/lsk/paparazzi/var/include/messages.h **** 
1194:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_LLA(_trans, _dev, lat, lon, alt, course, speed, climb, week, itow, mode, 
1195:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_LLA(struct transport_tx *trans, struct link_device *dev, uint8
1196:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1
1197:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg
1198:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2+2+2+2+4+1+1 +2 /* msg header overhead */);
1199:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_LLA, "GPS_LLA");
1201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
1206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
1207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
1208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
1209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
1211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1212:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1214:/home/lsk/paparazzi/var/include/messages.h **** }
1215:/home/lsk/paparazzi/var/include/messages.h **** 
1216:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_H_CTL_A(_trans, _dev, roll_sum_err, roll_sp, roll_ref, phi, aileron_sp, pitch
1217:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_H_CTL_A(struct transport_tx *trans, struct link_device *dev, uint8
1218:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4
1219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg
1220:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+2+4+4+4+4+2 +2 /* msg header overhead */);
1221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1222:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_H_CTL_A, "H_CTL_A");
1223:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sum_err);
1224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_sp);
1225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_ref);
1226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
1227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _aileron_sp);
1228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sum_err);
1229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_sp);
1230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_ref);
1231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
1232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _elevator_sp);
1233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1234:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1236:/home/lsk/paparazzi/var/include/messages.h **** }
1237:/home/lsk/paparazzi/var/include/messages.h **** 
1238:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_RAW(_trans, _dev, ch_0, ch_1, ch_2, ch_3, ch_4, ch_5, ch_6, ch_
1239:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_RAW(struct transport_tx *trans, struct link_device *
1240:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_RAW, "
1245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_0);
1246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_1);
1247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_2);
1248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_3);
1249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_4);
1250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_5);
1251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_6);
1252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_7);
1253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_8);
1254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_9);
1255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_10);
1256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_11);
1257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_12);
1258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_13);
1259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_14);
1260:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ch_15);
1261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1262:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1264:/home/lsk/paparazzi/var/include/messages.h **** }
1265:/home/lsk/paparazzi/var/include/messages.h **** 
1266:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TURB_PRESSURE_VOLTAGE(_trans, _dev, ch_1_p, ch_1_t, ch_2_p, ch_2_t, ch_3_p, c
1267:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TURB_PRESSURE_VOLTAGE(struct transport_tx *trans, struct link_devi
1268:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
1271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TURB_PRESSURE_VOLTAG
1273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_p);
1274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_1_t);
1275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_p);
1276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_2_t);
1277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_p);
1278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_3_t);
1279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_p);
1280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_4_t);
1281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_p);
1282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_5_t);
1283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_p);
1284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_6_t);
1285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_p);
1286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ch_7_t);
1287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd1);
1288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gnd2);
1289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1292:/home/lsk/paparazzi/var/include/messages.h **** }
1293:/home/lsk/paparazzi/var/include/messages.h **** 
1294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM_POINT(_trans, _dev, cam_point_distance_from_home, cam_point_lat, cam_poin
1295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM_POINT(struct transport_tx *trans, struct link_device *dev, uin
1296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM_POINT, "CAM_POIN
1301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cam_point_dist
1302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lat);
1303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cam_point_lon);
1304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1307:/home/lsk/paparazzi/var/include/messages.h **** }
1308:/home/lsk/paparazzi/var/include/messages.h **** 
1309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_INFO(_trans, _dev, mode, lat, lon, alt, course, photo_nr, dist, next_dist,
1310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_INFO(struct transport_tx *trans, struct link_device *dev, uint8
1311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4
1312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1
1313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+4+4+4+4+4+4+4+2+1 +2 /* msg header overhead
1314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_INFO, "DC_INFO");
1316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
1317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
1320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
1321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
1322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist);
1323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _next_dist);
1324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_x);
1325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_y);
1326:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _start_angle);
1327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _angle);
1328:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _last_block);
1329:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _count);
1330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _shutter);
1331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1332:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1334:/home/lsk/paparazzi/var/include/messages.h **** }
1335:/home/lsk/paparazzi/var/include/messages.h **** 
1336:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_BARO(_trans, _dev, pBaroRaw, pBaro, pHomePressure, AltOffset, aktuell, 
1337:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_BARO(struct transport_tx *trans, struct link_device *dev, ui
1338:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 
1339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4 +2 /* msg heade
1340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4 +2 /* msg header overhead */);
1341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_BARO, "AMSYS_B
1343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pBaroRaw);
1344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pBaro);
1345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pHomePressure);
1346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AltOffset);
1347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _aktuell);
1348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Over_Ground);
1349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tempBaro);
1350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1353:/home/lsk/paparazzi/var/include/messages.h **** }
1354:/home/lsk/paparazzi/var/include/messages.h **** 
1355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AMSYS_AIRSPEED(_trans, _dev, asRaw, asPresure, asAirspeed, asAirsFilt, asTemp
1356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AMSYS_AIRSPEED(struct transport_tx *trans, struct link_device *dev
1357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* m
1358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4 +2 /* msg header ov
1359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4 +2 /* msg header overhead */);
1360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AMSYS_AIRSPEED, "AMS
1362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _asRaw);
1363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asPresure);
1364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirspeed);
1365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asAirsFilt);
1366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _asTemp);
1367:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1368:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1370:/home/lsk/paparazzi/var/include/messages.h **** }
1371:/home/lsk/paparazzi/var/include/messages.h **** 
1372:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLIGHT_BENCHMARK(_trans, _dev, SE_As, SE_Alt, SE_Pos, Err_As, Err_Alt, Err_Po
1373:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLIGHT_BENCHMARK(struct transport_tx *trans, struct link_device *d
1374:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
1375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
1376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
1377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLIGHT_BENCHMARK, "F
1379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_As);
1380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Alt);
1381:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _SE_Pos);
1382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_As);
1383:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Alt);
1384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Err_Pos);
1385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1386:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1388:/home/lsk/paparazzi/var/include/messages.h **** }
1389:/home/lsk/paparazzi/var/include/messages.h **** 
1390:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MPL3115_BARO(_trans, _dev, pressure, temp, alt) pprz_msg_send_MPL3115_BARO(&(
1391:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MPL3115_BARO(struct transport_tx *trans, struct link_device *dev, 
1392:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
1393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
1394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
1395:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MPL3115_BARO, "MPL31
1397:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
1398:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
1400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1401:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1403:/home/lsk/paparazzi/var/include/messages.h **** }
1404:/home/lsk/paparazzi/var/include/messages.h **** 
1405:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AOA_ADC(_trans, _dev, adcVal, AOA) pprz_msg_send_AOA_ADC(&((_trans).trans_tx)
1406:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AOA_ADC(struct transport_tx *trans, struct link_device *dev, uint8
1407:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AOA_ADC, "AOA_ADC");
1412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _adcVal);
1413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _AOA);
1414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1415:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1417:/home/lsk/paparazzi/var/include/messages.h **** }
1418:/home/lsk/paparazzi/var/include/messages.h **** 
1419:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_XTEND_RSSI(_trans, _dev, datalink_time, rssi_fade_margin, duty) pprz_msg_send
1420:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_XTEND_RSSI(struct transport_tx *trans, struct link_device *dev, ui
1421:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg h
1422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+1+1 +2 /* msg header overhe
1423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+1+1 +2 /* msg header overhead */);
1424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_XTEND_RSSI, "XTEND_R
1426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _datalink_time)
1427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rssi_fade_margi
1428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _duty);
1429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1430:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1432:/home/lsk/paparazzi/var/include/messages.h **** }
1433:/home/lsk/paparazzi/var/include/messages.h **** 
1434:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SUPERBITRF(_trans, _dev, status, cyrf_status, irq_count, rx_packet_count, tx_
1435:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SUPERBITRF(struct transport_tx *trans, struct link_device *dev, ui
1436:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4
1437:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_
1438:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+4+4+4+4+4+4+1+nb_mfg_id*1 +2 /* msg header 
1439:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SUPERBITRF, "SUPERBI
1441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cyrf_status);
1443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _irq_count);
1444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rx_packet_coun
1445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tx_packet_coun
1446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _transfer_timeo
1447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _resync_count);
1448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _uplink_count);
1449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_count);
1450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing1);
1451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timing2);
1452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _bind_mfg_id);
1453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_mfg_i
1454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_mfg_id, (void *) _mfg_
1455:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1456:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1457:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1458:/home/lsk/paparazzi/var/include/messages.h **** }
1459:/home/lsk/paparazzi/var/include/messages.h **** 
1460:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GX3_INFO(_trans, _dev, GX3_freq, chksm_error, hdr_error, GX3_chksm) pprz_msg_
1461:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GX3_INFO(struct transport_tx *trans, struct link_device *dev, uint
1462:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GX3_INFO, "GX3_INFO"
1467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _GX3_freq);
1468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _chksm_error);
1469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _hdr_error);
1470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _GX3_chksm);
1471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1472:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1474:/home/lsk/paparazzi/var/include/messages.h **** }
1475:/home/lsk/paparazzi/var/include/messages.h **** 
1476:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EXPLAIN(_trans, _dev, type, id, nb_string, string) pprz_msg_send_EXPLAIN(&((_
1477:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EXPLAIN(struct transport_tx *trans, struct link_device *dev, uint8
1478:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1
1479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_string*1 +2 /* msg h
1480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_string*1 +2 /* msg header overhead */);
1481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EXPLAIN, "EXPLAIN");
1483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _type);
1484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id);
1485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_strin
1486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_string, (void *) _stri
1487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1488:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1490:/home/lsk/paparazzi/var/include/messages.h **** }
1491:/home/lsk/paparazzi/var/include/messages.h **** 
1492:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VIDEO_TELEMETRY(_trans, _dev, blob_x1, blob_y1, blob_x2, blob_y2, blob_x3, bl
1493:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VIDEO_TELEMETRY(struct transport_tx *trans, struct link_device *de
1494:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
1495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
1496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
1497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VIDEO_TELEMETRY, "VI
1499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x1);
1500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y1);
1501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x2);
1502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y2);
1503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x3);
1504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y3);
1505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_x4);
1506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _blob_y4);
1507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1508:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1510:/home/lsk/paparazzi/var/include/messages.h **** }
1511:/home/lsk/paparazzi/var/include/messages.h **** 
1512:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_UPDATE(_trans, _dev, baro, range_meter) pprz_msg_send_VF_UPDATE(&((_trans)
1513:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_UPDATE(struct transport_tx *trans, struct link_device *dev, uin
1514:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_UPDATE, "VF_UPDAT
1519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro);
1520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _range_meter);
1521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1522:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1524:/home/lsk/paparazzi/var/include/messages.h **** }
1525:/home/lsk/paparazzi/var/include/messages.h **** 
1526:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VF_PREDICT(_trans, _dev, accel) pprz_msg_send_VF_PREDICT(&((_trans).trans_tx)
1527:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VF_PREDICT(struct transport_tx *trans, struct link_device *dev, ui
1528:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
1529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
1530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
1531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VF_PREDICT, "VF_PRED
1533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _accel);
1534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1535:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1537:/home/lsk/paparazzi/var/include/messages.h **** }
1538:/home/lsk/paparazzi/var/include/messages.h **** 
1539:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INV_FILTER(_trans, _dev, quat, phi_inv, theta_inv, psi_inv, Vx_inv, Vy_inv, V
1540:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INV_FILTER(struct transport_tx *trans, struct link_device *dev, ui
1541:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
1542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
1543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
1544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INV_FILTER, "INV_FIL
1546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat);
1547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_inv);
1548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_inv);
1549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_inv);
1550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vx_inv);
1551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vy_inv);
1552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Vz_inv);
1553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Px_inv);
1554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Py_inv);
1555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pz_inv);
1556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_phi);
1557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_theta);
1558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_psi);
1559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_as);
1560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias_hb);
1561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
1562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_gps);
1563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1564:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1566:/home/lsk/paparazzi/var/include/messages.h **** }
1567:/home/lsk/paparazzi/var/include/messages.h **** 
1568:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MISSION_STATUS(_trans, _dev, remaining_time, nb_task_list, task_list) pprz_ms
1569:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MISSION_STATUS(struct transport_tx *trans, struct link_device *dev
1570:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*
1571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_task_list*1 +2 /* msg 
1572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_task_list*1 +2 /* msg header overhead */);
1573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MISSION_STATUS, "MIS
1575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _remaining_time)
1576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_task_
1577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_task_list, (void *) _t
1578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1579:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1581:/home/lsk/paparazzi/var/include/messages.h **** }
1582:/home/lsk/paparazzi/var/include/messages.h **** 
1583:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CROSS_TRACK_ERROR(_trans, _dev, cross_track_error, cte_int) pprz_msg_send_CRO
1584:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CROSS_TRACK_ERROR(struct transport_tx *trans, struct link_device *
1585:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CROSS_TRACK_ERROR, "
1590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cross_track_err
1591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _cte_int);
1592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1593:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1595:/home/lsk/paparazzi/var/include/messages.h **** }
1596:/home/lsk/paparazzi/var/include/messages.h **** 
1597:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GENERIC_COM(_trans, _dev, lat, lon, alt, gspeed, course, airspeed, vsupply, e
1598:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GENERIC_COM(struct transport_tx *trans, struct link_device *dev, u
1599:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1
1600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /*
1601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+2+2+2+1+1+1+1+1+2 +2 /* msg header overhead */);
1602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GENERIC_COM, "GENERI
1604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
1605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
1606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _alt);
1607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _gspeed);
1608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
1609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _airspeed);
1610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _vsupply);
1611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _energy);
1612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _throttle);
1613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
1614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _nav_block);
1615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
1616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1617:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1619:/home/lsk/paparazzi/var/include/messages.h **** }
1620:/home/lsk/paparazzi/var/include/messages.h **** 
1621:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_SLOT_TM(_trans, _dev, ac_id, mode, slot_east, slot_north, slot_alt)
1622:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_SLOT_TM(struct transport_tx *trans, struct link_device *
1623:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* m
1624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4 +2 /* msg header ov
1625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4 +2 /* msg header overhead */);
1626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_SLOT_TM, "
1628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_east);
1631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_north);
1632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slot_alt);
1633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1634:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1636:/home/lsk/paparazzi/var/include/messages.h **** }
1637:/home/lsk/paparazzi/var/include/messages.h **** 
1638:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FORMATION_STATUS_TM(_trans, _dev, ac_id, leader_id, status) pprz_msg_send_FOR
1639:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FORMATION_STATUS_TM(struct transport_tx *trans, struct link_device
1640:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
1641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
1642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
1643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FORMATION_STATUS_TM,
1645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
1646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _leader_id);
1647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
1648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1649:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1651:/home/lsk/paparazzi/var/include/messages.h **** }
1652:/home/lsk/paparazzi/var/include/messages.h **** 
1653:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BMP_STATUS(_trans, _dev, UP, UT, press, temp) pprz_msg_send_BMP_STATUS(&((_tr
1654:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1655:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
1656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
1657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
1658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BMP_STATUS, "BMP_STA
1660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UP);
1661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _UT);
1662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _temp);
1664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1665:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1667:/home/lsk/paparazzi/var/include/messages.h **** }
1668:/home/lsk/paparazzi/var/include/messages.h **** 
1669:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_STATUS(_trans, _dev, itemp_case, temp_case, itemp_obj, temp_obj) pprz_msg
1670:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1671:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg
1672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+2+4 +2 /* msg header over
1673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+2+4 +2 /* msg header overhead */);
1674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_STATUS, "MLX_STA
1676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_case);
1677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_case);
1678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp_obj);
1679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp_obj);
1680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1681:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1683:/home/lsk/paparazzi/var/include/messages.h **** }
1684:/home/lsk/paparazzi/var/include/messages.h **** 
1685:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TMP_STATUS(_trans, _dev, itemp, temp) pprz_msg_send_TMP_STATUS(&((_trans).tra
1686:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TMP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1687:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TMP_STATUS, "TMP_STA
1692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1695:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1697:/home/lsk/paparazzi/var/include/messages.h **** }
1698:/home/lsk/paparazzi/var/include/messages.h **** 
1699:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WIND_INFO_RET(_trans, _dev, east, north, airspeed) pprz_msg_send_WIND_INFO_RE
1700:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WIND_INFO_RET(struct transport_tx *trans, struct link_device *dev,
1701:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
1702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
1703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
1704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WIND_INFO_RET, "WIND
1706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
1707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
1708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
1709:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1710:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1712:/home/lsk/paparazzi/var/include/messages.h **** }
1713:/home/lsk/paparazzi/var/include/messages.h **** 
1714:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SCP_STATUS(_trans, _dev, press, temp) pprz_msg_send_SCP_STATUS(&((_trans).tra
1715:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SCP_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1716:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg hea
1717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2 +2 /* msg header overhead
1718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2 +2 /* msg header overhead */);
1719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SCP_STATUS, "SCP_STA
1721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _press);
1722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1724:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1726:/home/lsk/paparazzi/var/include/messages.h **** }
1727:/home/lsk/paparazzi/var/include/messages.h **** 
1728:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_STATUS
1729:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1730:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_STATUS, "SHT_STA
1735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
1736:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
1737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
1738:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
1739:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1740:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1742:/home/lsk/paparazzi/var/include/messages.h **** }
1743:/home/lsk/paparazzi/var/include/messages.h **** 
1744:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ENOSE_STATUS(_trans, _dev, val1, val2, val3, PID, nb_heat, heat) pprz_msg_sen
1745:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ENOSE_STATUS(struct transport_tx *trans, struct link_device *dev, 
1746:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat
1747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+nb_heat*1 +2 /* msg
1748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+nb_heat*1 +2 /* msg header overhead */);
1749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ENOSE_STATUS, "ENOSE
1751:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
1752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
1753:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
1754:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PID);
1755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_heat)
1756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_heat, (void *) _heat);
1757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1758:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1760:/home/lsk/paparazzi/var/include/messages.h **** }
1761:/home/lsk/paparazzi/var/include/messages.h **** 
1762:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DPICCO_STATUS(_trans, _dev, humid, temp, fhumid, ftemp) pprz_msg_send_DPICCO_
1763:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DPICCO_STATUS(struct transport_tx *trans, struct link_device *dev,
1764:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
1765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
1766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
1767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DPICCO_STATUS, "DPIC
1769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temp);
1771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1774:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1776:/home/lsk/paparazzi/var/include/messages.h **** }
1777:/home/lsk/paparazzi/var/include/messages.h **** 
1778:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_DEBUG(_trans, _dev, mag_xraw, mag_yraw, mag_xcal, mag_ycal, mag_headi
1779:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_DEBUG(struct transport_tx *trans, struct link_device *dev,
1780:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1
1781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1+1 +2 /* msg h
1782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1+1 +2 /* msg header overhead */);
1783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_DEBUG, "ANTE
1785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_xraw);
1786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mag_yraw);
1787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_xcal);
1788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_ycal);
1789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_heading);
1790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_magnitude);
1791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_temp);
1792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_distor);
1793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mag_cal_status)
1794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1797:/home/lsk/paparazzi/var/include/messages.h **** }
1798:/home/lsk/paparazzi/var/include/messages.h **** 
1799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ANTENNA_STATUS(_trans, _dev, azim_sp, elev_sp, id_sp, mode) pprz_msg_send_ANT
1800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ANTENNA_STATUS(struct transport_tx *trans, struct link_device *dev
1801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg
1802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+1 +2 /* msg header over
1803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+1 +2 /* msg header overhead */);
1804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ANTENNA_STATUS, "ANT
1806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _azim_sp);
1807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _elev_sp);
1808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _id_sp);
1809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1813:/home/lsk/paparazzi/var/include/messages.h **** }
1814:/home/lsk/paparazzi/var/include/messages.h **** 
1815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATUS(_trans, _dev, time_ticks, throttle, rpm, current, thrust, 
1816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATUS(struct transport_tx *trans, struct link_device 
1817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +
1818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+2+1 +2 /* msg hea
1819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+2+1 +2 /* msg header overhead */);
1820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATUS, 
1822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _time_ticks);
1823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
1824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
1825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _current);
1826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _thrust);
1827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _torque);
1828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _time_s);
1829:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1830:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1831:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1832:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1833:/home/lsk/paparazzi/var/include/messages.h **** }
1834:/home/lsk/paparazzi/var/include/messages.h **** 
1835:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR_BENCH_STATIC(_trans, _dev, av_rpm, av_thrust, av_current, throttle) ppr
1836:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR_BENCH_STATIC(struct transport_tx *trans, struct link_device 
1837:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg
1838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+2 +2 /* msg header over
1839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+2 +2 /* msg header overhead */);
1840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR_BENCH_STATIC, 
1842:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_rpm);
1843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_thrust);
1844:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _av_current);
1845:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
1846:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1847:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1848:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1849:/home/lsk/paparazzi/var/include/messages.h **** }
1850:/home/lsk/paparazzi/var/include/messages.h **** 
1851:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HIH_STATUS(_trans, _dev, humid, fhumid, ftemp) pprz_msg_send_HIH_STATUS(&((_t
1852:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HIH_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1853:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg h
1854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4 +2 /* msg header overhe
1855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4 +2 /* msg header overhead */);
1856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HIH_STATUS, "HIH_STA
1858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _humid);
1859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fhumid);
1860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ftemp);
1861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1864:/home/lsk/paparazzi/var/include/messages.h **** }
1865:/home/lsk/paparazzi/var/include/messages.h **** 
1866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMT_STATUS(_trans, _dev, light, f_light) pprz_msg_send_TEMT_STATUS(&((_trans
1867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMT_STATUS(struct transport_tx *trans, struct link_device *dev, u
1868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMT_STATUS, "TEMT_S
1873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _light);
1874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f_light);
1875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1876:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1878:/home/lsk/paparazzi/var/include/messages.h **** }
1879:/home/lsk/paparazzi/var/include/messages.h **** 
1880:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GP2Y_STATUS(_trans, _dev, idensity, density) pprz_msg_send_GP2Y_STATUS(&((_tr
1881:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GP2Y_STATUS(struct transport_tx *trans, struct link_device *dev, u
1882:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
1883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
1884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
1885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GP2Y_STATUS, "GP2Y_S
1887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _idensity);
1888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _density);
1889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1892:/home/lsk/paparazzi/var/include/messages.h **** }
1893:/home/lsk/paparazzi/var/include/messages.h **** 
1894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_SHT_I2C_SERIAL(&
1895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_SERIAL(struct transport_tx *trans, struct link_device *dev
1896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
1897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
1898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
1899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_SERIAL, "SHT
1901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
1902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
1903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1904:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1906:/home/lsk/paparazzi/var/include/messages.h **** }
1907:/home/lsk/paparazzi/var/include/messages.h **** 
1908:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPM(_trans, _dev, ppm_rate, nb_values, values) pprz_msg_send_PPM(&((_trans).t
1909:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPM(struct transport_tx *trans, struct link_device *dev, uint8_t a
1910:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1911:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1912:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1913:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1914:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPM, "PPM");
1915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
1916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1919:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1921:/home/lsk/paparazzi/var/include/messages.h **** }
1922:/home/lsk/paparazzi/var/include/messages.h **** 
1923:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RC(_trans, _dev, nb_values, values) pprz_msg_send_RC(&((_trans).trans_tx), &(
1924:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RC(struct transport_tx *trans, struct link_device *dev, uint8_t ac
1925:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1929:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RC, "RC");
1930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1931:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1932:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1933:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1934:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1935:/home/lsk/paparazzi/var/include/messages.h **** }
1936:/home/lsk/paparazzi/var/include/messages.h **** 
1937:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_COMMANDS(_trans, _dev, nb_values, values) pprz_msg_send_COMMANDS(&((_trans).t
1938:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_COMMANDS(struct transport_tx *trans, struct link_device *dev, uint
1939:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_COMMANDS, "COMMANDS"
1944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1947:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1949:/home/lsk/paparazzi/var/include/messages.h **** }
1950:/home/lsk/paparazzi/var/include/messages.h **** 
1951:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FBW_STATUS(_trans, _dev, rc_status, frame_rate, mode, vsupply, current) pprz_
1952:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FBW_STATUS(struct transport_tx *trans, struct link_device *dev, ui
1953:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* m
1954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+2+4 +2 /* msg header ov
1955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+2+4 +2 /* msg header overhead */);
1956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FBW_STATUS, "FBW_STA
1958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rc_status);
1959:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _frame_rate);
1960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
1961:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
1962:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
1963:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1964:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1965:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1966:/home/lsk/paparazzi/var/include/messages.h **** }
1967:/home/lsk/paparazzi/var/include/messages.h **** 
1968:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC(_trans, _dev, mcu, nb_values, values) pprz_msg_send_ADC(&((_trans).trans_
1969:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC(struct transport_tx *trans, struct link_device *dev, uint8_t a
1970:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +
1971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_values*2 +2 /* msg hea
1972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_values*2 +2 /* msg header overhead */);
1973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC, "ADC");
1975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu);
1976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _val
1978:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1979:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1980:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1981:/home/lsk/paparazzi/var/include/messages.h **** }
1982:/home/lsk/paparazzi/var/include/messages.h **** 
1983:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ACTUATORS(_trans, _dev, nb_values, values) pprz_msg_send_ACTUATORS(&((_trans)
1984:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ACTUATORS(struct transport_tx *trans, struct link_device *dev, uin
1985:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 
1986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*2 +2 /* msg heade
1987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*2 +2 /* msg header overhead */);
1988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
1989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ACTUATORS, "ACTUATOR
1990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
1991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_values, (void *) _valu
1992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
1993:/home/lsk/paparazzi/var/include/messages.h **** 	} else
1994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
1995:/home/lsk/paparazzi/var/include/messages.h **** }
1996:/home/lsk/paparazzi/var/include/messages.h **** 
1997:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DC_SHOT(_trans, _dev, photo_nr, lat, lon, alt, hmsl, phi, theta, psi, course,
1998:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DC_SHOT(struct transport_tx *trans, struct link_device *dev, uint8
1999:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2
2000:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* m
2001:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+2+2+2+2+2+4 +2 /* msg header overhead */);
2002:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2003:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DC_SHOT, "DC_SHOT");
2004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _photo_nr);
2005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
2010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
2011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _psi);
2012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
2013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
2014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
2015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2018:/home/lsk/paparazzi/var/include/messages.h **** }
2019:/home/lsk/paparazzi/var/include/messages.h **** 
2020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_BOARD_RESULTS(_trans, _dev, uart, ppm, nb_servo, servo) pprz_msg_send_TE
2021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_BOARD_RESULTS(struct transport_tx *trans, struct link_device 
2022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 
2023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+nb_servo*2 +2 /* msg he
2024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+nb_servo*2 +2 /* msg header overhead */);
2025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_BOARD_RESULTS, 
2027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _uart);
2028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm);
2029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_servo
2030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_servo, (void *) _serv
2031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2032:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2034:/home/lsk/paparazzi/var/include/messages.h **** }
2035:/home/lsk/paparazzi/var/include/messages.h **** 
2036:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MLX_SERIAL(_trans, _dev, serial0, serial1) pprz_msg_send_MLX_SERIAL(&((_trans
2037:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MLX_SERIAL(struct transport_tx *trans, struct link_device *dev, ui
2038:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
2039:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
2040:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
2041:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MLX_SERIAL, "MLX_SER
2043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial0);
2044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _serial1);
2045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2046:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2048:/home/lsk/paparazzi/var/include/messages.h **** }
2049:/home/lsk/paparazzi/var/include/messages.h **** 
2050:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PAYLOAD(_trans, _dev, nb_values, values) pprz_msg_send_PAYLOAD(&((_trans).tra
2051:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PAYLOAD(struct transport_tx *trans, struct link_device *dev, uint8
2052:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 
2053:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_values*1 +2 /* msg heade
2054:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_values*1 +2 /* msg header overhead */);
2055:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2056:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PAYLOAD, "PAYLOAD");
2057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_value
2058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_values, (void *) _valu
2059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2060:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2062:/home/lsk/paparazzi/var/include/messages.h **** }
2063:/home/lsk/paparazzi/var/include/messages.h **** 
2064:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HTM_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_HTM_STATUS
2065:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HTM_STATUS(struct transport_tx *trans, struct link_device *dev, ui
2066:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2068:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2070:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HTM_STATUS, "HTM_STA
2071:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2072:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2073:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2074:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2076:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2078:/home/lsk/paparazzi/var/include/messages.h **** }
2079:/home/lsk/paparazzi/var/include/messages.h **** 
2080:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BARO_MS5611(_trans, _dev, d1, d2, pressure, temp) pprz_msg_send_BARO_MS5611(&
2081:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BARO_MS5611(struct transport_tx *trans, struct link_device *dev, u
2082:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BARO_MS5611, "BARO_M
2087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d1);
2088:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _d2);
2089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pressure);
2090:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2091:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2092:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2093:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2094:/home/lsk/paparazzi/var/include/messages.h **** }
2095:/home/lsk/paparazzi/var/include/messages.h **** 
2096:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MS5611_COEFF(_trans, _dev, c0, c1, c2, c3, c4, c5, c6, c7) pprz_msg_send_MS56
2097:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MS5611_COEFF(struct transport_tx *trans, struct link_device *dev, 
2098:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +
2099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2 +2 /* msg hea
2100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MS5611_COEFF, "MS561
2103:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c0);
2104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c1);
2105:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c2);
2106:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c3);
2107:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c4);
2108:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c5);
2109:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c6);
2110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _c7);
2111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2112:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2114:/home/lsk/paparazzi/var/include/messages.h **** }
2115:/home/lsk/paparazzi/var/include/messages.h **** 
2116:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATMOSPHERE_CHARGE(_trans, _dev, t0, t1, t2, t3, t4, t5, t6, t7, t8, t9) pprz_
2117:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATMOSPHERE_CHARGE(struct transport_tx *trans, struct link_device *
2118:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2119:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg
2120:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2 +2 /* msg header overhead */);
2121:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2122:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATMOSPHERE_CHARGE, "
2123:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t0);
2124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t1);
2125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t2);
2126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t3);
2127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t4);
2128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t5);
2129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t6);
2130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t7);
2131:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t8);
2132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _t9);
2133:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2134:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2135:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2136:/home/lsk/paparazzi/var/include/messages.h **** }
2137:/home/lsk/paparazzi/var/include/messages.h **** 
2138:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SOLAR_RADIATION(_trans, _dev, up_t0, dn_t0, up_t1, dn_t1, up_t2, dn_t2, up_t3
2139:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SOLAR_RADIATION(struct transport_tx *trans, struct link_device *de
2140:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
2141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
2142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2 +2 /* msg heade
2143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SOLAR_RADIATION, "SO
2145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t0);
2146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t0);
2147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t1);
2148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t1);
2149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t2);
2150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t2);
2151:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t3);
2152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t3);
2153:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t4);
2154:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t4);
2155:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t5);
2156:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t5);
2157:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t6);
2158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t6);
2159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t7);
2160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t7);
2161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t8);
2162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t8);
2163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _up_t9);
2164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _dn_t9);
2165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2166:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2168:/home/lsk/paparazzi/var/include/messages.h **** }
2169:/home/lsk/paparazzi/var/include/messages.h **** 
2170:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_TA(_trans, _dev, ac_id) pprz_msg_send_TCAS_TA(&((_trans).trans_tx), &((_
2171:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_TA(struct transport_tx *trans, struct link_device *dev, uint8
2172:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2173:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2175:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2176:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_TA, "TCAS_TA");
2177:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2178:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2179:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2181:/home/lsk/paparazzi/var/include/messages.h **** }
2182:/home/lsk/paparazzi/var/include/messages.h **** 
2183:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RA(_trans, _dev, ac_id, resolve) pprz_msg_send_TCAS_RA(&((_trans).trans_
2184:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RA(struct transport_tx *trans, struct link_device *dev, uint8
2185:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg hea
2186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1 +2 /* msg header overhead
2187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1 +2 /* msg header overhead */);
2188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RA, "TCAS_RA");
2190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _resolve);
2192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2193:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2195:/home/lsk/paparazzi/var/include/messages.h **** }
2196:/home/lsk/paparazzi/var/include/messages.h **** 
2197:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_RESOLVED(_trans, _dev, ac_id) pprz_msg_send_TCAS_RESOLVED(&((_trans).tra
2198:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_RESOLVED(struct transport_tx *trans, struct link_device *dev,
2199:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
2200:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
2201:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
2202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_RESOLVED, "TCAS
2204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2206:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2208:/home/lsk/paparazzi/var/include/messages.h **** }
2209:/home/lsk/paparazzi/var/include/messages.h **** 
2210:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TCAS_DEBUG(_trans, _dev, ac_id, tau) pprz_msg_send_TCAS_DEBUG(&((_trans).tran
2211:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TCAS_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
2212:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
2213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
2214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
2215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TCAS_DEBUG, "TCAS_DE
2217:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
2218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _tau);
2219:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2220:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2221:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2222:/home/lsk/paparazzi/var/include/messages.h **** }
2223:/home/lsk/paparazzi/var/include/messages.h **** 
2224:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_POTENTIAL(_trans, _dev, east, north, alt, speed, climb) pprz_msg_send_POTENTI
2225:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_POTENTIAL(struct transport_tx *trans, struct link_device *dev, uin
2226:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
2227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
2228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
2229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_POTENTIAL, "POTENTIA
2231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
2232:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
2233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
2234:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed);
2235:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
2236:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2237:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2238:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2239:/home/lsk/paparazzi/var/include/messages.h **** }
2240:/home/lsk/paparazzi/var/include/messages.h **** 
2241:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERTICAL_ENERGY(_trans, _dev, Epot_err, Ekin_err, Etot_err, Edis_err, throttl
2242:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERTICAL_ENERGY(struct transport_tx *trans, struct link_device *de
2243:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2247:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERTICAL_ENERGY, "VE
2248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Epot_err);
2249:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Ekin_err);
2250:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Etot_err);
2251:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Edis_err);
2252:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _throttle);
2253:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _nav_pitch);
2254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _speed_sp);
2255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2256:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2258:/home/lsk/paparazzi/var/include/messages.h **** }
2259:/home/lsk/paparazzi/var/include/messages.h **** 
2260:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_TCOUPLE(_trans, _dev, fval0, fval1, fval2, fval3, fref0, fref1, fref2, f
2261:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_TCOUPLE(struct transport_tx *trans, struct link_device *dev, 
2262:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2
2263:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2
2264:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+2+2+2+2+2+2+2+2 +2 /* msg header overhe
2265:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2266:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_TCOUPLE, "TEMP_
2267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval0);
2268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval1);
2269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval2);
2270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fval3);
2271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref0);
2272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref1);
2273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref2);
2274:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fref3);
2275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val0);
2276:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
2277:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
2278:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val3);
2279:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref0);
2280:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref1);
2281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref2);
2282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ref3);
2283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2284:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2286:/home/lsk/paparazzi/var/include/messages.h **** }
2287:/home/lsk/paparazzi/var/include/messages.h **** 
2288:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SHT_I2C_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_SHT_I2
2289:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SHT_I2C_STATUS(struct transport_tx *trans, struct link_device *dev
2290:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg
2291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4 +2 /* msg header over
2292:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4 +2 /* msg header overhead */);
2293:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2294:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SHT_I2C_STATUS, "SHT
2295:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ihumid);
2296:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _itemp);
2297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2300:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2302:/home/lsk/paparazzi/var/include/messages.h **** }
2303:/home/lsk/paparazzi/var/include/messages.h **** 
2304:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAMERA_SNAPSHOT(_trans, _dev, snapshot_image_number) pprz_msg_send_CAMERA_SNA
2305:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAMERA_SNAPSHOT(struct transport_tx *trans, struct link_device *de
2306:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
2307:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
2308:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
2309:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2310:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAMERA_SNAPSHOT, "CA
2311:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _snapshot_image
2312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2313:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2315:/home/lsk/paparazzi/var/include/messages.h **** }
2316:/home/lsk/paparazzi/var/include/messages.h **** 
2317:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TIMESTAMP(_trans, _dev, timestamp) pprz_msg_send_TIMESTAMP(&((_trans).trans_t
2318:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TIMESTAMP(struct transport_tx *trans, struct link_device *dev, uin
2319:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
2320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
2321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
2322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2323:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TIMESTAMP, "TIMESTAM
2324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timestamp);
2325:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2326:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2327:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2328:/home/lsk/paparazzi/var/include/messages.h **** }
2329:/home/lsk/paparazzi/var/include/messages.h **** 
2330:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_FLOAT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, es
2331:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_FLOAT(struct transport_tx *trans, struct link_device
2332:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* m
2335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_FLOAT,
2337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2338:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2340:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2341:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2342:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2343:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2344:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2351:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2353:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2354:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2355:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2356:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2357:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_p_d);
2359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_q_d);
2360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _est_r_d);
2361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2362:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2364:/home/lsk/paparazzi/var/include/messages.h **** }
2365:/home/lsk/paparazzi/var/include/messages.h **** 
2366:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_SCALED(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_SCALED(&((_t
2367:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_SCALED(struct transport_tx *trans, struct link_device *de
2368:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2369:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2370:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2371:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2372:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_SCALED, "IM
2373:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2377:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2379:/home/lsk/paparazzi/var/include/messages.h **** }
2380:/home/lsk/paparazzi/var/include/messages.h **** 
2381:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_SCALED(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_SCALED(&((
2382:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_SCALED(struct transport_tx *trans, struct link_device *d
2383:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2384:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2385:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2386:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2387:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_SCALED, "I
2388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
2389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
2390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
2391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2392:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2394:/home/lsk/paparazzi/var/include/messages.h **** }
2395:/home/lsk/paparazzi/var/include/messages.h **** 
2396:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_SCALED(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_SCALED(&((_tra
2397:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_SCALED(struct transport_tx *trans, struct link_device *dev
2398:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2399:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2400:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2401:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SCALED, "IMU
2403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
2404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
2405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
2406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2407:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2409:/home/lsk/paparazzi/var/include/messages.h **** }
2410:/home/lsk/paparazzi/var/include/messages.h **** 
2411:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER(_trans, _dev, phi, theta, psi, measure_phi, measure_theta, measure_psi
2412:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER(struct transport_tx *trans, struct link_device *dev, uint8_
2413:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER, "FILTER");
2418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2419:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2421:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_phi);
2422:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_theta);
2423:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _measure_psi);
2424:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_phi);
2425:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_theta
2426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _corrected_psi);
2427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_phi)
2428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_thet
2429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _correction_psi)
2430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
2431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
2432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
2433:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2434:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2435:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2436:/home/lsk/paparazzi/var/include/messages.h **** }
2437:/home/lsk/paparazzi/var/include/messages.h **** 
2438:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER2(_trans, _dev, px, py, pz, gsx, gsy, gsz) pprz_msg_send_FILTER2(&((_tr
2439:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER2(struct transport_tx *trans, struct link_device *dev, uint8
2440:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER2, "FILTER2");
2445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _px);
2446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _py);
2447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pz);
2448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsx);
2449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsy);
2450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gsz);
2451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2452:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2453:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2454:/home/lsk/paparazzi/var/include/messages.h **** }
2455:/home/lsk/paparazzi/var/include/messages.h **** 
2456:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RATE_LOOP(_trans, _dev, sp_p, sp_q, sp_r, ref_p, ref_q, ref_r, refdot_p, refd
2457:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RATE_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2458:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2459:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header 
2461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RATE_LOOP, "RATE_LOO
2463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_p);
2464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_q);
2465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_r);
2466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_p);
2470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_q);
2471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _refdot_r);
2472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_p);
2473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_q);
2474:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sumerr_r);
2475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_p);
2476:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_q);
2477:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_r);
2478:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_p);
2479:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_q);
2480:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_r);
2481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2483:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2485:/home/lsk/paparazzi/var/include/messages.h **** }
2486:/home/lsk/paparazzi/var/include/messages.h **** 
2487:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_ALIGNER(_trans, _dev, lp_gp, lp_gq, lp_gr, gp, gq, gr, noise, cnt, sta
2488:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_ALIGNER(struct transport_tx *trans, struct link_device *dev
2489:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1
2490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+1 +2 /* msg h
2491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
2492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_ALIGNER, "FIL
2494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gp);
2495:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gq);
2496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lp_gr);
2497:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
2498:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
2499:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
2500:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _noise);
2501:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cnt);
2502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2504:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2506:/home/lsk/paparazzi/var/include/messages.h **** }
2507:/home/lsk/paparazzi/var/include/messages.h **** 
2508:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AIRSPEED_MS45XX(_trans, _dev, diffPress, temperature, airspeed) pprz_msg_send
2509:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AIRSPEED_MS45XX(struct transport_tx *trans, struct link_device *de
2510:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg h
2511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+4 +2 /* msg header overhe
2512:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+4 +2 /* msg header overhead */);
2513:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2514:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AIRSPEED_MS45XX, "AI
2515:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _diffPress);
2516:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _temperature);
2517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
2518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2519:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2521:/home/lsk/paparazzi/var/include/messages.h **** }
2522:/home/lsk/paparazzi/var/include/messages.h **** 
2523:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FILTER_COR(_trans, _dev, mphi, mtheta, mpsi, qi, qx, qy, qz) pprz_msg_send_FI
2524:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FILTER_COR(struct transport_tx *trans, struct link_device *dev, ui
2525:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
2526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
2527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FILTER_COR, "FILTER_
2530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mphi);
2531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mtheta);
2532:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mpsi);
2533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qi);
2534:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qx);
2535:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qy);
2536:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _qz);
2537:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2538:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2540:/home/lsk/paparazzi/var/include/messages.h **** }
2541:/home/lsk/paparazzi/var/include/messages.h **** 
2542:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_INT(_trans, _dev, est_p, est_q, est_r, est_phi, est_theta, est_
2543:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_INT(struct transport_tx *trans, struct link_device *
2544:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg hea
2547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_INT, "
2549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_p);
2550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_q);
2551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_r);
2552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_phi);
2553:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_theta);
2554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_psi);
2555:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2556:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2557:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2558:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_phi);
2559:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_theta);
2560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err_psi);
2561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_fb);
2562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_fb);
2563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_fb);
2564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a_ff);
2565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e_ff);
2566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r_ff);
2567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_a);
2568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_e);
2569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_r);
2570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2571:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2573:/home/lsk/paparazzi/var/include/messages.h **** }
2574:/home/lsk/paparazzi/var/include/messages.h **** 
2575:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_INT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_th
2576:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_INT(struct transport_tx *trans, struct link_devi
2577:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2581:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_IN
2582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2583:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2584:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2585:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2586:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2587:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2595:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2597:/home/lsk/paparazzi/var/include/messages.h **** }
2598:/home/lsk/paparazzi/var/include/messages.h **** 
2599:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_STAB_ATTITUDE_REF_FLOAT(_trans, _dev, sp_phi, sp_theta, sp_psi, ref_phi, ref_
2600:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_STAB_ATTITUDE_REF_FLOAT(struct transport_tx *trans, struct link_de
2601:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
2603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_STAB_ATTITUDE_REF_FL
2606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_phi);
2607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_theta);
2608:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _sp_psi);
2609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_phi);
2610:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_theta);
2611:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_psi);
2612:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_p);
2613:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_q);
2614:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_r);
2615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_pd);
2616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_qd);
2617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ref_rd);
2618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2619:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2621:/home/lsk/paparazzi/var/include/messages.h **** }
2622:/home/lsk/paparazzi/var/include/messages.h **** 
2623:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CMD(_trans, _dev, cmd_roll, cmd_pitch, cmd_yaw, cmd_thrust) pprz_m
2624:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CMD(struct transport_tx *trans, struct link_device *dev
2625:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2627:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2629:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CMD, "ROT
2630:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2631:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2632:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2633:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2635:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2637:/home/lsk/paparazzi/var/include/messages.h **** }
2638:/home/lsk/paparazzi/var/include/messages.h **** 
2639:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_INT(_trans, _dev, sp_x, sp_y, ref_x, ref_y, est_x, est_y) pprz_msg
2640:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_INT(struct transport_tx *trans, struct link_device *dev
2641:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_INT, "GUI
2646:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2648:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2649:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2650:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2651:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2652:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2653:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2655:/home/lsk/paparazzi/var/include/messages.h **** }
2656:/home/lsk/paparazzi/var/include/messages.h **** 
2657:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VERT_LOOP(_trans, _dev, z_sp, zd_sp, est_z, est_zd, est_zdd, ref_z, ref_zd, r
2658:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VERT_LOOP(struct transport_tx *trans, struct link_device *dev, uin
2659:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
2662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERT_LOOP, "VERT_LOO
2664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
2665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _zd_sp);
2666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
2667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zd);
2668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zdd);
2669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
2670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
2671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zdd);
2672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_inv_m);
2673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_cov);
2674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_meas);
2675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err);
2676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_cmd);
2677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_cmd);
2678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
2679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2680:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2682:/home/lsk/paparazzi/var/include/messages.h **** }
2683:/home/lsk/paparazzi/var/include/messages.h **** 
2684:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HOVER_LOOP(_trans, _dev, sp_x, sp_y, est_x, est_y, est_xd, est_yd, est_xdd, e
2685:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HOVER_LOOP(struct transport_tx *trans, struct link_device *dev, ui
2686:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2687:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2688:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header over
2689:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2690:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HOVER_LOOP, "HOVER_L
2691:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_x);
2694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_y);
2695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xd);
2696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_yd);
2697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_xdd);
2698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_ydd);
2699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_x);
2700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_y);
2701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_xd);
2702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_yd);
2703:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_x);
2704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _err_sum_y);
2705:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_x);
2706:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_y);
2707:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_heading);
2708:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2709:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2711:/home/lsk/paparazzi/var/include/messages.h **** }
2712:/home/lsk/paparazzi/var/include/messages.h **** 
2713:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_FP(_trans, _dev, east, north, up, veast, vnorth, vup, phi, theta, 
2714:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_FP(struct transport_tx *trans, struct link_device *dev,
2715:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2
2717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+2 +2 /* msg header overhead
2718:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_FP, "ROTO
2720:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _east);
2721:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _north);
2722:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _up);
2723:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _veast);
2724:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vnorth);
2725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _vup);
2726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _phi);
2727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _theta);
2728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _psi);
2729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_east);
2730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_north);
2731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_up);
2732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _carrot_psi);
2733:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _thrust);
2734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
2735:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2736:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2737:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2738:/home/lsk/paparazzi/var/include/messages.h **** }
2739:/home/lsk/paparazzi/var/include/messages.h **** 
2740:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEMP_ADC(_trans, _dev, temp1, temp2, temp3) pprz_msg_send_TEMP_ADC(&((_trans)
2741:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEMP_ADC(struct transport_tx *trans, struct link_device *dev, uint
2742:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
2743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
2744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
2745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEMP_ADC, "TEMP_ADC"
2747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp1);
2748:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp2);
2749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp3);
2750:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2751:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2752:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2753:/home/lsk/paparazzi/var/include/messages.h **** }
2754:/home/lsk/paparazzi/var/include/messages.h **** 
2755:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GUIDANCE_H_REF_INT(_trans, _dev, sp_x, ref_x, sp_xd, ref_xd, ref_xdd, sp_y, r
2756:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GUIDANCE_H_REF_INT(struct transport_tx *trans, struct link_device 
2757:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
2759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GUIDANCE_H_REF_INT, 
2762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_x);
2763:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_x);
2764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_xd);
2765:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xd);
2766:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_xdd);
2767:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_y);
2768:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_y);
2769:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sp_yd);
2770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_yd);
2771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_ydd);
2772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2773:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2775:/home/lsk/paparazzi/var/include/messages.h **** }
2776:/home/lsk/paparazzi/var/include/messages.h **** 
2777:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_TUNE_HOVER(_trans, _dev, rc_roll, rc_pitch, rc_yaw, cmd_roll, cmd_
2778:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_TUNE_HOVER(struct transport_tx *trans, struct link_devi
2779:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4
2780:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg
2781:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2782:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2783:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_TUNE_HOVE
2784:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_roll);
2785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_pitch);
2786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _rc_yaw);
2787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_roll);
2788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_pitch);
2789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_yaw);
2790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _cmd_thrust);
2791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
2792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
2793:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
2794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2795:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2796:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2797:/home/lsk/paparazzi/var/include/messages.h **** }
2798:/home/lsk/paparazzi/var/include/messages.h **** 
2799:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_Z(_trans, _dev, baro_z, ins_z, ins_zd, ins_zdd) pprz_msg_send_INS_Z(&((_t
2800:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_Z(struct transport_tx *trans, struct link_device *dev, uint8_t
2801:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_Z, "INS_Z");
2806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro_z);
2807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_z);
2808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zd);
2809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zdd);
2810:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2811:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2812:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2813:/home/lsk/paparazzi/var/include/messages.h **** }
2814:/home/lsk/paparazzi/var/include/messages.h **** 
2815:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PCAP01_STATUS(_trans, _dev, ihumid, itemp, humid, temp) pprz_msg_send_PCAP01_
2816:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PCAP01_STATUS(struct transport_tx *trans, struct link_device *dev,
2817:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
2818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
2819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
2820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PCAP01_STATUS, "PCAP
2822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _ihumid);
2823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itemp);
2824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _humid);
2825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _temp);
2826:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2827:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2828:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2829:/home/lsk/paparazzi/var/include/messages.h **** }
2830:/home/lsk/paparazzi/var/include/messages.h **** 
2831:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GEIGER_COUNTER(_trans, _dev, tube1, tube2, vsupply) pprz_msg_send_GEIGER_COUN
2832:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GEIGER_COUNTER(struct transport_tx *trans, struct link_device *dev
2833:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2 +2 /* msg h
2834:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2 +2 /* msg header overhe
2835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2 +2 /* msg header overhead */);
2836:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2837:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GEIGER_COUNTER, "GEI
2838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tube1);
2839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tube2);
2840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _vsupply);
2841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2842:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2844:/home/lsk/paparazzi/var/include/messages.h **** }
2845:/home/lsk/paparazzi/var/include/messages.h **** 
2846:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_REF(_trans, _dev, ecef_x0, ecef_y0, ecef_z0, lat0, lon0, alt0, hmsl0, bar
2847:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_REF(struct transport_tx *trans, struct link_device *dev, uint8
2848:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
2849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
2850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_REF, "INS_REF");
2853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_x0);
2854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_y0);
2855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_z0);
2856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat0);
2857:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon0);
2858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt0);
2859:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl0);
2860:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _baro_qfe);
2861:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2862:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2863:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2864:/home/lsk/paparazzi/var/include/messages.h **** }
2865:/home/lsk/paparazzi/var/include/messages.h **** 
2866:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_INT(_trans, _dev, ecef_x, ecef_y, ecef_z, lat, lon, alt, hmsl, ecef_xd, e
2867:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_INT(struct transport_tx *trans, struct link_device *dev, uint8
2868:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+2+1
2870:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+2+1+1 +2 /* msg header overhe
2871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2872:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_INT, "GPS_INT");
2873:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_x);
2874:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_y);
2875:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_z);
2876:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lat);
2877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _lon);
2878:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
2879:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _hmsl);
2880:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_xd);
2881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_yd);
2882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ecef_zd);
2883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _pacc);
2884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sacc);
2885:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tow);
2886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _pdop);
2887:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numsv);
2888:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _fix);
2889:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2890:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2891:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2892:/home/lsk/paparazzi/var/include/messages.h **** }
2893:/home/lsk/paparazzi/var/include/messages.h **** 
2894:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_EULER_INT(_trans, _dev, imu_phi, imu_theta, imu_psi, body_phi, body_thet
2895:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_EULER_INT(struct transport_tx *trans, struct link_device *dev
2896:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
2897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
2898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
2899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_EULER_INT, "AHR
2901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_phi);
2902:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_theta);
2903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_psi);
2904:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_phi);
2905:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_theta);
2906:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_psi);
2907:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2908:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2910:/home/lsk/paparazzi/var/include/messages.h **** }
2911:/home/lsk/paparazzi/var/include/messages.h **** 
2912:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_QUAT_INT(_trans, _dev, weight, imu_qi, imu_qx, imu_qy, imu_qz, body_qi, 
2913:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_QUAT_INT(struct transport_tx *trans, struct link_device *dev,
2914:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
2916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
2917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2918:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_QUAT_INT, "AHRS
2919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _weight);
2920:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qi);
2921:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qx);
2922:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qy);
2923:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_qz);
2924:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qi);
2925:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qx);
2926:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qy);
2927:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qz);
2928:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2929:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2930:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2931:/home/lsk/paparazzi/var/include/messages.h **** }
2932:/home/lsk/paparazzi/var/include/messages.h **** 
2933:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_RMAT_INT(_trans, _dev, imu_m00, imu_m01, imu_m02, imu_m10, imu_m11, imu_
2934:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_RMAT_INT(struct transport_tx *trans, struct link_device *dev,
2935:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
2936:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
2937:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header ov
2938:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2939:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_RMAT_INT, "AHRS
2940:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m00);
2941:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m01);
2942:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m02);
2943:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m10);
2944:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m11);
2945:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m12);
2946:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m20);
2947:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m21);
2948:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _imu_m22);
2949:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m00);
2950:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m01);
2951:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m02);
2952:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m10);
2953:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m11);
2954:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m12);
2955:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m20);
2956:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m21);
2957:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_m22);
2958:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2959:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2960:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2961:/home/lsk/paparazzi/var/include/messages.h **** }
2962:/home/lsk/paparazzi/var/include/messages.h **** 
2963:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_NAV_STATUS(_trans, _dev, block_time, stage_time, dist_home, dist_w
2964:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_NAV_STATUS(struct transport_tx *trans, struct link_devi
2965:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+1+1+1 +2 
2966:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+4+4+1+1+1 +2 /* msg heade
2967:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+4+4+1+1+1 +2 /* msg header overhead */);
2968:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2969:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_NAV_STATU
2970:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
2971:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
2972:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
2973:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
2974:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
2975:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
2976:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _horizontal_mode
2977:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2978:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2979:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2980:/home/lsk/paparazzi/var/include/messages.h **** }
2981:/home/lsk/paparazzi/var/include/messages.h **** 
2982:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_RADIO_CONTROL(_trans, _dev, roll, pitch, yaw, throttle, mode, kill
2983:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_RADIO_CONTROL(struct transport_tx *trans, struct link_d
2984:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+1 +2 
2985:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+1 +2 /* msg heade
2986:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+1 +2 /* msg header overhead */);
2987:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
2988:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_RADIO_CON
2989:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _roll);
2990:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pitch);
2991:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _yaw);
2992:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
2993:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mode);
2994:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _kill);
2995:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _status);
2996:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
2997:/home/lsk/paparazzi/var/include/messages.h **** 	} else
2998:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
2999:/home/lsk/paparazzi/var/include/messages.h **** }
3000:/home/lsk/paparazzi/var/include/messages.h **** 
3001:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VFF_EXTENDED(_trans, _dev, meas_baro, meas_alt, z, zd, zdd, bias, offset) ppr
3002:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VFF_EXTENDED(struct transport_tx *trans, struct link_device *dev, 
3003:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3004:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3005:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3006:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3007:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VFF_EXTENDED, "VFF_E
3008:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_baro);
3009:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _meas_alt);
3010:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
3011:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zd);
3012:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zdd);
3013:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias);
3014:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _offset);
3015:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3016:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3017:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3018:/home/lsk/paparazzi/var/include/messages.h **** }
3019:/home/lsk/paparazzi/var/include/messages.h **** 
3020:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VFF(_trans, _dev, measure, z, zd, bias, Pzz, Pzdzd, Pbb) pprz_msg_send_VFF(&(
3021:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VFF(struct transport_tx *trans, struct link_device *dev, uint8_t a
3022:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3023:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3024:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3025:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3026:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VFF, "VFF");
3027:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _measure);
3028:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z);
3029:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _zd);
3030:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bias);
3031:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pzz);
3032:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pzdzd);
3033:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pbb);
3034:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3035:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3036:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3037:/home/lsk/paparazzi/var/include/messages.h **** }
3038:/home/lsk/paparazzi/var/include/messages.h **** 
3039:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GEO_MAG(_trans, _dev, Hx, Hy, Hz) pprz_msg_send_GEO_MAG(&((_trans).trans_tx),
3040:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GEO_MAG(struct transport_tx *trans, struct link_device *dev, uint8
3041:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3042:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3043:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3044:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3045:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GEO_MAG, "GEO_MAG");
3046:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hx);
3047:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hy);
3048:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Hz);
3049:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3050:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3051:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3052:/home/lsk/paparazzi/var/include/messages.h **** }
3053:/home/lsk/paparazzi/var/include/messages.h **** 
3054:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF(_trans, _dev, x, y, xd, yd, xdd, ydd) pprz_msg_send_HFF(&((_trans).trans_
3055:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF(struct transport_tx *trans, struct link_device *dev, uint8_t a
3056:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3057:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3058:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3059:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3060:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF, "HFF");
3061:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
3062:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
3063:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xd);
3064:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yd);
3065:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xdd);
3066:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ydd);
3067:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3068:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3069:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3070:/home/lsk/paparazzi/var/include/messages.h **** }
3071:/home/lsk/paparazzi/var/include/messages.h **** 
3072:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF_DBG(_trans, _dev, x_measure, y_measure, xd_measure, yd_measure, Pxx, Pyy,
3073:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF_DBG(struct transport_tx *trans, struct link_device *dev, uint8
3074:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
3075:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
3076:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3077:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3078:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF_DBG, "HFF_DBG");
3079:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_measure);
3080:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_measure);
3081:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xd_measure);
3082:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yd_measure);
3083:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pxx);
3084:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pyy);
3085:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pxdxd);
3086:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _Pydyd);
3087:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3088:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3089:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3090:/home/lsk/paparazzi/var/include/messages.h **** }
3091:/home/lsk/paparazzi/var/include/messages.h **** 
3092:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_HFF_GPS(_trans, _dev, lag_cnt, lag_cnt_err, save_cnt) pprz_msg_send_HFF_GPS(&
3093:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_HFF_GPS(struct transport_tx *trans, struct link_device *dev, uint8
3094:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
3095:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
3096:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
3097:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3098:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_HFF_GPS, "HFF_GPS");
3099:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _lag_cnt);
3100:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lag_cnt_err);
3101:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _save_cnt);
3102:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3103:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3104:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3105:/home/lsk/paparazzi/var/include/messages.h **** }
3106:/home/lsk/paparazzi/var/include/messages.h **** 
3107:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS_SONAR(_trans, _dev, distance, var) pprz_msg_send_INS_SONAR(&((_trans).tra
3108:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS_SONAR(struct transport_tx *trans, struct link_device *dev, uin
3109:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
3110:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
3111:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
3112:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3113:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS_SONAR, "INS_SONA
3114:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _distance);
3115:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _var);
3116:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3117:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3118:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3119:/home/lsk/paparazzi/var/include/messages.h **** }
3120:/home/lsk/paparazzi/var/include/messages.h **** 
3121:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ROTORCRAFT_CAM(_trans, _dev, tilt, pan) pprz_msg_send_ROTORCRAFT_CAM(&((_tran
3122:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ROTORCRAFT_CAM(struct transport_tx *trans, struct link_device *dev
3123:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
3124:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
3125:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
3126:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3127:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ROTORCRAFT_CAM, "ROT
3128:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _tilt);
3129:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pan);
3130:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3131:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3132:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3133:/home/lsk/paparazzi/var/include/messages.h **** }
3134:/home/lsk/paparazzi/var/include/messages.h **** 
3135:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_REF_QUAT(_trans, _dev, ref_qi, ref_qx, ref_qy, ref_qz, body_qi, body_qx,
3136:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_REF_QUAT(struct transport_tx *trans, struct link_device *dev,
3137:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
3138:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
3139:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3140:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3141:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_REF_QUAT, "AHRS
3142:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qi);
3143:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qx);
3144:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qy);
3145:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_qz);
3146:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qi);
3147:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qx);
3148:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qy);
3149:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _body_qz);
3150:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3151:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3152:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3153:/home/lsk/paparazzi/var/include/messages.h **** }
3154:/home/lsk/paparazzi/var/include/messages.h **** 
3155:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_XHAT(_trans, _dev, c, s1, s2, s3, p, q, r, bp, bq, br) pprz_msg_send_EKF
3156:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_XHAT(struct transport_tx *trans, struct link_device *dev, uin
3157:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3158:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3159:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3160:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3161:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_XHAT, "EKF7_XHA
3162:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3163:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s1);
3164:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s2);
3165:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s3);
3166:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3167:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3168:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3169:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3170:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3171:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3172:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3173:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3174:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3175:/home/lsk/paparazzi/var/include/messages.h **** }
3176:/home/lsk/paparazzi/var/include/messages.h **** 
3177:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_Y(_trans, _dev, timecount, g1, g2, g3, m1, m2, m3, p, q, r) pprz_msg_sen
3178:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_Y(struct transport_tx *trans, struct link_device *dev, uint8_
3179:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4
3180:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+4+4+4+4 +2 /* msg
3181:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3182:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3183:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_Y, "EKF7_Y");
3184:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _timecount);
3185:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g1);
3186:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g2);
3187:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g3);
3188:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m1);
3189:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m2);
3190:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _m3);
3191:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3192:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3193:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3194:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3195:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3196:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3197:/home/lsk/paparazzi/var/include/messages.h **** }
3198:/home/lsk/paparazzi/var/include/messages.h **** 
3199:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_EKF7_P_DIAG(_trans, _dev, c, s1, s2, s3, p, q, r, bp, bq, br) pprz_msg_send_E
3200:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_EKF7_P_DIAG(struct transport_tx *trans, struct link_device *dev, u
3201:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3202:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3203:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3204:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3205:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_EKF7_P_DIAG, "EKF7_P
3206:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3207:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s1);
3208:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s2);
3209:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _s3);
3210:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3211:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3212:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3213:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3214:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3215:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3216:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3217:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3218:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3219:/home/lsk/paparazzi/var/include/messages.h **** }
3220:/home/lsk/paparazzi/var/include/messages.h **** 
3221:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_EULER(_trans, _dev, phi, theta, psi) pprz_msg_send_AHRS_EULER(&((_trans)
3222:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_EULER(struct transport_tx *trans, struct link_device *dev, ui
3223:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3224:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3225:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3226:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3227:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_EULER, "AHRS_EU
3228:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3229:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3230:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3231:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3232:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3233:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3234:/home/lsk/paparazzi/var/include/messages.h **** }
3235:/home/lsk/paparazzi/var/include/messages.h **** 
3236:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_MEASUREMENT_EULER(_trans, _dev, phi, theta, psi) pprz_msg_send_AHRS_MEAS
3237:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_MEASUREMENT_EULER(struct transport_tx *trans, struct link_dev
3238:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3239:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3240:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3241:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3242:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_MEASUREMENT_EUL
3243:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3244:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3245:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3246:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3247:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3248:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3249:/home/lsk/paparazzi/var/include/messages.h **** }
3250:/home/lsk/paparazzi/var/include/messages.h **** 
3251:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WT(_trans, _dev, rpm) pprz_msg_send_WT(&((_trans).trans_tx), &((_dev).device)
3252:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WT(struct transport_tx *trans, struct link_device *dev, uint8_t ac
3253:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3254:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3255:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3256:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3257:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WT, "WT");
3258:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _rpm);
3259:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3260:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3261:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3262:/home/lsk/paparazzi/var/include/messages.h **** }
3263:/home/lsk/paparazzi/var/include/messages.h **** 
3264:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CSC_CAN_DEBUG(_trans, _dev, err_nb, err_code) pprz_msg_send_CSC_CAN_DEBUG(&((
3265:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CSC_CAN_DEBUG(struct transport_tx *trans, struct link_device *dev,
3266:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
3267:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
3268:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
3269:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3270:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CSC_CAN_DEBUG, "CSC_
3271:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _err_nb);
3272:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _err_code);
3273:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3274:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3275:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3276:/home/lsk/paparazzi/var/include/messages.h **** }
3277:/home/lsk/paparazzi/var/include/messages.h **** 
3278:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CSC_CAN_MSG(_trans, _dev, frame, id, data_a, data_b) pprz_msg_send_CSC_CAN_MS
3279:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CSC_CAN_MSG(struct transport_tx *trans, struct link_device *dev, u
3280:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3281:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3282:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3283:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3284:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CSC_CAN_MSG, "CSC_CA
3285:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _frame);
3286:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _id);
3287:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _data_a);
3288:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _data_b);
3289:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3290:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3291:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3292:/home/lsk/paparazzi/var/include/messages.h **** }
3293:/home/lsk/paparazzi/var/include/messages.h **** 
3294:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_GYRO_BIAS_INT(_trans, _dev, bp, bq, br) pprz_msg_send_AHRS_GYRO_BIAS_INT
3295:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_GYRO_BIAS_INT(struct transport_tx *trans, struct link_device 
3296:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3297:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3298:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3299:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3300:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_GYRO_BIAS_INT, 
3301:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bp);
3302:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _bq);
3303:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _br);
3304:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3305:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3306:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3307:/home/lsk/paparazzi/var/include/messages.h **** }
3308:/home/lsk/paparazzi/var/include/messages.h **** 
3309:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLOW_AP_OTF(_trans, _dev, counter, velocity, a_attack, a_sidesl, altitude, ch
3310:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLOW_AP_OTF(struct transport_tx *trans, struct link_device *dev, u
3311:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+2+2+4+1 +2 /*
3312:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+2+2+2+4+1 +2 /* msg header 
3313:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+2+2+2+4+1 +2 /* msg header overhead */);
3314:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3315:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLOW_AP_OTF, "FLOW_A
3316:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _counter);
3317:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _velocity);
3318:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a_attack);
3319:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _a_sidesl);
3320:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _altitude);
3321:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _checksum);
3322:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3323:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3324:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3325:/home/lsk/paparazzi/var/include/messages.h **** }
3326:/home/lsk/paparazzi/var/include/messages.h **** 
3327:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FMS_TIME(_trans, _dev, tv_sec, tv_nsec, delay_ns) pprz_msg_send_FMS_TIME(&((_
3328:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FMS_TIME(struct transport_tx *trans, struct link_device *dev, uint
3329:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3330:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3331:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3332:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3333:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FMS_TIME, "FMS_TIME"
3334:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tv_sec);
3335:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _tv_nsec);
3336:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _delay_ns);
3337:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3338:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3339:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3340:/home/lsk/paparazzi/var/include/messages.h **** }
3341:/home/lsk/paparazzi/var/include/messages.h **** 
3342:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_LOADCELL(_trans, _dev, load) pprz_msg_send_LOADCELL(&((_trans).trans_tx), &((
3343:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_LOADCELL(struct transport_tx *trans, struct link_device *dev, uint
3344:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3345:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3346:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3347:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3348:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_LOADCELL, "LOADCELL"
3349:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _load);
3350:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3351:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3352:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3353:/home/lsk/paparazzi/var/include/messages.h **** }
3354:/home/lsk/paparazzi/var/include/messages.h **** 
3355:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_FLA_DEBUG(_trans, _dev, past_input, imu_rate, desired_accel, motor_command) p
3356:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_FLA_DEBUG(struct transport_tx *trans, struct link_device *dev, uin
3357:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3358:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3359:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3360:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3361:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_FLA_DEBUG, "FLA_DEBU
3362:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _past_input);
3363:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _imu_rate);
3364:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _desired_accel);
3365:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _motor_command);
3366:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3367:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3368:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3369:/home/lsk/paparazzi/var/include/messages.h **** }
3370:/home/lsk/paparazzi/var/include/messages.h **** 
3371:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_FAULT_STATUS(_trans, _dev, nb_raw_fault, raw_fault) pprz_msg_send_BLMC_F
3372:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_FAULT_STATUS(struct transport_tx *trans, struct link_device *
3373:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_raw_fault*2 
3374:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_raw_fault*2 +2 /* msg he
3375:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_raw_fault*2 +2 /* msg header overhead */);
3376:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3377:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_FAULT_STATUS, "
3378:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_raw_f
3379:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_raw_fault, (void *) _
3380:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3381:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3382:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3383:/home/lsk/paparazzi/var/include/messages.h **** }
3384:/home/lsk/paparazzi/var/include/messages.h **** 
3385:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_SPEEDS(_trans, _dev, nb_speeds, speeds) pprz_msg_send_BLMC_SPEEDS(&((_tr
3386:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_SPEEDS(struct transport_tx *trans, struct link_device *dev, u
3387:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_speeds*2 +2 
3388:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_speeds*2 +2 /* msg heade
3389:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_speeds*2 +2 /* msg header overhead */);
3390:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3391:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_SPEEDS, "BLMC_S
3392:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_speed
3393:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_ARRAY, 2 * nb_speeds, (void *) _spee
3394:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3395:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3396:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3397:/home/lsk/paparazzi/var/include/messages.h **** }
3398:/home/lsk/paparazzi/var/include/messages.h **** 
3399:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_DEBUG_QUAT(_trans, _dev, jqi, jqx, jqy, jqz, xqi, xqx, xqy, xqz, mqi, mq
3400:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_DEBUG_QUAT(struct transport_tx *trans, struct link_device *de
3401:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3402:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /*
3403:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3404:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3405:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_DEBUG_QUAT, "AH
3406:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqi);
3407:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqx);
3408:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqy);
3409:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _jqz);
3410:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqi);
3411:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqx);
3412:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqy);
3413:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _xqz);
3414:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqi);
3415:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqx);
3416:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqy);
3417:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mqz);
3418:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3419:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3420:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3421:/home/lsk/paparazzi/var/include/messages.h **** }
3422:/home/lsk/paparazzi/var/include/messages.h **** 
3423:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BLMC_BUSVOLTS(_trans, _dev, nb_busvolts, busvolts) pprz_msg_send_BLMC_BUSVOLT
3424:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BLMC_BUSVOLTS(struct transport_tx *trans, struct link_device *dev,
3425:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_busvolts*2 +
3426:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_busvolts*2 +2 /* msg hea
3427:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_busvolts*2 +2 /* msg header overhead */);
3428:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3429:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BLMC_BUSVOLTS, "BLMC
3430:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_busvo
3431:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_ARRAY, 2 * nb_busvolts, (void *) _b
3432:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3433:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3434:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3435:/home/lsk/paparazzi/var/include/messages.h **** }
3436:/home/lsk/paparazzi/var/include/messages.h **** 
3437:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYSTEM_STATUS(_trans, _dev, csc1_loop_count, csc1_msg_count, csc2_loop_count,
3438:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYSTEM_STATUS(struct transport_tx *trans, struct link_device *dev,
3439:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1 +
3440:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+1 +2 /* msg hea
3441:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+1 +2 /* msg header overhead */);
3442:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3443:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYSTEM_STATUS, "SYST
3444:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc1_loop_coun
3445:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc1_msg_count
3446:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc2_loop_coun
3447:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _csc2_msg_count
3448:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _can_rx_err);
3449:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _can_tx_err);
3450:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _rc_parser_err)
3451:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _system_fault);
3452:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3453:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3454:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3455:/home/lsk/paparazzi/var/include/messages.h **** }
3456:/home/lsk/paparazzi/var/include/messages.h **** 
3457:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DYNAMIXEL(_trans, _dev, left_wing, right_wing, left_wing_flag, right_wing_fla
3458:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DYNAMIXEL(struct transport_tx *trans, struct link_device *dev, uin
3459:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+1+1+4+4+4+4+4
3460:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+1+1+4+4+4+4+4 +2 /* msg h
3461:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+1+1+4+4+4+4+4 +2 /* msg header overhead */);
3462:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3463:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DYNAMIXEL, "DYNAMIXE
3464:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _left_wing);
3465:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _right_wing);
3466:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _left_wing_flag)
3467:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _right_wing_flag
3468:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _invalid_positi
3469:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _timeout_events
3470:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
3471:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fuse_rotation_a
3472:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _fuse_rotation_r
3473:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3474:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3475:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3476:/home/lsk/paparazzi/var/include/messages.h **** }
3477:/home/lsk/paparazzi/var/include/messages.h **** 
3478:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RMAT_DEBUG(_trans, _dev, a, b, c, d, e, f, g, h, i) pprz_msg_send_RMAT_DEBUG(
3479:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RMAT_DEBUG(struct transport_tx *trans, struct link_device *dev, ui
3480:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3481:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3482:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3483:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3484:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RMAT_DEBUG, "RMAT_DE
3485:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _a);
3486:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _b);
3487:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _c);
3488:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _d);
3489:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _e);
3490:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _f);
3491:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _g);
3492:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _h);
3493:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _i);
3494:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3495:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3496:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3497:/home/lsk/paparazzi/var/include/messages.h **** }
3498:/home/lsk/paparazzi/var/include/messages.h **** 
3499:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SIMPLE_COMMANDS(_trans, _dev, roll, pitch, yaw) pprz_msg_send_SIMPLE_COMMANDS
3500:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SIMPLE_COMMANDS(struct transport_tx *trans, struct link_device *de
3501:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg h
3502:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2 +2 /* msg header overhe
3503:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2 +2 /* msg header overhead */);
3504:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3505:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SIMPLE_COMMANDS, "SI
3506:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _roll);
3507:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _pitch);
3508:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _yaw);
3509:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3510:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3511:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3512:/home/lsk/paparazzi/var/include/messages.h **** }
3513:/home/lsk/paparazzi/var/include/messages.h **** 
3514:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_VANE_SENSOR(_trans, _dev, alpha, alpha_filtered, alpha_target, alpha_vane_err
3515:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_VANE_SENSOR(struct transport_tx *trans, struct link_device *dev, u
3516:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3517:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg
3518:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3519:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3520:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VANE_SENSOR, "VANE_S
3521:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha);
3522:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_filtered)
3523:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_target);
3524:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha_vane_erro
3525:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alpha2);
3526:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta);
3527:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_filtered);
3528:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_target);
3529:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta_vane_error
3530:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _beta2);
3531:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3532:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3533:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3534:/home/lsk/paparazzi/var/include/messages.h **** }
3535:/home/lsk/paparazzi/var/include/messages.h **** 
3536:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CONTROLLER_GAINS(_trans, _dev, roll_gamma_p, roll_gamma_d, roll_gamma_i, pitc
3537:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CONTROLLER_GAINS(struct transport_tx *trans, struct link_device *d
3538:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3539:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3540:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3541:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3542:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CONTROLLER_GAINS, "C
3543:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_p);
3544:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_d);
3545:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll_gamma_i);
3546:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_p);
3547:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_d);
3548:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch_gamma_i);
3549:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_p);
3550:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_d);
3551:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _yaw_gamma_i);
3552:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3553:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3554:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3555:/home/lsk/paparazzi/var/include/messages.h **** }
3556:/home/lsk/paparazzi/var/include/messages.h **** 
3557:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF(_trans, _dev, phi, theta, psi, qi, qx, qy, qz, p, q, r, ax, ay, az, 
3558:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF(struct transport_tx *trans, struct link_device *dev, uint
3559:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3560:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3561:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhe
3562:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3563:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF, "AHRS_LKF"
3564:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
3565:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
3566:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
3567:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi);
3568:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx);
3569:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy);
3570:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz);
3571:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3572:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _q);
3573:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _r);
3574:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3575:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3576:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3577:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
3578:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
3579:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
3580:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3581:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3582:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3583:/home/lsk/paparazzi/var/include/messages.h **** }
3584:/home/lsk/paparazzi/var/include/messages.h **** 
3585:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_DEBUG(_trans, _dev, phi_err, theta_err, psi_err, bp, bq, br, quat_no
3586:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_DEBUG(struct transport_tx *trans, struct link_device *dev
3587:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3588:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
3589:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
3590:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3591:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_DEBUG, "AHR
3592:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_err);
3593:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_err);
3594:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_err);
3595:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp);
3596:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq);
3597:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br);
3598:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _quat_norm);
3599:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_accel);
3600:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_accel);
3601:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi_cov);
3602:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta_cov);
3603:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi_cov);
3604:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_cov);
3605:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_cov);
3606:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_cov);
3607:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3608:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3609:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3610:/home/lsk/paparazzi/var/include/messages.h **** }
3611:/home/lsk/paparazzi/var/include/messages.h **** 
3612:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_ACC_DBG(_trans, _dev, qi_err, qx_err, qy_err, qz_err, bp_err, bq_err
3613:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_ACC_DBG(struct transport_tx *trans, struct link_device *d
3614:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3615:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3616:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3617:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3618:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_ACC_DBG, "A
3619:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi_err);
3620:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx_err);
3621:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy_err);
3622:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz_err);
3623:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_err);
3624:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_err);
3625:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_err);
3626:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3627:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3628:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3629:/home/lsk/paparazzi/var/include/messages.h **** }
3630:/home/lsk/paparazzi/var/include/messages.h **** 
3631:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AHRS_LKF_MAG_DBG(_trans, _dev, qi_err, qx_err, qy_err, qz_err, bp_err, bq_err
3632:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AHRS_LKF_MAG_DBG(struct transport_tx *trans, struct link_device *d
3633:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 
3634:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4 +2 /* msg heade
3635:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3636:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3637:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AHRS_LKF_MAG_DBG, "A
3638:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qi_err);
3639:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qx_err);
3640:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qy_err);
3641:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _qz_err);
3642:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bp_err);
3643:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _bq_err);
3644:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _br_err);
3645:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3646:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3647:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3648:/home/lsk/paparazzi/var/include/messages.h **** }
3649:/home/lsk/paparazzi/var/include/messages.h **** 
3650:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NPS_SENSORS_SCALED(_trans, _dev, acc_x, acc_y, acc_z, mag_x, mag_y, mag_z) pp
3651:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NPS_SENSORS_SCALED(struct transport_tx *trans, struct link_device 
3652:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3653:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3654:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3655:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3656:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NPS_SENSORS_SCALED, 
3657:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_x);
3658:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_y);
3659:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _acc_z);
3660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_x);
3661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_y);
3662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mag_z);
3663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3664:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3666:/home/lsk/paparazzi/var/include/messages.h **** }
3667:/home/lsk/paparazzi/var/include/messages.h **** 
3668:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_INS(_trans, _dev, ins_x, ins_y, ins_z, ins_xd, ins_yd, ins_zd, ins_xdd, ins_y
3669:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_INS(struct transport_tx *trans, struct link_device *dev, uint8_t a
3670:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
3671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4 +2 /* msg h
3672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
3673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_INS, "INS");
3675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_x);
3676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_y);
3677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_z);
3678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_xd);
3679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_yd);
3680:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zd);
3681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_xdd);
3682:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_ydd);
3683:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ins_zdd);
3684:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3685:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3686:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3687:/home/lsk/paparazzi/var/include/messages.h **** }
3688:/home/lsk/paparazzi/var/include/messages.h **** 
3689:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_ERROR(_trans, _dev, x_position, y_position, z_position, x_velocity, y_vel
3690:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_ERROR(struct transport_tx *trans, struct link_device *dev, uin
3691:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /*
3692:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4 +2 /* msg header 
3693:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4 +2 /* msg header overhead */);
3694:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3695:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_ERROR, "GPS_ERRO
3696:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_position);
3697:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_position);
3698:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_position);
3699:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x_velocity);
3700:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y_velocity);
3701:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_velocity);
3702:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3703:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3704:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3705:/home/lsk/paparazzi/var/include/messages.h **** }
3706:/home/lsk/paparazzi/var/include/messages.h **** 
3707:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO(&((_trans).trans_tx
3708:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO(struct transport_tx *trans, struct link_device *dev, uint
3709:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3710:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3711:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3712:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3713:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO, "IMU_GYRO"
3714:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gp);
3715:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gq);
3716:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gr);
3717:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3718:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3719:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3720:/home/lsk/paparazzi/var/include/messages.h **** }
3721:/home/lsk/paparazzi/var/include/messages.h **** 
3722:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG(&((_trans).trans_tx),
3723:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG(struct transport_tx *trans, struct link_device *dev, uint8
3724:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3725:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3726:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3727:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3728:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG, "IMU_MAG");
3729:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mx);
3730:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _my);
3731:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _mz);
3732:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3733:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3734:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3735:/home/lsk/paparazzi/var/include/messages.h **** }
3736:/home/lsk/paparazzi/var/include/messages.h **** 
3737:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL(&((_trans).trans_
3738:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL(struct transport_tx *trans, struct link_device *dev, uin
3739:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3740:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3741:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3742:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3743:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL, "IMU_ACCE
3744:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ax);
3745:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ay);
3746:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _az);
3747:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3748:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3749:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3750:/home/lsk/paparazzi/var/include/messages.h **** }
3751:/home/lsk/paparazzi/var/include/messages.h **** 
3752:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_RAW(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_RAW(&((_trans).
3753:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_RAW(struct transport_tx *trans, struct link_device *dev, 
3754:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3755:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3756:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3757:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3758:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_RAW, "IMU_G
3759:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gp);
3760:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gq);
3761:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _gr);
3762:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3763:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3764:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3765:/home/lsk/paparazzi/var/include/messages.h **** }
3766:/home/lsk/paparazzi/var/include/messages.h **** 
3767:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_ACCEL_RAW(_trans, _dev, ax, ay, az) pprz_msg_send_IMU_ACCEL_RAW(&((_trans
3768:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_ACCEL_RAW(struct transport_tx *trans, struct link_device *dev,
3769:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3770:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3771:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3772:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3773:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_ACCEL_RAW, "IMU_
3774:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ax);
3775:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ay);
3776:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _az);
3777:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3778:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3779:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3780:/home/lsk/paparazzi/var/include/messages.h **** }
3781:/home/lsk/paparazzi/var/include/messages.h **** 
3782:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_RAW(_trans, _dev, mx, my, mz) pprz_msg_send_IMU_MAG_RAW(&((_trans).tr
3783:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_RAW(struct transport_tx *trans, struct link_device *dev, u
3784:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3785:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3786:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3787:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3788:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_RAW, "IMU_MA
3789:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
3790:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
3791:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
3792:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3793:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3794:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3795:/home/lsk/paparazzi/var/include/messages.h **** }
3796:/home/lsk/paparazzi/var/include/messages.h **** 
3797:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_SETTINGS(_trans, _dev, inclination, declination, hardiron_x, hardiron
3798:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_SETTINGS(struct transport_tx *trans, struct link_device *d
3799:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* m
3800:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4 +2 /* msg header ov
3801:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4 +2 /* msg header overhead */);
3802:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3803:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_SETTINGS, "I
3804:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _inclination);
3805:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _declination);
3806:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _hardiron_x);
3807:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _hardiron_y);
3808:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _hardiron_z);
3809:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3810:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3811:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3812:/home/lsk/paparazzi/var/include/messages.h **** }
3813:/home/lsk/paparazzi/var/include/messages.h **** 
3814:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_MAG_CURRENT_CALIBRATION(_trans, _dev, mx, my, mz, electrical_current) ppr
3815:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_MAG_CURRENT_CALIBRATION(struct transport_tx *trans, struct lin
3816:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
3817:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
3818:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
3819:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3820:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_MAG_CURRENT_CALI
3821:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mx);
3822:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _my);
3823:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _mz);
3824:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _electrical_curr
3825:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3826:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3827:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3828:/home/lsk/paparazzi/var/include/messages.h **** }
3829:/home/lsk/paparazzi/var/include/messages.h **** 
3830:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_UART_ERRORS(_trans, _dev, overrun_cnt, noise_err_cnt, framing_err_cnt, bus_nu
3831:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_UART_ERRORS(struct transport_tx *trans, struct link_device *dev, u
3832:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+1 +2 /* msg
3833:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+1 +2 /* msg header over
3834:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+1 +2 /* msg header overhead */);
3835:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3836:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_UART_ERRORS, "UART_E
3837:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _overrun_cnt);
3838:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _noise_err_cnt)
3839:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _framing_err_cn
3840:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _bus_number);
3841:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3842:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3843:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3844:/home/lsk/paparazzi/var/include/messages.h **** }
3845:/home/lsk/paparazzi/var/include/messages.h **** 
3846:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_GYRO_LP(_trans, _dev, gp, gq, gr) pprz_msg_send_IMU_GYRO_LP(&((_trans).tr
3847:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_GYRO_LP(struct transport_tx *trans, struct link_device *dev, u
3848:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
3849:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
3850:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
3851:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3852:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_GYRO_LP, "IMU_GY
3853:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gp);
3854:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gq);
3855:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _gr);
3856:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3857:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3858:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3859:/home/lsk/paparazzi/var/include/messages.h **** }
3860:/home/lsk/paparazzi/var/include/messages.h **** 
3861:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_PRESSURE(_trans, _dev, p) pprz_msg_send_IMU_PRESSURE(&((_trans).trans_tx)
3862:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_PRESSURE(struct transport_tx *trans, struct link_device *dev, 
3863:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg heade
3864:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4 +2 /* msg header overhead *
3865:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4 +2 /* msg header overhead */);
3866:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3867:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_PRESSURE, "IMU_P
3868:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _p);
3869:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3870:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3871:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3872:/home/lsk/paparazzi/var/include/messages.h **** }
3873:/home/lsk/paparazzi/var/include/messages.h **** 
3874:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IMU_HS_GYRO(_trans, _dev, axis, nb_samples, samples) pprz_msg_send_IMU_HS_GYR
3875:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IMU_HS_GYRO(struct transport_tx *trans, struct link_device *dev, u
3876:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_samples*4 
3877:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+nb_samples*4 +2 /* msg he
3878:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+nb_samples*4 +2 /* msg header overhead */);
3879:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3880:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IMU_HS_GYRO, "IMU_HS
3881:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _axis);
3882:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_sampl
3883:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_ARRAY, 4 * nb_samples, (void *) _sa
3884:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3885:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3886:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3887:/home/lsk/paparazzi/var/include/messages.h **** }
3888:/home/lsk/paparazzi/var/include/messages.h **** 
3889:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_PASSTHROUGH_STATUS(_trans, _dev, io_proc_msg_cnt, io_proc_err_cnt, io_li
3890:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_PASSTHROUGH_STATUS(struct transport_tx *trans, struct link_de
3891:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+1 +2 /* m
3892:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+1 +2 /* msg header ov
3893:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+1 +2 /* msg header overhead */);
3894:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
3895:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_PASSTHROUGH_STA
3896:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_proc_msg_cn
3897:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_proc_err_cn
3898:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_link_msg_cn
3899:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _io_link_err_cn
3900:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _rc_status);
3901:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
3902:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3903:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
3904:/home/lsk/paparazzi/var/include/messages.h **** }
3905:/home/lsk/paparazzi/var/include/messages.h **** 
3906:/home/lsk/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TUNE_VERT(_trans, _dev, z_sp, est_z, ref_z, ref_zd) pprz_msg_send_TUNE_VERT(&
3907:/home/lsk/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TUNE_VERT(struct transport_tx *trans, struct link_device *dev, uin
3908:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 444              		.loc 3 3908 0
 445 000e 276A     		ldr	r7, [r4, #32]
 446 0010 2368     		ldr	r3, [r4]
 447 0012 D4F80490 		ldr	r9, [r4, #4]
 448 0016 0126     		movs	r6, #1
 449 0018 1221     		movs	r1, #18
 450              	.LBE5:
 451              	.LBE4:
 168:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetPositionNed_i()->z),
 452              		.loc 2 168 0
 453 001a 8046     		mov	r8, r0
 454              	.LVL34:
 455 001c 8DF80F60 		strb	r6, [sp, #15]
 456              	.LVL35:
 457              	.LBB8:
 458              	.LBB6:
 459              		.loc 3 3908 0
 460 0020 3846     		mov	r0, r7
 461              	.LVL36:
 462 0022 9847     		blx	r3
 463              	.LVL37:
 464 0024 2946     		mov	r1, r5
 465 0026 0246     		mov	r2, r0
 466 0028 3846     		mov	r0, r7
 467 002a C847     		blx	r9
 468              	.LVL38:
 469 002c 0028     		cmp	r0, #0
 470 002e 4BD0     		beq	.L34
3909:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 471              		.loc 3 3909 0
 472 0030 276A     		ldr	r7, [r4, #32]
 473 0032 2368     		ldr	r3, [r4]
 474 0034 D4F81C90 		ldr	r9, [r4, #28]
 475 0038 3846     		mov	r0, r7
 476 003a 1221     		movs	r1, #18
 477 003c 9847     		blx	r3
 478              	.LVL39:
 479 003e 2946     		mov	r1, r5
 480 0040 0246     		mov	r2, r0
 481 0042 3846     		mov	r0, r7
 482 0044 C847     		blx	r9
 483              	.LVL40:
3910:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 484              		.loc 3 3910 0
 485 0046 2369     		ldr	r3, [r4, #16]
 486 0048 206A     		ldr	r0, [r4, #32]
 487 004a 2946     		mov	r1, r5
 488 004c 1222     		movs	r2, #18
 489 004e 9847     		blx	r3
 490              	.LVL41:
3911:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 491              		.loc 3 3911 0
 492 0050 0DF10F03 		add	r3, sp, #15
 493 0054 0096     		str	r6, [sp]
 494 0056 0193     		str	r3, [sp, #4]
 495 0058 A668     		ldr	r6, [r4, #8]
 496              	.LVL42:
 497 005a 206A     		ldr	r0, [r4, #32]
 498 005c 2946     		mov	r1, r5
 499 005e 0222     		movs	r2, #2
 500 0060 0023     		movs	r3, #0
 501              	.LVL43:
 502 0062 B047     		blx	r6
 503              	.LVL44:
3912:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TUNE_VERT, "TUNE_VER
 504              		.loc 3 3912 0
 505 0064 D523     		movs	r3, #213
 506 0066 0093     		str	r3, [sp]
 507 0068 1B4B     		ldr	r3, .L37
 508 006a 0193     		str	r3, [sp, #4]
 509 006c E668     		ldr	r6, [r4, #12]
 510 006e 206A     		ldr	r0, [r4, #32]
 511 0070 2946     		mov	r1, r5
 512 0072 0222     		movs	r2, #2
 513 0074 0023     		movs	r3, #0
 514 0076 B047     		blx	r6
 515              	.LVL45:
3913:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
 516              		.loc 3 3913 0
 517 0078 0426     		movs	r6, #4
 518 007a 184B     		ldr	r3, .L37+4
 519 007c 0096     		str	r6, [sp]
 520 007e 0193     		str	r3, [sp, #4]
 521 0080 A768     		ldr	r7, [r4, #8]
 522 0082 206A     		ldr	r0, [r4, #32]
 523 0084 2946     		mov	r1, r5
 524 0086 0722     		movs	r2, #7
 525 0088 0023     		movs	r3, #0
 526 008a B847     		blx	r7
 527              	.LVL46:
 528              	.LBE6:
 529              	.LBE8:
 166:firmwares/rotorcraft/guidance/guidance_v.c ****   pprz_msg_send_TUNE_VERT(trans, dev, AC_ID,
 530              		.loc 2 166 0
 531 008c 08F10803 		add	r3, r8, #8
 532              	.LVL47:
 533              	.LBB9:
 534              	.LBB7:
3914:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
 535              		.loc 3 3914 0
 536 0090 0096     		str	r6, [sp]
 537 0092 0193     		str	r3, [sp, #4]
 538 0094 A768     		ldr	r7, [r4, #8]
 539 0096 206A     		ldr	r0, [r4, #32]
 540 0098 2946     		mov	r1, r5
 541 009a 0722     		movs	r2, #7
 542 009c 0023     		movs	r3, #0
 543              	.LVL48:
 544 009e B847     		blx	r7
 545              	.LVL49:
3915:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
 546              		.loc 3 3915 0
 547 00a0 0F4B     		ldr	r3, .L37+8
 548 00a2 0096     		str	r6, [sp]
 549 00a4 0193     		str	r3, [sp, #4]
 550 00a6 206A     		ldr	r0, [r4, #32]
 551 00a8 A768     		ldr	r7, [r4, #8]
 552 00aa 2946     		mov	r1, r5
 553 00ac 0722     		movs	r2, #7
 554 00ae 0023     		movs	r3, #0
 555 00b0 B847     		blx	r7
 556              	.LVL50:
3916:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
 557              		.loc 3 3916 0
 558 00b2 0C4B     		ldr	r3, .L37+12
 559 00b4 0096     		str	r6, [sp]
 560 00b6 0193     		str	r3, [sp, #4]
 561 00b8 A668     		ldr	r6, [r4, #8]
 562 00ba 206A     		ldr	r0, [r4, #32]
 563 00bc 0023     		movs	r3, #0
 564 00be 2946     		mov	r1, r5
 565 00c0 0722     		movs	r2, #7
 566 00c2 B047     		blx	r6
 567              	.LVL51:
3917:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 568              		.loc 3 3917 0
 569 00c4 6369     		ldr	r3, [r4, #20]
 570 00c6 00E0     		b	.L36
 571              	.L34:
3918:/home/lsk/paparazzi/var/include/messages.h **** 	} else
3919:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 572              		.loc 3 3919 0
 573 00c8 A369     		ldr	r3, [r4, #24]
 574              	.L36:
 575 00ca 206A     		ldr	r0, [r4, #32]
 576 00cc 2946     		mov	r1, r5
 577 00ce 9847     		blx	r3
 578              	.LVL52:
 579              	.LBE7:
 580              	.LBE9:
 171:firmwares/rotorcraft/guidance/guidance_v.c **** }
 581              		.loc 2 171 0
 582 00d0 05B0     		add	sp, sp, #20
 583              		@ sp needed
 584 00d2 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 585              	.LVL53:
 586              	.L38:
 587 00d6 00BF     		.align	2
 588              	.L37:
 589 00d8 00000000 		.word	.LC0
 590 00dc 00000000 		.word	.LANCHOR13
 591 00e0 00000000 		.word	.LANCHOR0
 592 00e4 00000000 		.word	.LANCHOR1
 593              		.cfi_endproc
 594              	.LFE458:
 596              		.section	.text.send_vert_loop,"ax",%progbits
 597              		.align	1
 598              		.thumb
 599              		.thumb_func
 601              	send_vert_loop:
 602              	.LFB457:
 147:firmwares/rotorcraft/guidance/guidance_v.c **** {
 603              		.loc 2 147 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 8
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              	.LVL54:
 608 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 609              		.cfi_def_cfa_offset 36
 610              		.cfi_offset 4, -36
 611              		.cfi_offset 5, -32
 612              		.cfi_offset 6, -28
 613              		.cfi_offset 7, -24
 614              		.cfi_offset 8, -20
 615              		.cfi_offset 9, -16
 616              		.cfi_offset 10, -12
 617              		.cfi_offset 11, -8
 618              		.cfi_offset 14, -4
 619 0004 85B0     		sub	sp, sp, #20
 620              		.cfi_def_cfa_offset 56
 147:firmwares/rotorcraft/guidance/guidance_v.c **** {
 621              		.loc 2 147 0
 622 0006 0D46     		mov	r5, r1
 623 0008 0446     		mov	r4, r0
 150:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetPositionNed_i()->z),
 624              		.loc 2 150 0
 625 000a FFF7FEFF 		bl	stateGetPositionNed_i
 626              	.LVL55:
 627 000e 8046     		mov	r8, r0
 151:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetSpeedNed_i()->z),
 628              		.loc 2 151 0
 629 0010 FFF7FEFF 		bl	stateGetSpeedNed_i
 630              	.LVL56:
 631              	.LBB14:
 632              	.LBB15:
 847:./state.h     **** 
 848:./state.h     **** /// Get ground speed in local ENU coordinates (int).
 849:./state.h     **** static inline struct EnuCoor_i *stateGetSpeedEnu_i(void)
 850:./state.h     **** {
 851:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_I)) {
 852:./state.h     ****     stateCalcSpeedEnu_i();
 853:./state.h     ****   }
 854:./state.h     ****   return &state.enu_speed_i;
 855:./state.h     **** }
 856:./state.h     **** 
 857:./state.h     **** /// Get ground speed in ECEF coordinates (int).
 858:./state.h     **** static inline struct EcefCoor_i *stateGetSpeedEcef_i(void)
 859:./state.h     **** {
 860:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_I)) {
 861:./state.h     ****     stateCalcSpeedEcef_i();
 862:./state.h     ****   }
 863:./state.h     ****   return &state.ecef_speed_i;
 864:./state.h     **** }
 865:./state.h     **** 
 866:./state.h     **** /// Get norm of horizontal ground speed (int).
 867:./state.h     **** static inline uint32_t *stateGetHorizontalSpeedNorm_i(void)
 868:./state.h     **** {
 869:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_I)) {
 870:./state.h     ****     stateCalcHorizontalSpeedNorm_i();
 871:./state.h     ****   }
 872:./state.h     ****   return &state.h_speed_norm_i;
 873:./state.h     **** }
 874:./state.h     **** 
 875:./state.h     **** /// Get dir of horizontal ground speed (int).
 876:./state.h     **** static inline int32_t *stateGetHorizontalSpeedDir_i(void)
 877:./state.h     **** {
 878:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_I)) {
 879:./state.h     ****     stateCalcHorizontalSpeedDir_i();
 880:./state.h     ****   }
 881:./state.h     ****   return &state.h_speed_dir_i;
 882:./state.h     **** }
 883:./state.h     **** 
 884:./state.h     **** /// Get ground speed in local NED coordinates (float).
 885:./state.h     **** static inline struct NedCoor_f *stateGetSpeedNed_f(void)
 886:./state.h     **** {
 887:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_F)) {
 888:./state.h     ****     stateCalcSpeedNed_f();
 889:./state.h     ****   }
 890:./state.h     ****   return &state.ned_speed_f;
 891:./state.h     **** }
 892:./state.h     **** 
 893:./state.h     **** /// Get ground speed in local ENU coordinates (float).
 894:./state.h     **** static inline struct EnuCoor_f *stateGetSpeedEnu_f(void)
 895:./state.h     **** {
 896:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_F)) {
 897:./state.h     ****     stateCalcSpeedEnu_f();
 898:./state.h     ****   }
 899:./state.h     ****   return &state.enu_speed_f;
 900:./state.h     **** }
 901:./state.h     **** 
 902:./state.h     **** /// Get ground speed in ECEF coordinates (float).
 903:./state.h     **** static inline struct EcefCoor_f *stateGetSpeedEcef_f(void)
 904:./state.h     **** {
 905:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_F)) {
 906:./state.h     ****     stateCalcSpeedEcef_f();
 907:./state.h     ****   }
 908:./state.h     ****   return &state.ecef_speed_f;
 909:./state.h     **** }
 910:./state.h     **** 
 911:./state.h     **** /// Get norm of horizontal ground speed (float).
 912:./state.h     **** static inline float *stateGetHorizontalSpeedNorm_f(void)
 913:./state.h     **** {
 914:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_F)) {
 915:./state.h     ****     stateCalcHorizontalSpeedNorm_f();
 916:./state.h     ****   }
 917:./state.h     ****   return &state.h_speed_norm_f;
 918:./state.h     **** }
 919:./state.h     **** 
 920:./state.h     **** /// Get dir of horizontal ground speed (float).
 921:./state.h     **** static inline float *stateGetHorizontalSpeedDir_f(void)
 922:./state.h     **** {
 923:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_F)) {
 924:./state.h     ****     stateCalcHorizontalSpeedDir_f();
 925:./state.h     ****   }
 926:./state.h     ****   return &state.h_speed_dir_f;
 927:./state.h     **** }
 928:./state.h     **** /** @}*/
 929:./state.h     **** 
 930:./state.h     **** 
 931:./state.h     **** 
 932:./state.h     **** /******************************************************************************
 933:./state.h     ****  *                                                                            *
 934:./state.h     ****  * Set and Get functions for the ACCELERATION representations                 *
 935:./state.h     ****  *                                                                            *
 936:./state.h     ****  *****************************************************************************/
 937:./state.h     **** /** @addtogroup state_acceleration
 938:./state.h     ****  *  @{ */
 939:./state.h     **** 
 940:./state.h     **** /************* declaration of transformation functions ************/
 941:./state.h     **** extern void stateCalcAccelNed_i(void);
 942:./state.h     **** extern void stateCalcAccelEcef_i(void);
 943:./state.h     **** extern void stateCalcAccelNed_f(void);
 944:./state.h     **** extern void stateCalcAccelEcef_f(void);
 945:./state.h     **** 
 946:./state.h     **** /*********************** validity test functions ******************/
 947:./state.h     **** 
 948:./state.h     **** /// Test if accelerations are valid.
 949:./state.h     **** static inline bool_t stateIsAccelValid(void)
 950:./state.h     **** {
 951:./state.h     ****   return (state.accel_status);
 952:./state.h     **** }
 953:./state.h     **** 
 954:./state.h     **** /************************ Set functions ****************************/
 955:./state.h     **** 
 956:./state.h     **** /// Set acceleration in NED coordinates (int).
 957:./state.h     **** static inline void stateSetAccelNed_i(struct NedCoor_i *ned_accel)
 958:./state.h     **** {
 959:./state.h     ****   VECT3_COPY(state.ned_accel_i, *ned_accel);
 960:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 961:./state.h     ****   state.accel_status = (1 << ACCEL_NED_I);
 962:./state.h     **** }
 963:./state.h     **** 
 964:./state.h     **** /// Set acceleration in ECEF coordinates (int).
 965:./state.h     **** static inline void stateSetAccelEcef_i(struct EcefCoor_i *ecef_accel)
 966:./state.h     **** {
 967:./state.h     ****   VECT3_COPY(state.ecef_accel_i, *ecef_accel);
 968:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 969:./state.h     ****   state.accel_status = (1 << ACCEL_ECEF_I);
 970:./state.h     **** }
 971:./state.h     **** 
 972:./state.h     **** /// Set acceleration in NED coordinates (float).
 973:./state.h     **** static inline void stateSetAccelNed_f(struct NedCoor_f *ned_accel)
 974:./state.h     **** {
 975:./state.h     ****   VECT3_COPY(state.ned_accel_f, *ned_accel);
 976:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 977:./state.h     ****   state.accel_status = (1 << ACCEL_NED_F);
 978:./state.h     **** }
 979:./state.h     **** 
 980:./state.h     **** /// Set acceleration in ECEF coordinates (float).
 981:./state.h     **** static inline void stateSetAccelEcef_f(struct EcefCoor_f *ecef_accel)
 982:./state.h     **** {
 983:./state.h     ****   VECT3_COPY(state.ecef_accel_f, *ecef_accel);
 984:./state.h     ****   /* clear bits for all accel representations and only set the new one */
 985:./state.h     ****   state.accel_status = (1 << ACCEL_ECEF_F);
 986:./state.h     **** }
 987:./state.h     **** 
 988:./state.h     **** /************************ Get functions ****************************/
 989:./state.h     **** 
 990:./state.h     **** /// Get acceleration in NED coordinates (int).
 991:./state.h     **** static inline struct NedCoor_i *stateGetAccelNed_i(void)
 992:./state.h     **** {
 993:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_NED_I)) {
 633              		.loc 1 993 0
 634 0014 684B     		ldr	r3, .L44
 635 0016 93F87031 		ldrb	r3, [r3, #368]	@ zero_extendqisi2
 636 001a 9B07     		lsls	r3, r3, #30
 637              	.LBE15:
 638              	.LBE14:
 151:firmwares/rotorcraft/guidance/guidance_v.c ****                           &(stateGetSpeedNed_i()->z),
 639              		.loc 2 151 0
 640 001c 8346     		mov	fp, r0
 641              	.LBB17:
 642              	.LBB16:
 643              		.loc 1 993 0
 644 001e 01D4     		bmi	.L40
 994:./state.h     ****     stateCalcAccelNed_i();
 645              		.loc 1 994 0
 646 0020 FFF7FEFF 		bl	stateCalcAccelNed_i
 647              	.LVL57:
 648              	.L40:
 649              	.LBE16:
 650              	.LBE17:
 651              	.LBB18:
 652              	.LBB19:
2659:/home/lsk/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4
 653              		.loc 3 2659 0
 654 0024 D4F82090 		ldr	r9, [r4, #32]
 655 0028 2368     		ldr	r3, [r4]
 656 002a D4F804A0 		ldr	r10, [r4, #4]
 657 002e 0126     		movs	r6, #1
 658 0030 3E21     		movs	r1, #62
 659 0032 8DF80F60 		strb	r6, [sp, #15]
 660              	.LVL58:
 661 0036 4846     		mov	r0, r9
 662 0038 9847     		blx	r3
 663              	.LVL59:
 664 003a 2946     		mov	r1, r5
 665 003c 0246     		mov	r2, r0
 666 003e 4846     		mov	r0, r9
 667 0040 D047     		blx	r10
 668              	.LVL60:
 669 0042 0028     		cmp	r0, #0
 670 0044 00F0B180 		beq	.L41
2660:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4
 671              		.loc 3 2660 0
 672 0048 D4F82090 		ldr	r9, [r4, #32]
 673 004c 2368     		ldr	r3, [r4]
 674 004e D4F81CA0 		ldr	r10, [r4, #28]
 675 0052 3E21     		movs	r1, #62
 676 0054 4846     		mov	r0, r9
 677 0056 9847     		blx	r3
 678              	.LVL61:
 679 0058 2946     		mov	r1, r5
 680 005a 0246     		mov	r2, r0
 681 005c 4846     		mov	r0, r9
 682 005e D047     		blx	r10
 683              	.LVL62:
2661:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4+4+4+4+4+4+4+4 +2 /* msg header overhead
 684              		.loc 3 2661 0
 685 0060 2369     		ldr	r3, [r4, #16]
 686 0062 206A     		ldr	r0, [r4, #32]
 687 0064 2946     		mov	r1, r5
 688 0066 3E22     		movs	r2, #62
 689 0068 9847     		blx	r3
 690              	.LVL63:
2662:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 691              		.loc 3 2662 0
 692 006a 0DF10F03 		add	r3, sp, #15
 693 006e 0096     		str	r6, [sp]
 694 0070 0193     		str	r3, [sp, #4]
 695 0072 A668     		ldr	r6, [r4, #8]
 696              	.LVL64:
 697 0074 206A     		ldr	r0, [r4, #32]
 698 0076 2946     		mov	r1, r5
 699 0078 0222     		movs	r2, #2
 700 007a 0023     		movs	r3, #0
 701              	.LVL65:
 702 007c B047     		blx	r6
 703              	.LVL66:
2663:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_VERT_LOOP, "VERT_LOO
 704              		.loc 3 2663 0
 705 007e 9123     		movs	r3, #145
 706 0080 0093     		str	r3, [sp]
 707 0082 4E4B     		ldr	r3, .L44+4
 708 0084 0193     		str	r3, [sp, #4]
 709 0086 E668     		ldr	r6, [r4, #12]
 710 0088 206A     		ldr	r0, [r4, #32]
 711 008a 2946     		mov	r1, r5
 712 008c 0222     		movs	r2, #2
 713 008e 0023     		movs	r3, #0
 714 0090 B047     		blx	r6
 715              	.LVL67:
2664:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _z_sp);
 716              		.loc 3 2664 0
 717 0092 0426     		movs	r6, #4
 718 0094 4A4B     		ldr	r3, .L44+8
 719 0096 0096     		str	r6, [sp]
 720 0098 0193     		str	r3, [sp, #4]
 721 009a 206A     		ldr	r0, [r4, #32]
 722 009c A768     		ldr	r7, [r4, #8]
 723 009e 2946     		mov	r1, r5
 724 00a0 0722     		movs	r2, #7
 725 00a2 0023     		movs	r3, #0
 726 00a4 B847     		blx	r7
 727              	.LVL68:
2665:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _zd_sp);
 728              		.loc 3 2665 0
 729 00a6 474B     		ldr	r3, .L44+12
 730 00a8 0096     		str	r6, [sp]
 731 00aa 0193     		str	r3, [sp, #4]
 732 00ac 206A     		ldr	r0, [r4, #32]
 733 00ae A768     		ldr	r7, [r4, #8]
 734 00b0 2946     		mov	r1, r5
 735 00b2 0722     		movs	r2, #7
 736 00b4 0023     		movs	r3, #0
 737 00b6 B847     		blx	r7
 738              	.LVL69:
 739              	.LBE19:
 740              	.LBE18:
 148:firmwares/rotorcraft/guidance/guidance_v.c ****   pprz_msg_send_VERT_LOOP(trans, dev, AC_ID,
 741              		.loc 2 148 0
 742 00b8 08F10803 		add	r3, r8, #8
 743              	.LBB22:
 744              	.LBB20:
2666:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_z);
 745              		.loc 3 2666 0
 746 00bc 0096     		str	r6, [sp]
 747 00be 0193     		str	r3, [sp, #4]
 748 00c0 206A     		ldr	r0, [r4, #32]
 749 00c2 A768     		ldr	r7, [r4, #8]
 750 00c4 2946     		mov	r1, r5
 751 00c6 0722     		movs	r2, #7
 752 00c8 0023     		movs	r3, #0
 753 00ca B847     		blx	r7
 754              	.LVL70:
 755              	.LBE20:
 756              	.LBE22:
 148:firmwares/rotorcraft/guidance/guidance_v.c ****   pprz_msg_send_VERT_LOOP(trans, dev, AC_ID,
 757              		.loc 2 148 0
 758 00cc 0BF10807 		add	r7, fp, #8
 759              	.LBB23:
 760              	.LBB21:
2667:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zd);
 761              		.loc 3 2667 0
 762 00d0 0096     		str	r6, [sp]
 763 00d2 0197     		str	r7, [sp, #4]
 764 00d4 206A     		ldr	r0, [r4, #32]
 765 00d6 A768     		ldr	r7, [r4, #8]
 766 00d8 2946     		mov	r1, r5
 767 00da 0722     		movs	r2, #7
 768 00dc 0023     		movs	r3, #0
 769 00de B847     		blx	r7
 770              	.LVL71:
2668:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _est_zdd);
 771              		.loc 3 2668 0
 772 00e0 394B     		ldr	r3, .L44+16
 773              	.LVL72:
 774 00e2 0096     		str	r6, [sp]
 775 00e4 0193     		str	r3, [sp, #4]
 776 00e6 A768     		ldr	r7, [r4, #8]
 777 00e8 206A     		ldr	r0, [r4, #32]
 778 00ea 2946     		mov	r1, r5
 779 00ec 0722     		movs	r2, #7
 780 00ee 0023     		movs	r3, #0
 781              	.LVL73:
 782 00f0 B847     		blx	r7
 783              	.LVL74:
2669:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_z);
 784              		.loc 3 2669 0
 785 00f2 364B     		ldr	r3, .L44+20
 786 00f4 0096     		str	r6, [sp]
 787 00f6 0193     		str	r3, [sp, #4]
 788 00f8 A768     		ldr	r7, [r4, #8]
 789 00fa 206A     		ldr	r0, [r4, #32]
 790 00fc 2946     		mov	r1, r5
 791 00fe 0722     		movs	r2, #7
 792 0100 0023     		movs	r3, #0
 793 0102 B847     		blx	r7
 794              	.LVL75:
2670:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zd);
 795              		.loc 3 2670 0
 796 0104 324B     		ldr	r3, .L44+24
 797 0106 0096     		str	r6, [sp]
 798 0108 0193     		str	r3, [sp, #4]
 799 010a A768     		ldr	r7, [r4, #8]
 800 010c 206A     		ldr	r0, [r4, #32]
 801 010e 2946     		mov	r1, r5
 802 0110 0722     		movs	r2, #7
 803 0112 0023     		movs	r3, #0
 804 0114 B847     		blx	r7
 805              	.LVL76:
2671:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ref_zdd);
 806              		.loc 3 2671 0
 807 0116 2F4B     		ldr	r3, .L44+28
 808 0118 0096     		str	r6, [sp]
 809 011a 0193     		str	r3, [sp, #4]
 810 011c A768     		ldr	r7, [r4, #8]
 811 011e 206A     		ldr	r0, [r4, #32]
 812 0120 2946     		mov	r1, r5
 813 0122 0722     		movs	r2, #7
 814 0124 0023     		movs	r3, #0
 815 0126 B847     		blx	r7
 816              	.LVL77:
2672:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_inv_m);
 817              		.loc 3 2672 0
 818 0128 2B4B     		ldr	r3, .L44+32
 819 012a 0096     		str	r6, [sp]
 820 012c 0193     		str	r3, [sp, #4]
 821 012e A768     		ldr	r7, [r4, #8]
 822 0130 206A     		ldr	r0, [r4, #32]
 823 0132 2946     		mov	r1, r5
 824 0134 0722     		movs	r2, #7
 825 0136 0023     		movs	r3, #0
 826 0138 B847     		blx	r7
 827              	.LVL78:
2673:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_cov);
 828              		.loc 3 2673 0
 829 013a 284B     		ldr	r3, .L44+36
 830 013c 0096     		str	r6, [sp]
 831 013e 0193     		str	r3, [sp, #4]
 832 0140 A768     		ldr	r7, [r4, #8]
 833 0142 206A     		ldr	r0, [r4, #32]
 834 0144 2946     		mov	r1, r5
 835 0146 0722     		movs	r2, #7
 836 0148 0023     		movs	r3, #0
 837 014a B847     		blx	r7
 838              	.LVL79:
2674:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _adp_meas);
 839              		.loc 3 2674 0
 840 014c 244B     		ldr	r3, .L44+40
 841 014e 0096     		str	r6, [sp]
 842 0150 0193     		str	r3, [sp, #4]
 843 0152 A768     		ldr	r7, [r4, #8]
 844 0154 206A     		ldr	r0, [r4, #32]
 845 0156 2946     		mov	r1, r5
 846 0158 0722     		movs	r2, #7
 847 015a 0023     		movs	r3, #0
 848 015c B847     		blx	r7
 849              	.LVL80:
2675:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _sum_err);
 850              		.loc 3 2675 0
 851 015e 214B     		ldr	r3, .L44+44
 852 0160 0096     		str	r6, [sp]
 853 0162 0193     		str	r3, [sp, #4]
 854 0164 A768     		ldr	r7, [r4, #8]
 855 0166 206A     		ldr	r0, [r4, #32]
 856 0168 2946     		mov	r1, r5
 857 016a 0722     		movs	r2, #7
 858 016c 0023     		movs	r3, #0
 859 016e B847     		blx	r7
 860              	.LVL81:
2676:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _ff_cmd);
 861              		.loc 3 2676 0
 862 0170 1D4B     		ldr	r3, .L44+48
 863 0172 0096     		str	r6, [sp]
 864 0174 0193     		str	r3, [sp, #4]
 865 0176 A768     		ldr	r7, [r4, #8]
 866 0178 206A     		ldr	r0, [r4, #32]
 867 017a 2946     		mov	r1, r5
 868 017c 0722     		movs	r2, #7
 869 017e 0023     		movs	r3, #0
 870 0180 B847     		blx	r7
 871              	.LVL82:
2677:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _fb_cmd);
 872              		.loc 3 2677 0
 873 0182 1A4B     		ldr	r3, .L44+52
 874 0184 0096     		str	r6, [sp]
 875 0186 0193     		str	r3, [sp, #4]
 876 0188 206A     		ldr	r0, [r4, #32]
 877 018a A768     		ldr	r7, [r4, #8]
 878 018c 2946     		mov	r1, r5
 879 018e 0722     		movs	r2, #7
 880 0190 0023     		movs	r3, #0
 881 0192 B847     		blx	r7
 882              	.LVL83:
2678:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _delta_t);
 883              		.loc 3 2678 0
 884 0194 164B     		ldr	r3, .L44+56
 885 0196 0096     		str	r6, [sp]
 886 0198 0193     		str	r3, [sp, #4]
 887 019a A668     		ldr	r6, [r4, #8]
 888 019c 206A     		ldr	r0, [r4, #32]
 889 019e 0023     		movs	r3, #0
 890 01a0 2946     		mov	r1, r5
 891 01a2 0722     		movs	r2, #7
 892 01a4 B047     		blx	r6
 893              	.LVL84:
2679:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 894              		.loc 3 2679 0
 895 01a6 6369     		ldr	r3, [r4, #20]
 896 01a8 00E0     		b	.L43
 897              	.L41:
2681:/home/lsk/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 898              		.loc 3 2681 0
 899 01aa A369     		ldr	r3, [r4, #24]
 900              	.L43:
 901 01ac 206A     		ldr	r0, [r4, #32]
 902 01ae 2946     		mov	r1, r5
 903 01b0 9847     		blx	r3
 904              	.LVL85:
 905              	.LBE21:
 906              	.LBE23:
 162:firmwares/rotorcraft/guidance/guidance_v.c **** }
 907              		.loc 2 162 0
 908 01b2 05B0     		add	sp, sp, #20
 909              		@ sp needed
 910 01b4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 911              	.LVL86:
 912              	.L45:
 913              		.align	2
 914              	.L44:
 915 01b8 00000000 		.word	state
 916 01bc 0A000000 		.word	.LC1
 917 01c0 00000000 		.word	.LANCHOR13
 918 01c4 00000000 		.word	.LANCHOR14
 919 01c8 7C010000 		.word	state+380
 920 01cc 00000000 		.word	.LANCHOR0
 921 01d0 00000000 		.word	.LANCHOR1
 922 01d4 00000000 		.word	.LANCHOR2
 923 01d8 00000000 		.word	gv_adapt_X
 924 01dc 00000000 		.word	gv_adapt_P
 925 01e0 00000000 		.word	gv_adapt_Xmeas
 926 01e4 00000000 		.word	.LANCHOR3
 927 01e8 00000000 		.word	.LANCHOR7
 928 01ec 00000000 		.word	.LANCHOR11
 929 01f0 00000000 		.word	.LANCHOR12
 930              		.cfi_endproc
 931              	.LFE457:
 933              		.section	.text.guidance_v_init,"ax",%progbits
 934              		.align	1
 935              		.global	guidance_v_init
 936              		.thumb
 937              		.thumb_func
 939              	guidance_v_init:
 940              	.LFB459:
 175:firmwares/rotorcraft/guidance/guidance_v.c **** {
 941              		.loc 2 175 0
 942              		.cfi_startproc
 943              		@ args = 0, pretend = 0, frame = 0
 944              		@ frame_needed = 0, uses_anonymous_args = 0
 177:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_mode = GUIDANCE_V_MODE_KILL;
 945              		.loc 2 177 0
 946 0000 114A     		ldr	r2, .L47
 179:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_kp = GUIDANCE_V_HOVER_KP;
 947              		.loc 2 179 0
 948 0002 1249     		ldr	r1, .L47+4
 177:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_mode = GUIDANCE_V_MODE_KILL;
 949              		.loc 2 177 0
 950 0004 0023     		movs	r3, #0
 175:firmwares/rotorcraft/guidance/guidance_v.c **** {
 951              		.loc 2 175 0
 952 0006 10B5     		push	{r4, lr}
 953              		.cfi_def_cfa_offset 8
 954              		.cfi_offset 4, -8
 955              		.cfi_offset 14, -4
 177:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_mode = GUIDANCE_V_MODE_KILL;
 956              		.loc 2 177 0
 957 0008 1370     		strb	r3, [r2]
 179:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_kp = GUIDANCE_V_HOVER_KP;
 958              		.loc 2 179 0
 959 000a 7822     		movs	r2, #120
 960 000c 0A60     		str	r2, [r1]
 180:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_kd = GUIDANCE_V_HOVER_KD;
 961              		.loc 2 180 0
 962 000e 1049     		ldr	r1, .L47+8
 191:firmwares/rotorcraft/guidance/guidance_v.c ****   register_periodic_telemetry(DefaultPeriodic, "VERT_LOOP", send_vert_loop);
 963              		.loc 2 191 0
 964 0010 104C     		ldr	r4, .L47+12
 180:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_kd = GUIDANCE_V_HOVER_KD;
 965              		.loc 2 180 0
 966 0012 0A60     		str	r2, [r1]
 181:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_ki = GUIDANCE_V_HOVER_KI;
 967              		.loc 2 181 0
 968 0014 104A     		ldr	r2, .L47+16
 969 0016 2821     		movs	r1, #40
 970 0018 1160     		str	r1, [r2]
 183:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_z_sum_err = 0;
 971              		.loc 2 183 0
 972 001a 104A     		ldr	r2, .L47+20
 973 001c 1360     		str	r3, [r2]
 185:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_nominal_throttle = GUIDANCE_V_NOMINAL_HOVER_THROTTLE;
 974              		.loc 2 185 0
 975 001e 104B     		ldr	r3, .L47+24
 976 0020 104A     		ldr	r2, .L47+28
 977 0022 1A60     		str	r2, [r3]	@ float
 186:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_adapt_throttle_enabled = GUIDANCE_V_ADAPT_THROTTLE_ENABLED;
 978              		.loc 2 186 0
 979 0024 104B     		ldr	r3, .L47+32
 980 0026 0122     		movs	r2, #1
 981 0028 1A70     		strb	r2, [r3]
 188:firmwares/rotorcraft/guidance/guidance_v.c ****   gv_adapt_init();
 982              		.loc 2 188 0
 983 002a FFF7FEFF 		bl	gv_adapt_init
 984              	.LVL87:
 191:firmwares/rotorcraft/guidance/guidance_v.c ****   register_periodic_telemetry(DefaultPeriodic, "VERT_LOOP", send_vert_loop);
 985              		.loc 2 191 0
 986 002e 2046     		mov	r0, r4
 987 0030 0E49     		ldr	r1, .L47+36
 988 0032 0F4A     		ldr	r2, .L47+40
 989 0034 FFF7FEFF 		bl	register_periodic_telemetry
 990              	.LVL88:
 192:firmwares/rotorcraft/guidance/guidance_v.c ****   register_periodic_telemetry(DefaultPeriodic, "TUNE_VERT", send_tune_vert);
 991              		.loc 2 192 0
 992 0038 2046     		mov	r0, r4
 993 003a 0E49     		ldr	r1, .L47+44
 994 003c 0E4A     		ldr	r2, .L47+48
 194:firmwares/rotorcraft/guidance/guidance_v.c **** }
 995              		.loc 2 194 0
 996 003e BDE81040 		pop	{r4, lr}
 192:firmwares/rotorcraft/guidance/guidance_v.c ****   register_periodic_telemetry(DefaultPeriodic, "TUNE_VERT", send_tune_vert);
 997              		.loc 2 192 0
 998 0042 FFF7FEBF 		b	register_periodic_telemetry
 999              	.LVL89:
 1000              	.L48:
 1001 0046 00BF     		.align	2
 1002              	.L47:
 1003 0048 00000000 		.word	.LANCHOR15
 1004 004c 00000000 		.word	.LANCHOR8
 1005 0050 00000000 		.word	.LANCHOR9
 1006 0054 00000000 		.word	pprz_telemetry
 1007 0058 00000000 		.word	.LANCHOR10
 1008 005c 00000000 		.word	.LANCHOR3
 1009 0060 00000000 		.word	.LANCHOR5
 1010 0064 CDCCCC3E 		.word	1053609165
 1011 0068 00000000 		.word	.LANCHOR4
 1012 006c 0A000000 		.word	.LC1
 1013 0070 00000000 		.word	send_vert_loop
 1014 0074 00000000 		.word	.LC0
 1015 0078 00000000 		.word	send_tune_vert
 1016              		.cfi_endproc
 1017              	.LFE459:
 1019              		.section	.text.guidance_v_read_rc,"ax",%progbits
 1020              		.align	1
 1021              		.global	guidance_v_read_rc
 1022              		.thumb
 1023              		.thumb_func
 1025              	guidance_v_read_rc:
 1026              	.LFB460:
 198:firmwares/rotorcraft/guidance/guidance_v.c **** {
 1027              		.loc 2 198 0
 1028              		.cfi_startproc
 1029              		@ args = 0, pretend = 0, frame = 0
 1030              		@ frame_needed = 0, uses_anonymous_args = 0
 1031              		@ link register save eliminated.
 201:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_rc_delta_t = (int32_t)radio_control.values[RADIO_THROTTLE];
 1032              		.loc 2 201 0
 1033 0000 0D4B     		ldr	r3, .L54
 1034 0002 B3F90A20 		ldrsh	r2, [r3, #10]
 1035 0006 0D4B     		ldr	r3, .L54+4
 204:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_rc_zd_sp = (MAX_PPRZ / 2) - (int32_t)radio_control.values[RADIO_THROTTLE];
 1036              		.loc 2 204 0
 1037 0008 C2F59651 		rsb	r1, r2, #4800
 205:firmwares/rotorcraft/guidance/guidance_v.c ****   DeadBand(guidance_v_rc_zd_sp, GUIDANCE_V_CLIMB_RC_DEADBAND);
 1038              		.loc 2 205 0
 1039 000c B1F5707F 		cmp	r1, #960
 201:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_rc_delta_t = (int32_t)radio_control.values[RADIO_THROTTLE];
 1040              		.loc 2 201 0
 1041 0010 1A60     		str	r2, [r3]
 1042 0012 0B4B     		ldr	r3, .L54+8
 205:firmwares/rotorcraft/guidance/guidance_v.c ****   DeadBand(guidance_v_rc_zd_sp, GUIDANCE_V_CLIMB_RC_DEADBAND);
 1043              		.loc 2 205 0
 1044 0014 02DD     		ble	.L50
 205:firmwares/rotorcraft/guidance/guidance_v.c ****   DeadBand(guidance_v_rc_zd_sp, GUIDANCE_V_CLIMB_RC_DEADBAND);
 1045              		.loc 2 205 0 is_stmt 0 discriminator 1
 1046 0016 C2F57062 		rsb	r2, r2, #3840
 1047 001a 05E0     		b	.L53
 1048              	.L50:
 205:firmwares/rotorcraft/guidance/guidance_v.c ****   DeadBand(guidance_v_rc_zd_sp, GUIDANCE_V_CLIMB_RC_DEADBAND);
 1049              		.loc 2 205 0 discriminator 2
 1050 001c 11F5707F 		cmn	r1, #960
 1051 0020 B4BF     		ite	lt
 1052 0022 C2F5B452 		rsblt	r2, r2, #5760
 1053 0026 0022     		movge	r2, #0
 1054              	.L53:
 1055 0028 1A60     		str	r2, [r3]
 215:firmwares/rotorcraft/guidance/guidance_v.c ****     guidance_v_rc_zd_sp *= climb_scale;
 1056              		.loc 2 215 0 is_stmt 1 discriminator 2
 1057 002a 1A68     		ldr	r2, [r3]
 1058 002c 40F29911 		movw	r1, #409
 1059 0030 4A43     		muls	r2, r1, r2
 1060 0032 1A60     		str	r2, [r3]
 1061 0034 7047     		bx	lr
 1062              	.L55:
 1063 0036 00BF     		.align	2
 1064              	.L54:
 1065 0038 00000000 		.word	radio_control
 1066 003c 00000000 		.word	.LANCHOR16
 1067 0040 00000000 		.word	.LANCHOR17
 1068              		.cfi_endproc
 1069              	.LFE460:
 1071              		.section	.text.guidance_v_mode_changed,"ax",%progbits
 1072              		.align	1
 1073              		.global	guidance_v_mode_changed
 1074              		.thumb
 1075              		.thumb_func
 1077              	guidance_v_mode_changed:
 1078              	.LFB461:
 220:firmwares/rotorcraft/guidance/guidance_v.c **** {
 1079              		.loc 2 220 0
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 0, uses_anonymous_args = 0
 1083              	.LVL90:
 1084 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1085              		.cfi_def_cfa_offset 24
 1086              		.cfi_offset 3, -24
 1087              		.cfi_offset 4, -20
 1088              		.cfi_offset 5, -16
 1089              		.cfi_offset 6, -12
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 222:firmwares/rotorcraft/guidance/guidance_v.c ****   if (new_mode == guidance_v_mode) {
 1092              		.loc 2 222 0
 1093 0002 214B     		ldr	r3, .L64
 1094 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1095 0006 8242     		cmp	r2, r0
 220:firmwares/rotorcraft/guidance/guidance_v.c **** {
 1096              		.loc 2 220 0
 1097 0008 0546     		mov	r5, r0
 1098 000a 1E46     		mov	r6, r3
 222:firmwares/rotorcraft/guidance/guidance_v.c ****   if (new_mode == guidance_v_mode) {
 1099              		.loc 2 222 0
 1100 000c 3BD0     		beq	.L56
 226:firmwares/rotorcraft/guidance/guidance_v.c ****   switch (new_mode) {
 1101              		.loc 2 226 0
 1102 000e 831E     		subs	r3, r0, #2
 1103 0010 032B     		cmp	r3, #3
 1104 0012 37D8     		bhi	.L58
 1105 0014 DFE803F0 		tbb	[pc, r3]
 1106              	.L60:
 1107 0018 19       		.byte	(.L59-.L60)/2
 1108 0019 19       		.byte	(.L59-.L60)/2
 1109 001a 02       		.byte	(.L61-.L60)/2
 1110 001b 1C       		.byte	(.L62-.L60)/2
 1111              		.p2align 1
 1112              	.L61:
 228:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sp = stateGetPositionNed_i()->z; // set current altitude as setpoint
 1113              		.loc 2 228 0
 1114 001c FFF7FEFF 		bl	stateGetPositionNed_i
 1115              	.LVL91:
 1116 0020 1A4B     		ldr	r3, .L64+4
 1117 0022 8268     		ldr	r2, [r0, #8]
 1118 0024 1A60     		str	r2, [r3]
 229:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sum_err = 0;
 1119              		.loc 2 229 0
 1120 0026 1A4B     		ldr	r3, .L64+8
 1121 0028 0024     		movs	r4, #0
 1122 002a 1C60     		str	r4, [r3]
 230:firmwares/rotorcraft/guidance/guidance_v.c ****       GuidanceVSetRef(stateGetPositionNed_i()->z, 0, 0);
 1123              		.loc 2 230 0
 1124 002c FFF7FEFF 		bl	stateGetPositionNed_i
 1125              	.LVL92:
 1126 0030 2246     		mov	r2, r4
 1127 0032 8068     		ldr	r0, [r0, #8]
 1128 0034 2146     		mov	r1, r4
 1129 0036 FFF7FEFF 		bl	gv_set_ref
 1130              	.LVL93:
 1131 003a FFF7FEFF 		bl	stateGetPositionNed_i
 1132              	.LVL94:
 1133 003e 154B     		ldr	r3, .L64+12
 1134 0040 8268     		ldr	r2, [r0, #8]
 1135 0042 1A60     		str	r2, [r3]
 1136 0044 144B     		ldr	r3, .L64+16
 1137 0046 1C60     		str	r4, [r3]
 1138 0048 1AE0     		b	.L63
 1139              	.LVL95:
 1140              	.L59:
 235:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_zd_sp = 0;
 1141              		.loc 2 235 0
 1142 004a 144B     		ldr	r3, .L64+20
 1143 004c 0022     		movs	r2, #0
 1144 004e 1A60     		str	r2, [r3]
 1145              	.L62:
 237:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sum_err = 0;
 1146              		.loc 2 237 0
 1147 0050 0F4B     		ldr	r3, .L64+8
 1148 0052 0024     		movs	r4, #0
 1149 0054 1C60     		str	r4, [r3]
 238:firmwares/rotorcraft/guidance/guidance_v.c ****       GuidanceVSetRef(stateGetPositionNed_i()->z, stateGetSpeedNed_i()->z, 0);
 1150              		.loc 2 238 0
 1151 0056 FFF7FEFF 		bl	stateGetPositionNed_i
 1152              	.LVL96:
 1153 005a 8768     		ldr	r7, [r0, #8]
 1154 005c FFF7FEFF 		bl	stateGetSpeedNed_i
 1155              	.LVL97:
 1156 0060 0346     		mov	r3, r0
 1157 0062 2246     		mov	r2, r4
 1158 0064 9968     		ldr	r1, [r3, #8]
 1159 0066 3846     		mov	r0, r7
 1160 0068 FFF7FEFF 		bl	gv_set_ref
 1161              	.LVL98:
 1162 006c FFF7FEFF 		bl	stateGetPositionNed_i
 1163              	.LVL99:
 1164 0070 084B     		ldr	r3, .L64+12
 1165 0072 8268     		ldr	r2, [r0, #8]
 1166 0074 1A60     		str	r2, [r3]
 1167 0076 FFF7FEFF 		bl	stateGetSpeedNed_i
 1168              	.LVL100:
 1169 007a 074B     		ldr	r3, .L64+16
 1170 007c 8268     		ldr	r2, [r0, #8]
 1171 007e 1A60     		str	r2, [r3]
 1172              	.L63:
 1173 0080 074B     		ldr	r3, .L64+24
 1174 0082 1C60     		str	r4, [r3]
 1175              	.L58:
 252:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_mode = new_mode;
 1176              		.loc 2 252 0
 1177 0084 3570     		strb	r5, [r6]
 1178              	.L56:
 1179 0086 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1180              	.L65:
 1181              		.align	2
 1182              	.L64:
 1183 0088 00000000 		.word	.LANCHOR15
 1184 008c 00000000 		.word	.LANCHOR13
 1185 0090 00000000 		.word	.LANCHOR3
 1186 0094 00000000 		.word	.LANCHOR0
 1187 0098 00000000 		.word	.LANCHOR1
 1188 009c 00000000 		.word	.LANCHOR14
 1189 00a0 00000000 		.word	.LANCHOR2
 1190              		.cfi_endproc
 1191              	.LFE461:
 1193              		.section	.text.guidance_v_notify_in_flight,"ax",%progbits
 1194              		.align	1
 1195              		.global	guidance_v_notify_in_flight
 1196              		.thumb
 1197              		.thumb_func
 1199              	guidance_v_notify_in_flight:
 1200              	.LFB462:
 257:firmwares/rotorcraft/guidance/guidance_v.c **** {
 1201              		.loc 2 257 0
 1202              		.cfi_startproc
 1203              		@ args = 0, pretend = 0, frame = 0
 1204              		@ frame_needed = 0, uses_anonymous_args = 0
 1205              		@ link register save eliminated.
 1206              	.LVL101:
 258:firmwares/rotorcraft/guidance/guidance_v.c ****   if (in_flight) {
 1207              		.loc 2 258 0
 1208 0000 08B1     		cbz	r0, .L66
 259:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_adapt_init();
 1209              		.loc 2 259 0
 1210 0002 FFF7FEBF 		b	gv_adapt_init
 1211              	.LVL102:
 1212              	.L66:
 1213 0006 7047     		bx	lr
 1214              		.cfi_endproc
 1215              	.LFE462:
 1217              		.section	.text.guidance_v_run,"ax",%progbits
 1218              		.align	1
 1219              		.global	guidance_v_run
 1220              		.thumb
 1221              		.thumb_func
 1223              	guidance_v_run:
 1224              	.LFB463:
 265:firmwares/rotorcraft/guidance/guidance_v.c **** {
 1225              		.loc 2 265 0
 1226              		.cfi_startproc
 1227              		@ args = 0, pretend = 0, frame = 0
 1228              		@ frame_needed = 0, uses_anonymous_args = 0
 1229              	.LVL103:
 1230 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1231              		.cfi_def_cfa_offset 24
 1232              		.cfi_offset 3, -24
 1233              		.cfi_offset 4, -20
 1234              		.cfi_offset 5, -16
 1235              		.cfi_offset 6, -12
 1236              		.cfi_offset 7, -8
 1237              		.cfi_offset 14, -4
 1238              	.LBB33:
 1239              	.LBB34:
 1240              	.LBB35:
 1241              	.LBB36:
 1242              	.LBB37:
 1243              		.file 4 "./math/pprz_orientation_conversion.h"
   1:./math/pprz_orientation_conversion.h **** /*
   2:./math/pprz_orientation_conversion.h ****  * Copyright (C) 2011-2012 The Paparazzi Team
   3:./math/pprz_orientation_conversion.h ****  *
   4:./math/pprz_orientation_conversion.h ****  * This file is part of paparazzi.
   5:./math/pprz_orientation_conversion.h ****  *
   6:./math/pprz_orientation_conversion.h ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./math/pprz_orientation_conversion.h ****  * it under the terms of the GNU General Public License as published by
   8:./math/pprz_orientation_conversion.h ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./math/pprz_orientation_conversion.h ****  * any later version.
  10:./math/pprz_orientation_conversion.h ****  *
  11:./math/pprz_orientation_conversion.h ****  * paparazzi is distributed in the hope that it will be useful,
  12:./math/pprz_orientation_conversion.h ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./math/pprz_orientation_conversion.h ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./math/pprz_orientation_conversion.h ****  * GNU General Public License for more details.
  15:./math/pprz_orientation_conversion.h ****  *
  16:./math/pprz_orientation_conversion.h ****  * You should have received a copy of the GNU General Public License
  17:./math/pprz_orientation_conversion.h ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./math/pprz_orientation_conversion.h ****  * <http://www.gnu.org/licenses/>.
  19:./math/pprz_orientation_conversion.h ****  */
  20:./math/pprz_orientation_conversion.h **** 
  21:./math/pprz_orientation_conversion.h **** /**
  22:./math/pprz_orientation_conversion.h ****  * @file math/pprz_orientation_conversion.h
  23:./math/pprz_orientation_conversion.h ****  * Generic orientation representation and conversions.
  24:./math/pprz_orientation_conversion.h ****  *
  25:./math/pprz_orientation_conversion.h ****  * This file contains the functions to automatically convert between
  26:./math/pprz_orientation_conversion.h ****  * the different representations. They should normally not be used
  27:./math/pprz_orientation_conversion.h ****  * directly and instead the stateGet/Set interfaces used.
  28:./math/pprz_orientation_conversion.h ****  * Also see the @ref math_orientation_representation "Generic Orientation Representation" page.
  29:./math/pprz_orientation_conversion.h ****  *
  30:./math/pprz_orientation_conversion.h ****  * @author Felix Ruess <felix.ruess@gmail.com>
  31:./math/pprz_orientation_conversion.h ****  */
  32:./math/pprz_orientation_conversion.h **** 
  33:./math/pprz_orientation_conversion.h **** /**
  34:./math/pprz_orientation_conversion.h ****  * @addtogroup math
  35:./math/pprz_orientation_conversion.h ****  * @{
  36:./math/pprz_orientation_conversion.h ****  */
  37:./math/pprz_orientation_conversion.h **** 
  38:./math/pprz_orientation_conversion.h **** /**
  39:./math/pprz_orientation_conversion.h ****  * This generic orientation representation consists of a struct, containing the 6 orientation
  40:./math/pprz_orientation_conversion.h ****  * representations, and a status variable. The bits in the status variable indicate  which
  41:./math/pprz_orientation_conversion.h ****  * representations of the orientation are up-to-date.
  42:./math/pprz_orientation_conversion.h ****  *
  43:./math/pprz_orientation_conversion.h ****  * When a getter is used to get a certain representation, the status bit is checked to see if
  44:./math/pprz_orientation_conversion.h ****  * the current value is already available in the desired orientation representation.
  45:./math/pprz_orientation_conversion.h ****  * If the desired representation is not available, it will be calculated.
  46:./math/pprz_orientation_conversion.h ****  *
  47:./math/pprz_orientation_conversion.h ****  * When a setter is used to set a representation, all status bits are cleared, and only the
  48:./math/pprz_orientation_conversion.h ****  * status bit for the set representation is set to one.
  49:./math/pprz_orientation_conversion.h ****  */
  50:./math/pprz_orientation_conversion.h **** 
  51:./math/pprz_orientation_conversion.h **** /**
  52:./math/pprz_orientation_conversion.h ****  * @defgroup math_orientation_representation Generic Orientation Representations
  53:./math/pprz_orientation_conversion.h ****  * @{
  54:./math/pprz_orientation_conversion.h ****  */
  55:./math/pprz_orientation_conversion.h **** 
  56:./math/pprz_orientation_conversion.h **** #ifndef PPRZ_ORIENTATION_CONVERSION_H
  57:./math/pprz_orientation_conversion.h **** #define PPRZ_ORIENTATION_CONVERSION_H
  58:./math/pprz_orientation_conversion.h **** 
  59:./math/pprz_orientation_conversion.h **** #ifdef __cplusplus
  60:./math/pprz_orientation_conversion.h **** extern "C" {
  61:./math/pprz_orientation_conversion.h **** #endif
  62:./math/pprz_orientation_conversion.h **** 
  63:./math/pprz_orientation_conversion.h **** #include "math/pprz_algebra_int.h"
  64:./math/pprz_orientation_conversion.h **** #include "math/pprz_algebra_float.h"
  65:./math/pprz_orientation_conversion.h **** 
  66:./math/pprz_orientation_conversion.h **** #include "std.h"
  67:./math/pprz_orientation_conversion.h **** 
  68:./math/pprz_orientation_conversion.h **** 
  69:./math/pprz_orientation_conversion.h **** #define ORREP_QUAT_I  0  ///< Quaternion (BFP int)
  70:./math/pprz_orientation_conversion.h **** #define ORREP_EULER_I 1  ///< zyx Euler (BFP int)
  71:./math/pprz_orientation_conversion.h **** #define ORREP_RMAT_I  2  ///< Rotation Matrix (BFP int)
  72:./math/pprz_orientation_conversion.h **** #define ORREP_QUAT_F  3  ///< Quaternion (float)
  73:./math/pprz_orientation_conversion.h **** #define ORREP_EULER_F 4  ///< zyx Euler (float)
  74:./math/pprz_orientation_conversion.h **** #define ORREP_RMAT_F  5  ///< Rotation Matrix (float)
  75:./math/pprz_orientation_conversion.h **** 
  76:./math/pprz_orientation_conversion.h **** /*
  77:./math/pprz_orientation_conversion.h ****  * @brief Struct with euler/rmat/quaternion orientation representations in BFP int and float
  78:./math/pprz_orientation_conversion.h ****  */
  79:./math/pprz_orientation_conversion.h **** struct OrientationReps {
  80:./math/pprz_orientation_conversion.h ****   /**
  81:./math/pprz_orientation_conversion.h ****    * Holds the status bits for all orientation representations.
  82:./math/pprz_orientation_conversion.h ****    * When the corresponding bit is set, the representation
  83:./math/pprz_orientation_conversion.h ****    * is already computed.
  84:./math/pprz_orientation_conversion.h ****    */
  85:./math/pprz_orientation_conversion.h ****   uint8_t status;
  86:./math/pprz_orientation_conversion.h **** 
  87:./math/pprz_orientation_conversion.h ****   /**
  88:./math/pprz_orientation_conversion.h ****    * Orientation quaternion.
  89:./math/pprz_orientation_conversion.h ****    * Units: #INT32_QUAT_FRAC
  90:./math/pprz_orientation_conversion.h ****    */
  91:./math/pprz_orientation_conversion.h ****   struct Int32Quat quat_i;
  92:./math/pprz_orientation_conversion.h **** 
  93:./math/pprz_orientation_conversion.h ****   /**
  94:./math/pprz_orientation_conversion.h ****    * Orientation in zyx euler angles.
  95:./math/pprz_orientation_conversion.h ****    * Units: rad in BFP with #INT32_ANGLE_FRAC
  96:./math/pprz_orientation_conversion.h ****    */
  97:./math/pprz_orientation_conversion.h ****   struct Int32Eulers eulers_i;
  98:./math/pprz_orientation_conversion.h **** 
  99:./math/pprz_orientation_conversion.h ****   /**
 100:./math/pprz_orientation_conversion.h ****    * Orientation rotation matrix.
 101:./math/pprz_orientation_conversion.h ****    * Units: rad in BFP with #INT32_TRIG_FRAC
 102:./math/pprz_orientation_conversion.h ****    */
 103:./math/pprz_orientation_conversion.h ****   struct Int32RMat rmat_i;
 104:./math/pprz_orientation_conversion.h **** 
 105:./math/pprz_orientation_conversion.h ****   /**
 106:./math/pprz_orientation_conversion.h ****    * Orientation as quaternion.
 107:./math/pprz_orientation_conversion.h ****    * Units: unit length quaternion
 108:./math/pprz_orientation_conversion.h ****    */
 109:./math/pprz_orientation_conversion.h ****   struct FloatQuat quat_f;
 110:./math/pprz_orientation_conversion.h **** 
 111:./math/pprz_orientation_conversion.h ****   /**
 112:./math/pprz_orientation_conversion.h ****    * Orienation in zyx euler angles.
 113:./math/pprz_orientation_conversion.h ****    * Units: rad
 114:./math/pprz_orientation_conversion.h ****    */
 115:./math/pprz_orientation_conversion.h ****   struct FloatEulers eulers_f;
 116:./math/pprz_orientation_conversion.h **** 
 117:./math/pprz_orientation_conversion.h ****   /**
 118:./math/pprz_orientation_conversion.h ****    * Orientation rotation matrix.
 119:./math/pprz_orientation_conversion.h ****    * Units: rad
 120:./math/pprz_orientation_conversion.h ****    */
 121:./math/pprz_orientation_conversion.h ****   struct FloatRMat   rmat_f;
 122:./math/pprz_orientation_conversion.h **** };
 123:./math/pprz_orientation_conversion.h **** 
 124:./math/pprz_orientation_conversion.h **** /************* declaration of transformation functions ************/
 125:./math/pprz_orientation_conversion.h **** extern void orientationCalcQuat_i(struct OrientationReps *orientation);
 126:./math/pprz_orientation_conversion.h **** extern void orientationCalcRMat_i(struct OrientationReps *orientation);
 127:./math/pprz_orientation_conversion.h **** extern void orientationCalcEulers_i(struct OrientationReps *orientation);
 128:./math/pprz_orientation_conversion.h **** extern void orientationCalcQuat_f(struct OrientationReps *orientation);
 129:./math/pprz_orientation_conversion.h **** extern void orientationCalcRMat_f(struct OrientationReps *orientation);
 130:./math/pprz_orientation_conversion.h **** extern void orientationCalcEulers_f(struct OrientationReps *orientation);
 131:./math/pprz_orientation_conversion.h **** 
 132:./math/pprz_orientation_conversion.h **** 
 133:./math/pprz_orientation_conversion.h **** /*********************** validity test functions ******************/
 134:./math/pprz_orientation_conversion.h **** /// Test if orientations are valid.
 135:./math/pprz_orientation_conversion.h **** static inline bool_t orienationCheckValid(struct OrientationReps *orientation)
 136:./math/pprz_orientation_conversion.h **** {
 137:./math/pprz_orientation_conversion.h ****   return (orientation->status);
 138:./math/pprz_orientation_conversion.h **** }
 139:./math/pprz_orientation_conversion.h **** 
 140:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from quaternion (int).
 141:./math/pprz_orientation_conversion.h **** static inline void orientationSetQuat_i(struct OrientationReps *orientation, struct Int32Quat *quat
 142:./math/pprz_orientation_conversion.h **** {
 143:./math/pprz_orientation_conversion.h ****   QUAT_COPY(orientation->quat_i, *quat);
 144:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 145:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_QUAT_I);
 146:./math/pprz_orientation_conversion.h **** }
 147:./math/pprz_orientation_conversion.h **** 
 148:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from rotation matrix (int).
 149:./math/pprz_orientation_conversion.h **** static inline void orientationSetRMat_i(struct OrientationReps *orientation, struct Int32RMat *rmat
 150:./math/pprz_orientation_conversion.h **** {
 151:./math/pprz_orientation_conversion.h ****   RMAT_COPY(orientation->rmat_i, *rmat);
 152:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 153:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_RMAT_I);
 154:./math/pprz_orientation_conversion.h **** }
 155:./math/pprz_orientation_conversion.h **** 
 156:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from euler angles (int).
 157:./math/pprz_orientation_conversion.h **** static inline void orientationSetEulers_i(struct OrientationReps *orientation, struct Int32Eulers *
 158:./math/pprz_orientation_conversion.h **** {
 159:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_i, *eulers);
 160:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 161:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_I);
 162:./math/pprz_orientation_conversion.h **** }
 163:./math/pprz_orientation_conversion.h **** 
 164:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from quaternion (float).
 165:./math/pprz_orientation_conversion.h **** static inline void orientationSetQuat_f(struct OrientationReps *orientation, struct FloatQuat *quat
 166:./math/pprz_orientation_conversion.h **** {
 167:./math/pprz_orientation_conversion.h ****   QUAT_COPY(orientation->quat_f, *quat);
 168:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 169:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_QUAT_F);
 170:./math/pprz_orientation_conversion.h **** }
 171:./math/pprz_orientation_conversion.h **** 
 172:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from rotation matrix (float).
 173:./math/pprz_orientation_conversion.h **** static inline void orientationSetRMat_f(struct OrientationReps *orientation, struct FloatRMat *rmat
 174:./math/pprz_orientation_conversion.h **** {
 175:./math/pprz_orientation_conversion.h ****   RMAT_COPY(orientation->rmat_f, *rmat);
 176:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 177:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_RMAT_F);
 178:./math/pprz_orientation_conversion.h **** }
 179:./math/pprz_orientation_conversion.h **** 
 180:./math/pprz_orientation_conversion.h **** /// Set vehicle body attitude from euler angles (float).
 181:./math/pprz_orientation_conversion.h **** static inline void orientationSetEulers_f(struct OrientationReps *orientation, struct FloatEulers *
 182:./math/pprz_orientation_conversion.h **** {
 183:./math/pprz_orientation_conversion.h ****   EULERS_COPY(orientation->eulers_f, *eulers);
 184:./math/pprz_orientation_conversion.h ****   /* clear bits for all attitude representations and only set the new one */
 185:./math/pprz_orientation_conversion.h ****   orientation->status = (1 << ORREP_EULER_F);
 186:./math/pprz_orientation_conversion.h **** }
 187:./math/pprz_orientation_conversion.h **** 
 188:./math/pprz_orientation_conversion.h **** 
 189:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude quaternion (int).
 190:./math/pprz_orientation_conversion.h **** static inline struct Int32Quat *orientationGetQuat_i(struct OrientationReps *orientation)
 191:./math/pprz_orientation_conversion.h **** {
 192:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_QUAT_I)) {
 193:./math/pprz_orientation_conversion.h ****     orientationCalcQuat_i(orientation);
 194:./math/pprz_orientation_conversion.h ****   }
 195:./math/pprz_orientation_conversion.h ****   return &orientation->quat_i;
 196:./math/pprz_orientation_conversion.h **** }
 197:./math/pprz_orientation_conversion.h **** 
 198:./math/pprz_orientation_conversion.h **** /// Get vehicle body attitude rotation matrix (int).
 199:./math/pprz_orientation_conversion.h **** static inline struct Int32RMat *orientationGetRMat_i(struct OrientationReps *orientation)
 200:./math/pprz_orientation_conversion.h **** {
 201:./math/pprz_orientation_conversion.h ****   if (!bit_is_set(orientation->status, ORREP_RMAT_I)) {
 1244              		.loc 4 201 0
 1245 0002 5E4D     		ldr	r5, .L95
 1246 0004 95F8A431 		ldrb	r3, [r5, #420]	@ zero_extendqisi2
 1247 0008 5A07     		lsls	r2, r3, #29
 1248              	.LBE37:
 1249              	.LBE36:
 1250              	.LBE35:
 1251              	.LBE34:
 1252              	.LBE33:
 265:firmwares/rotorcraft/guidance/guidance_v.c **** {
 1253              		.loc 2 265 0
 1254 000a 0446     		mov	r4, r0
 1255              	.LBB42:
 1256              	.LBB41:
 1257              	.LBB40:
 1258              	.LBB39:
 1259              	.LBB38:
 1260              		.loc 4 201 0
 1261 000c 03D4     		bmi	.L69
 202:./math/pprz_orientation_conversion.h ****     orientationCalcRMat_i(orientation);
 1262              		.loc 4 202 0
 1263 000e 05F5D270 		add	r0, r5, #420
 1264              	.LVL104:
 1265 0012 FFF7FEFF 		bl	orientationCalcRMat_i
 1266              	.LVL105:
 1267              	.L69:
 1268              	.LBE38:
 1269              	.LBE39:
 1270              	.LBE40:
 375:firmwares/rotorcraft/guidance/guidance_v.c ****   int32_t coef = att->m[8];
 1271              		.loc 2 375 0
 1272 0016 D5F8E431 		ldr	r3, [r5, #484]
 1273              	.LVL106:
 377:firmwares/rotorcraft/guidance/guidance_v.c ****     coef = max_bank_coef;
 1274              		.loc 2 377 0
 1275 001a 42F28212 		movw	r2, #8578
 1276 001e 9342     		cmp	r3, r2
 1277 0020 B8BF     		it	lt
 1278 0022 1346     		movlt	r3, r2
 1279              	.LVL107:
 1280              	.LBE41:
 1281              	.LBE42:
 269:firmwares/rotorcraft/guidance/guidance_v.c ****   guidance_v_thrust_coeff = get_vertical_thrust_coeff();
 1282              		.loc 2 269 0
 1283 0024 564A     		ldr	r2, .L95+4
 1284 0026 1360     		str	r3, [r2]
 270:firmwares/rotorcraft/guidance/guidance_v.c ****   if (in_flight) {
 1285              		.loc 2 270 0
 1286 0028 8CB1     		cbz	r4, .L71
 1287              	.LBB43:
 271:firmwares/rotorcraft/guidance/guidance_v.c ****     int32_t vertical_thrust = (stabilization_cmd[COMMAND_THRUST] * guidance_v_thrust_coeff) >> INT3
 1288              		.loc 2 271 0
 1289 002a 564A     		ldr	r2, .L95+8
 1290 002c D668     		ldr	r6, [r2, #12]
 1291 002e 7343     		muls	r3, r6, r3
 1292              	.LVL108:
 1293 0030 9E13     		asrs	r6, r3, #14
 1294              	.LVL109:
 1295              	.LBB44:
 1296              	.LBB45:
 993:./state.h     ****   if (!bit_is_set(state.accel_status, ACCEL_NED_I)) {
 1297              		.loc 1 993 0
 1298 0032 95F87031 		ldrb	r3, [r5, #368]	@ zero_extendqisi2
 1299 0036 9B07     		lsls	r3, r3, #30
 1300 0038 01D4     		bmi	.L72
 1301              		.loc 1 994 0
 1302 003a FFF7FEFF 		bl	stateCalcAccelNed_i
 1303              	.LVL110:
 1304              	.L72:
 1305              	.LBE45:
 1306              	.LBE44:
 272:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_adapt_run(stateGetAccelNed_i()->z, vertical_thrust, guidance_v_zd_ref);
 1307              		.loc 2 272 0
 1308 003e 524B     		ldr	r3, .L95+12
 1309 0040 D5F87C01 		ldr	r0, [r5, #380]
 1310 0044 1A68     		ldr	r2, [r3]
 1311 0046 3146     		mov	r1, r6
 1312 0048 FFF7FEFF 		bl	gv_adapt_run
 1313              	.LVL111:
 1314              	.LBE43:
 1315 004c 01E0     		b	.L73
 1316              	.LVL112:
 1317              	.L71:
 275:firmwares/rotorcraft/guidance/guidance_v.c ****     gv_adapt_init();
 1318              		.loc 2 275 0
 1319 004e FFF7FEFF 		bl	gv_adapt_init
 1320              	.LVL113:
 1321              	.L73:
 278:firmwares/rotorcraft/guidance/guidance_v.c ****   switch (guidance_v_mode) {
 1322              		.loc 2 278 0
 1323 0052 4E4B     		ldr	r3, .L95+16
 1324 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1325 0056 013B     		subs	r3, r3, #1
 1326 0058 042B     		cmp	r3, #4
 1327 005a 00F28E80 		bhi	.L68
 1328 005e DFE803F0 		tbb	[pc, r3]
 1329              	.L76:
 1330 0062 03       		.byte	(.L75-.L76)/2
 1331 0063 0A       		.byte	(.L77-.L76)/2
 1332 0064 1C       		.byte	(.L78-.L76)/2
 1333 0065 26       		.byte	(.L79-.L76)/2
 1334 0066 3B       		.byte	(.L80-.L76)/2
 1335 0067 00       		.p2align 1
 1336              	.L75:
 281:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_z_sp = stateGetPositionNed_i()->z; // for display only
 1337              		.loc 2 281 0
 1338 0068 FFF7FEFF 		bl	stateGetPositionNed_i
 1339              	.LVL114:
 1340 006c 484B     		ldr	r3, .L95+20
 1341 006e 8268     		ldr	r2, [r0, #8]
 1342 0070 1A60     		str	r2, [r3]
 282:firmwares/rotorcraft/guidance/guidance_v.c ****       stabilization_cmd[COMMAND_THRUST] = guidance_v_rc_delta_t;
 1343              		.loc 2 282 0
 1344 0072 484B     		ldr	r3, .L95+24
 1345 0074 0EE0     		b	.L92
 1346              	.L77:
 286:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_zd_sp = guidance_v_rc_zd_sp;
 1347              		.loc 2 286 0
 1348 0076 484B     		ldr	r3, .L95+28
 1349 0078 1D68     		ldr	r5, [r3]
 1350 007a 484B     		ldr	r3, .L95+32
 1351 007c 1D60     		str	r5, [r3]
 287:firmwares/rotorcraft/guidance/guidance_v.c ****       gv_update_ref_from_zd_sp(guidance_v_zd_sp, stateGetPositionNed_i()->z);
 1352              		.loc 2 287 0
 1353 007e FFF7FEFF 		bl	stateGetPositionNed_i
 1354              	.LVL115:
 1355 0082 0346     		mov	r3, r0
 1356 0084 2846     		mov	r0, r5
 1357 0086 9968     		ldr	r1, [r3, #8]
 1358 0088 FFF7FEFF 		bl	gv_update_ref_from_zd_sp
 1359              	.LVL116:
 288:firmwares/rotorcraft/guidance/guidance_v.c ****       run_hover_loop(in_flight);
 1360              		.loc 2 288 0
 1361 008c 2046     		mov	r0, r4
 1362 008e FFF7FEFF 		bl	run_hover_loop
 1363              	.LVL117:
 289:firmwares/rotorcraft/guidance/guidance_v.c ****       stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 1364              		.loc 2 289 0
 1365 0092 434B     		ldr	r3, .L95+36
 1366              	.L92:
 1367 0094 1A68     		ldr	r2, [r3]
 1368 0096 3B4B     		ldr	r3, .L95+8
 1369 0098 6EE0     		b	.L89
 1370              	.L78:
 293:firmwares/rotorcraft/guidance/guidance_v.c ****       gv_update_ref_from_zd_sp(guidance_v_zd_sp, stateGetPositionNed_i()->z);
 1371              		.loc 2 293 0
 1372 009a 404B     		ldr	r3, .L95+32
 1373 009c 1D68     		ldr	r5, [r3]
 1374 009e FFF7FEFF 		bl	stateGetPositionNed_i
 1375              	.LVL118:
 1376 00a2 0346     		mov	r3, r0
 1377 00a4 2846     		mov	r0, r5
 1378 00a6 9968     		ldr	r1, [r3, #8]
 1379 00a8 FFF7FEFF 		bl	gv_update_ref_from_zd_sp
 1380              	.LVL119:
 1381 00ac 06E0     		b	.L94
 1382              	.L79:
 305:firmwares/rotorcraft/guidance/guidance_v.c ****       guidance_v_zd_sp = 0;
 1383              		.loc 2 305 0
 1384 00ae 3B4B     		ldr	r3, .L95+32
 1385 00b0 0022     		movs	r2, #0
 1386 00b2 1A60     		str	r2, [r3]
 306:firmwares/rotorcraft/guidance/guidance_v.c ****       gv_update_ref_from_z_sp(guidance_v_z_sp);
 1387              		.loc 2 306 0
 1388 00b4 364B     		ldr	r3, .L95+20
 1389 00b6 1868     		ldr	r0, [r3]
 1390 00b8 FFF7FEFF 		bl	gv_update_ref_from_z_sp
 1391              	.LVL120:
 1392              	.L94:
 307:firmwares/rotorcraft/guidance/guidance_v.c ****       run_hover_loop(in_flight);
 1393              		.loc 2 307 0
 1394 00bc 2046     		mov	r0, r4
 1395 00be FFF7FEFF 		bl	run_hover_loop
 1396              	.LVL121:
 310:firmwares/rotorcraft/guidance/guidance_v.c ****       if (radio_control.status == RC_OK) {
 1397              		.loc 2 310 0
 1398 00c2 384B     		ldr	r3, .L95+40
 1399 00c4 364A     		ldr	r2, .L95+36
 1400 00c6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1401 00c8 2E4B     		ldr	r3, .L95+8
 1402 00ca 19B9     		cbnz	r1, .L82
 311:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = Min(guidance_v_rc_delta_t, guidance_v_delta_t);
 1403              		.loc 2 311 0
 1404 00cc 3149     		ldr	r1, .L95+24
 1405 00ce 1268     		ldr	r2, [r2]
 1406 00d0 0968     		ldr	r1, [r1]
 1407 00d2 4BE0     		b	.L90
 1408              	.L82:
 314:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 1409              		.loc 2 314 0
 1410 00d4 1268     		ldr	r2, [r2]
 1411 00d6 4FE0     		b	.L89
 1412              	.L80:
 324:firmwares/rotorcraft/guidance/guidance_v.c ****       if (vertical_mode == VERTICAL_MODE_ALT) {
 1413              		.loc 2 324 0
 1414 00d8 334B     		ldr	r3, .L95+44
 1415 00da 314E     		ldr	r6, .L95+36
 1416 00dc 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 1417 00de 022D     		cmp	r5, #2
 1418 00e0 0AD1     		bne	.L83
 325:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sp = -nav_flight_altitude;
 1419              		.loc 2 325 0
 1420 00e2 324B     		ldr	r3, .L95+48
 1421 00e4 1868     		ldr	r0, [r3]
 1422 00e6 2A4B     		ldr	r3, .L95+20
 1423 00e8 4042     		negs	r0, r0
 1424 00ea 1860     		str	r0, [r3]
 326:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = 0;
 1425              		.loc 2 326 0
 1426 00ec 2B4B     		ldr	r3, .L95+32
 1427 00ee 0022     		movs	r2, #0
 1428 00f0 1A60     		str	r2, [r3]
 327:firmwares/rotorcraft/guidance/guidance_v.c ****         gv_update_ref_from_z_sp(guidance_v_z_sp);
 1429              		.loc 2 327 0
 1430 00f2 FFF7FEFF 		bl	gv_update_ref_from_z_sp
 1431              	.LVL122:
 1432 00f6 12E0     		b	.L88
 1433              	.L83:
 329:firmwares/rotorcraft/guidance/guidance_v.c ****       } else if (vertical_mode == VERTICAL_MODE_CLIMB) {
 1434              		.loc 2 329 0
 1435 00f8 012D     		cmp	r5, #1
 1436 00fa 14D1     		bne	.L85
 330:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sp = stateGetPositionNed_i()->z;
 1437              		.loc 2 330 0
 1438 00fc FFF7FEFF 		bl	stateGetPositionNed_i
 1439              	.LVL123:
 1440 0100 234B     		ldr	r3, .L95+20
 1441 0102 8268     		ldr	r2, [r0, #8]
 1442 0104 1A60     		str	r2, [r3]
 331:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = -nav_climb;
 1443              		.loc 2 331 0
 1444 0106 2A4B     		ldr	r3, .L95+52
 1445 0108 1D68     		ldr	r5, [r3]
 1446 010a 244B     		ldr	r3, .L95+32
 1447 010c 6D42     		negs	r5, r5
 1448 010e 1D60     		str	r5, [r3]
 332:firmwares/rotorcraft/guidance/guidance_v.c ****         gv_update_ref_from_zd_sp(guidance_v_zd_sp, stateGetPositionNed_i()->z);
 1449              		.loc 2 332 0
 1450 0110 FFF7FEFF 		bl	stateGetPositionNed_i
 1451              	.LVL124:
 1452 0114 0346     		mov	r3, r0
 1453 0116 2846     		mov	r0, r5
 1454 0118 9968     		ldr	r1, [r3, #8]
 1455 011a FFF7FEFF 		bl	gv_update_ref_from_zd_sp
 1456              	.LVL125:
 1457              	.L88:
 333:firmwares/rotorcraft/guidance/guidance_v.c ****         run_hover_loop(in_flight);
 1458              		.loc 2 333 0
 1459 011e 2046     		mov	r0, r4
 1460 0120 FFF7FEFF 		bl	run_hover_loop
 1461              	.LVL126:
 1462 0124 1BE0     		b	.L84
 1463              	.L85:
 334:firmwares/rotorcraft/guidance/guidance_v.c ****       } else if (vertical_mode == VERTICAL_MODE_MANUAL) {
 1464              		.loc 2 334 0
 1465 0126 D5B9     		cbnz	r5, .L84
 335:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sp = stateGetPositionNed_i()->z;
 1466              		.loc 2 335 0
 1467 0128 FFF7FEFF 		bl	stateGetPositionNed_i
 1468              	.LVL127:
 1469 012c 184C     		ldr	r4, .L95+20
 1470 012e 8368     		ldr	r3, [r0, #8]
 1471 0130 2360     		str	r3, [r4]
 336:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = stateGetSpeedNed_i()->z;
 1472              		.loc 2 336 0
 1473 0132 FFF7FEFF 		bl	stateGetSpeedNed_i
 1474              	.LVL128:
 1475 0136 194F     		ldr	r7, .L95+32
 1476 0138 8168     		ldr	r1, [r0, #8]
 337:firmwares/rotorcraft/guidance/guidance_v.c ****         GuidanceVSetRef(guidance_v_z_sp, guidance_v_zd_sp, 0);
 1477              		.loc 2 337 0
 1478 013a 2068     		ldr	r0, [r4]
 336:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_zd_sp = stateGetSpeedNed_i()->z;
 1479              		.loc 2 336 0
 1480 013c 3960     		str	r1, [r7]
 337:firmwares/rotorcraft/guidance/guidance_v.c ****         GuidanceVSetRef(guidance_v_z_sp, guidance_v_zd_sp, 0);
 1481              		.loc 2 337 0
 1482 013e 2A46     		mov	r2, r5
 1483 0140 FFF7FEFF 		bl	gv_set_ref
 1484              	.LVL129:
 1485 0144 1B4B     		ldr	r3, .L95+56
 1486 0146 2268     		ldr	r2, [r4]
 1487 0148 1A60     		str	r2, [r3]
 1488 014a 0F4B     		ldr	r3, .L95+12
 1489 014c 3A68     		ldr	r2, [r7]
 1490 014e 1A60     		str	r2, [r3]
 1491 0150 194B     		ldr	r3, .L95+60
 1492 0152 1D60     		str	r5, [r3]
 338:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_z_sum_err = 0;
 1493              		.loc 2 338 0
 1494 0154 194B     		ldr	r3, .L95+64
 1495 0156 1D60     		str	r5, [r3]
 339:firmwares/rotorcraft/guidance/guidance_v.c ****         guidance_v_delta_t = nav_throttle;
 1496              		.loc 2 339 0
 1497 0158 194B     		ldr	r3, .L95+68
 1498 015a 1B68     		ldr	r3, [r3]
 1499 015c 3360     		str	r3, [r6]
 1500              	.L84:
 343:firmwares/rotorcraft/guidance/guidance_v.c ****       if (radio_control.status == RC_OK) {
 1501              		.loc 2 343 0
 1502 015e 114B     		ldr	r3, .L95+40
 1503 0160 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1504 0162 084B     		ldr	r3, .L95+8
 1505 0164 3AB9     		cbnz	r2, .L86
 344:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = Min(guidance_v_rc_delta_t, guidance_v_delta_t);
 1506              		.loc 2 344 0
 1507 0166 0B4A     		ldr	r2, .L95+24
 1508 0168 1168     		ldr	r1, [r2]
 1509 016a 3268     		ldr	r2, [r6]
 1510              	.L90:
 1511 016c 9142     		cmp	r1, r2
 1512 016e D4BF     		ite	le
 1513 0170 D960     		strle	r1, [r3, #12]
 1514 0172 DA60     		strgt	r2, [r3, #12]
 1515 0174 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1516              	.L86:
 347:firmwares/rotorcraft/guidance/guidance_v.c ****         stabilization_cmd[COMMAND_THRUST] = guidance_v_delta_t;
 1517              		.loc 2 347 0
 1518 0176 3268     		ldr	r2, [r6]
 1519              	.L89:
 1520 0178 DA60     		str	r2, [r3, #12]
 1521              	.L68:
 1522 017a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1523              	.L96:
 1524              		.align	2
 1525              	.L95:
 1526 017c 00000000 		.word	state
 1527 0180 00000000 		.word	.LANCHOR6
 1528 0184 00000000 		.word	stabilization_cmd
 1529 0188 00000000 		.word	.LANCHOR1
 1530 018c 00000000 		.word	.LANCHOR15
 1531 0190 00000000 		.word	.LANCHOR13
 1532 0194 00000000 		.word	.LANCHOR16
 1533 0198 00000000 		.word	.LANCHOR17
 1534 019c 00000000 		.word	.LANCHOR14
 1535 01a0 00000000 		.word	.LANCHOR12
 1536 01a4 00000000 		.word	radio_control
 1537 01a8 00000000 		.word	vertical_mode
 1538 01ac 00000000 		.word	nav_flight_altitude
 1539 01b0 00000000 		.word	nav_climb
 1540 01b4 00000000 		.word	.LANCHOR0
 1541 01b8 00000000 		.word	.LANCHOR2
 1542 01bc 00000000 		.word	.LANCHOR3
 1543 01c0 00000000 		.word	nav_throttle
 1544              		.cfi_endproc
 1545              	.LFE463:
 1547              		.global	guidance_v_thrust_coeff
 1548              		.global	guidance_v_z_sum_err
 1549              		.global	guidance_v_ki
 1550              		.global	guidance_v_kd
 1551              		.global	guidance_v_kp
 1552              		.global	guidance_v_zdd_ref
 1553              		.global	guidance_v_zd_ref
 1554              		.global	guidance_v_z_ref
 1555              		.global	guidance_v_zd_sp
 1556              		.global	guidance_v_z_sp
 1557              		.global	guidance_v_rc_zd_sp
 1558              		.global	guidance_v_rc_delta_t
 1559              		.global	guidance_v_adapt_throttle_enabled
 1560              		.global	guidance_v_nominal_throttle
 1561              		.global	guidance_v_delta_t
 1562              		.global	guidance_v_fb_cmd
 1563              		.global	guidance_v_ff_cmd
 1564              		.global	guidance_v_mode
 1565              		.section	.bss.guidance_v_ki,"aw",%nobits
 1566              		.align	2
 1567              		.set	.LANCHOR10,. + 0
 1570              	guidance_v_ki:
 1571 0000 00000000 		.space	4
 1572              		.section	.bss.guidance_v_thrust_coeff,"aw",%nobits
 1573              		.align	2
 1574              		.set	.LANCHOR6,. + 0
 1577              	guidance_v_thrust_coeff:
 1578 0000 00000000 		.space	4
 1579              		.section	.bss.guidance_v_mode,"aw",%nobits
 1580              		.set	.LANCHOR15,. + 0
 1583              	guidance_v_mode:
 1584 0000 00       		.space	1
 1585              		.section	.bss.guidance_v_zd_ref,"aw",%nobits
 1586              		.align	2
 1587              		.set	.LANCHOR1,. + 0
 1590              	guidance_v_zd_ref:
 1591 0000 00000000 		.space	4
 1592              		.section	.bss.guidance_v_z_ref,"aw",%nobits
 1593              		.align	2
 1594              		.set	.LANCHOR0,. + 0
 1597              	guidance_v_z_ref:
 1598 0000 00000000 		.space	4
 1599              		.section	.bss.guidance_v_ff_cmd,"aw",%nobits
 1600              		.align	2
 1601              		.set	.LANCHOR7,. + 0
 1604              	guidance_v_ff_cmd:
 1605 0000 00000000 		.space	4
 1606              		.section	.bss.guidance_v_z_sum_err,"aw",%nobits
 1607              		.align	2
 1608              		.set	.LANCHOR3,. + 0
 1611              	guidance_v_z_sum_err:
 1612 0000 00000000 		.space	4
 1613              		.section	.bss.guidance_v_rc_delta_t,"aw",%nobits
 1614              		.align	2
 1615              		.set	.LANCHOR16,. + 0
 1618              	guidance_v_rc_delta_t:
 1619 0000 00000000 		.space	4
 1620              		.section	.rodata.str1.1,"aMS",%progbits,1
 1621              	.LC0:
 1622 0000 54554E45 		.ascii	"TUNE_VERT\000"
 1622      5F564552 
 1622      5400
 1623              	.LC1:
 1624 000a 56455254 		.ascii	"VERT_LOOP\000"
 1624      5F4C4F4F 
 1624      5000
 1625              		.section	.bss.guidance_v_nominal_throttle,"aw",%nobits
 1626              		.align	2
 1627              		.set	.LANCHOR5,. + 0
 1630              	guidance_v_nominal_throttle:
 1631 0000 00000000 		.space	4
 1632              		.section	.bss.guidance_v_adapt_throttle_enabled,"aw",%nobits
 1633              		.set	.LANCHOR4,. + 0
 1636              	guidance_v_adapt_throttle_enabled:
 1637 0000 00       		.space	1
 1638              		.section	.bss.guidance_v_fb_cmd,"aw",%nobits
 1639              		.align	2
 1640              		.set	.LANCHOR11,. + 0
 1643              	guidance_v_fb_cmd:
 1644 0000 00000000 		.space	4
 1645              		.section	.bss.guidance_v_zdd_ref,"aw",%nobits
 1646              		.align	2
 1647              		.set	.LANCHOR2,. + 0
 1650              	guidance_v_zdd_ref:
 1651 0000 00000000 		.space	4
 1652              		.section	.bss.guidance_v_rc_zd_sp,"aw",%nobits
 1653              		.align	2
 1654              		.set	.LANCHOR17,. + 0
 1657              	guidance_v_rc_zd_sp:
 1658 0000 00000000 		.space	4
 1659              		.section	.bss.guidance_v_delta_t,"aw",%nobits
 1660              		.align	2
 1661              		.set	.LANCHOR12,. + 0
 1664              	guidance_v_delta_t:
 1665 0000 00000000 		.space	4
 1666              		.section	.bss.guidance_v_kd,"aw",%nobits
 1667              		.align	2
 1668              		.set	.LANCHOR9,. + 0
 1671              	guidance_v_kd:
 1672 0000 00000000 		.space	4
 1673              		.section	.bss.guidance_v_zd_sp,"aw",%nobits
 1674              		.align	2
 1675              		.set	.LANCHOR14,. + 0
 1678              	guidance_v_zd_sp:
 1679 0000 00000000 		.space	4
 1680              		.section	.bss.guidance_v_z_sp,"aw",%nobits
 1681              		.align	2
 1682              		.set	.LANCHOR13,. + 0
 1685              	guidance_v_z_sp:
 1686 0000 00000000 		.space	4
 1687              		.section	.bss.guidance_v_kp,"aw",%nobits
 1688              		.align	2
 1689              		.set	.LANCHOR8,. + 0
 1692              	guidance_v_kp:
 1693 0000 00000000 		.space	4
 1694              		.text
 1695              	.Letext0:
 1696              		.file 5 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 1697              		.file 6 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 1698              		.file 7 "/home/lsk/paparazzi/sw/include/std.h"
 1699              		.file 8 "./math/pprz_algebra_int.h"
 1700              		.file 9 "./mcu_periph/link_device.h"
 1701              		.file 10 "./math/pprz_algebra_float.h"
 1702              		.file 11 "./paparazzi.h"
 1703              		.file 12 "./subsystems/radio_control.h"
 1704              		.file 13 "./math/pprz_geodetic_int.h"
 1705              		.file 14 "./math/pprz_geodetic_float.h"
 1706              		.file 15 "./subsystems/datalink/transport.h"
 1707              		.file 16 "./mcu_periph/sys_time.h"
 1708              		.file 17 "./subsystems/datalink/xbee.h"
 1709              		.file 18 "./subsystems/datalink/telemetry_common.h"
 1710              		.file 19 "./firmwares/rotorcraft/guidance/guidance_v_ref.h"
 1711              		.file 20 "./firmwares/rotorcraft/guidance/guidance_v_adapt.h"
 1712              		.file 21 "./firmwares/rotorcraft/stabilization.h"
 1713              		.file 22 "./firmwares/rotorcraft/navigation.h"
 1714              		.file 23 "./subsystems/datalink/datalink.h"
 1715              		.file 24 "./subsystems/datalink/w5100.h"
 1716              		.file 25 "/home/lsk/paparazzi/var/aircrafts/kroozsd_lsk/ap/generated/periodic_telemetry.h"
 1717              		.file 26 "./subsystems/datalink/telemetry.h"
 1718              		.file 27 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 guidance_v.c
     /tmp/ccCgAfY6.s:20     .text.stateGetPositionNed_i:00000000 $t
     /tmp/ccCgAfY6.s:24     .text.stateGetPositionNed_i:00000000 stateGetPositionNed_i
     /tmp/ccCgAfY6.s:50     .text.stateGetPositionNed_i:00000014 $d
     /tmp/ccCgAfY6.s:56     .text.stateGetSpeedNed_i:00000000 $t
     /tmp/ccCgAfY6.s:60     .text.stateGetSpeedNed_i:00000000 stateGetSpeedNed_i
     /tmp/ccCgAfY6.s:85     .text.stateGetSpeedNed_i:00000014 $d
     /tmp/ccCgAfY6.s:98     .text.run_hover_loop:00000000 $t
     /tmp/ccCgAfY6.s:102    .text.run_hover_loop:00000000 run_hover_loop
     /tmp/ccCgAfY6.s:379    .text.run_hover_loop:00000188 $d
     /tmp/ccCgAfY6.s:413    .text.send_tune_vert:00000000 $t
     /tmp/ccCgAfY6.s:417    .text.send_tune_vert:00000000 send_tune_vert
     /tmp/ccCgAfY6.s:589    .text.send_tune_vert:000000d8 $d
     /tmp/ccCgAfY6.s:597    .text.send_vert_loop:00000000 $t
     /tmp/ccCgAfY6.s:601    .text.send_vert_loop:00000000 send_vert_loop
     /tmp/ccCgAfY6.s:915    .text.send_vert_loop:000001b8 $d
     /tmp/ccCgAfY6.s:934    .text.guidance_v_init:00000000 $t
     /tmp/ccCgAfY6.s:939    .text.guidance_v_init:00000000 guidance_v_init
     /tmp/ccCgAfY6.s:1003   .text.guidance_v_init:00000048 $d
     /tmp/ccCgAfY6.s:1020   .text.guidance_v_read_rc:00000000 $t
     /tmp/ccCgAfY6.s:1025   .text.guidance_v_read_rc:00000000 guidance_v_read_rc
     /tmp/ccCgAfY6.s:1065   .text.guidance_v_read_rc:00000038 $d
     /tmp/ccCgAfY6.s:1072   .text.guidance_v_mode_changed:00000000 $t
     /tmp/ccCgAfY6.s:1077   .text.guidance_v_mode_changed:00000000 guidance_v_mode_changed
     /tmp/ccCgAfY6.s:1107   .text.guidance_v_mode_changed:00000018 $d
     /tmp/ccCgAfY6.s:1111   .text.guidance_v_mode_changed:0000001c $t
     /tmp/ccCgAfY6.s:1183   .text.guidance_v_mode_changed:00000088 $d
     /tmp/ccCgAfY6.s:1194   .text.guidance_v_notify_in_flight:00000000 $t
     /tmp/ccCgAfY6.s:1199   .text.guidance_v_notify_in_flight:00000000 guidance_v_notify_in_flight
     /tmp/ccCgAfY6.s:1218   .text.guidance_v_run:00000000 $t
     /tmp/ccCgAfY6.s:1223   .text.guidance_v_run:00000000 guidance_v_run
     /tmp/ccCgAfY6.s:1330   .text.guidance_v_run:00000062 $d
     /tmp/ccCgAfY6.s:1526   .text.guidance_v_run:0000017c $d
     /tmp/ccCgAfY6.s:1577   .bss.guidance_v_thrust_coeff:00000000 guidance_v_thrust_coeff
     /tmp/ccCgAfY6.s:1611   .bss.guidance_v_z_sum_err:00000000 guidance_v_z_sum_err
     /tmp/ccCgAfY6.s:1570   .bss.guidance_v_ki:00000000 guidance_v_ki
     /tmp/ccCgAfY6.s:1671   .bss.guidance_v_kd:00000000 guidance_v_kd
     /tmp/ccCgAfY6.s:1692   .bss.guidance_v_kp:00000000 guidance_v_kp
     /tmp/ccCgAfY6.s:1650   .bss.guidance_v_zdd_ref:00000000 guidance_v_zdd_ref
     /tmp/ccCgAfY6.s:1590   .bss.guidance_v_zd_ref:00000000 guidance_v_zd_ref
     /tmp/ccCgAfY6.s:1597   .bss.guidance_v_z_ref:00000000 guidance_v_z_ref
     /tmp/ccCgAfY6.s:1678   .bss.guidance_v_zd_sp:00000000 guidance_v_zd_sp
     /tmp/ccCgAfY6.s:1685   .bss.guidance_v_z_sp:00000000 guidance_v_z_sp
     /tmp/ccCgAfY6.s:1657   .bss.guidance_v_rc_zd_sp:00000000 guidance_v_rc_zd_sp
     /tmp/ccCgAfY6.s:1618   .bss.guidance_v_rc_delta_t:00000000 guidance_v_rc_delta_t
     /tmp/ccCgAfY6.s:1636   .bss.guidance_v_adapt_throttle_enabled:00000000 guidance_v_adapt_throttle_enabled
     /tmp/ccCgAfY6.s:1630   .bss.guidance_v_nominal_throttle:00000000 guidance_v_nominal_throttle
     /tmp/ccCgAfY6.s:1664   .bss.guidance_v_delta_t:00000000 guidance_v_delta_t
     /tmp/ccCgAfY6.s:1643   .bss.guidance_v_fb_cmd:00000000 guidance_v_fb_cmd
     /tmp/ccCgAfY6.s:1604   .bss.guidance_v_ff_cmd:00000000 guidance_v_ff_cmd
     /tmp/ccCgAfY6.s:1583   .bss.guidance_v_mode:00000000 guidance_v_mode
     /tmp/ccCgAfY6.s:1566   .bss.guidance_v_ki:00000000 $d
     /tmp/ccCgAfY6.s:1573   .bss.guidance_v_thrust_coeff:00000000 $d
     /tmp/ccCgAfY6.s:1584   .bss.guidance_v_mode:00000000 $d
     /tmp/ccCgAfY6.s:1586   .bss.guidance_v_zd_ref:00000000 $d
     /tmp/ccCgAfY6.s:1593   .bss.guidance_v_z_ref:00000000 $d
     /tmp/ccCgAfY6.s:1600   .bss.guidance_v_ff_cmd:00000000 $d
     /tmp/ccCgAfY6.s:1607   .bss.guidance_v_z_sum_err:00000000 $d
     /tmp/ccCgAfY6.s:1614   .bss.guidance_v_rc_delta_t:00000000 $d
     /tmp/ccCgAfY6.s:1626   .bss.guidance_v_nominal_throttle:00000000 $d
     /tmp/ccCgAfY6.s:1637   .bss.guidance_v_adapt_throttle_enabled:00000000 $d
     /tmp/ccCgAfY6.s:1639   .bss.guidance_v_fb_cmd:00000000 $d
     /tmp/ccCgAfY6.s:1646   .bss.guidance_v_zdd_ref:00000000 $d
     /tmp/ccCgAfY6.s:1653   .bss.guidance_v_rc_zd_sp:00000000 $d
     /tmp/ccCgAfY6.s:1660   .bss.guidance_v_delta_t:00000000 $d
     /tmp/ccCgAfY6.s:1667   .bss.guidance_v_kd:00000000 $d
     /tmp/ccCgAfY6.s:1674   .bss.guidance_v_zd_sp:00000000 $d
     /tmp/ccCgAfY6.s:1681   .bss.guidance_v_z_sp:00000000 $d
     /tmp/ccCgAfY6.s:1688   .bss.guidance_v_kp:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccCgAfY6.s:1335   .text.guidance_v_run:00000067 $d
     /tmp/ccCgAfY6.s:1335   .text.guidance_v_run:00000068 $t
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.airframe.h.5.1b65f22e2c90217dfc42bdae27fe483a
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.13c5bec129ef04ad1bb0a1152b29c624
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.krooz_sd.h.2.013366a614baabbe44cc2bbd3205e3d1
                           .group:00000000 wm4.actuators_pwm_arch.h.41.fa66469024778df593e0e3d83e4a3c37
                           .group:00000000 wm4.airframe.h.14.f46e30d413878b482f16a5abf2127a4b
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.53.1a82a3cc35cb0a04319c41bcf41d2a02
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.guidance_v_ref.h.47.9864d192fd54d9786063581840c72452
                           .group:00000000 wm4.guidance_v_adapt.h.31.27bb7e62f811df116277369fe7cc10cb
                           .group:00000000 wm4.guidance_v.h.35.a56f97080507d26c60b16012b7fd8373
                           .group:00000000 wm4.modules.h.5.be642dc363672736d1d1e45a75aad0cf
                           .group:00000000 wm4.pprz_algebra_float.h.32.544614e70075e1ed5693f00f6a441312
                           .group:00000000 wm4.pprz_algebra_double.h.91.82ca62ae962f4b4f295322d977f2dad5
                           .group:00000000 wm4.modules.h.24.27c8342510f0f30e64a55f4e4778474a
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf
                           .group:00000000 wm4.paparazzi.h.2.903792c4429b74b43ba66cc0d2531abd
                           .group:00000000 wm4.ppm_arch.h.30.0c8951ed5389d834f3146640146f52ff
                           .group:00000000 wm4.radio.h.5.656a6ddaf975d68fb12fc1808da140b2
                           .group:00000000 wm4.ppm.h.47.0149fce522ef0e315e524566a6409a2a
                           .group:00000000 wm4.radio_control.h.42.d43f9142844e08da852d6ed343ba2de3
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.waypoints.h.33.b7269a35eabfa0f882237a6392dba465
                           .group:00000000 wm4.common_flight_plan.h.28.998f628cac1ef266b3e88de20c1aaea2
                           .group:00000000 wm4.navigation.h.37.11a5e304c9f5272e40689ee17cc5173b
                           .group:00000000 wm4.pprz_orientation_conversion.h.69.5cce798fefad8bb761767fd414e61db5
                           .group:00000000 wm4.state.h.65.b18954aacb3801ec3e27b4e857d620d3
                           .group:00000000 wm4.transport.h.27.9215bbc09b6a8d08d228c20740408d47
                           .group:00000000 wm4.messages.h.9.6fd66bc411dd06866b086a1b57e0f309
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.datalink.h.28.0d234a7c203533b2ec538be3e18eddf4
                           .group:00000000 wm4.dl_protocol.h.5.a12fe27a4b4a3cbb46fbca8acf33e3dd
                           .group:00000000 wm4.datalink.h.46.36a5e0f36fb7d0784f1e7af767537c84
                           .group:00000000 wm4.pprz_transport.h.57.167db0ee96032e142f5d6e570b3339aa
                           .group:00000000 wm4.sys_time.h.31.454ffebb4f6baf6e87ab8a60104a5808
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.xbee24.h.29.a6677f8bcb71d3b07e11290a2de0e179
                           .group:00000000 wm4.xbee.h.41.f36be817f95b74f883aef9324b53817b
                           .group:00000000 wm4.w5100.h.29.d3529bed8de657ab3944b343be960f10
                           .group:00000000 wm4.downlink.h.76.41034157e32fc9012166fd95ec7418fc
                           .group:00000000 wm4.periodic_telemetry.h.11.45a44616e39ae884c5a68828f6bf143a

UNDEFINED SYMBOLS
stateCalcPositionNed_i
state
stateCalcSpeedNed_i
__aeabi_i2d
__aeabi_dcmpgt
__aeabi_dcmplt
__aeabi_f2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
gv_z_ref
gv_zd_ref
gv_zdd_ref
gv_adapt_X
stateCalcAccelNed_i
gv_adapt_P
gv_adapt_Xmeas
gv_adapt_init
register_periodic_telemetry
pprz_telemetry
radio_control
gv_set_ref
orientationCalcRMat_i
gv_adapt_run
gv_update_ref_from_zd_sp
gv_update_ref_from_z_sp
stabilization_cmd
vertical_mode
nav_flight_altitude
nav_climb
nav_throttle
