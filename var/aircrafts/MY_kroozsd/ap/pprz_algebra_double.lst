   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"pprz_algebra_double.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_dmul
  20              		.global	__aeabi_dsub
  21              		.global	__aeabi_dadd
  22              		.section	.text.double_rmat_of_eulers_321,"ax",%progbits
  23              		.align	1
  24              		.global	double_rmat_of_eulers_321
  25              		.thumb
  26              		.thumb_func
  28              	double_rmat_of_eulers_321:
  29              	.LFB40:
  30              		.file 1 "math/pprz_algebra_double.c"
   1:math/pprz_algebra_double.c **** /*
   2:math/pprz_algebra_double.c ****  * Copyright (C) 2008-2014 The Paparazzi Team
   3:math/pprz_algebra_double.c ****  *
   4:math/pprz_algebra_double.c ****  * This file is part of paparazzi.
   5:math/pprz_algebra_double.c ****  *
   6:math/pprz_algebra_double.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:math/pprz_algebra_double.c ****  * it under the terms of the GNU General Public License as published by
   8:math/pprz_algebra_double.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:math/pprz_algebra_double.c ****  * any later version.
  10:math/pprz_algebra_double.c ****  *
  11:math/pprz_algebra_double.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:math/pprz_algebra_double.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:math/pprz_algebra_double.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:math/pprz_algebra_double.c ****  * GNU General Public License for more details.
  15:math/pprz_algebra_double.c ****  *
  16:math/pprz_algebra_double.c ****  * You should have received a copy of the GNU General Public License
  17:math/pprz_algebra_double.c ****  * along with paparazzi; see the file COPYING.  If not, see
  18:math/pprz_algebra_double.c ****  * <http://www.gnu.org/licenses/>.
  19:math/pprz_algebra_double.c ****  */
  20:math/pprz_algebra_double.c **** 
  21:math/pprz_algebra_double.c **** /**
  22:math/pprz_algebra_double.c ****  * @file pprz_algebra_double.c
  23:math/pprz_algebra_double.c ****  * @brief Paparazzi double precision floating point algebra.
  24:math/pprz_algebra_double.c ****  *
  25:math/pprz_algebra_double.c ****  */
  26:math/pprz_algebra_double.c **** 
  27:math/pprz_algebra_double.c **** #include "pprz_algebra_double.h"
  28:math/pprz_algebra_double.c **** 
  29:math/pprz_algebra_double.c **** void double_rmat_of_eulers_321(struct DoubleRMat *rm, struct DoubleEulers *e)
  30:math/pprz_algebra_double.c **** {
  31              		.loc 1 30 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 40
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  37              		.cfi_def_cfa_offset 32
  38              		.cfi_offset 4, -32
  39              		.cfi_offset 5, -28
  40              		.cfi_offset 6, -24
  41              		.cfi_offset 7, -20
  42              		.cfi_offset 8, -16
  43              		.cfi_offset 9, -12
  44              		.cfi_offset 10, -8
  45              		.cfi_offset 14, -4
  31:math/pprz_algebra_double.c ****   const double sphi   = sin(e->phi);
  46              		.loc 1 31 0
  47 0004 D1E90045 		ldrd	r4, [r1]
  30:math/pprz_algebra_double.c **** {
  48              		.loc 1 30 0
  49 0008 8AB0     		sub	sp, sp, #40
  50              		.cfi_def_cfa_offset 72
  30:math/pprz_algebra_double.c **** {
  51              		.loc 1 30 0
  52 000a 8246     		mov	r10, r0
  53 000c 8846     		mov	r8, r1
  54              		.loc 1 31 0
  55 000e 2046     		mov	r0, r4
  56              	.LVL1:
  57 0010 2946     		mov	r1, r5
  58              	.LVL2:
  59 0012 FFF7FEFF 		bl	sin
  60              	.LVL3:
  61 0016 CDE90201 		strd	r0, [sp, #8]
  62              	.LVL4:
  32:math/pprz_algebra_double.c ****   const double cphi   = cos(e->phi);
  63              		.loc 1 32 0
  64 001a 2046     		mov	r0, r4
  65              	.LVL5:
  66 001c 2946     		mov	r1, r5
  67 001e FFF7FEFF 		bl	cos
  68              	.LVL6:
  33:math/pprz_algebra_double.c ****   const double stheta = sin(e->theta);
  69              		.loc 1 33 0
  70 0022 D8E90267 		ldrd	r6, [r8, #8]
  32:math/pprz_algebra_double.c ****   const double cphi   = cos(e->phi);
  71              		.loc 1 32 0
  72 0026 CDE90401 		strd	r0, [sp, #16]
  73              	.LVL7:
  74              		.loc 1 33 0
  75 002a 3046     		mov	r0, r6
  76              	.LVL8:
  77 002c 3946     		mov	r1, r7
  78 002e FFF7FEFF 		bl	sin
  79              	.LVL9:
  80 0032 0446     		mov	r4, r0
  81 0034 0D46     		mov	r5, r1
  82              	.LVL10:
  34:math/pprz_algebra_double.c ****   const double ctheta = cos(e->theta);
  83              		.loc 1 34 0
  84 0036 3046     		mov	r0, r6
  85 0038 3946     		mov	r1, r7
  86 003a FFF7FEFF 		bl	cos
  87              	.LVL11:
  35:math/pprz_algebra_double.c ****   const double spsi   = sin(e->psi);
  88              		.loc 1 35 0
  89 003e D8E90467 		ldrd	r6, [r8, #16]
  34:math/pprz_algebra_double.c ****   const double ctheta = cos(e->theta);
  90              		.loc 1 34 0
  91 0042 CDE90601 		strd	r0, [sp, #24]
  92              	.LVL12:
  93              		.loc 1 35 0
  94 0046 3046     		mov	r0, r6
  95              	.LVL13:
  96 0048 3946     		mov	r1, r7
  97 004a FFF7FEFF 		bl	sin
  98              	.LVL14:
  99 004e CDE90001 		strd	r0, [sp]
 100              	.LVL15:
  36:math/pprz_algebra_double.c ****   const double cpsi   = cos(e->psi);
 101              		.loc 1 36 0
 102 0052 3046     		mov	r0, r6
 103              	.LVL16:
 104 0054 3946     		mov	r1, r7
 105 0056 FFF7FEFF 		bl	cos
 106              	.LVL17:
 107 005a 8046     		mov	r8, r0
 108              	.LVL18:
 109 005c 8946     		mov	r9, r1
 110              	.LVL19:
  37:math/pprz_algebra_double.c **** 
  38:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 0) = ctheta * cpsi;
 111              		.loc 1 38 0
 112 005e 4246     		mov	r2, r8
 113 0060 DDE90601 		ldrd	r0, [sp, #24]
 114 0064 4B46     		mov	r3, r9
 115 0066 FFF7FEFF 		bl	__aeabi_dmul
 116              	.LVL20:
  39:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 1) = ctheta * spsi;
 117              		.loc 1 39 0
 118 006a DDE90023 		ldrd	r2, [sp]
  38:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 0) = ctheta * cpsi;
 119              		.loc 1 38 0
 120 006e CAE90001 		strd	r0, [r10]
 121              		.loc 1 39 0
 122 0072 DDE90601 		ldrd	r0, [sp, #24]
 123 0076 FFF7FEFF 		bl	__aeabi_dmul
 124              	.LVL21:
  40:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 2) = -stheta;
 125              		.loc 1 40 0
 126 007a 05F10043 		add	r3, r5, #-2147483648
  39:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 1) = ctheta * spsi;
 127              		.loc 1 39 0
 128 007e CAE90201 		strd	r0, [r10, #8]
 129              		.loc 1 40 0
 130 0082 CAF81040 		str	r4, [r10, #16]
 131 0086 CAF81430 		str	r3, [r10, #20]
  41:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 0) = sphi * stheta * cpsi - cphi * spsi;
 132              		.loc 1 41 0
 133 008a DDE90201 		ldrd	r0, [sp, #8]
 134 008e 2246     		mov	r2, r4
 135 0090 2B46     		mov	r3, r5
 136 0092 FFF7FEFF 		bl	__aeabi_dmul
 137              	.LVL22:
 138 0096 4246     		mov	r2, r8
 139 0098 4B46     		mov	r3, r9
 140 009a 0646     		mov	r6, r0
 141 009c 0F46     		mov	r7, r1
 142 009e FFF7FEFF 		bl	__aeabi_dmul
 143              	.LVL23:
 144 00a2 DDE90023 		ldrd	r2, [sp]
 145 00a6 CDE90801 		strd	r0, [sp, #32]
 146 00aa DDE90401 		ldrd	r0, [sp, #16]
 147 00ae FFF7FEFF 		bl	__aeabi_dmul
 148              	.LVL24:
 149 00b2 0246     		mov	r2, r0
 150 00b4 0B46     		mov	r3, r1
 151 00b6 DDE90801 		ldrd	r0, [sp, #32]
 152 00ba FFF7FEFF 		bl	__aeabi_dsub
 153              	.LVL25:
  42:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 1) = sphi * stheta * spsi + cphi * cpsi;
 154              		.loc 1 42 0
 155 00be DDE90023 		ldrd	r2, [sp]
  41:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 0) = sphi * stheta * cpsi - cphi * spsi;
 156              		.loc 1 41 0
 157 00c2 CAE90601 		strd	r0, [r10, #24]
 158              		.loc 1 42 0
 159 00c6 3046     		mov	r0, r6
 160 00c8 3946     		mov	r1, r7
 161 00ca FFF7FEFF 		bl	__aeabi_dmul
 162              	.LVL26:
 163 00ce 4246     		mov	r2, r8
 164 00d0 0646     		mov	r6, r0
 165 00d2 0F46     		mov	r7, r1
 166 00d4 4B46     		mov	r3, r9
 167 00d6 DDE90401 		ldrd	r0, [sp, #16]
 168 00da FFF7FEFF 		bl	__aeabi_dmul
 169              	.LVL27:
 170 00de 0246     		mov	r2, r0
 171 00e0 0B46     		mov	r3, r1
 172 00e2 3046     		mov	r0, r6
 173 00e4 3946     		mov	r1, r7
 174 00e6 FFF7FEFF 		bl	__aeabi_dadd
 175              	.LVL28:
  43:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 2) = sphi * ctheta;
 176              		.loc 1 43 0
 177 00ea DDE90623 		ldrd	r2, [sp, #24]
  42:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 1) = sphi * stheta * spsi + cphi * cpsi;
 178              		.loc 1 42 0
 179 00ee CAE90801 		strd	r0, [r10, #32]
 180              		.loc 1 43 0
 181 00f2 DDE90201 		ldrd	r0, [sp, #8]
 182 00f6 FFF7FEFF 		bl	__aeabi_dmul
 183              	.LVL29:
  44:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 0) = cphi * stheta * cpsi + sphi * spsi;
 184              		.loc 1 44 0
 185 00fa 2246     		mov	r2, r4
  43:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 2) = sphi * ctheta;
 186              		.loc 1 43 0
 187 00fc CAE90A01 		strd	r0, [r10, #40]
 188              		.loc 1 44 0
 189 0100 2B46     		mov	r3, r5
 190 0102 DDE90401 		ldrd	r0, [sp, #16]
 191 0106 FFF7FEFF 		bl	__aeabi_dmul
 192              	.LVL30:
 193 010a 4246     		mov	r2, r8
 194 010c 4B46     		mov	r3, r9
 195 010e 0446     		mov	r4, r0
 196              	.LVL31:
 197 0110 0D46     		mov	r5, r1
 198 0112 FFF7FEFF 		bl	__aeabi_dmul
 199              	.LVL32:
 200 0116 DDE90023 		ldrd	r2, [sp]
 201 011a 0646     		mov	r6, r0
 202 011c 0F46     		mov	r7, r1
 203 011e DDE90201 		ldrd	r0, [sp, #8]
 204 0122 FFF7FEFF 		bl	__aeabi_dmul
 205              	.LVL33:
 206 0126 0246     		mov	r2, r0
 207 0128 0B46     		mov	r3, r1
 208 012a 3046     		mov	r0, r6
 209 012c 3946     		mov	r1, r7
 210 012e FFF7FEFF 		bl	__aeabi_dadd
 211              	.LVL34:
 212 0132 CAE90C01 		strd	r0, [r10, #48]
  45:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 1) = cphi * stheta * spsi - sphi * cpsi;
 213              		.loc 1 45 0
 214 0136 DDE90023 		ldrd	r2, [sp]
 215 013a 2046     		mov	r0, r4
 216 013c 2946     		mov	r1, r5
 217 013e FFF7FEFF 		bl	__aeabi_dmul
 218              	.LVL35:
 219 0142 4246     		mov	r2, r8
 220 0144 0446     		mov	r4, r0
 221 0146 0D46     		mov	r5, r1
 222 0148 4B46     		mov	r3, r9
 223 014a DDE90201 		ldrd	r0, [sp, #8]
 224 014e FFF7FEFF 		bl	__aeabi_dmul
 225              	.LVL36:
 226 0152 0246     		mov	r2, r0
 227 0154 0B46     		mov	r3, r1
 228 0156 2046     		mov	r0, r4
 229 0158 2946     		mov	r1, r5
 230 015a FFF7FEFF 		bl	__aeabi_dsub
 231              	.LVL37:
  46:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 2) = cphi * ctheta;
 232              		.loc 1 46 0
 233 015e DDE90623 		ldrd	r2, [sp, #24]
  45:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 1) = cphi * stheta * spsi - sphi * cpsi;
 234              		.loc 1 45 0
 235 0162 CAE90E01 		strd	r0, [r10, #56]
 236              		.loc 1 46 0
 237 0166 DDE90401 		ldrd	r0, [sp, #16]
 238 016a FFF7FEFF 		bl	__aeabi_dmul
 239              	.LVL38:
 240 016e CAE91001 		strd	r0, [r10, #64]
  47:math/pprz_algebra_double.c **** }
 241              		.loc 1 47 0
 242 0172 0AB0     		add	sp, sp, #40
 243              	.LVL39:
 244              		@ sp needed
 245 0174 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 246              		.cfi_endproc
 247              	.LFE40:
 249              		.section	.text.double_quat_of_eulers,"ax",%progbits
 250              		.align	1
 251              		.global	double_quat_of_eulers
 252              		.thumb
 253              		.thumb_func
 255              	double_quat_of_eulers:
 256              	.LFB41:
  48:math/pprz_algebra_double.c **** 
  49:math/pprz_algebra_double.c **** void double_quat_of_eulers(struct DoubleQuat *q, struct DoubleEulers *e)
  50:math/pprz_algebra_double.c **** {
 257              		.loc 1 50 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 48
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL40:
 262 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 263              		.cfi_def_cfa_offset 36
 264              		.cfi_offset 4, -36
 265              		.cfi_offset 5, -32
 266              		.cfi_offset 6, -28
 267              		.cfi_offset 7, -24
 268              		.cfi_offset 8, -20
 269              		.cfi_offset 9, -16
 270              		.cfi_offset 10, -12
 271              		.cfi_offset 11, -8
 272              		.cfi_offset 14, -4
 273 0004 8DB0     		sub	sp, sp, #52
 274              		.cfi_def_cfa_offset 88
 275              		.loc 1 50 0
 276 0006 0C46     		mov	r4, r1
 277 0008 0390     		str	r0, [sp, #12]
  51:math/pprz_algebra_double.c ****   const double phi2   = e->phi / 2.0;
 278              		.loc 1 51 0
 279 000a 0022     		movs	r2, #0
 280 000c D1E90001 		ldrd	r0, [r1]
 281              	.LVL41:
 282 0010 5C4B     		ldr	r3, .L3
 283 0012 FFF7FEFF 		bl	__aeabi_dmul
 284              	.LVL42:
  52:math/pprz_algebra_double.c ****   const double theta2 = e->theta / 2.0;
 285              		.loc 1 52 0
 286 0016 0022     		movs	r2, #0
  51:math/pprz_algebra_double.c ****   const double phi2   = e->phi / 2.0;
 287              		.loc 1 51 0
 288 0018 8046     		mov	r8, r0
 289 001a 8946     		mov	r9, r1
 290              	.LVL43:
 291              		.loc 1 52 0
 292 001c 594B     		ldr	r3, .L3
 293 001e D4E90201 		ldrd	r0, [r4, #8]
 294 0022 FFF7FEFF 		bl	__aeabi_dmul
 295              	.LVL44:
  53:math/pprz_algebra_double.c ****   const double psi2   = e->psi / 2.0;
 296              		.loc 1 53 0
 297 0026 0022     		movs	r2, #0
 298 0028 564B     		ldr	r3, .L3
  52:math/pprz_algebra_double.c ****   const double theta2 = e->theta / 2.0;
 299              		.loc 1 52 0
 300 002a 0646     		mov	r6, r0
 301 002c 0F46     		mov	r7, r1
 302              	.LVL45:
 303              		.loc 1 53 0
 304 002e D4E90401 		ldrd	r0, [r4, #16]
 305 0032 FFF7FEFF 		bl	__aeabi_dmul
 306              	.LVL46:
 307 0036 0446     		mov	r4, r0
 308              	.LVL47:
 309 0038 0D46     		mov	r5, r1
 310              	.LVL48:
  54:math/pprz_algebra_double.c **** 
  55:math/pprz_algebra_double.c ****   const double s_phi2   = sin(phi2);
 311              		.loc 1 55 0
 312 003a 4046     		mov	r0, r8
 313 003c 4946     		mov	r1, r9
 314 003e FFF7FEFF 		bl	sin
 315              	.LVL49:
 316 0042 CDE90601 		strd	r0, [sp, #24]
 317              	.LVL50:
  56:math/pprz_algebra_double.c ****   const double c_phi2   = cos(phi2);
 318              		.loc 1 56 0
 319 0046 4046     		mov	r0, r8
 320              	.LVL51:
 321 0048 4946     		mov	r1, r9
 322 004a FFF7FEFF 		bl	cos
 323              	.LVL52:
 324 004e 8046     		mov	r8, r0
 325              	.LVL53:
 326 0050 8946     		mov	r9, r1
 327              	.LVL54:
  57:math/pprz_algebra_double.c ****   const double s_theta2 = sin(theta2);
 328              		.loc 1 57 0
 329 0052 3046     		mov	r0, r6
 330 0054 3946     		mov	r1, r7
 331 0056 FFF7FEFF 		bl	sin
 332              	.LVL55:
 333 005a CDE90401 		strd	r0, [sp, #16]
 334              	.LVL56:
  58:math/pprz_algebra_double.c ****   const double c_theta2 = cos(theta2);
 335              		.loc 1 58 0
 336 005e 3046     		mov	r0, r6
 337              	.LVL57:
 338 0060 3946     		mov	r1, r7
 339 0062 FFF7FEFF 		bl	cos
 340              	.LVL58:
 341 0066 0646     		mov	r6, r0
 342              	.LVL59:
 343 0068 0F46     		mov	r7, r1
 344              	.LVL60:
  59:math/pprz_algebra_double.c ****   const double s_psi2   = sin(psi2);
 345              		.loc 1 59 0
 346 006a 2046     		mov	r0, r4
 347 006c 2946     		mov	r1, r5
 348 006e FFF7FEFF 		bl	sin
 349              	.LVL61:
 350 0072 CDE90001 		strd	r0, [sp]
 351              	.LVL62:
  60:math/pprz_algebra_double.c ****   const double c_psi2   = cos(psi2);
 352              		.loc 1 60 0
 353 0076 2046     		mov	r0, r4
 354              	.LVL63:
 355 0078 2946     		mov	r1, r5
 356 007a FFF7FEFF 		bl	cos
 357              	.LVL64:
  61:math/pprz_algebra_double.c **** 
  62:math/pprz_algebra_double.c ****   q->qi =  c_phi2 * c_theta2 * c_psi2 + s_phi2 * s_theta2 * s_psi2;
 358              		.loc 1 62 0
 359 007e 3246     		mov	r2, r6
  60:math/pprz_algebra_double.c ****   const double c_psi2   = cos(psi2);
 360              		.loc 1 60 0
 361 0080 8246     		mov	r10, r0
 362 0082 8B46     		mov	fp, r1
 363              	.LVL65:
 364              		.loc 1 62 0
 365 0084 3B46     		mov	r3, r7
 366 0086 4046     		mov	r0, r8
 367 0088 4946     		mov	r1, r9
 368 008a FFF7FEFF 		bl	__aeabi_dmul
 369              	.LVL66:
 370 008e DDE90423 		ldrd	r2, [sp, #16]
 371 0092 CDE90801 		strd	r0, [sp, #32]
 372 0096 DDE90601 		ldrd	r0, [sp, #24]
 373 009a FFF7FEFF 		bl	__aeabi_dmul
 374              	.LVL67:
 375 009e 5246     		mov	r2, r10
 376 00a0 CDE90A01 		strd	r0, [sp, #40]
 377 00a4 5B46     		mov	r3, fp
 378 00a6 DDE90801 		ldrd	r0, [sp, #32]
 379 00aa FFF7FEFF 		bl	__aeabi_dmul
 380              	.LVL68:
 381 00ae DDE90023 		ldrd	r2, [sp]
 382 00b2 0446     		mov	r4, r0
 383              	.LVL69:
 384 00b4 0D46     		mov	r5, r1
 385 00b6 DDE90A01 		ldrd	r0, [sp, #40]
 386 00ba FFF7FEFF 		bl	__aeabi_dmul
 387              	.LVL70:
 388 00be 0246     		mov	r2, r0
 389 00c0 0B46     		mov	r3, r1
 390 00c2 2046     		mov	r0, r4
 391 00c4 2946     		mov	r1, r5
 392 00c6 FFF7FEFF 		bl	__aeabi_dadd
 393              	.LVL71:
 394 00ca 039B     		ldr	r3, [sp, #12]
  63:math/pprz_algebra_double.c ****   q->qx = -c_phi2 * s_theta2 * s_psi2 + s_phi2 * c_theta2 * c_psi2;
 395              		.loc 1 63 0
 396 00cc 3246     		mov	r2, r6
  62:math/pprz_algebra_double.c ****   q->qi =  c_phi2 * c_theta2 * c_psi2 + s_phi2 * s_theta2 * s_psi2;
 397              		.loc 1 62 0
 398 00ce C3E90001 		strd	r0, [r3]
 399              		.loc 1 63 0
 400 00d2 DDE90601 		ldrd	r0, [sp, #24]
 401 00d6 3B46     		mov	r3, r7
 402 00d8 FFF7FEFF 		bl	__aeabi_dmul
 403              	.LVL72:
 404 00dc DDE90423 		ldrd	r2, [sp, #16]
 405 00e0 0446     		mov	r4, r0
 406 00e2 0D46     		mov	r5, r1
 407 00e4 4046     		mov	r0, r8
 408 00e6 09F10041 		add	r1, r9, #-2147483648
 409 00ea FFF7FEFF 		bl	__aeabi_dmul
 410              	.LVL73:
 411 00ee DDE90023 		ldrd	r2, [sp]
 412 00f2 FFF7FEFF 		bl	__aeabi_dmul
 413              	.LVL74:
 414 00f6 5246     		mov	r2, r10
 415 00f8 0646     		mov	r6, r0
 416              	.LVL75:
 417 00fa 0F46     		mov	r7, r1
 418 00fc 5B46     		mov	r3, fp
 419 00fe 2046     		mov	r0, r4
 420 0100 2946     		mov	r1, r5
 421 0102 FFF7FEFF 		bl	__aeabi_dmul
 422              	.LVL76:
 423 0106 0246     		mov	r2, r0
 424 0108 0B46     		mov	r3, r1
 425 010a 3046     		mov	r0, r6
 426 010c 3946     		mov	r1, r7
 427 010e FFF7FEFF 		bl	__aeabi_dadd
 428              	.LVL77:
 429 0112 039B     		ldr	r3, [sp, #12]
 430 0114 C3E90201 		strd	r0, [r3, #8]
  64:math/pprz_algebra_double.c ****   q->qy =  c_phi2 * s_theta2 * c_psi2 + s_phi2 * c_theta2 * s_psi2;
 431              		.loc 1 64 0
 432 0118 DDE90423 		ldrd	r2, [sp, #16]
 433 011c 4046     		mov	r0, r8
 434 011e 4946     		mov	r1, r9
 435 0120 FFF7FEFF 		bl	__aeabi_dmul
 436              	.LVL78:
 437 0124 5246     		mov	r2, r10
 438 0126 5B46     		mov	r3, fp
 439 0128 FFF7FEFF 		bl	__aeabi_dmul
 440              	.LVL79:
 441 012c DDE90023 		ldrd	r2, [sp]
 442 0130 0646     		mov	r6, r0
 443 0132 0F46     		mov	r7, r1
 444 0134 2046     		mov	r0, r4
 445 0136 2946     		mov	r1, r5
 446 0138 FFF7FEFF 		bl	__aeabi_dmul
 447              	.LVL80:
 448 013c 0246     		mov	r2, r0
 449 013e 0B46     		mov	r3, r1
 450 0140 3046     		mov	r0, r6
 451 0142 3946     		mov	r1, r7
 452 0144 FFF7FEFF 		bl	__aeabi_dadd
 453              	.LVL81:
 454 0148 039B     		ldr	r3, [sp, #12]
 455 014a C3E90401 		strd	r0, [r3, #16]
  65:math/pprz_algebra_double.c ****   q->qz =  c_phi2 * c_theta2 * s_psi2 - s_phi2 * s_theta2 * c_psi2;
 456              		.loc 1 65 0
 457 014e DDE90023 		ldrd	r2, [sp]
 458 0152 DDE90801 		ldrd	r0, [sp, #32]
 459 0156 FFF7FEFF 		bl	__aeabi_dmul
 460              	.LVL82:
 461 015a 5246     		mov	r2, r10
 462 015c 0446     		mov	r4, r0
 463 015e 0D46     		mov	r5, r1
 464 0160 5B46     		mov	r3, fp
 465 0162 DDE90A01 		ldrd	r0, [sp, #40]
 466 0166 FFF7FEFF 		bl	__aeabi_dmul
 467              	.LVL83:
 468 016a 0246     		mov	r2, r0
 469 016c 0B46     		mov	r3, r1
 470 016e 2046     		mov	r0, r4
 471 0170 2946     		mov	r1, r5
 472 0172 FFF7FEFF 		bl	__aeabi_dsub
 473              	.LVL84:
 474 0176 039B     		ldr	r3, [sp, #12]
 475 0178 C3E90601 		strd	r0, [r3, #24]
  66:math/pprz_algebra_double.c **** }
 476              		.loc 1 66 0
 477 017c 0DB0     		add	sp, sp, #52
 478              	.LVL85:
 479              		@ sp needed
 480 017e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 481              	.LVL86:
 482              	.L4:
 483 0182 00BF     		.align	2
 484              	.L3:
 485 0184 0000E03F 		.word	1071644672
 486              		.cfi_endproc
 487              	.LFE41:
 489              		.section	.text.double_eulers_of_quat,"ax",%progbits
 490              		.align	1
 491              		.global	double_eulers_of_quat
 492              		.thumb
 493              		.thumb_func
 495              	double_eulers_of_quat:
 496              	.LFB42:
  67:math/pprz_algebra_double.c **** 
  68:math/pprz_algebra_double.c **** void double_eulers_of_quat(struct DoubleEulers *e, struct DoubleQuat *q)
  69:math/pprz_algebra_double.c **** {
 497              		.loc 1 69 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 24
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL87:
 502 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 503              		.cfi_def_cfa_offset 36
 504              		.cfi_offset 4, -36
 505              		.cfi_offset 5, -32
 506              		.cfi_offset 6, -28
 507              		.cfi_offset 7, -24
 508              		.cfi_offset 8, -20
 509              		.cfi_offset 9, -16
 510              		.cfi_offset 10, -12
 511              		.cfi_offset 11, -8
 512              		.cfi_offset 14, -4
  70:math/pprz_algebra_double.c ****   const double qx2  = q->qx * q->qx;
  71:math/pprz_algebra_double.c ****   const double qy2  = q->qy * q->qy;
 513              		.loc 1 71 0
 514 0004 D1E90445 		ldrd	r4, [r1, #16]
  69:math/pprz_algebra_double.c **** {
 515              		.loc 1 69 0
 516 0008 87B0     		sub	sp, sp, #28
 517              		.cfi_def_cfa_offset 64
  70:math/pprz_algebra_double.c ****   const double qx2  = q->qx * q->qx;
 518              		.loc 1 70 0
 519 000a D1E90267 		ldrd	r6, [r1, #8]
 520              	.LVL88:
  69:math/pprz_algebra_double.c **** {
 521              		.loc 1 69 0
 522 000e 8846     		mov	r8, r1
 523 0010 0190     		str	r0, [sp, #4]
 524              		.loc 1 71 0
 525 0012 2246     		mov	r2, r4
 526 0014 2B46     		mov	r3, r5
 527 0016 2046     		mov	r0, r4
 528              	.LVL89:
 529 0018 2946     		mov	r1, r5
 530              	.LVL90:
 531 001a FFF7FEFF 		bl	__aeabi_dmul
 532              	.LVL91:
  72:math/pprz_algebra_double.c ****   const double qz2  = q->qz * q->qz;
 533              		.loc 1 72 0
 534 001e D8E906AB 		ldrd	r10, [r8, #24]
  73:math/pprz_algebra_double.c ****   const double qiqx = q->qi * q->qx;
 535              		.loc 1 73 0
 536 0022 98ED007B 		fldd	d7, [r8]
  71:math/pprz_algebra_double.c ****   const double qy2  = q->qy * q->qy;
 537              		.loc 1 71 0
 538 0026 CDE90401 		strd	r0, [sp, #16]
 539              	.LVL92:
  74:math/pprz_algebra_double.c ****   const double qiqy = q->qi * q->qy;
  75:math/pprz_algebra_double.c ****   const double qiqz = q->qi * q->qz;
  76:math/pprz_algebra_double.c ****   const double qxqy = q->qx * q->qy;
  77:math/pprz_algebra_double.c ****   const double qxqz = q->qx * q->qz;
  78:math/pprz_algebra_double.c ****   const double qyqz = q->qy * q->qz;
 540              		.loc 1 78 0
 541 002a 5246     		mov	r2, r10
 542 002c 5B46     		mov	r3, fp
 543 002e 2046     		mov	r0, r4
 544              	.LVL93:
 545 0030 2946     		mov	r1, r5
  73:math/pprz_algebra_double.c ****   const double qiqx = q->qi * q->qx;
 546              		.loc 1 73 0
 547 0032 8DED027B 		fstd	d7, [sp, #8]
 548              	.LVL94:
 549              		.loc 1 78 0
 550 0036 FFF7FEFF 		bl	__aeabi_dmul
 551              	.LVL95:
  73:math/pprz_algebra_double.c ****   const double qiqx = q->qi * q->qx;
 552              		.loc 1 73 0
 553 003a 3246     		mov	r2, r6
 554              		.loc 1 78 0
 555 003c 8046     		mov	r8, r0
 556              	.LVL96:
 557 003e 8946     		mov	r9, r1
  73:math/pprz_algebra_double.c ****   const double qiqx = q->qi * q->qx;
 558              		.loc 1 73 0
 559 0040 3B46     		mov	r3, r7
 560 0042 DDE90201 		ldrd	r0, [sp, #8]
 561 0046 FFF7FEFF 		bl	__aeabi_dmul
 562              	.LVL97:
 563 004a 0246     		mov	r2, r0
 564 004c 0B46     		mov	r3, r1
  79:math/pprz_algebra_double.c ****   const double dcm00 = 1.0 - 2.*(qy2 +  qz2);
  80:math/pprz_algebra_double.c ****   const double dcm01 =       2.*(qxqy + qiqz);
  81:math/pprz_algebra_double.c ****   const double dcm02 =       2.*(qxqz - qiqy);
  82:math/pprz_algebra_double.c ****   const double dcm12 =       2.*(qyqz + qiqx);
 565              		.loc 1 82 0
 566 004e 4046     		mov	r0, r8
 567 0050 4946     		mov	r1, r9
 568 0052 FFF7FEFF 		bl	__aeabi_dadd
 569              	.LVL98:
 570 0056 0246     		mov	r2, r0
 571 0058 0B46     		mov	r3, r1
 572 005a FFF7FEFF 		bl	__aeabi_dadd
 573              	.LVL99:
  70:math/pprz_algebra_double.c ****   const double qx2  = q->qx * q->qx;
 574              		.loc 1 70 0
 575 005e 3246     		mov	r2, r6
 576              		.loc 1 82 0
 577 0060 8046     		mov	r8, r0
 578 0062 8946     		mov	r9, r1
  70:math/pprz_algebra_double.c ****   const double qx2  = q->qx * q->qx;
 579              		.loc 1 70 0
 580 0064 3B46     		mov	r3, r7
 581 0066 3046     		mov	r0, r6
 582 0068 3946     		mov	r1, r7
 583 006a FFF7FEFF 		bl	__aeabi_dmul
 584              	.LVL100:
  83:math/pprz_algebra_double.c ****   const double dcm22 = 1.0 - 2.*(qx2 +  qy2);
 585              		.loc 1 83 0
 586 006e DDE90423 		ldrd	r2, [sp, #16]
 587 0072 FFF7FEFF 		bl	__aeabi_dadd
 588              	.LVL101:
 589 0076 0246     		mov	r2, r0
 590 0078 0B46     		mov	r3, r1
 591 007a FFF7FEFF 		bl	__aeabi_dadd
 592              	.LVL102:
 593 007e 0246     		mov	r2, r0
 594 0080 0B46     		mov	r3, r1
 595 0082 0020     		movs	r0, #0
 596 0084 3349     		ldr	r1, .L6
 597 0086 FFF7FEFF 		bl	__aeabi_dsub
 598              	.LVL103:
 599 008a 0246     		mov	r2, r0
 600 008c 0B46     		mov	r3, r1
  84:math/pprz_algebra_double.c **** 
  85:math/pprz_algebra_double.c ****   e->phi = atan2(dcm12, dcm22);
 601              		.loc 1 85 0
 602 008e 4046     		mov	r0, r8
 603 0090 4946     		mov	r1, r9
 604 0092 FFF7FEFF 		bl	atan2
 605              	.LVL104:
 606 0096 019A     		ldr	r2, [sp, #4]
  77:math/pprz_algebra_double.c ****   const double qxqz = q->qx * q->qz;
 607              		.loc 1 77 0
 608 0098 5B46     		mov	r3, fp
 609              		.loc 1 85 0
 610 009a C2E90001 		strd	r0, [r2]
  77:math/pprz_algebra_double.c ****   const double qxqz = q->qx * q->qz;
 611              		.loc 1 77 0
 612 009e 5246     		mov	r2, r10
 613 00a0 3046     		mov	r0, r6
 614 00a2 3946     		mov	r1, r7
 615 00a4 FFF7FEFF 		bl	__aeabi_dmul
 616              	.LVL105:
  74:math/pprz_algebra_double.c ****   const double qiqy = q->qi * q->qy;
 617              		.loc 1 74 0
 618 00a8 2246     		mov	r2, r4
  77:math/pprz_algebra_double.c ****   const double qxqz = q->qx * q->qz;
 619              		.loc 1 77 0
 620 00aa 8046     		mov	r8, r0
 621 00ac 8946     		mov	r9, r1
  74:math/pprz_algebra_double.c ****   const double qiqy = q->qi * q->qy;
 622              		.loc 1 74 0
 623 00ae 2B46     		mov	r3, r5
 624 00b0 DDE90201 		ldrd	r0, [sp, #8]
 625 00b4 FFF7FEFF 		bl	__aeabi_dmul
 626              	.LVL106:
 627 00b8 0246     		mov	r2, r0
 628 00ba 0B46     		mov	r3, r1
  81:math/pprz_algebra_double.c ****   const double dcm02 =       2.*(qxqz - qiqy);
 629              		.loc 1 81 0
 630 00bc 4046     		mov	r0, r8
 631 00be 4946     		mov	r1, r9
 632 00c0 FFF7FEFF 		bl	__aeabi_dsub
 633              	.LVL107:
 634 00c4 0246     		mov	r2, r0
 635 00c6 0B46     		mov	r3, r1
 636 00c8 FFF7FEFF 		bl	__aeabi_dadd
 637              	.LVL108:
  86:math/pprz_algebra_double.c ****   e->theta = -asin(dcm02);
 638              		.loc 1 86 0
 639 00cc FFF7FEFF 		bl	asin
 640              	.LVL109:
 641 00d0 019A     		ldr	r2, [sp, #4]
 642 00d2 01F10043 		add	r3, r1, #-2147483648
 643 00d6 9060     		str	r0, [r2, #8]
 644 00d8 D360     		str	r3, [r2, #12]
  76:math/pprz_algebra_double.c ****   const double qxqy = q->qx * q->qy;
 645              		.loc 1 76 0
 646 00da 3046     		mov	r0, r6
 647 00dc 2246     		mov	r2, r4
 648 00de 2B46     		mov	r3, r5
 649 00e0 3946     		mov	r1, r7
 650 00e2 FFF7FEFF 		bl	__aeabi_dmul
 651              	.LVL110:
  75:math/pprz_algebra_double.c ****   const double qiqz = q->qi * q->qz;
 652              		.loc 1 75 0
 653 00e6 5246     		mov	r2, r10
  76:math/pprz_algebra_double.c ****   const double qxqy = q->qx * q->qy;
 654              		.loc 1 76 0
 655 00e8 0446     		mov	r4, r0
 656              	.LVL111:
 657 00ea 0D46     		mov	r5, r1
  75:math/pprz_algebra_double.c ****   const double qiqz = q->qi * q->qz;
 658              		.loc 1 75 0
 659 00ec 5B46     		mov	r3, fp
 660 00ee DDE90201 		ldrd	r0, [sp, #8]
 661 00f2 FFF7FEFF 		bl	__aeabi_dmul
 662              	.LVL112:
 663 00f6 0246     		mov	r2, r0
 664 00f8 0B46     		mov	r3, r1
  80:math/pprz_algebra_double.c ****   const double dcm01 =       2.*(qxqy + qiqz);
 665              		.loc 1 80 0
 666 00fa 2046     		mov	r0, r4
 667 00fc 2946     		mov	r1, r5
 668 00fe FFF7FEFF 		bl	__aeabi_dadd
 669              	.LVL113:
 670 0102 0246     		mov	r2, r0
 671 0104 0B46     		mov	r3, r1
 672 0106 FFF7FEFF 		bl	__aeabi_dadd
 673              	.LVL114:
  72:math/pprz_algebra_double.c ****   const double qz2  = q->qz * q->qz;
 674              		.loc 1 72 0
 675 010a 5246     		mov	r2, r10
  80:math/pprz_algebra_double.c ****   const double dcm01 =       2.*(qxqy + qiqz);
 676              		.loc 1 80 0
 677 010c 0446     		mov	r4, r0
 678 010e 0D46     		mov	r5, r1
  72:math/pprz_algebra_double.c ****   const double qz2  = q->qz * q->qz;
 679              		.loc 1 72 0
 680 0110 5B46     		mov	r3, fp
 681 0112 5046     		mov	r0, r10
 682 0114 5946     		mov	r1, fp
 683 0116 FFF7FEFF 		bl	__aeabi_dmul
 684              	.LVL115:
 685 011a 0246     		mov	r2, r0
 686 011c 0B46     		mov	r3, r1
  79:math/pprz_algebra_double.c ****   const double dcm00 = 1.0 - 2.*(qy2 +  qz2);
 687              		.loc 1 79 0
 688 011e DDE90401 		ldrd	r0, [sp, #16]
 689 0122 FFF7FEFF 		bl	__aeabi_dadd
 690              	.LVL116:
 691 0126 0246     		mov	r2, r0
 692 0128 0B46     		mov	r3, r1
 693 012a FFF7FEFF 		bl	__aeabi_dadd
 694              	.LVL117:
 695 012e 0246     		mov	r2, r0
 696 0130 0B46     		mov	r3, r1
 697 0132 0020     		movs	r0, #0
 698 0134 0749     		ldr	r1, .L6
 699 0136 FFF7FEFF 		bl	__aeabi_dsub
 700              	.LVL118:
 701 013a 0246     		mov	r2, r0
 702 013c 0B46     		mov	r3, r1
  87:math/pprz_algebra_double.c ****   e->psi = atan2(dcm01, dcm00);
 703              		.loc 1 87 0
 704 013e 2046     		mov	r0, r4
 705 0140 2946     		mov	r1, r5
 706 0142 FFF7FEFF 		bl	atan2
 707              	.LVL119:
 708 0146 019B     		ldr	r3, [sp, #4]
 709 0148 C3E90401 		strd	r0, [r3, #16]
  88:math/pprz_algebra_double.c **** }
 710              		.loc 1 88 0
 711 014c 07B0     		add	sp, sp, #28
 712              		@ sp needed
 713 014e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 714              	.LVL120:
 715              	.L7:
 716 0152 00BF     		.align	2
 717              	.L6:
 718 0154 0000F03F 		.word	1072693248
 719              		.cfi_endproc
 720              	.LFE42:
 722              		.section	.text.double_quat_vmult,"ax",%progbits
 723              		.align	1
 724              		.global	double_quat_vmult
 725              		.thumb
 726              		.thumb_func
 728              	double_quat_vmult:
 729              	.LFB43:
  89:math/pprz_algebra_double.c **** 
  90:math/pprz_algebra_double.c **** void double_quat_vmult(struct DoubleVect3 *v_out, struct DoubleQuat *q, struct DoubleVect3 *v_in)
  91:math/pprz_algebra_double.c **** {
 730              		.loc 1 91 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 80
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734              	.LVL121:
 735 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 736              		.cfi_def_cfa_offset 36
 737              		.cfi_offset 4, -36
 738              		.cfi_offset 5, -32
 739              		.cfi_offset 6, -28
 740              		.cfi_offset 7, -24
 741              		.cfi_offset 8, -20
 742              		.cfi_offset 9, -16
 743              		.cfi_offset 10, -12
 744              		.cfi_offset 11, -8
 745              		.cfi_offset 14, -4
  92:math/pprz_algebra_double.c ****   const double qi2_M1_2  = q->qi * q->qi - 0.5;
 746              		.loc 1 92 0
 747 0004 D1E90045 		ldrd	r4, [r1]
  91:math/pprz_algebra_double.c **** {
 748              		.loc 1 91 0
 749 0008 95B0     		sub	sp, sp, #84
 750              		.cfi_def_cfa_offset 120
  91:math/pprz_algebra_double.c **** {
 751              		.loc 1 91 0
 752 000a 9046     		mov	r8, r2
 753 000c 8146     		mov	r9, r0
 754 000e 8A46     		mov	r10, r1
 755              		.loc 1 92 0
 756 0010 2246     		mov	r2, r4
 757              	.LVL122:
 758 0012 2B46     		mov	r3, r5
 759 0014 2046     		mov	r0, r4
 760              	.LVL123:
 761 0016 2946     		mov	r1, r5
 762              	.LVL124:
 763 0018 FFF7FEFF 		bl	__aeabi_dmul
 764              	.LVL125:
 765 001c 0022     		movs	r2, #0
 766 001e 7D4B     		ldr	r3, .L9
 767 0020 FFF7FEFF 		bl	__aeabi_dsub
 768              	.LVL126:
  93:math/pprz_algebra_double.c ****   const double qiqx = q->qi * q->qx;
 769              		.loc 1 93 0
 770 0024 DAE90267 		ldrd	r6, [r10, #8]
  92:math/pprz_algebra_double.c ****   const double qi2_M1_2  = q->qi * q->qi - 0.5;
 771              		.loc 1 92 0
 772 0028 CDE90401 		strd	r0, [sp, #16]
 773              	.LVL127:
 774              		.loc 1 93 0
 775 002c 3246     		mov	r2, r6
 776 002e 3B46     		mov	r3, r7
 777 0030 2046     		mov	r0, r4
 778              	.LVL128:
 779 0032 2946     		mov	r1, r5
 780 0034 FFF7FEFF 		bl	__aeabi_dmul
 781              	.LVL129:
  94:math/pprz_algebra_double.c ****   const double qiqy = q->qi * q->qy;
 782              		.loc 1 94 0
 783 0038 9AED047B 		fldd	d7, [r10, #16]
  93:math/pprz_algebra_double.c ****   const double qiqx = q->qi * q->qx;
 784              		.loc 1 93 0
 785 003c CDE90801 		strd	r0, [sp, #32]
 786              	.LVL130:
 787              		.loc 1 94 0
 788 0040 53EC172B 		fmrrd	r2, r3, d7
 789 0044 2046     		mov	r0, r4
 790              	.LVL131:
 791 0046 2946     		mov	r1, r5
 792 0048 8DED007B 		fstd	d7, [sp]
 793 004c FFF7FEFF 		bl	__aeabi_dmul
 794              	.LVL132:
  95:math/pprz_algebra_double.c ****   const double qiqz = q->qi * q->qz;
 795              		.loc 1 95 0
 796 0050 0AF1180B 		add	fp, r10, #24
 797 0054 DBE900AB 		ldrd	r10, [fp]
 798              	.LVL133:
  94:math/pprz_algebra_double.c ****   const double qiqy = q->qi * q->qy;
 799              		.loc 1 94 0
 800 0058 CDE90A01 		strd	r0, [sp, #40]
 801              	.LVL134:
 802              		.loc 1 95 0
 803 005c 5246     		mov	r2, r10
 804 005e 5B46     		mov	r3, fp
 805 0060 2046     		mov	r0, r4
 806              	.LVL135:
 807 0062 2946     		mov	r1, r5
 808 0064 FFF7FEFF 		bl	__aeabi_dmul
 809              	.LVL136:
  96:math/pprz_algebra_double.c ****   double m01  = q->qx * q->qy; /* aka qxqy */
 810              		.loc 1 96 0
 811 0068 DDE90023 		ldrd	r2, [sp]
  95:math/pprz_algebra_double.c ****   const double qiqz = q->qi * q->qz;
 812              		.loc 1 95 0
 813 006c CDE90C01 		strd	r0, [sp, #48]
 814              	.LVL137:
 815              		.loc 1 96 0
 816 0070 3046     		mov	r0, r6
 817              	.LVL138:
 818 0072 3946     		mov	r1, r7
 819 0074 FFF7FEFF 		bl	__aeabi_dmul
 820              	.LVL139:
  97:math/pprz_algebra_double.c ****   double m02  = q->qx * q->qz; /* aka qxqz */
 821              		.loc 1 97 0
 822 0078 5246     		mov	r2, r10
  96:math/pprz_algebra_double.c ****   double m01  = q->qx * q->qy; /* aka qxqy */
 823              		.loc 1 96 0
 824 007a CDE90E01 		strd	r0, [sp, #56]
 825              	.LVL140:
 826              		.loc 1 97 0
 827 007e 5B46     		mov	r3, fp
 828 0080 3046     		mov	r0, r6
 829              	.LVL141:
 830 0082 3946     		mov	r1, r7
 831 0084 FFF7FEFF 		bl	__aeabi_dmul
 832              	.LVL142:
  98:math/pprz_algebra_double.c ****   double m12  = q->qy * q->qz; /* aka qyqz */
 833              		.loc 1 98 0
 834 0088 5246     		mov	r2, r10
  97:math/pprz_algebra_double.c ****   double m02  = q->qx * q->qz; /* aka qxqz */
 835              		.loc 1 97 0
 836 008a CDE91001 		strd	r0, [sp, #64]
 837              	.LVL143:
 838              		.loc 1 98 0
 839 008e 5B46     		mov	r3, fp
 840 0090 DDE90001 		ldrd	r0, [sp]
 841              	.LVL144:
 842 0094 FFF7FEFF 		bl	__aeabi_dmul
 843              	.LVL145:
  99:math/pprz_algebra_double.c **** 
 100:math/pprz_algebra_double.c ****   const double m00  = qi2_M1_2 + q->qx * q->qx;
 101:math/pprz_algebra_double.c ****   const double m10  = m01 - qiqz;
 102:math/pprz_algebra_double.c ****   const double m20  = m02 + qiqy;
 103:math/pprz_algebra_double.c ****   const double m21  = m12 - qiqx;
 104:math/pprz_algebra_double.c ****   m01 += qiqz;
 105:math/pprz_algebra_double.c ****   m02 -= qiqy;
 106:math/pprz_algebra_double.c ****   m12 += qiqx;
 107:math/pprz_algebra_double.c ****   const double m11  = qi2_M1_2 + q->qy * q->qy;
 108:math/pprz_algebra_double.c ****   const double m22  = qi2_M1_2 + q->qz * q->qz;
 109:math/pprz_algebra_double.c ****   v_out->x = 2 * (m00 * v_in->x + m01 * v_in->y + m02 * v_in->z);
 844              		.loc 1 109 0
 845 0098 98ED027B 		fldd	d7, [r8, #8]
 846 009c 8DED067B 		fstd	d7, [sp, #24]
 847 00a0 98ED047B 		fldd	d7, [r8, #16]
  98:math/pprz_algebra_double.c ****   double m12  = q->qy * q->qz; /* aka qyqz */
 848              		.loc 1 98 0
 849 00a4 CDE91201 		strd	r0, [sp, #72]
 850              	.LVL146:
 100:math/pprz_algebra_double.c ****   const double m00  = qi2_M1_2 + q->qx * q->qx;
 851              		.loc 1 100 0
 852 00a8 3246     		mov	r2, r6
 853 00aa 3B46     		mov	r3, r7
 854 00ac 3046     		mov	r0, r6
 855              	.LVL147:
 856 00ae 3946     		mov	r1, r7
 857              		.loc 1 109 0
 858 00b0 8DED027B 		fstd	d7, [sp, #8]
 100:math/pprz_algebra_double.c ****   const double m00  = qi2_M1_2 + q->qx * q->qx;
 859              		.loc 1 100 0
 860 00b4 FFF7FEFF 		bl	__aeabi_dmul
 861              	.LVL148:
 862 00b8 0246     		mov	r2, r0
 863 00ba 0B46     		mov	r3, r1
 864 00bc DDE90401 		ldrd	r0, [sp, #16]
 865 00c0 FFF7FEFF 		bl	__aeabi_dadd
 866              	.LVL149:
 867              		.loc 1 109 0
 868 00c4 D8E90023 		ldrd	r2, [r8]
 869 00c8 FFF7FEFF 		bl	__aeabi_dmul
 870              	.LVL150:
 104:math/pprz_algebra_double.c ****   m01 += qiqz;
 871              		.loc 1 104 0
 872 00cc DDE90C23 		ldrd	r2, [sp, #48]
 873              		.loc 1 109 0
 874 00d0 0446     		mov	r4, r0
 875 00d2 0D46     		mov	r5, r1
 104:math/pprz_algebra_double.c ****   m01 += qiqz;
 876              		.loc 1 104 0
 877 00d4 DDE90E01 		ldrd	r0, [sp, #56]
 878 00d8 FFF7FEFF 		bl	__aeabi_dadd
 879              	.LVL151:
 880              		.loc 1 109 0
 881 00dc DDE90623 		ldrd	r2, [sp, #24]
 882 00e0 FFF7FEFF 		bl	__aeabi_dmul
 883              	.LVL152:
 884 00e4 0246     		mov	r2, r0
 885 00e6 0B46     		mov	r3, r1
 886 00e8 2046     		mov	r0, r4
 887 00ea 2946     		mov	r1, r5
 888 00ec FFF7FEFF 		bl	__aeabi_dadd
 889              	.LVL153:
 105:math/pprz_algebra_double.c ****   m02 -= qiqy;
 890              		.loc 1 105 0
 891 00f0 DDE90A23 		ldrd	r2, [sp, #40]
 892              		.loc 1 109 0
 893 00f4 0446     		mov	r4, r0
 894 00f6 0D46     		mov	r5, r1
 105:math/pprz_algebra_double.c ****   m02 -= qiqy;
 895              		.loc 1 105 0
 896 00f8 DDE91001 		ldrd	r0, [sp, #64]
 897 00fc FFF7FEFF 		bl	__aeabi_dsub
 898              	.LVL154:
 899              		.loc 1 109 0
 900 0100 DDE90223 		ldrd	r2, [sp, #8]
 901 0104 FFF7FEFF 		bl	__aeabi_dmul
 902              	.LVL155:
 903 0108 0246     		mov	r2, r0
 904 010a 0B46     		mov	r3, r1
 905 010c 2046     		mov	r0, r4
 906 010e 2946     		mov	r1, r5
 907 0110 FFF7FEFF 		bl	__aeabi_dadd
 908              	.LVL156:
 909 0114 0246     		mov	r2, r0
 910 0116 0B46     		mov	r3, r1
 911 0118 FFF7FEFF 		bl	__aeabi_dadd
 912              	.LVL157:
 913 011c C9E90001 		strd	r0, [r9]
 110:math/pprz_algebra_double.c ****   v_out->y = 2 * (m10 * v_in->x + m11 * v_in->y + m12 * v_in->z);
 914              		.loc 1 110 0
 915 0120 D8E90067 		ldrd	r6, [r8]
 916              	.LVL158:
 101:math/pprz_algebra_double.c ****   const double m10  = m01 - qiqz;
 917              		.loc 1 101 0
 918 0124 DDE90C23 		ldrd	r2, [sp, #48]
 919 0128 DDE90E01 		ldrd	r0, [sp, #56]
 920 012c FFF7FEFF 		bl	__aeabi_dsub
 921              	.LVL159:
 922              		.loc 1 110 0
 923 0130 3246     		mov	r2, r6
 924 0132 3B46     		mov	r3, r7
 925 0134 FFF7FEFF 		bl	__aeabi_dmul
 926              	.LVL160:
 927 0138 0446     		mov	r4, r0
 928 013a 0D46     		mov	r5, r1
 107:math/pprz_algebra_double.c ****   const double m11  = qi2_M1_2 + q->qy * q->qy;
 929              		.loc 1 107 0
 930 013c DDE90001 		ldrd	r0, [sp]
 931 0140 0246     		mov	r2, r0
 932 0142 0B46     		mov	r3, r1
 933 0144 FFF7FEFF 		bl	__aeabi_dmul
 934              	.LVL161:
 935 0148 0246     		mov	r2, r0
 936 014a 0B46     		mov	r3, r1
 937 014c DDE90401 		ldrd	r0, [sp, #16]
 938 0150 FFF7FEFF 		bl	__aeabi_dadd
 939              	.LVL162:
 940              		.loc 1 110 0
 941 0154 DDE90623 		ldrd	r2, [sp, #24]
 942 0158 FFF7FEFF 		bl	__aeabi_dmul
 943              	.LVL163:
 944 015c 0246     		mov	r2, r0
 945 015e 0B46     		mov	r3, r1
 946 0160 2046     		mov	r0, r4
 947 0162 2946     		mov	r1, r5
 948 0164 FFF7FEFF 		bl	__aeabi_dadd
 949              	.LVL164:
 106:math/pprz_algebra_double.c ****   m12 += qiqx;
 950              		.loc 1 106 0
 951 0168 DDE90823 		ldrd	r2, [sp, #32]
 952              		.loc 1 110 0
 953 016c 0446     		mov	r4, r0
 954 016e 0D46     		mov	r5, r1
 106:math/pprz_algebra_double.c ****   m12 += qiqx;
 955              		.loc 1 106 0
 956 0170 DDE91201 		ldrd	r0, [sp, #72]
 957 0174 FFF7FEFF 		bl	__aeabi_dadd
 958              	.LVL165:
 959              		.loc 1 110 0
 960 0178 DDE90223 		ldrd	r2, [sp, #8]
 961 017c FFF7FEFF 		bl	__aeabi_dmul
 962              	.LVL166:
 963 0180 0246     		mov	r2, r0
 964 0182 0B46     		mov	r3, r1
 965 0184 2046     		mov	r0, r4
 966 0186 2946     		mov	r1, r5
 967 0188 FFF7FEFF 		bl	__aeabi_dadd
 968              	.LVL167:
 969 018c 0246     		mov	r2, r0
 970 018e 0B46     		mov	r3, r1
 971 0190 FFF7FEFF 		bl	__aeabi_dadd
 972              	.LVL168:
 102:math/pprz_algebra_double.c ****   const double m20  = m02 + qiqy;
 973              		.loc 1 102 0
 974 0194 DDE90A23 		ldrd	r2, [sp, #40]
 975              		.loc 1 110 0
 976 0198 C9E90201 		strd	r0, [r9, #8]
 102:math/pprz_algebra_double.c ****   const double m20  = m02 + qiqy;
 977              		.loc 1 102 0
 978 019c DDE91001 		ldrd	r0, [sp, #64]
 979 01a0 FFF7FEFF 		bl	__aeabi_dadd
 980              	.LVL169:
 111:math/pprz_algebra_double.c ****   v_out->z = 2 * (m20 * v_in->x + m21 * v_in->y + m22 * v_in->z);
 981              		.loc 1 111 0
 982 01a4 3246     		mov	r2, r6
 983 01a6 3B46     		mov	r3, r7
 984 01a8 FFF7FEFF 		bl	__aeabi_dmul
 985              	.LVL170:
 103:math/pprz_algebra_double.c ****   const double m21  = m12 - qiqx;
 986              		.loc 1 103 0
 987 01ac DDE90823 		ldrd	r2, [sp, #32]
 988              		.loc 1 111 0
 989 01b0 0446     		mov	r4, r0
 990 01b2 0D46     		mov	r5, r1
 103:math/pprz_algebra_double.c ****   const double m21  = m12 - qiqx;
 991              		.loc 1 103 0
 992 01b4 DDE91201 		ldrd	r0, [sp, #72]
 993 01b8 FFF7FEFF 		bl	__aeabi_dsub
 994              	.LVL171:
 995              		.loc 1 111 0
 996 01bc D8E90223 		ldrd	r2, [r8, #8]
 997 01c0 FFF7FEFF 		bl	__aeabi_dmul
 998              	.LVL172:
 999 01c4 0246     		mov	r2, r0
 1000 01c6 0B46     		mov	r3, r1
 1001 01c8 2046     		mov	r0, r4
 1002 01ca 2946     		mov	r1, r5
 1003 01cc FFF7FEFF 		bl	__aeabi_dadd
 1004              	.LVL173:
 108:math/pprz_algebra_double.c ****   const double m22  = qi2_M1_2 + q->qz * q->qz;
 1005              		.loc 1 108 0
 1006 01d0 5246     		mov	r2, r10
 1007              		.loc 1 111 0
 1008 01d2 0446     		mov	r4, r0
 1009 01d4 0D46     		mov	r5, r1
 108:math/pprz_algebra_double.c ****   const double m22  = qi2_M1_2 + q->qz * q->qz;
 1010              		.loc 1 108 0
 1011 01d6 5B46     		mov	r3, fp
 1012 01d8 5046     		mov	r0, r10
 1013 01da 5946     		mov	r1, fp
 1014 01dc FFF7FEFF 		bl	__aeabi_dmul
 1015              	.LVL174:
 1016 01e0 0246     		mov	r2, r0
 1017 01e2 0B46     		mov	r3, r1
 1018 01e4 DDE90401 		ldrd	r0, [sp, #16]
 1019 01e8 FFF7FEFF 		bl	__aeabi_dadd
 1020              	.LVL175:
 1021              		.loc 1 111 0
 1022 01ec DDE90223 		ldrd	r2, [sp, #8]
 1023 01f0 FFF7FEFF 		bl	__aeabi_dmul
 1024              	.LVL176:
 1025 01f4 0246     		mov	r2, r0
 1026 01f6 0B46     		mov	r3, r1
 1027 01f8 2046     		mov	r0, r4
 1028 01fa 2946     		mov	r1, r5
 1029 01fc FFF7FEFF 		bl	__aeabi_dadd
 1030              	.LVL177:
 1031 0200 0246     		mov	r2, r0
 1032 0202 0B46     		mov	r3, r1
 1033 0204 FFF7FEFF 		bl	__aeabi_dadd
 1034              	.LVL178:
 1035 0208 C9E90401 		strd	r0, [r9, #16]
 112:math/pprz_algebra_double.c **** }
 1036              		.loc 1 112 0
 1037 020c 15B0     		add	sp, sp, #84
 1038              	.LVL179:
 1039              		@ sp needed
 1040 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1041              	.LVL180:
 1042              	.L10:
 1043 0212 00BF     		.align	2
 1044              	.L9:
 1045 0214 0000E03F 		.word	1071644672
 1046              		.cfi_endproc
 1047              	.LFE43:
 1049              		.section	.text.double_rmat_inv,"ax",%progbits
 1050              		.align	1
 1051              		.global	double_rmat_inv
 1052              		.thumb
 1053              		.thumb_func
 1055              	double_rmat_inv:
 1056              	.LFB44:
 113:math/pprz_algebra_double.c **** 
 114:math/pprz_algebra_double.c **** void double_rmat_inv(struct DoubleRMat *m_b2a, struct DoubleRMat *m_a2b)
 115:math/pprz_algebra_double.c **** {
 1057              		.loc 1 115 0
 1058              		.cfi_startproc
 1059              		@ args = 0, pretend = 0, frame = 0
 1060              		@ frame_needed = 0, uses_anonymous_args = 0
 1061              		@ link register save eliminated.
 1062              	.LVL181:
 116:math/pprz_algebra_double.c ****   /*RMAT_ELMT(*m_b2a, 0, 0) = RMAT_ELMT(*m_a2b, 0, 0);*/
 117:math/pprz_algebra_double.c ****   RMAT_ELMT(*m_b2a, 0, 1) = RMAT_ELMT(*m_a2b, 1, 0);
 1063              		.loc 1 117 0
 1064 0000 D1E90623 		ldrd	r2, [r1, #24]
 1065 0004 C0E90223 		strd	r2, [r0, #8]
 118:math/pprz_algebra_double.c ****   RMAT_ELMT(*m_b2a, 0, 2) = RMAT_ELMT(*m_a2b, 2, 0);
 1066              		.loc 1 118 0
 1067 0008 D1E90C23 		ldrd	r2, [r1, #48]
 1068 000c C0E90423 		strd	r2, [r0, #16]
 119:math/pprz_algebra_double.c ****   RMAT_ELMT(*m_b2a, 1, 0) = RMAT_ELMT(*m_a2b, 0, 1);
 1069              		.loc 1 119 0
 1070 0010 D1E90223 		ldrd	r2, [r1, #8]
 1071 0014 C0E90623 		strd	r2, [r0, #24]
 120:math/pprz_algebra_double.c ****   /*RMAT_ELMT(*m_b2a, 1, 1) = RMAT_ELMT(*m_a2b, 1, 1);*/
 121:math/pprz_algebra_double.c ****   RMAT_ELMT(*m_b2a, 1, 2) = RMAT_ELMT(*m_a2b, 2, 1);
 1072              		.loc 1 121 0
 1073 0018 D1E90E23 		ldrd	r2, [r1, #56]
 1074 001c C0E90A23 		strd	r2, [r0, #40]
 122:math/pprz_algebra_double.c ****   RMAT_ELMT(*m_b2a, 2, 0) = RMAT_ELMT(*m_a2b, 0, 2);
 1075              		.loc 1 122 0
 1076 0020 D1E90423 		ldrd	r2, [r1, #16]
 1077 0024 C0E90C23 		strd	r2, [r0, #48]
 123:math/pprz_algebra_double.c ****   RMAT_ELMT(*m_b2a, 2, 1) = RMAT_ELMT(*m_a2b, 1, 2);
 1078              		.loc 1 123 0
 1079 0028 D1E90A23 		ldrd	r2, [r1, #40]
 1080 002c C0E90E23 		strd	r2, [r0, #56]
 1081 0030 7047     		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE44:
 1085              		.section	.text.double_rmat_comp,"ax",%progbits
 1086              		.align	1
 1087              		.global	double_rmat_comp
 1088              		.thumb
 1089              		.thumb_func
 1091              	double_rmat_comp:
 1092              	.LFB45:
 124:math/pprz_algebra_double.c ****   /*RMAT_ELMT(*m_b2a, 2, 2) = RMAT_ELMT(*m_a2b, 2, 2);*/
 125:math/pprz_algebra_double.c **** }
 126:math/pprz_algebra_double.c **** 
 127:math/pprz_algebra_double.c **** /** Composition (multiplication) of two rotation matrices.
 128:math/pprz_algebra_double.c ****  * m_a2c = m_a2b comp m_b2c , aka  m_a2c = m_b2c * m_a2b
 129:math/pprz_algebra_double.c ****  */
 130:math/pprz_algebra_double.c **** void double_rmat_comp(struct DoubleRMat *m_a2c, struct DoubleRMat *m_a2b, struct DoubleRMat *m_b2c)
 131:math/pprz_algebra_double.c **** {
 1093              		.loc 1 131 0
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 72
 1096              		@ frame_needed = 0, uses_anonymous_args = 0
 1097              	.LVL182:
 1098 0000 2DE9F04D 		push	{r4, r5, r6, r7, r8, r10, fp, lr}
 1099              		.cfi_def_cfa_offset 32
 1100              		.cfi_offset 4, -32
 1101              		.cfi_offset 5, -28
 1102              		.cfi_offset 6, -24
 1103              		.cfi_offset 7, -20
 1104              		.cfi_offset 8, -16
 1105              		.cfi_offset 10, -12
 1106              		.cfi_offset 11, -8
 1107              		.cfi_offset 14, -4
 132:math/pprz_algebra_double.c ****   m_a2c->m[0] = m_b2c->m[0] * m_a2b->m[0] + m_b2c->m[1] * m_a2b->m[3] + m_b2c->m[2] * m_a2b->m[6];
 1108              		.loc 1 132 0
 1109 0004 92ED027B 		fldd	d7, [r2, #8]
 131:math/pprz_algebra_double.c **** {
 1110              		.loc 1 131 0
 1111 0008 92B0     		sub	sp, sp, #72
 1112              		.cfi_def_cfa_offset 104
 1113              		.loc 1 132 0
 1114 000a 8DED047B 		fstd	d7, [sp, #16]
 1115 000e 91ED067B 		fldd	d7, [r1, #24]
 1116 0012 8DED007B 		fstd	d7, [sp]
 1117 0016 91ED0C7B 		fldd	d7, [r1, #48]
 131:math/pprz_algebra_double.c **** {
 1118              		.loc 1 131 0
 1119 001a 0E46     		mov	r6, r1
 1120 001c 1746     		mov	r7, r2
 1121 001e 8046     		mov	r8, r0
 1122              		.loc 1 132 0
 1123 0020 D2E904AB 		ldrd	r10, [r2, #16]
 1124 0024 D2E90001 		ldrd	r0, [r2]
 1125              	.LVL183:
 1126 0028 D6E90023 		ldrd	r2, [r6]
 1127              	.LVL184:
 1128 002c 8DED027B 		fstd	d7, [sp, #8]
 1129 0030 FFF7FEFF 		bl	__aeabi_dmul
 1130              	.LVL185:
 1131 0034 DDE90023 		ldrd	r2, [sp]
 1132 0038 0446     		mov	r4, r0
 1133 003a 0D46     		mov	r5, r1
 1134 003c DDE90401 		ldrd	r0, [sp, #16]
 1135 0040 FFF7FEFF 		bl	__aeabi_dmul
 1136              	.LVL186:
 1137 0044 0246     		mov	r2, r0
 1138 0046 0B46     		mov	r3, r1
 1139 0048 2046     		mov	r0, r4
 1140 004a 2946     		mov	r1, r5
 1141 004c FFF7FEFF 		bl	__aeabi_dadd
 1142              	.LVL187:
 1143 0050 DDE90223 		ldrd	r2, [sp, #8]
 1144 0054 0446     		mov	r4, r0
 1145 0056 0D46     		mov	r5, r1
 1146 0058 5046     		mov	r0, r10
 1147 005a 5946     		mov	r1, fp
 1148 005c FFF7FEFF 		bl	__aeabi_dmul
 1149              	.LVL188:
 1150 0060 0246     		mov	r2, r0
 1151 0062 0B46     		mov	r3, r1
 1152 0064 2046     		mov	r0, r4
 1153 0066 2946     		mov	r1, r5
 1154 0068 FFF7FEFF 		bl	__aeabi_dadd
 1155              	.LVL189:
 1156 006c C8E90001 		strd	r0, [r8]
 133:math/pprz_algebra_double.c ****   m_a2c->m[1] = m_b2c->m[0] * m_a2b->m[1] + m_b2c->m[1] * m_a2b->m[4] + m_b2c->m[2] * m_a2b->m[7];
 1157              		.loc 1 133 0
 1158 0070 97ED007B 		fldd	d7, [r7]
 1159 0074 8DED067B 		fstd	d7, [sp, #24]
 1160 0078 96ED087B 		fldd	d7, [r6, #32]
 1161 007c 8DED087B 		fstd	d7, [sp, #32]
 1162 0080 96ED0E7B 		fldd	d7, [r6, #56]
 1163 0084 D6E90223 		ldrd	r2, [r6, #8]
 1164 0088 DDE90601 		ldrd	r0, [sp, #24]
 1165 008c 8DED0A7B 		fstd	d7, [sp, #40]
 1166 0090 FFF7FEFF 		bl	__aeabi_dmul
 1167              	.LVL190:
 1168 0094 DDE90823 		ldrd	r2, [sp, #32]
 1169 0098 0446     		mov	r4, r0
 1170 009a 0D46     		mov	r5, r1
 1171 009c DDE90401 		ldrd	r0, [sp, #16]
 1172 00a0 FFF7FEFF 		bl	__aeabi_dmul
 1173              	.LVL191:
 1174 00a4 0246     		mov	r2, r0
 1175 00a6 0B46     		mov	r3, r1
 1176 00a8 2046     		mov	r0, r4
 1177 00aa 2946     		mov	r1, r5
 1178 00ac FFF7FEFF 		bl	__aeabi_dadd
 1179              	.LVL192:
 1180 00b0 DDE90A23 		ldrd	r2, [sp, #40]
 1181 00b4 0446     		mov	r4, r0
 1182 00b6 0D46     		mov	r5, r1
 1183 00b8 5046     		mov	r0, r10
 1184 00ba 5946     		mov	r1, fp
 1185 00bc FFF7FEFF 		bl	__aeabi_dmul
 1186              	.LVL193:
 1187 00c0 0246     		mov	r2, r0
 1188 00c2 0B46     		mov	r3, r1
 1189 00c4 2046     		mov	r0, r4
 1190 00c6 2946     		mov	r1, r5
 1191 00c8 FFF7FEFF 		bl	__aeabi_dadd
 1192              	.LVL194:
 1193 00cc C8E90201 		strd	r0, [r8, #8]
 134:math/pprz_algebra_double.c ****   m_a2c->m[2] = m_b2c->m[0] * m_a2b->m[2] + m_b2c->m[1] * m_a2b->m[5] + m_b2c->m[2] * m_a2b->m[8];
 1194              		.loc 1 134 0
 1195 00d0 96ED0A7B 		fldd	d7, [r6, #40]
 1196 00d4 8DED0C7B 		fstd	d7, [sp, #48]
 1197 00d8 96ED107B 		fldd	d7, [r6, #64]
 1198 00dc D6E90423 		ldrd	r2, [r6, #16]
 1199 00e0 DDE90601 		ldrd	r0, [sp, #24]
 1200 00e4 8DED047B 		fstd	d7, [sp, #16]
 1201 00e8 FFF7FEFF 		bl	__aeabi_dmul
 1202              	.LVL195:
 1203 00ec D7E90223 		ldrd	r2, [r7, #8]
 1204 00f0 0446     		mov	r4, r0
 1205 00f2 0D46     		mov	r5, r1
 1206 00f4 DDE90C01 		ldrd	r0, [sp, #48]
 1207 00f8 FFF7FEFF 		bl	__aeabi_dmul
 1208              	.LVL196:
 1209 00fc 0246     		mov	r2, r0
 1210 00fe 0B46     		mov	r3, r1
 1211 0100 2046     		mov	r0, r4
 1212 0102 2946     		mov	r1, r5
 1213 0104 FFF7FEFF 		bl	__aeabi_dadd
 1214              	.LVL197:
 1215 0108 DDE90423 		ldrd	r2, [sp, #16]
 1216 010c 0446     		mov	r4, r0
 1217 010e 0D46     		mov	r5, r1
 1218 0110 5046     		mov	r0, r10
 1219 0112 5946     		mov	r1, fp
 1220 0114 FFF7FEFF 		bl	__aeabi_dmul
 1221              	.LVL198:
 1222 0118 0246     		mov	r2, r0
 1223 011a 0B46     		mov	r3, r1
 1224 011c 2046     		mov	r0, r4
 1225 011e 2946     		mov	r1, r5
 1226 0120 FFF7FEFF 		bl	__aeabi_dadd
 1227              	.LVL199:
 1228 0124 C8E90401 		strd	r0, [r8, #16]
 135:math/pprz_algebra_double.c ****   m_a2c->m[3] = m_b2c->m[3] * m_a2b->m[0] + m_b2c->m[4] * m_a2b->m[3] + m_b2c->m[5] * m_a2b->m[6];
 1229              		.loc 1 135 0
 1230 0128 96ED007B 		fldd	d7, [r6]
 1231 012c 8DED067B 		fstd	d7, [sp, #24]
 1232 0130 97ED087B 		fldd	d7, [r7, #32]
 1233 0134 D7E90623 		ldrd	r2, [r7, #24]
 1234 0138 DDE90601 		ldrd	r0, [sp, #24]
 1235 013c 8DED0E7B 		fstd	d7, [sp, #56]
 1236 0140 FFF7FEFF 		bl	__aeabi_dmul
 1237              	.LVL200:
 1238 0144 DDE90023 		ldrd	r2, [sp]
 1239 0148 0446     		mov	r4, r0
 1240 014a 0D46     		mov	r5, r1
 1241 014c DDE90E01 		ldrd	r0, [sp, #56]
 1242 0150 FFF7FEFF 		bl	__aeabi_dmul
 1243              	.LVL201:
 1244 0154 0246     		mov	r2, r0
 1245 0156 0B46     		mov	r3, r1
 1246 0158 2046     		mov	r0, r4
 1247 015a 2946     		mov	r1, r5
 1248 015c FFF7FEFF 		bl	__aeabi_dadd
 1249              	.LVL202:
 1250 0160 D7E90AAB 		ldrd	r10, [r7, #40]
 1251 0164 DDE90223 		ldrd	r2, [sp, #8]
 1252 0168 0446     		mov	r4, r0
 1253 016a 0D46     		mov	r5, r1
 1254 016c 5046     		mov	r0, r10
 1255 016e 5946     		mov	r1, fp
 1256 0170 FFF7FEFF 		bl	__aeabi_dmul
 1257              	.LVL203:
 1258 0174 0246     		mov	r2, r0
 1259 0176 0B46     		mov	r3, r1
 1260 0178 2046     		mov	r0, r4
 1261 017a 2946     		mov	r1, r5
 1262 017c FFF7FEFF 		bl	__aeabi_dadd
 1263              	.LVL204:
 1264 0180 C8E90601 		strd	r0, [r8, #24]
 136:math/pprz_algebra_double.c ****   m_a2c->m[4] = m_b2c->m[3] * m_a2b->m[1] + m_b2c->m[4] * m_a2b->m[4] + m_b2c->m[5] * m_a2b->m[7];
 1265              		.loc 1 136 0
 1266 0184 97ED067B 		fldd	d7, [r7, #24]
 1267 0188 8DED007B 		fstd	d7, [sp]
 1268 018c 96ED027B 		fldd	d7, [r6, #8]
 1269 0190 DDE90001 		ldrd	r0, [sp]
 1270 0194 53EC172B 		fmrrd	r2, r3, d7
 1271 0198 8DED107B 		fstd	d7, [sp, #64]
 1272 019c FFF7FEFF 		bl	__aeabi_dmul
 1273              	.LVL205:
 1274 01a0 DDE90823 		ldrd	r2, [sp, #32]
 1275 01a4 0446     		mov	r4, r0
 1276 01a6 0D46     		mov	r5, r1
 1277 01a8 DDE90E01 		ldrd	r0, [sp, #56]
 1278 01ac FFF7FEFF 		bl	__aeabi_dmul
 1279              	.LVL206:
 1280 01b0 0246     		mov	r2, r0
 1281 01b2 0B46     		mov	r3, r1
 1282 01b4 2046     		mov	r0, r4
 1283 01b6 2946     		mov	r1, r5
 1284 01b8 FFF7FEFF 		bl	__aeabi_dadd
 1285              	.LVL207:
 1286 01bc DDE90A23 		ldrd	r2, [sp, #40]
 1287 01c0 0446     		mov	r4, r0
 1288 01c2 0D46     		mov	r5, r1
 1289 01c4 5046     		mov	r0, r10
 1290 01c6 5946     		mov	r1, fp
 1291 01c8 FFF7FEFF 		bl	__aeabi_dmul
 1292              	.LVL208:
 1293 01cc 0246     		mov	r2, r0
 1294 01ce 0B46     		mov	r3, r1
 1295 01d0 2046     		mov	r0, r4
 1296 01d2 2946     		mov	r1, r5
 1297 01d4 FFF7FEFF 		bl	__aeabi_dadd
 1298              	.LVL209:
 1299 01d8 C8E90801 		strd	r0, [r8, #32]
 137:math/pprz_algebra_double.c ****   m_a2c->m[5] = m_b2c->m[3] * m_a2b->m[2] + m_b2c->m[4] * m_a2b->m[5] + m_b2c->m[5] * m_a2b->m[8];
 1300              		.loc 1 137 0
 1301 01dc 96ED047B 		fldd	d7, [r6, #16]
 1302 01e0 DDE90001 		ldrd	r0, [sp]
 1303 01e4 53EC172B 		fmrrd	r2, r3, d7
 1304 01e8 8DED087B 		fstd	d7, [sp, #32]
 1305 01ec FFF7FEFF 		bl	__aeabi_dmul
 1306              	.LVL210:
 1307 01f0 D7E90823 		ldrd	r2, [r7, #32]
 1308 01f4 0446     		mov	r4, r0
 1309 01f6 0D46     		mov	r5, r1
 1310 01f8 DDE90C01 		ldrd	r0, [sp, #48]
 1311 01fc FFF7FEFF 		bl	__aeabi_dmul
 1312              	.LVL211:
 1313 0200 0246     		mov	r2, r0
 1314 0202 0B46     		mov	r3, r1
 1315 0204 2046     		mov	r0, r4
 1316 0206 2946     		mov	r1, r5
 1317 0208 FFF7FEFF 		bl	__aeabi_dadd
 1318              	.LVL212:
 1319 020c DDE90423 		ldrd	r2, [sp, #16]
 1320 0210 0446     		mov	r4, r0
 1321 0212 0D46     		mov	r5, r1
 1322 0214 5046     		mov	r0, r10
 1323 0216 5946     		mov	r1, fp
 1324 0218 FFF7FEFF 		bl	__aeabi_dmul
 1325              	.LVL213:
 1326 021c 0246     		mov	r2, r0
 1327 021e 0B46     		mov	r3, r1
 1328 0220 2046     		mov	r0, r4
 1329 0222 2946     		mov	r1, r5
 1330 0224 FFF7FEFF 		bl	__aeabi_dadd
 1331              	.LVL214:
 1332 0228 C8E90A01 		strd	r0, [r8, #40]
 138:math/pprz_algebra_double.c ****   m_a2c->m[6] = m_b2c->m[6] * m_a2b->m[0] + m_b2c->m[7] * m_a2b->m[3] + m_b2c->m[8] * m_a2b->m[6];
 1333              		.loc 1 138 0
 1334 022c 97ED0E7B 		fldd	d7, [r7, #56]
 1335 0230 D7E90C23 		ldrd	r2, [r7, #48]
 1336 0234 DDE90601 		ldrd	r0, [sp, #24]
 1337 0238 8DED007B 		fstd	d7, [sp]
 1338 023c FFF7FEFF 		bl	__aeabi_dmul
 1339              	.LVL215:
 1340 0240 D6E90623 		ldrd	r2, [r6, #24]
 1341 0244 0446     		mov	r4, r0
 1342 0246 0D46     		mov	r5, r1
 1343 0248 DDE90001 		ldrd	r0, [sp]
 1344 024c FFF7FEFF 		bl	__aeabi_dmul
 1345              	.LVL216:
 1346 0250 0246     		mov	r2, r0
 1347 0252 0B46     		mov	r3, r1
 1348 0254 2046     		mov	r0, r4
 1349 0256 2946     		mov	r1, r5
 1350 0258 FFF7FEFF 		bl	__aeabi_dadd
 1351              	.LVL217:
 1352 025c D7E910AB 		ldrd	r10, [r7, #64]
 1353 0260 DDE90223 		ldrd	r2, [sp, #8]
 1354 0264 0446     		mov	r4, r0
 1355 0266 0D46     		mov	r5, r1
 1356 0268 5046     		mov	r0, r10
 1357 026a 5946     		mov	r1, fp
 1358 026c FFF7FEFF 		bl	__aeabi_dmul
 1359              	.LVL218:
 1360 0270 0246     		mov	r2, r0
 1361 0272 0B46     		mov	r3, r1
 1362 0274 2046     		mov	r0, r4
 1363 0276 2946     		mov	r1, r5
 1364 0278 FFF7FEFF 		bl	__aeabi_dadd
 1365              	.LVL219:
 1366 027c C8E90C01 		strd	r0, [r8, #48]
 139:math/pprz_algebra_double.c ****   m_a2c->m[7] = m_b2c->m[6] * m_a2b->m[1] + m_b2c->m[7] * m_a2b->m[4] + m_b2c->m[8] * m_a2b->m[7];
 1367              		.loc 1 139 0
 1368 0280 97ED0C7B 		fldd	d7, [r7, #48]
 1369 0284 DDE91023 		ldrd	r2, [sp, #64]
 1370 0288 51EC170B 		fmrrd	r0, r1, d7
 1371 028c 8DED027B 		fstd	d7, [sp, #8]
 1372 0290 FFF7FEFF 		bl	__aeabi_dmul
 1373              	.LVL220:
 1374 0294 D6E90823 		ldrd	r2, [r6, #32]
 1375 0298 0446     		mov	r4, r0
 1376 029a 0D46     		mov	r5, r1
 1377 029c DDE90001 		ldrd	r0, [sp]
 1378 02a0 FFF7FEFF 		bl	__aeabi_dmul
 1379              	.LVL221:
 1380 02a4 0246     		mov	r2, r0
 1381 02a6 0B46     		mov	r3, r1
 1382 02a8 2046     		mov	r0, r4
 1383 02aa 2946     		mov	r1, r5
 1384 02ac FFF7FEFF 		bl	__aeabi_dadd
 1385              	.LVL222:
 1386 02b0 DDE90A23 		ldrd	r2, [sp, #40]
 1387 02b4 0446     		mov	r4, r0
 1388 02b6 0D46     		mov	r5, r1
 1389 02b8 5046     		mov	r0, r10
 1390 02ba 5946     		mov	r1, fp
 1391 02bc FFF7FEFF 		bl	__aeabi_dmul
 1392              	.LVL223:
 1393 02c0 0246     		mov	r2, r0
 1394 02c2 0B46     		mov	r3, r1
 1395 02c4 2046     		mov	r0, r4
 1396 02c6 2946     		mov	r1, r5
 1397 02c8 FFF7FEFF 		bl	__aeabi_dadd
 1398              	.LVL224:
 140:math/pprz_algebra_double.c ****   m_a2c->m[8] = m_b2c->m[6] * m_a2b->m[2] + m_b2c->m[7] * m_a2b->m[5] + m_b2c->m[8] * m_a2b->m[8];
 1399              		.loc 1 140 0
 1400 02cc DDE90823 		ldrd	r2, [sp, #32]
 139:math/pprz_algebra_double.c ****   m_a2c->m[7] = m_b2c->m[6] * m_a2b->m[1] + m_b2c->m[7] * m_a2b->m[4] + m_b2c->m[8] * m_a2b->m[7];
 1401              		.loc 1 139 0
 1402 02d0 C8E90E01 		strd	r0, [r8, #56]
 1403              		.loc 1 140 0
 1404 02d4 DDE90201 		ldrd	r0, [sp, #8]
 1405 02d8 FFF7FEFF 		bl	__aeabi_dmul
 1406              	.LVL225:
 1407 02dc D6E90A23 		ldrd	r2, [r6, #40]
 1408 02e0 0446     		mov	r4, r0
 1409 02e2 0D46     		mov	r5, r1
 1410 02e4 D7E90E01 		ldrd	r0, [r7, #56]
 1411 02e8 FFF7FEFF 		bl	__aeabi_dmul
 1412              	.LVL226:
 1413 02ec 0246     		mov	r2, r0
 1414 02ee 0B46     		mov	r3, r1
 1415 02f0 2046     		mov	r0, r4
 1416 02f2 2946     		mov	r1, r5
 1417 02f4 FFF7FEFF 		bl	__aeabi_dadd
 1418              	.LVL227:
 1419 02f8 DDE90423 		ldrd	r2, [sp, #16]
 1420 02fc 0446     		mov	r4, r0
 1421 02fe 0D46     		mov	r5, r1
 1422 0300 5046     		mov	r0, r10
 1423 0302 5946     		mov	r1, fp
 1424 0304 FFF7FEFF 		bl	__aeabi_dmul
 1425              	.LVL228:
 1426 0308 0246     		mov	r2, r0
 1427 030a 0B46     		mov	r3, r1
 1428 030c 2046     		mov	r0, r4
 1429 030e 2946     		mov	r1, r5
 1430 0310 FFF7FEFF 		bl	__aeabi_dadd
 1431              	.LVL229:
 1432 0314 C8E91001 		strd	r0, [r8, #64]
 141:math/pprz_algebra_double.c **** }
 1433              		.loc 1 141 0
 1434 0318 12B0     		add	sp, sp, #72
 1435              		@ sp needed
 1436 031a BDE8F08D 		pop	{r4, r5, r6, r7, r8, r10, fp, pc}
 1437              		.cfi_endproc
 1438              	.LFE45:
 1440              		.section	.text.double_rmat_vmult,"ax",%progbits
 1441              		.align	1
 1442              		.global	double_rmat_vmult
 1443              		.thumb
 1444              		.thumb_func
 1446              	double_rmat_vmult:
 1447              	.LFB46:
 142:math/pprz_algebra_double.c **** 
 143:math/pprz_algebra_double.c **** /** rotate 3D vector by rotation matrix.
 144:math/pprz_algebra_double.c ****  * vb = m_a2b * va
 145:math/pprz_algebra_double.c ****  */
 146:math/pprz_algebra_double.c **** void double_rmat_vmult(struct DoubleVect3 *vb, struct DoubleRMat *m_a2b, struct DoubleVect3 *va)
 147:math/pprz_algebra_double.c **** {
 1448              		.loc 1 147 0
 1449              		.cfi_startproc
 1450              		@ args = 0, pretend = 0, frame = 16
 1451              		@ frame_needed = 0, uses_anonymous_args = 0
 1452              	.LVL230:
 1453 0000 2DE9DF4F 		push	{r0, r1, r2, r3, r4, r6, r7, r8, r9, r10, fp, lr}
 1454              		.cfi_def_cfa_offset 48
 1455              		.cfi_offset 0, -48
 1456              		.cfi_offset 1, -44
 1457              		.cfi_offset 2, -40
 1458              		.cfi_offset 3, -36
 1459              		.cfi_offset 4, -32
 1460              		.cfi_offset 6, -28
 1461              		.cfi_offset 7, -24
 1462              		.cfi_offset 8, -20
 1463              		.cfi_offset 9, -16
 1464              		.cfi_offset 10, -12
 1465              		.cfi_offset 11, -8
 1466              		.cfi_offset 14, -4
 148:math/pprz_algebra_double.c ****   vb->x = m_a2b->m[0] * va->x + m_a2b->m[1] * va->y + m_a2b->m[2] * va->z;
 1467              		.loc 1 148 0
 1468 0004 92ED047B 		fldd	d7, [r2, #16]
 147:math/pprz_algebra_double.c **** {
 1469              		.loc 1 147 0
 1470 0008 8A46     		mov	r10, r1
 1471              		.loc 1 148 0
 1472 000a D2E90267 		ldrd	r6, [r2, #8]
 147:math/pprz_algebra_double.c **** {
 1473              		.loc 1 147 0
 1474 000e 8346     		mov	fp, r0
 1475 0010 1446     		mov	r4, r2
 1476              		.loc 1 148 0
 1477 0012 D1E90001 		ldrd	r0, [r1]
 1478              	.LVL231:
 1479 0016 0CCA     		ldmia	r2, {r2-r3}
 1480              	.LVL232:
 1481 0018 8DED007B 		fstd	d7, [sp]
 1482 001c FFF7FEFF 		bl	__aeabi_dmul
 1483              	.LVL233:
 1484 0020 DAE90223 		ldrd	r2, [r10, #8]
 1485 0024 8046     		mov	r8, r0
 1486 0026 8946     		mov	r9, r1
 1487 0028 3046     		mov	r0, r6
 1488 002a 3946     		mov	r1, r7
 1489 002c FFF7FEFF 		bl	__aeabi_dmul
 1490              	.LVL234:
 1491 0030 0246     		mov	r2, r0
 1492 0032 0B46     		mov	r3, r1
 1493 0034 4046     		mov	r0, r8
 1494 0036 4946     		mov	r1, r9
 1495 0038 FFF7FEFF 		bl	__aeabi_dadd
 1496              	.LVL235:
 1497 003c DAE90423 		ldrd	r2, [r10, #16]
 1498 0040 8046     		mov	r8, r0
 1499 0042 8946     		mov	r9, r1
 1500 0044 DDE90001 		ldrd	r0, [sp]
 1501 0048 FFF7FEFF 		bl	__aeabi_dmul
 1502              	.LVL236:
 1503 004c 0246     		mov	r2, r0
 1504 004e 0B46     		mov	r3, r1
 1505 0050 4046     		mov	r0, r8
 1506 0052 4946     		mov	r1, r9
 1507 0054 FFF7FEFF 		bl	__aeabi_dadd
 1508              	.LVL237:
 1509 0058 CBE90001 		strd	r0, [fp]
 149:math/pprz_algebra_double.c ****   vb->y = m_a2b->m[3] * va->x + m_a2b->m[4] * va->y + m_a2b->m[5] * va->z;
 1510              		.loc 1 149 0
 1511 005c D4E90089 		ldrd	r8, [r4]
 1512 0060 DAE90623 		ldrd	r2, [r10, #24]
 1513 0064 4046     		mov	r0, r8
 1514 0066 4946     		mov	r1, r9
 1515 0068 FFF7FEFF 		bl	__aeabi_dmul
 1516              	.LVL238:
 1517 006c DAE90823 		ldrd	r2, [r10, #32]
 1518 0070 CDE90201 		strd	r0, [sp, #8]
 1519 0074 3046     		mov	r0, r6
 1520 0076 3946     		mov	r1, r7
 1521 0078 FFF7FEFF 		bl	__aeabi_dmul
 1522              	.LVL239:
 1523 007c 0246     		mov	r2, r0
 1524 007e 0B46     		mov	r3, r1
 1525 0080 DDE90201 		ldrd	r0, [sp, #8]
 1526 0084 FFF7FEFF 		bl	__aeabi_dadd
 1527              	.LVL240:
 1528 0088 DAE90A23 		ldrd	r2, [r10, #40]
 1529 008c 0646     		mov	r6, r0
 1530 008e 0F46     		mov	r7, r1
 1531 0090 DDE90001 		ldrd	r0, [sp]
 1532 0094 FFF7FEFF 		bl	__aeabi_dmul
 1533              	.LVL241:
 1534 0098 0246     		mov	r2, r0
 1535 009a 0B46     		mov	r3, r1
 1536 009c 3046     		mov	r0, r6
 1537 009e 3946     		mov	r1, r7
 1538 00a0 FFF7FEFF 		bl	__aeabi_dadd
 1539              	.LVL242:
 150:math/pprz_algebra_double.c ****   vb->z = m_a2b->m[6] * va->x + m_a2b->m[7] * va->y + m_a2b->m[8] * va->z;
 1540              		.loc 1 150 0
 1541 00a4 DAE90C23 		ldrd	r2, [r10, #48]
 149:math/pprz_algebra_double.c ****   vb->y = m_a2b->m[3] * va->x + m_a2b->m[4] * va->y + m_a2b->m[5] * va->z;
 1542              		.loc 1 149 0
 1543 00a8 CBE90201 		strd	r0, [fp, #8]
 1544              		.loc 1 150 0
 1545 00ac 4046     		mov	r0, r8
 1546 00ae 4946     		mov	r1, r9
 1547 00b0 FFF7FEFF 		bl	__aeabi_dmul
 1548              	.LVL243:
 1549 00b4 D4E90223 		ldrd	r2, [r4, #8]
 1550 00b8 0646     		mov	r6, r0
 1551 00ba 0F46     		mov	r7, r1
 1552 00bc DAE90E01 		ldrd	r0, [r10, #56]
 1553 00c0 FFF7FEFF 		bl	__aeabi_dmul
 1554              	.LVL244:
 1555 00c4 0246     		mov	r2, r0
 1556 00c6 0B46     		mov	r3, r1
 1557 00c8 3046     		mov	r0, r6
 1558 00ca 3946     		mov	r1, r7
 1559 00cc FFF7FEFF 		bl	__aeabi_dadd
 1560              	.LVL245:
 1561 00d0 DAE91023 		ldrd	r2, [r10, #64]
 1562 00d4 0646     		mov	r6, r0
 1563 00d6 0F46     		mov	r7, r1
 1564 00d8 DDE90001 		ldrd	r0, [sp]
 1565 00dc FFF7FEFF 		bl	__aeabi_dmul
 1566              	.LVL246:
 1567 00e0 0246     		mov	r2, r0
 1568 00e2 0B46     		mov	r3, r1
 1569 00e4 3046     		mov	r0, r6
 1570 00e6 3946     		mov	r1, r7
 1571 00e8 FFF7FEFF 		bl	__aeabi_dadd
 1572              	.LVL247:
 1573 00ec CBE90401 		strd	r0, [fp, #16]
 151:math/pprz_algebra_double.c **** }
 1574              		.loc 1 151 0
 1575 00f0 04B0     		add	sp, sp, #16
 1576              		@ sp needed
 1577 00f2 BDE8D08F 		pop	{r4, r6, r7, r8, r9, r10, fp, pc}
 1578              		.cfi_endproc
 1579              	.LFE46:
 1581              		.section	.text.double_rmat_of_quat,"ax",%progbits
 1582              		.align	1
 1583              		.global	double_rmat_of_quat
 1584              		.thumb
 1585              		.thumb_func
 1587              	double_rmat_of_quat:
 1588              	.LFB47:
 152:math/pprz_algebra_double.c **** 
 153:math/pprz_algebra_double.c **** /* C n->b rotation matrix */
 154:math/pprz_algebra_double.c **** void double_rmat_of_quat(struct DoubleRMat *rm, struct DoubleQuat *q)
 155:math/pprz_algebra_double.c **** {
 1589              		.loc 1 155 0
 1590              		.cfi_startproc
 1591              		@ args = 0, pretend = 0, frame = 56
 1592              		@ frame_needed = 0, uses_anonymous_args = 0
 1593              	.LVL248:
 1594 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1595              		.cfi_def_cfa_offset 36
 1596              		.cfi_offset 4, -36
 1597              		.cfi_offset 5, -32
 1598              		.cfi_offset 6, -28
 1599              		.cfi_offset 7, -24
 1600              		.cfi_offset 8, -20
 1601              		.cfi_offset 9, -16
 1602              		.cfi_offset 10, -12
 1603              		.cfi_offset 11, -8
 1604              		.cfi_offset 14, -4
 156:math/pprz_algebra_double.c ****   const double _a = M_SQRT2 * q->qi;
 1605              		.loc 1 156 0
 1606 0004 61A3     		adr	r3, .L15+4
 1607 0006 D3E90023 		ldrd	r2, [r3]
 155:math/pprz_algebra_double.c **** {
 1608              		.loc 1 155 0
 1609 000a 8FB0     		sub	sp, sp, #60
 1610              		.cfi_def_cfa_offset 96
 155:math/pprz_algebra_double.c **** {
 1611              		.loc 1 155 0
 1612 000c 8346     		mov	fp, r0
 1613 000e 8A46     		mov	r10, r1
 1614              		.loc 1 156 0
 1615 0010 D1E90001 		ldrd	r0, [r1]
 1616              	.LVL249:
 1617 0014 FFF7FEFF 		bl	__aeabi_dmul
 1618              	.LVL250:
 157:math/pprz_algebra_double.c ****   const double _b = M_SQRT2 * q->qx;
 1619              		.loc 1 157 0
 1620 0018 5CA3     		adr	r3, .L15+4
 1621 001a D3E90023 		ldrd	r2, [r3]
 156:math/pprz_algebra_double.c ****   const double _a = M_SQRT2 * q->qi;
 1622              		.loc 1 156 0
 1623 001e 8046     		mov	r8, r0
 1624 0020 8946     		mov	r9, r1
 1625              	.LVL251:
 1626              		.loc 1 157 0
 1627 0022 DAE90201 		ldrd	r0, [r10, #8]
 1628 0026 FFF7FEFF 		bl	__aeabi_dmul
 1629              	.LVL252:
 158:math/pprz_algebra_double.c ****   const double _c = M_SQRT2 * q->qy;
 1630              		.loc 1 158 0
 1631 002a 58A3     		adr	r3, .L15+4
 1632 002c D3E90023 		ldrd	r2, [r3]
 157:math/pprz_algebra_double.c ****   const double _b = M_SQRT2 * q->qx;
 1633              		.loc 1 157 0
 1634 0030 0646     		mov	r6, r0
 1635 0032 0F46     		mov	r7, r1
 1636              	.LVL253:
 1637              		.loc 1 158 0
 1638 0034 DAE90401 		ldrd	r0, [r10, #16]
 1639 0038 FFF7FEFF 		bl	__aeabi_dmul
 1640              	.LVL254:
 159:math/pprz_algebra_double.c ****   const double _d = M_SQRT2 * q->qz;
 1641              		.loc 1 159 0
 1642 003c 53A3     		adr	r3, .L15+4
 1643 003e D3E90023 		ldrd	r2, [r3]
 158:math/pprz_algebra_double.c ****   const double _c = M_SQRT2 * q->qy;
 1644              		.loc 1 158 0
 1645 0042 0446     		mov	r4, r0
 1646 0044 0D46     		mov	r5, r1
 1647              	.LVL255:
 1648              		.loc 1 159 0
 1649 0046 DAE90601 		ldrd	r0, [r10, #24]
 1650 004a FFF7FEFF 		bl	__aeabi_dmul
 1651              	.LVL256:
 160:math/pprz_algebra_double.c ****   const double a2_1 = _a * _a - 1;
 1652              		.loc 1 160 0
 1653 004e 4246     		mov	r2, r8
 159:math/pprz_algebra_double.c ****   const double _d = M_SQRT2 * q->qz;
 1654              		.loc 1 159 0
 1655 0050 CDE90001 		strd	r0, [sp]
 1656              	.LVL257:
 1657              		.loc 1 160 0
 1658 0054 4B46     		mov	r3, r9
 1659 0056 4046     		mov	r0, r8
 1660              	.LVL258:
 1661 0058 4946     		mov	r1, r9
 1662 005a FFF7FEFF 		bl	__aeabi_dmul
 1663              	.LVL259:
 1664 005e 0022     		movs	r2, #0
 1665 0060 494B     		ldr	r3, .L15
 1666 0062 FFF7FEFF 		bl	__aeabi_dsub
 1667              	.LVL260:
 161:math/pprz_algebra_double.c ****   const double ab = _a * _b;
 1668              		.loc 1 161 0
 1669 0066 3246     		mov	r2, r6
 160:math/pprz_algebra_double.c ****   const double a2_1 = _a * _a - 1;
 1670              		.loc 1 160 0
 1671 0068 CDE90201 		strd	r0, [sp, #8]
 1672              	.LVL261:
 1673              		.loc 1 161 0
 1674 006c 3B46     		mov	r3, r7
 1675 006e 4046     		mov	r0, r8
 1676              	.LVL262:
 1677 0070 4946     		mov	r1, r9
 1678 0072 FFF7FEFF 		bl	__aeabi_dmul
 1679              	.LVL263:
 162:math/pprz_algebra_double.c ****   const double ac = _a * _c;
 1680              		.loc 1 162 0
 1681 0076 2246     		mov	r2, r4
 161:math/pprz_algebra_double.c ****   const double ab = _a * _b;
 1682              		.loc 1 161 0
 1683 0078 CDE90401 		strd	r0, [sp, #16]
 1684              	.LVL264:
 1685              		.loc 1 162 0
 1686 007c 2B46     		mov	r3, r5
 1687 007e 4046     		mov	r0, r8
 1688              	.LVL265:
 1689 0080 4946     		mov	r1, r9
 1690 0082 FFF7FEFF 		bl	__aeabi_dmul
 1691              	.LVL266:
 163:math/pprz_algebra_double.c ****   const double ad = _a * _d;
 1692              		.loc 1 163 0
 1693 0086 DDE90023 		ldrd	r2, [sp]
 162:math/pprz_algebra_double.c ****   const double ac = _a * _c;
 1694              		.loc 1 162 0
 1695 008a CDE90601 		strd	r0, [sp, #24]
 1696              	.LVL267:
 1697              		.loc 1 163 0
 1698 008e 4046     		mov	r0, r8
 1699              	.LVL268:
 1700 0090 4946     		mov	r1, r9
 1701 0092 FFF7FEFF 		bl	__aeabi_dmul
 1702              	.LVL269:
 164:math/pprz_algebra_double.c ****   const double bc = _b * _c;
 1703              		.loc 1 164 0
 1704 0096 2246     		mov	r2, r4
 163:math/pprz_algebra_double.c ****   const double ad = _a * _d;
 1705              		.loc 1 163 0
 1706 0098 CDE90801 		strd	r0, [sp, #32]
 1707              	.LVL270:
 1708              		.loc 1 164 0
 1709 009c 2B46     		mov	r3, r5
 1710 009e 3046     		mov	r0, r6
 1711              	.LVL271:
 1712 00a0 3946     		mov	r1, r7
 1713 00a2 FFF7FEFF 		bl	__aeabi_dmul
 1714              	.LVL272:
 165:math/pprz_algebra_double.c ****   const double bd = _b * _d;
 1715              		.loc 1 165 0
 1716 00a6 DDE90023 		ldrd	r2, [sp]
 164:math/pprz_algebra_double.c ****   const double bc = _b * _c;
 1717              		.loc 1 164 0
 1718 00aa 8046     		mov	r8, r0
 1719              	.LVL273:
 1720 00ac 8946     		mov	r9, r1
 1721              	.LVL274:
 1722              		.loc 1 165 0
 1723 00ae 3046     		mov	r0, r6
 1724 00b0 3946     		mov	r1, r7
 1725 00b2 FFF7FEFF 		bl	__aeabi_dmul
 1726              	.LVL275:
 166:math/pprz_algebra_double.c ****   const double cd = _c * _d;
 1727              		.loc 1 166 0
 1728 00b6 DDE90023 		ldrd	r2, [sp]
 165:math/pprz_algebra_double.c ****   const double bd = _b * _d;
 1729              		.loc 1 165 0
 1730 00ba CDE90A01 		strd	r0, [sp, #40]
 1731              	.LVL276:
 1732              		.loc 1 166 0
 1733 00be 2046     		mov	r0, r4
 1734              	.LVL277:
 1735 00c0 2946     		mov	r1, r5
 1736 00c2 FFF7FEFF 		bl	__aeabi_dmul
 1737              	.LVL278:
 167:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 0) = a2_1 + _b * _b;
 1738              		.loc 1 167 0
 1739 00c6 3246     		mov	r2, r6
 166:math/pprz_algebra_double.c ****   const double cd = _c * _d;
 1740              		.loc 1 166 0
 1741 00c8 CDE90C01 		strd	r0, [sp, #48]
 1742              	.LVL279:
 1743              		.loc 1 167 0
 1744 00cc 3B46     		mov	r3, r7
 1745 00ce 3046     		mov	r0, r6
 1746              	.LVL280:
 1747 00d0 3946     		mov	r1, r7
 1748 00d2 FFF7FEFF 		bl	__aeabi_dmul
 1749              	.LVL281:
 1750 00d6 0246     		mov	r2, r0
 1751 00d8 0B46     		mov	r3, r1
 1752 00da DDE90201 		ldrd	r0, [sp, #8]
 1753 00de FFF7FEFF 		bl	__aeabi_dadd
 1754              	.LVL282:
 168:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 1) = bc + ad;
 1755              		.loc 1 168 0
 1756 00e2 DDE90823 		ldrd	r2, [sp, #32]
 167:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 0) = a2_1 + _b * _b;
 1757              		.loc 1 167 0
 1758 00e6 CBE90001 		strd	r0, [fp]
 1759              		.loc 1 168 0
 1760 00ea 4046     		mov	r0, r8
 1761 00ec 4946     		mov	r1, r9
 1762 00ee FFF7FEFF 		bl	__aeabi_dadd
 1763              	.LVL283:
 169:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 2) = bd - ac;
 1764              		.loc 1 169 0
 1765 00f2 DDE90623 		ldrd	r2, [sp, #24]
 168:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 1) = bc + ad;
 1766              		.loc 1 168 0
 1767 00f6 CBE90201 		strd	r0, [fp, #8]
 1768              		.loc 1 169 0
 1769 00fa DDE90A01 		ldrd	r0, [sp, #40]
 1770 00fe FFF7FEFF 		bl	__aeabi_dsub
 1771              	.LVL284:
 170:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 0) = bc - ad;
 1772              		.loc 1 170 0
 1773 0102 DDE90823 		ldrd	r2, [sp, #32]
 169:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 0, 2) = bd - ac;
 1774              		.loc 1 169 0
 1775 0106 CBE90401 		strd	r0, [fp, #16]
 1776              		.loc 1 170 0
 1777 010a 4046     		mov	r0, r8
 1778 010c 4946     		mov	r1, r9
 1779 010e FFF7FEFF 		bl	__aeabi_dsub
 1780              	.LVL285:
 171:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 1) = a2_1 + _c * _c;
 1781              		.loc 1 171 0
 1782 0112 2246     		mov	r2, r4
 170:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 0) = bc - ad;
 1783              		.loc 1 170 0
 1784 0114 CBE90601 		strd	r0, [fp, #24]
 1785              		.loc 1 171 0
 1786 0118 2B46     		mov	r3, r5
 1787 011a 2046     		mov	r0, r4
 1788 011c 2946     		mov	r1, r5
 1789 011e FFF7FEFF 		bl	__aeabi_dmul
 1790              	.LVL286:
 1791 0122 0246     		mov	r2, r0
 1792 0124 0B46     		mov	r3, r1
 1793 0126 DDE90201 		ldrd	r0, [sp, #8]
 1794 012a FFF7FEFF 		bl	__aeabi_dadd
 1795              	.LVL287:
 172:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 2) = cd + ab;
 1796              		.loc 1 172 0
 1797 012e DDE90423 		ldrd	r2, [sp, #16]
 171:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 1, 1) = a2_1 + _c * _c;
 1798              		.loc 1 171 0
 1799 0132 CBE90801 		strd	r0, [fp, #32]
 1800              		.loc 1 172 0
 1801 0136 DDE90C01 		ldrd	r0, [sp, #48]
 1802 013a FFF7FEFF 		bl	__aeabi_dadd
 1803              	.LVL288:
 1804 013e CBE90A01 		strd	r0, [fp, #40]
 173:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 0) = bd + ac;
 1805              		.loc 1 173 0
 1806 0142 DDE90623 		ldrd	r2, [sp, #24]
 1807 0146 DDE90A01 		ldrd	r0, [sp, #40]
 1808 014a FFF7FEFF 		bl	__aeabi_dadd
 1809              	.LVL289:
 174:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 1) = cd - ab;
 1810              		.loc 1 174 0
 1811 014e DDE90423 		ldrd	r2, [sp, #16]
 173:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 0) = bd + ac;
 1812              		.loc 1 173 0
 1813 0152 CBE90C01 		strd	r0, [fp, #48]
 1814              		.loc 1 174 0
 1815 0156 DDE90C01 		ldrd	r0, [sp, #48]
 1816 015a FFF7FEFF 		bl	__aeabi_dsub
 1817              	.LVL290:
 1818 015e CBE90E01 		strd	r0, [fp, #56]
 175:math/pprz_algebra_double.c ****   RMAT_ELMT(*rm, 2, 2) = a2_1 + _d * _d;
 1819              		.loc 1 175 0
 1820 0162 DDE90001 		ldrd	r0, [sp]
 1821 0166 0246     		mov	r2, r0
 1822 0168 0B46     		mov	r3, r1
 1823 016a FFF7FEFF 		bl	__aeabi_dmul
 1824              	.LVL291:
 1825 016e 0246     		mov	r2, r0
 1826 0170 0B46     		mov	r3, r1
 1827 0172 DDE90201 		ldrd	r0, [sp, #8]
 1828 0176 FFF7FEFF 		bl	__aeabi_dadd
 1829              	.LVL292:
 1830 017a CBE91001 		strd	r0, [fp, #64]
 176:math/pprz_algebra_double.c **** }
 1831              		.loc 1 176 0
 1832 017e 0FB0     		add	sp, sp, #60
 1833              	.LVL293:
 1834              		@ sp needed
 1835 0180 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1836              	.LVL294:
 1837              	.L16:
 1838 0184 AFF30080 		.align	3
 1839              	.L15:
 1840 0188 0000F03F 		.word	1072693248
 1841 018c CD3B7F66 		.word	1719614413
 1842 0190 9EA0F63F 		.word	1073127582
 1843              		.cfi_endproc
 1844              	.LFE47:
 1846 0194 AFF30080 		.text
 1847              	.Letext0:
 1848              		.file 2 "math/pprz_algebra_double.h"
 1849              		.file 3 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pprz_algebra_double.c
     /tmp/cc4itA5Q.s:23     .text.double_rmat_of_eulers_321:00000000 $t
     /tmp/cc4itA5Q.s:28     .text.double_rmat_of_eulers_321:00000000 double_rmat_of_eulers_321
     /tmp/cc4itA5Q.s:250    .text.double_quat_of_eulers:00000000 $t
     /tmp/cc4itA5Q.s:255    .text.double_quat_of_eulers:00000000 double_quat_of_eulers
     /tmp/cc4itA5Q.s:485    .text.double_quat_of_eulers:00000184 $d
     /tmp/cc4itA5Q.s:490    .text.double_eulers_of_quat:00000000 $t
     /tmp/cc4itA5Q.s:495    .text.double_eulers_of_quat:00000000 double_eulers_of_quat
     /tmp/cc4itA5Q.s:718    .text.double_eulers_of_quat:00000154 $d
     /tmp/cc4itA5Q.s:723    .text.double_quat_vmult:00000000 $t
     /tmp/cc4itA5Q.s:728    .text.double_quat_vmult:00000000 double_quat_vmult
     /tmp/cc4itA5Q.s:1045   .text.double_quat_vmult:00000214 $d
     /tmp/cc4itA5Q.s:1050   .text.double_rmat_inv:00000000 $t
     /tmp/cc4itA5Q.s:1055   .text.double_rmat_inv:00000000 double_rmat_inv
     /tmp/cc4itA5Q.s:1086   .text.double_rmat_comp:00000000 $t
     /tmp/cc4itA5Q.s:1091   .text.double_rmat_comp:00000000 double_rmat_comp
     /tmp/cc4itA5Q.s:1441   .text.double_rmat_vmult:00000000 $t
     /tmp/cc4itA5Q.s:1446   .text.double_rmat_vmult:00000000 double_rmat_vmult
     /tmp/cc4itA5Q.s:1582   .text.double_rmat_of_quat:00000000 $t
     /tmp/cc4itA5Q.s:1587   .text.double_rmat_of_quat:00000000 double_rmat_of_quat
     /tmp/cc4itA5Q.s:1840   .text.double_rmat_of_quat:00000188 $d
                     .debug_frame:00000010 $d
     /tmp/cc4itA5Q.s:1846   .text.double_rmat_of_quat:00000194 $t
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.stdint.h.10.d0f8e374834fcfc2e296d5d5fe82f02a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.math.h.35.6ddd393aa87bd6f6206738d11f2687bd
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_algebra_float.h.32.544614e70075e1ed5693f00f6a441312
                           .group:00000000 wm4.pprz_algebra_double.h.91.82ca62ae962f4b4f295322d977f2dad5

UNDEFINED SYMBOLS
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
sin
cos
atan2
asin
