   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"pprz_geodetic_float.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_dadd
  22              		.global	__aeabi_d2f
  23              		.section	.text.isometric_latitude_fast_f,"ax",%progbits
  24              		.align	1
  25              		.thumb
  26              		.thumb_func
  28              	isometric_latitude_fast_f:
  29              	.LFB55:
  30              		.file 1 "math/pprz_geodetic_float.c"
   1:math/pprz_geodetic_float.c **** /*
   2:math/pprz_geodetic_float.c ****  * Copyright (C) 2008-2014 The Paparazzi Team
   3:math/pprz_geodetic_float.c ****  *
   4:math/pprz_geodetic_float.c ****  * This file is part of paparazzi.
   5:math/pprz_geodetic_float.c ****  *
   6:math/pprz_geodetic_float.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:math/pprz_geodetic_float.c ****  * it under the terms of the GNU General Public License as published by
   8:math/pprz_geodetic_float.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:math/pprz_geodetic_float.c ****  * any later version.
  10:math/pprz_geodetic_float.c ****  *
  11:math/pprz_geodetic_float.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:math/pprz_geodetic_float.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:math/pprz_geodetic_float.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:math/pprz_geodetic_float.c ****  * GNU General Public License for more details.
  15:math/pprz_geodetic_float.c ****  *
  16:math/pprz_geodetic_float.c ****  * You should have received a copy of the GNU General Public License
  17:math/pprz_geodetic_float.c ****  * along with paparazzi; see the file COPYING.  If not, see
  18:math/pprz_geodetic_float.c ****  * <http://www.gnu.org/licenses/>.
  19:math/pprz_geodetic_float.c ****  */
  20:math/pprz_geodetic_float.c **** 
  21:math/pprz_geodetic_float.c **** /**
  22:math/pprz_geodetic_float.c ****  * @file pprz_geodetic_float.c
  23:math/pprz_geodetic_float.c ****  * @brief Paparazzi floating point math for geodetic calculations.
  24:math/pprz_geodetic_float.c ****  *
  25:math/pprz_geodetic_float.c ****  *
  26:math/pprz_geodetic_float.c ****  */
  27:math/pprz_geodetic_float.c **** 
  28:math/pprz_geodetic_float.c **** #include "pprz_geodetic_float.h"
  29:math/pprz_geodetic_float.c **** 
  30:math/pprz_geodetic_float.c **** #include "pprz_algebra_float.h"
  31:math/pprz_geodetic_float.c **** #include <math.h>
  32:math/pprz_geodetic_float.c **** 
  33:math/pprz_geodetic_float.c **** /* for ecef_of_XX functions the double versions are needed */
  34:math/pprz_geodetic_float.c **** #include "pprz_geodetic_double.h"
  35:math/pprz_geodetic_float.c **** 
  36:math/pprz_geodetic_float.c **** void ltp_def_from_ecef_f(struct LtpDef_f *def, struct EcefCoor_f *ecef)
  37:math/pprz_geodetic_float.c **** {
  38:math/pprz_geodetic_float.c **** 
  39:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane       */
  40:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
  41:math/pprz_geodetic_float.c ****   /* compute the lla representation of the origin */
  42:math/pprz_geodetic_float.c ****   lla_of_ecef_f(&def->lla, &def->ecef);
  43:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
  44:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
  45:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
  46:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
  47:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  49:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  50:math/pprz_geodetic_float.c ****   /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_system#From_ECEF_to_ENU */
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
  53:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
  54:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  55:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
  56:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
  57:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  58:math/pprz_geodetic_float.c **** 
  59:math/pprz_geodetic_float.c **** }
  60:math/pprz_geodetic_float.c **** 
  61:math/pprz_geodetic_float.c **** void ltp_def_from_lla_f(struct LtpDef_f *def, struct LlaCoor_f *lla)
  62:math/pprz_geodetic_float.c **** {
  63:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane */
  64:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
  65:math/pprz_geodetic_float.c ****   /* compute the ecef representation of the origin */
  66:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&def->ecef, &def->lla);
  67:math/pprz_geodetic_float.c **** 
  68:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
  69:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
  70:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
  71:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
  72:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
  73:math/pprz_geodetic_float.c **** 
  74:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  75:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  76:math/pprz_geodetic_float.c ****   /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_system#From_ECEF_to_ENU */
  77:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
  78:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
  79:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
  80:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  81:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
  82:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
  83:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  84:math/pprz_geodetic_float.c **** }
  85:math/pprz_geodetic_float.c **** 
  86:math/pprz_geodetic_float.c **** void enu_of_ecef_point_f(struct EnuCoor_f *enu, struct LtpDef_f *def, struct EcefCoor_f *ecef)
  87:math/pprz_geodetic_float.c **** {
  88:math/pprz_geodetic_float.c ****   struct EcefCoor_f delta;
  89:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  90:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
  91:math/pprz_geodetic_float.c **** }
  92:math/pprz_geodetic_float.c **** 
  93:math/pprz_geodetic_float.c **** void ned_of_ecef_point_f(struct NedCoor_f *ned, struct LtpDef_f *def, struct EcefCoor_f *ecef)
  94:math/pprz_geodetic_float.c **** {
  95:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
  96:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(&enu, def, ecef);
  97:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
  98:math/pprz_geodetic_float.c **** }
  99:math/pprz_geodetic_float.c **** 
 100:math/pprz_geodetic_float.c **** 
 101:math/pprz_geodetic_float.c **** void enu_of_ecef_vect_f(struct EnuCoor_f *enu, struct LtpDef_f *def, struct EcefCoor_f *ecef)
 102:math/pprz_geodetic_float.c **** {
 103:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
 104:math/pprz_geodetic_float.c **** }
 105:math/pprz_geodetic_float.c **** 
 106:math/pprz_geodetic_float.c **** void ned_of_ecef_vect_f(struct NedCoor_f *ned, struct LtpDef_f *def, struct EcefCoor_f *ecef)
 107:math/pprz_geodetic_float.c **** {
 108:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 109:math/pprz_geodetic_float.c ****   enu_of_ecef_vect_f(&enu, def, ecef);
 110:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 111:math/pprz_geodetic_float.c **** }
 112:math/pprz_geodetic_float.c **** 
 113:math/pprz_geodetic_float.c **** void enu_of_lla_point_f(struct EnuCoor_f *enu, struct LtpDef_f *def, struct LlaCoor_f *lla)
 114:math/pprz_geodetic_float.c **** {
 115:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 116:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef, lla);
 117:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(enu, def, &ecef);
 118:math/pprz_geodetic_float.c **** }
 119:math/pprz_geodetic_float.c **** 
 120:math/pprz_geodetic_float.c **** void ned_of_lla_point_f(struct NedCoor_f *ned, struct LtpDef_f *def, struct LlaCoor_f *lla)
 121:math/pprz_geodetic_float.c **** {
 122:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 123:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef, lla);
 124:math/pprz_geodetic_float.c ****   ned_of_ecef_point_f(ned, def, &ecef);
 125:math/pprz_geodetic_float.c **** }
 126:math/pprz_geodetic_float.c **** 
 127:math/pprz_geodetic_float.c **** /*
 128:math/pprz_geodetic_float.c ****  * not enought precision with float - use double
 129:math/pprz_geodetic_float.c ****  */
 130:math/pprz_geodetic_float.c **** void ecef_of_enu_point_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct EnuCoor_f *enu)
 131:math/pprz_geodetic_float.c **** {
 132:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 133:math/pprz_geodetic_float.c ****   struct DoubleRMat ltp_of_ecef_d;
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 138:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 139:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 140:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 141:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 142:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 143:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 144:math/pprz_geodetic_float.c ****   enu_d.x = (double) enu->x;
 145:math/pprz_geodetic_float.c ****   enu_d.y = (double) enu->y;
 146:math/pprz_geodetic_float.c ****   enu_d.z = (double) enu->z;
 147:math/pprz_geodetic_float.c **** 
 148:math/pprz_geodetic_float.c ****   /* compute in double */
 149:math/pprz_geodetic_float.c ****   struct EcefCoor_d ecef_d;
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 151:math/pprz_geodetic_float.c **** 
 152:math/pprz_geodetic_float.c ****   /* convert result back to float and add it*/
 153:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x + def->ecef.x;
 154:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 155:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 156:math/pprz_geodetic_float.c **** }
 157:math/pprz_geodetic_float.c **** 
 158:math/pprz_geodetic_float.c **** void ecef_of_ned_point_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct NedCoor_f *ned)
 159:math/pprz_geodetic_float.c **** {
 160:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 161:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 162:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 163:math/pprz_geodetic_float.c **** }
 164:math/pprz_geodetic_float.c **** 
 165:math/pprz_geodetic_float.c **** void ecef_of_enu_vect_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct EnuCoor_f *enu)
 166:math/pprz_geodetic_float.c **** {
 167:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 168:math/pprz_geodetic_float.c ****   struct DoubleRMat ltp_of_ecef_d;
 169:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 170:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 171:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 172:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 173:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 174:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 175:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 176:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 177:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 178:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 179:math/pprz_geodetic_float.c ****   enu_d.x = (double) enu->x;
 180:math/pprz_geodetic_float.c ****   enu_d.y = (double) enu->y;
 181:math/pprz_geodetic_float.c ****   enu_d.z = (double) enu->z;
 182:math/pprz_geodetic_float.c **** 
 183:math/pprz_geodetic_float.c ****   /* compute in double */
 184:math/pprz_geodetic_float.c ****   struct EcefCoor_d ecef_d;
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 186:math/pprz_geodetic_float.c **** 
 187:math/pprz_geodetic_float.c ****   /* convert result back to float*/
 188:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x;
 189:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 190:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 191:math/pprz_geodetic_float.c **** }
 192:math/pprz_geodetic_float.c **** 
 193:math/pprz_geodetic_float.c **** void ecef_of_ned_vect_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct NedCoor_f *ned)
 194:math/pprz_geodetic_float.c **** {
 195:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 196:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 197:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 198:math/pprz_geodetic_float.c **** }
 199:math/pprz_geodetic_float.c **** /* end use double versions */
 200:math/pprz_geodetic_float.c **** 
 201:math/pprz_geodetic_float.c **** 
 202:math/pprz_geodetic_float.c **** 
 203:math/pprz_geodetic_float.c **** 
 204:math/pprz_geodetic_float.c **** /* http://en.wikipedia.org/wiki/Geodetic_system */
 205:math/pprz_geodetic_float.c **** void lla_of_ecef_f(struct LlaCoor_f *out, struct EcefCoor_f *in)
 206:math/pprz_geodetic_float.c **** {
 207:math/pprz_geodetic_float.c **** 
 208:math/pprz_geodetic_float.c ****   // FIXME : make an ellipsoid struct
 209:math/pprz_geodetic_float.c ****   static const float a = 6378137.0;           /* earth semimajor axis in meters */
 210:math/pprz_geodetic_float.c ****   static const float f = 1. / 298.257223563;  /* reciprocal flattening          */
 211:math/pprz_geodetic_float.c ****   const float b = a * (1. - f);               /* semi-minor axis                */
 212:math/pprz_geodetic_float.c ****   const float b2 = b * b;
 213:math/pprz_geodetic_float.c **** 
 214:math/pprz_geodetic_float.c ****   const float e2 = 2.*f - (f * f);            /* first eccentricity squared     */
 215:math/pprz_geodetic_float.c ****   const float ep2 = f * (2. - f) / ((1. - f) * (1. - f)); /* second eccentricity squared    */
 216:math/pprz_geodetic_float.c ****   const float E2 = a * a - b2;
 217:math/pprz_geodetic_float.c **** 
 218:math/pprz_geodetic_float.c **** 
 219:math/pprz_geodetic_float.c ****   const float z2 = in->z * in->z;
 220:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 221:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 222:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 224:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 225:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 226:math/pprz_geodetic_float.c ****   const float s1 = 1 + s + 1 / s;
 227:math/pprz_geodetic_float.c ****   const float P = F / (3 * s1 * s1 * G * G);
 228:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 229:math/pprz_geodetic_float.c ****   const float ro = -(e2 * P * r) / (1 + Q) + sqrtf((a * a / 2) * (1 + 1 / Q) - ((1 - e2) * P * z2) 
 230:math/pprz_geodetic_float.c ****                    (1 + Q)) - P * r2 / 2);
 231:math/pprz_geodetic_float.c ****   const float tmp = (r - e2 * ro) * (r - e2 * ro);
 232:math/pprz_geodetic_float.c ****   const float U = sqrtf(tmp + z2);
 233:math/pprz_geodetic_float.c ****   const float V = sqrtf(tmp + (1 - e2) * z2);
 234:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 235:math/pprz_geodetic_float.c **** 
 236:math/pprz_geodetic_float.c ****   out->alt = U * (1 - b2 / (a * V));
 237:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 238:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 239:math/pprz_geodetic_float.c **** 
 240:math/pprz_geodetic_float.c **** }
 241:math/pprz_geodetic_float.c **** 
 242:math/pprz_geodetic_float.c **** void ecef_of_lla_f(struct EcefCoor_f *out, struct LlaCoor_f *in)
 243:math/pprz_geodetic_float.c **** {
 244:math/pprz_geodetic_float.c **** 
 245:math/pprz_geodetic_float.c ****   // FIXME : make an ellipsoid struct
 246:math/pprz_geodetic_float.c ****   static const float a = 6378137.0;           /* earth semimajor axis in meters */
 247:math/pprz_geodetic_float.c ****   static const float f = 1. / 298.257223563;  /* reciprocal flattening          */
 248:math/pprz_geodetic_float.c ****   const float e2 = 2.*f - (f * f);            /* first eccentricity squared     */
 249:math/pprz_geodetic_float.c **** 
 250:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 251:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 252:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 253:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 254:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2 * sin_lat * sin_lat);
 255:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 256:math/pprz_geodetic_float.c **** 
 257:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 258:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 259:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 260:math/pprz_geodetic_float.c **** }
 261:math/pprz_geodetic_float.c **** 
 262:math/pprz_geodetic_float.c **** 
 263:math/pprz_geodetic_float.c **** 
 264:math/pprz_geodetic_float.c **** 
 265:math/pprz_geodetic_float.c **** #include "math/pprz_geodetic_utm.h"
 266:math/pprz_geodetic_float.c **** 
 267:math/pprz_geodetic_float.c **** struct complex { float re; float im; };
 268:math/pprz_geodetic_float.c **** #define CScal(k, z) { z.re *= k;  z.im *= k; }
 269:math/pprz_geodetic_float.c **** #define CAdd(z1, z2) { z2.re += z1.re;  z2.im += z1.im; }
 270:math/pprz_geodetic_float.c **** #define CSub(z1, z2) { z2.re -= z1.re;  z2.im -= z1.im; }
 271:math/pprz_geodetic_float.c **** #define CI(z) { float tmp = z.re; z.re = - z.im; z.im = tmp; }
 272:math/pprz_geodetic_float.c **** #define CExp(z) { float e = exp(z.re); z.re = e*cos(z.im); z.im = e*sin(z.im); }
 273:math/pprz_geodetic_float.c **** /* Expanded #define CSin(z) { CI(z); struct complex _z = {-z.re, -z.im}; CExp(z); CExp(_z); CSub(_z
 274:math/pprz_geodetic_float.c **** 
 275:math/pprz_geodetic_float.c **** #define CSin(z) { CI(z); struct complex _z = {-z.re, -z.im}; float e = exp(z.re); float cos_z_im = 
 276:math/pprz_geodetic_float.c **** 
 277:math/pprz_geodetic_float.c **** 
 278:math/pprz_geodetic_float.c **** static inline float isometric_latitude_f(float phi, float e)
 279:math/pprz_geodetic_float.c **** {
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 281:math/pprz_geodetic_float.c **** }
 282:math/pprz_geodetic_float.c **** 
 283:math/pprz_geodetic_float.c **** static inline float isometric_latitude_fast_f(float phi)
 284:math/pprz_geodetic_float.c **** {
  31              		.loc 1 284 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36 0000 08B5     		push	{r3, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 285:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0));
  40              		.loc 1 285 0
  41 0002 10EE100A 		fmrs	r0, s0
  42 0006 FFF7FEFF 		bl	__aeabi_f2d
  43              	.LVL1:
  44 000a 0022     		movs	r2, #0
  45 000c 0A4B     		ldr	r3, .L2+8
  46 000e FFF7FEFF 		bl	__aeabi_dmul
  47              	.LVL2:
  48 0012 07A3     		adr	r3, .L2
  49 0014 D3E90023 		ldrd	r2, [r3]
  50 0018 FFF7FEFF 		bl	__aeabi_dadd
  51              	.LVL3:
  52 001c FFF7FEFF 		bl	tan
  53              	.LVL4:
  54 0020 FFF7FEFF 		bl	log
  55              	.LVL5:
  56 0024 FFF7FEFF 		bl	__aeabi_d2f
  57              	.LVL6:
 286:math/pprz_geodetic_float.c **** }
  58              		.loc 1 286 0
  59 0028 00EE100A 		fmsr	s0, r0
  60 002c 08BD     		pop	{r3, pc}
  61              	.L3:
  62 002e 00BF     		.align	3
  63              	.L2:
  64 0030 182D4454 		.word	1413754136
  65 0034 FB21E93F 		.word	1072243195
  66 0038 0000E03F 		.word	1071644672
  67              		.cfi_endproc
  68              	.LFE55:
  70 003c AFF30080 		.section	.text.enu_of_ecef_point_f,"ax",%progbits
  71              		.align	1
  72              		.global	enu_of_ecef_point_f
  73              		.thumb
  74              		.thumb_func
  76              	enu_of_ecef_point_f:
  77              	.LFB42:
  87:math/pprz_geodetic_float.c **** {
  78              		.loc 1 87 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL7:
  89:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  84              		.loc 1 89 0
  85 0000 D1ED007A 		flds	s15, [r1]
  86 0004 92ED006A 		flds	s12, [r2]
  87 0008 92ED017A 		flds	s14, [r2, #4]
  88 000c D2ED026A 		flds	s13, [r2, #8]
  90:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
  89              		.loc 1 90 0
  90 0010 D1ED065A 		flds	s11, [r1, #24]
  89:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  91              		.loc 1 89 0
  92 0014 36EE676A 		fsubs	s12, s12, s15
  93              	.LVL8:
  94 0018 D1ED017A 		flds	s15, [r1, #4]
  95 001c 77EE677A 		fsubs	s15, s14, s15
  96              	.LVL9:
  97 0020 91ED027A 		flds	s14, [r1, #8]
  98 0024 76EEC76A 		fsubs	s13, s13, s14
  99              	.LVL10:
  90:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
 100              		.loc 1 90 0
 101 0028 91ED077A 		flds	s14, [r1, #28]
 102 002c 27EE877A 		fmuls	s14, s15, s14
 103 0030 A5EE867A 		vfma.f32	s14, s11, s12
 104 0034 D1ED085A 		flds	s11, [r1, #32]
 105 0038 A5EEA67A 		vfma.f32	s14, s11, s13
 106 003c D1ED095A 		flds	s11, [r1, #36]
 107 0040 80ED007A 		fsts	s14, [r0]
 108 0044 91ED0A7A 		flds	s14, [r1, #40]
 109 0048 27EE877A 		fmuls	s14, s15, s14
 110 004c A5EE867A 		vfma.f32	s14, s11, s12
 111 0050 D1ED0B5A 		flds	s11, [r1, #44]
 112 0054 A5EEA67A 		vfma.f32	s14, s11, s13
 113 0058 80ED017A 		fsts	s14, [r0, #4]
 114 005c 91ED0D7A 		flds	s14, [r1, #52]
 115 0060 67EE877A 		fmuls	s15, s15, s14
 116              	.LVL11:
 117 0064 91ED0C7A 		flds	s14, [r1, #48]
 118 0068 E7EE067A 		vfma.f32	s15, s14, s12
 119 006c 91ED0E7A 		flds	s14, [r1, #56]
 120 0070 E7EE267A 		vfma.f32	s15, s14, s13
 121 0074 C0ED027A 		fsts	s15, [r0, #8]
 122 0078 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE42:
 126              		.section	.text.ned_of_ecef_point_f,"ax",%progbits
 127              		.align	1
 128              		.global	ned_of_ecef_point_f
 129              		.thumb
 130              		.thumb_func
 132              	ned_of_ecef_point_f:
 133              	.LFB43:
  94:math/pprz_geodetic_float.c **** {
 134              		.loc 1 94 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL12:
 139 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 140              		.cfi_def_cfa_offset 24
 141              		.cfi_offset 0, -24
 142              		.cfi_offset 1, -20
 143              		.cfi_offset 2, -16
 144              		.cfi_offset 3, -12
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
  94:math/pprz_geodetic_float.c **** {
 147              		.loc 1 94 0
 148 0002 0446     		mov	r4, r0
  96:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(&enu, def, ecef);
 149              		.loc 1 96 0
 150 0004 01A8     		add	r0, sp, #4
 151              	.LVL13:
 152 0006 FFF7FEFF 		bl	enu_of_ecef_point_f
 153              	.LVL14:
  97:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 154              		.loc 1 97 0
 155 000a 029B     		ldr	r3, [sp, #8]	@ float
 156 000c DDED037A 		flds	s15, [sp, #12]
 157 0010 2360     		str	r3, [r4]	@ float
 158 0012 019B     		ldr	r3, [sp, #4]	@ float
 159 0014 6360     		str	r3, [r4, #4]	@ float
 160 0016 F1EE677A 		fnegs	s15, s15
 161 001a C4ED027A 		fsts	s15, [r4, #8]
  98:math/pprz_geodetic_float.c **** }
 162              		.loc 1 98 0
 163 001e 04B0     		add	sp, sp, #16
 164              		@ sp needed
 165 0020 10BD     		pop	{r4, pc}
 166              		.cfi_endproc
 167              	.LFE43:
 169              		.section	.text.enu_of_ecef_vect_f,"ax",%progbits
 170              		.align	1
 171              		.global	enu_of_ecef_vect_f
 172              		.thumb
 173              		.thumb_func
 175              	enu_of_ecef_vect_f:
 176              	.LFB44:
 102:math/pprz_geodetic_float.c **** {
 177              		.loc 1 102 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182              	.LVL15:
 103:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
 183              		.loc 1 103 0
 184 0000 D2ED017A 		flds	s15, [r2, #4]
 185 0004 91ED077A 		flds	s14, [r1, #28]
 186 0008 92ED006A 		flds	s12, [r2]
 187 000c D1ED065A 		flds	s11, [r1, #24]
 188 0010 D2ED026A 		flds	s13, [r2, #8]
 189 0014 27EE877A 		fmuls	s14, s15, s14
 190 0018 A5EE867A 		vfma.f32	s14, s11, s12
 191 001c D1ED085A 		flds	s11, [r1, #32]
 192 0020 A5EEA67A 		vfma.f32	s14, s11, s13
 193 0024 D1ED095A 		flds	s11, [r1, #36]
 194 0028 80ED007A 		fsts	s14, [r0]
 195 002c 91ED0A7A 		flds	s14, [r1, #40]
 196 0030 27EE877A 		fmuls	s14, s15, s14
 197 0034 A5EE867A 		vfma.f32	s14, s11, s12
 198 0038 D1ED0B5A 		flds	s11, [r1, #44]
 199 003c A5EEA67A 		vfma.f32	s14, s11, s13
 200 0040 80ED017A 		fsts	s14, [r0, #4]
 201 0044 91ED0D7A 		flds	s14, [r1, #52]
 202 0048 67EE877A 		fmuls	s15, s15, s14
 203 004c 91ED0C7A 		flds	s14, [r1, #48]
 204 0050 E7EE067A 		vfma.f32	s15, s14, s12
 205 0054 91ED0E7A 		flds	s14, [r1, #56]
 206 0058 E7EE267A 		vfma.f32	s15, s14, s13
 207 005c C0ED027A 		fsts	s15, [r0, #8]
 208 0060 7047     		bx	lr
 209              		.cfi_endproc
 210              	.LFE44:
 212              		.section	.text.ned_of_ecef_vect_f,"ax",%progbits
 213              		.align	1
 214              		.global	ned_of_ecef_vect_f
 215              		.thumb
 216              		.thumb_func
 218              	ned_of_ecef_vect_f:
 219              	.LFB45:
 107:math/pprz_geodetic_float.c **** {
 220              		.loc 1 107 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 16
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              	.LVL16:
 225 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 226              		.cfi_def_cfa_offset 24
 227              		.cfi_offset 0, -24
 228              		.cfi_offset 1, -20
 229              		.cfi_offset 2, -16
 230              		.cfi_offset 3, -12
 231              		.cfi_offset 4, -8
 232              		.cfi_offset 14, -4
 107:math/pprz_geodetic_float.c **** {
 233              		.loc 1 107 0
 234 0002 0446     		mov	r4, r0
 109:math/pprz_geodetic_float.c ****   enu_of_ecef_vect_f(&enu, def, ecef);
 235              		.loc 1 109 0
 236 0004 01A8     		add	r0, sp, #4
 237              	.LVL17:
 238 0006 FFF7FEFF 		bl	enu_of_ecef_vect_f
 239              	.LVL18:
 110:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 240              		.loc 1 110 0
 241 000a 029B     		ldr	r3, [sp, #8]	@ float
 242 000c DDED037A 		flds	s15, [sp, #12]
 243 0010 2360     		str	r3, [r4]	@ float
 244 0012 019B     		ldr	r3, [sp, #4]	@ float
 245 0014 6360     		str	r3, [r4, #4]	@ float
 246 0016 F1EE677A 		fnegs	s15, s15
 247 001a C4ED027A 		fsts	s15, [r4, #8]
 111:math/pprz_geodetic_float.c **** }
 248              		.loc 1 111 0
 249 001e 04B0     		add	sp, sp, #16
 250              		@ sp needed
 251 0020 10BD     		pop	{r4, pc}
 252              		.cfi_endproc
 253              	.LFE45:
 255              		.section	.text.ecef_of_enu_point_f,"ax",%progbits
 256              		.align	1
 257              		.global	ecef_of_enu_point_f
 258              		.thumb
 259              		.thumb_func
 261              	ecef_of_enu_point_f:
 262              	.LFB48:
 131:math/pprz_geodetic_float.c **** {
 263              		.loc 1 131 0
 264              		.cfi_startproc
 265              		@ args = 0, pretend = 0, frame = 16
 266              		@ frame_needed = 0, uses_anonymous_args = 0
 267              	.LVL19:
 268 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 269              		.cfi_def_cfa_offset 36
 270              		.cfi_offset 4, -36
 271              		.cfi_offset 5, -32
 272              		.cfi_offset 6, -28
 273              		.cfi_offset 7, -24
 274              		.cfi_offset 8, -20
 275              		.cfi_offset 9, -16
 276              		.cfi_offset 10, -12
 277              		.cfi_offset 11, -8
 278              		.cfi_offset 14, -4
 279 0004 8146     		mov	r9, r0
 280 0006 85B0     		sub	sp, sp, #20
 281              		.cfi_def_cfa_offset 56
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 282              		.loc 1 150 0
 283 0008 1068     		ldr	r0, [r2]	@ float
 284              	.LVL20:
 131:math/pprz_geodetic_float.c **** {
 285              		.loc 1 131 0
 286 000a 8846     		mov	r8, r1
 287              	.LVL21:
 288 000c 1446     		mov	r4, r2
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 289              		.loc 1 150 0
 290 000e FFF7FEFF 		bl	__aeabi_f2d
 291              	.LVL22:
 292 0012 0646     		mov	r6, r0
 293 0014 6068     		ldr	r0, [r4, #4]	@ float
 294              	.LVL23:
 295 0016 0F46     		mov	r7, r1
 296 0018 FFF7FEFF 		bl	__aeabi_f2d
 297              	.LVL24:
 298 001c 8246     		mov	r10, r0
 299 001e A068     		ldr	r0, [r4, #8]	@ float
 300              	.LVL25:
 301 0020 8B46     		mov	fp, r1
 302 0022 FFF7FEFF 		bl	__aeabi_f2d
 303              	.LVL26:
 304 0026 CDE90001 		strd	r0, [sp]
 305              	.LVL27:
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 306              		.loc 1 135 0
 307 002a D8F81C00 		ldr	r0, [r8, #28]	@ float
 308              	.LVL28:
 309 002e FFF7FEFF 		bl	__aeabi_f2d
 310              	.LVL29:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 311              		.loc 1 150 0
 312 0032 3246     		mov	r2, r6
 313 0034 3B46     		mov	r3, r7
 314 0036 FFF7FEFF 		bl	__aeabi_dmul
 315              	.LVL30:
 316 003a 0446     		mov	r4, r0
 317              	.LVL31:
 138:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 318              		.loc 1 138 0
 319 003c D8F82800 		ldr	r0, [r8, #40]	@ float
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 320              		.loc 1 150 0
 321 0040 0D46     		mov	r5, r1
 138:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 322              		.loc 1 138 0
 323 0042 FFF7FEFF 		bl	__aeabi_f2d
 324              	.LVL32:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 325              		.loc 1 150 0
 326 0046 5246     		mov	r2, r10
 327 0048 5B46     		mov	r3, fp
 328 004a FFF7FEFF 		bl	__aeabi_dmul
 329              	.LVL33:
 330 004e 0246     		mov	r2, r0
 331 0050 0B46     		mov	r3, r1
 332 0052 2046     		mov	r0, r4
 333 0054 2946     		mov	r1, r5
 334 0056 FFF7FEFF 		bl	__aeabi_dadd
 335              	.LVL34:
 336 005a 0446     		mov	r4, r0
 141:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 337              		.loc 1 141 0
 338 005c D8F83400 		ldr	r0, [r8, #52]	@ float
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 339              		.loc 1 150 0
 340 0060 0D46     		mov	r5, r1
 141:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 341              		.loc 1 141 0
 342 0062 FFF7FEFF 		bl	__aeabi_f2d
 343              	.LVL35:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 344              		.loc 1 150 0
 345 0066 DDE90023 		ldrd	r2, [sp]
 346 006a FFF7FEFF 		bl	__aeabi_dmul
 347              	.LVL36:
 348 006e 0246     		mov	r2, r0
 349 0070 0B46     		mov	r3, r1
 350 0072 2046     		mov	r0, r4
 351 0074 2946     		mov	r1, r5
 352 0076 FFF7FEFF 		bl	__aeabi_dadd
 353              	.LVL37:
 354 007a CDE90201 		strd	r0, [sp, #8]
 355              	.LVL38:
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 356              		.loc 1 136 0
 357 007e D8F82000 		ldr	r0, [r8, #32]	@ float
 358              	.LVL39:
 359 0082 FFF7FEFF 		bl	__aeabi_f2d
 360              	.LVL40:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 361              		.loc 1 150 0
 362 0086 3246     		mov	r2, r6
 363 0088 3B46     		mov	r3, r7
 364 008a FFF7FEFF 		bl	__aeabi_dmul
 365              	.LVL41:
 366 008e 0446     		mov	r4, r0
 139:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 367              		.loc 1 139 0
 368 0090 D8F82C00 		ldr	r0, [r8, #44]	@ float
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 369              		.loc 1 150 0
 370 0094 0D46     		mov	r5, r1
 139:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 371              		.loc 1 139 0
 372 0096 FFF7FEFF 		bl	__aeabi_f2d
 373              	.LVL42:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 374              		.loc 1 150 0
 375 009a 5246     		mov	r2, r10
 376 009c 5B46     		mov	r3, fp
 377 009e FFF7FEFF 		bl	__aeabi_dmul
 378              	.LVL43:
 379 00a2 0246     		mov	r2, r0
 380 00a4 0B46     		mov	r3, r1
 381 00a6 2046     		mov	r0, r4
 382 00a8 2946     		mov	r1, r5
 383 00aa FFF7FEFF 		bl	__aeabi_dadd
 384              	.LVL44:
 385 00ae 0446     		mov	r4, r0
 142:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 386              		.loc 1 142 0
 387 00b0 D8F83800 		ldr	r0, [r8, #56]	@ float
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 388              		.loc 1 150 0
 389 00b4 0D46     		mov	r5, r1
 142:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 390              		.loc 1 142 0
 391 00b6 FFF7FEFF 		bl	__aeabi_f2d
 392              	.LVL45:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 393              		.loc 1 150 0
 394 00ba DDE90023 		ldrd	r2, [sp]
 395 00be FFF7FEFF 		bl	__aeabi_dmul
 396              	.LVL46:
 397 00c2 0246     		mov	r2, r0
 398 00c4 0B46     		mov	r3, r1
 399 00c6 2046     		mov	r0, r4
 400 00c8 2946     		mov	r1, r5
 401 00ca FFF7FEFF 		bl	__aeabi_dadd
 402              	.LVL47:
 403 00ce 0446     		mov	r4, r0
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 404              		.loc 1 134 0
 405 00d0 D8F81800 		ldr	r0, [r8, #24]	@ float
 406              	.LVL48:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 407              		.loc 1 150 0
 408 00d4 0D46     		mov	r5, r1
 409              	.LVL49:
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 410              		.loc 1 134 0
 411 00d6 FFF7FEFF 		bl	__aeabi_f2d
 412              	.LVL50:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 413              		.loc 1 150 0
 414 00da 3246     		mov	r2, r6
 415 00dc 3B46     		mov	r3, r7
 416 00de FFF7FEFF 		bl	__aeabi_dmul
 417              	.LVL51:
 418 00e2 0646     		mov	r6, r0
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 419              		.loc 1 137 0
 420 00e4 D8F82400 		ldr	r0, [r8, #36]	@ float
 421              	.LVL52:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 422              		.loc 1 150 0
 423 00e8 0F46     		mov	r7, r1
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 424              		.loc 1 137 0
 425 00ea FFF7FEFF 		bl	__aeabi_f2d
 426              	.LVL53:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 427              		.loc 1 150 0
 428 00ee 5246     		mov	r2, r10
 429 00f0 5B46     		mov	r3, fp
 430 00f2 FFF7FEFF 		bl	__aeabi_dmul
 431              	.LVL54:
 432 00f6 0246     		mov	r2, r0
 433 00f8 0B46     		mov	r3, r1
 434 00fa 3046     		mov	r0, r6
 435 00fc 3946     		mov	r1, r7
 436 00fe FFF7FEFF 		bl	__aeabi_dadd
 437              	.LVL55:
 438 0102 0646     		mov	r6, r0
 140:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 439              		.loc 1 140 0
 440 0104 D8F83000 		ldr	r0, [r8, #48]	@ float
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 441              		.loc 1 150 0
 442 0108 0F46     		mov	r7, r1
 140:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 443              		.loc 1 140 0
 444 010a FFF7FEFF 		bl	__aeabi_f2d
 445              	.LVL56:
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 446              		.loc 1 150 0
 447 010e DDE90023 		ldrd	r2, [sp]
 448 0112 FFF7FEFF 		bl	__aeabi_dmul
 449              	.LVL57:
 450 0116 0246     		mov	r2, r0
 451 0118 0B46     		mov	r3, r1
 452 011a 3046     		mov	r0, r6
 453 011c 3946     		mov	r1, r7
 454 011e FFF7FEFF 		bl	__aeabi_dadd
 455              	.LVL58:
 153:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x + def->ecef.x;
 456              		.loc 1 153 0
 457 0122 FFF7FEFF 		bl	__aeabi_d2f
 458              	.LVL59:
 459 0126 D8ED007A 		flds	s15, [r8]
 460 012a 07EE100A 		fmsr	s14, r0
 461 012e 77EE277A 		fadds	s15, s14, s15
 462 0132 C9ED007A 		fsts	s15, [r9]
 154:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 463              		.loc 1 154 0
 464 0136 DDE90201 		ldrd	r0, [sp, #8]
 465 013a FFF7FEFF 		bl	__aeabi_d2f
 466              	.LVL60:
 467 013e D8ED017A 		flds	s15, [r8, #4]
 468 0142 07EE100A 		fmsr	s14, r0
 469 0146 77EE277A 		fadds	s15, s14, s15
 155:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 470              		.loc 1 155 0
 471 014a 2046     		mov	r0, r4
 154:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 472              		.loc 1 154 0
 473 014c C9ED017A 		fsts	s15, [r9, #4]
 155:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 474              		.loc 1 155 0
 475 0150 2946     		mov	r1, r5
 476 0152 FFF7FEFF 		bl	__aeabi_d2f
 477              	.LVL61:
 478 0156 D8ED027A 		flds	s15, [r8, #8]
 479 015a 07EE100A 		fmsr	s14, r0
 480 015e 77EE277A 		fadds	s15, s14, s15
 481 0162 C9ED027A 		fsts	s15, [r9, #8]
 156:math/pprz_geodetic_float.c **** }
 482              		.loc 1 156 0
 483 0166 05B0     		add	sp, sp, #20
 484              		@ sp needed
 485 0168 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 486              		.cfi_endproc
 487              	.LFE48:
 489              		.section	.text.ecef_of_ned_point_f,"ax",%progbits
 490              		.align	1
 491              		.global	ecef_of_ned_point_f
 492              		.thumb
 493              		.thumb_func
 495              	ecef_of_ned_point_f:
 496              	.LFB49:
 159:math/pprz_geodetic_float.c **** {
 497              		.loc 1 159 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 16
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL62:
 502 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 503              		.cfi_def_cfa_offset 24
 504              		.cfi_offset 0, -24
 505              		.cfi_offset 1, -20
 506              		.cfi_offset 2, -16
 507              		.cfi_offset 3, -12
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 161:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 510              		.loc 1 161 0
 511 0002 D2ED027A 		flds	s15, [r2, #8]
 512 0006 5368     		ldr	r3, [r2, #4]	@ float
 513 0008 0193     		str	r3, [sp, #4]	@ float
 514 000a F1EE677A 		fnegs	s15, s15
 515 000e 1368     		ldr	r3, [r2]	@ float
 516 0010 0293     		str	r3, [sp, #8]	@ float
 162:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 517              		.loc 1 162 0
 518 0012 01AA     		add	r2, sp, #4
 519              	.LVL63:
 161:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 520              		.loc 1 161 0
 521 0014 CDED037A 		fsts	s15, [sp, #12]
 162:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 522              		.loc 1 162 0
 523 0018 FFF7FEFF 		bl	ecef_of_enu_point_f
 524              	.LVL64:
 163:math/pprz_geodetic_float.c **** }
 525              		.loc 1 163 0
 526 001c 05B0     		add	sp, sp, #20
 527              		@ sp needed
 528 001e 5DF804FB 		ldr	pc, [sp], #4
 529              		.cfi_endproc
 530              	.LFE49:
 532              		.section	.text.ecef_of_enu_vect_f,"ax",%progbits
 533              		.align	1
 534              		.global	ecef_of_enu_vect_f
 535              		.thumb
 536              		.thumb_func
 538              	ecef_of_enu_vect_f:
 539              	.LFB50:
 166:math/pprz_geodetic_float.c **** {
 540              		.loc 1 166 0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 16
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544              	.LVL65:
 545 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 546              		.cfi_def_cfa_offset 36
 547              		.cfi_offset 4, -36
 548              		.cfi_offset 5, -32
 549              		.cfi_offset 6, -28
 550              		.cfi_offset 7, -24
 551              		.cfi_offset 8, -20
 552              		.cfi_offset 9, -16
 553              		.cfi_offset 10, -12
 554              		.cfi_offset 11, -8
 555              		.cfi_offset 14, -4
 556 0004 8146     		mov	r9, r0
 557 0006 85B0     		sub	sp, sp, #20
 558              		.cfi_def_cfa_offset 56
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 559              		.loc 1 185 0
 560 0008 1068     		ldr	r0, [r2]	@ float
 561              	.LVL66:
 166:math/pprz_geodetic_float.c **** {
 562              		.loc 1 166 0
 563 000a 8846     		mov	r8, r1
 564              	.LVL67:
 565 000c 1446     		mov	r4, r2
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 566              		.loc 1 185 0
 567 000e FFF7FEFF 		bl	__aeabi_f2d
 568              	.LVL68:
 569 0012 0646     		mov	r6, r0
 570 0014 6068     		ldr	r0, [r4, #4]	@ float
 571              	.LVL69:
 572 0016 0F46     		mov	r7, r1
 573 0018 FFF7FEFF 		bl	__aeabi_f2d
 574              	.LVL70:
 575 001c 8246     		mov	r10, r0
 576 001e A068     		ldr	r0, [r4, #8]	@ float
 577              	.LVL71:
 578 0020 8B46     		mov	fp, r1
 579 0022 FFF7FEFF 		bl	__aeabi_f2d
 580              	.LVL72:
 581 0026 CDE90001 		strd	r0, [sp]
 582              	.LVL73:
 170:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 583              		.loc 1 170 0
 584 002a D8F81C00 		ldr	r0, [r8, #28]	@ float
 585              	.LVL74:
 586 002e FFF7FEFF 		bl	__aeabi_f2d
 587              	.LVL75:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 588              		.loc 1 185 0
 589 0032 3246     		mov	r2, r6
 590 0034 3B46     		mov	r3, r7
 591 0036 FFF7FEFF 		bl	__aeabi_dmul
 592              	.LVL76:
 593 003a 0446     		mov	r4, r0
 594              	.LVL77:
 173:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 595              		.loc 1 173 0
 596 003c D8F82800 		ldr	r0, [r8, #40]	@ float
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 597              		.loc 1 185 0
 598 0040 0D46     		mov	r5, r1
 173:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 599              		.loc 1 173 0
 600 0042 FFF7FEFF 		bl	__aeabi_f2d
 601              	.LVL78:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 602              		.loc 1 185 0
 603 0046 5246     		mov	r2, r10
 604 0048 5B46     		mov	r3, fp
 605 004a FFF7FEFF 		bl	__aeabi_dmul
 606              	.LVL79:
 607 004e 0246     		mov	r2, r0
 608 0050 0B46     		mov	r3, r1
 609 0052 2046     		mov	r0, r4
 610 0054 2946     		mov	r1, r5
 611 0056 FFF7FEFF 		bl	__aeabi_dadd
 612              	.LVL80:
 613 005a 0446     		mov	r4, r0
 176:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 614              		.loc 1 176 0
 615 005c D8F83400 		ldr	r0, [r8, #52]	@ float
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 616              		.loc 1 185 0
 617 0060 0D46     		mov	r5, r1
 176:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 618              		.loc 1 176 0
 619 0062 FFF7FEFF 		bl	__aeabi_f2d
 620              	.LVL81:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 621              		.loc 1 185 0
 622 0066 DDE90023 		ldrd	r2, [sp]
 623 006a FFF7FEFF 		bl	__aeabi_dmul
 624              	.LVL82:
 625 006e 0246     		mov	r2, r0
 626 0070 0B46     		mov	r3, r1
 627 0072 2046     		mov	r0, r4
 628 0074 2946     		mov	r1, r5
 629 0076 FFF7FEFF 		bl	__aeabi_dadd
 630              	.LVL83:
 631 007a CDE90201 		strd	r0, [sp, #8]
 632              	.LVL84:
 171:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 633              		.loc 1 171 0
 634 007e D8F82000 		ldr	r0, [r8, #32]	@ float
 635              	.LVL85:
 636 0082 FFF7FEFF 		bl	__aeabi_f2d
 637              	.LVL86:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 638              		.loc 1 185 0
 639 0086 3246     		mov	r2, r6
 640 0088 3B46     		mov	r3, r7
 641 008a FFF7FEFF 		bl	__aeabi_dmul
 642              	.LVL87:
 643 008e 0446     		mov	r4, r0
 174:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 644              		.loc 1 174 0
 645 0090 D8F82C00 		ldr	r0, [r8, #44]	@ float
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 646              		.loc 1 185 0
 647 0094 0D46     		mov	r5, r1
 174:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 648              		.loc 1 174 0
 649 0096 FFF7FEFF 		bl	__aeabi_f2d
 650              	.LVL88:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 651              		.loc 1 185 0
 652 009a 5246     		mov	r2, r10
 653 009c 5B46     		mov	r3, fp
 654 009e FFF7FEFF 		bl	__aeabi_dmul
 655              	.LVL89:
 656 00a2 0246     		mov	r2, r0
 657 00a4 0B46     		mov	r3, r1
 658 00a6 2046     		mov	r0, r4
 659 00a8 2946     		mov	r1, r5
 660 00aa FFF7FEFF 		bl	__aeabi_dadd
 661              	.LVL90:
 662 00ae 0446     		mov	r4, r0
 177:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 663              		.loc 1 177 0
 664 00b0 D8F83800 		ldr	r0, [r8, #56]	@ float
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 665              		.loc 1 185 0
 666 00b4 0D46     		mov	r5, r1
 177:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 667              		.loc 1 177 0
 668 00b6 FFF7FEFF 		bl	__aeabi_f2d
 669              	.LVL91:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 670              		.loc 1 185 0
 671 00ba DDE90023 		ldrd	r2, [sp]
 672 00be FFF7FEFF 		bl	__aeabi_dmul
 673              	.LVL92:
 674 00c2 0246     		mov	r2, r0
 675 00c4 0B46     		mov	r3, r1
 676 00c6 2046     		mov	r0, r4
 677 00c8 2946     		mov	r1, r5
 678 00ca FFF7FEFF 		bl	__aeabi_dadd
 679              	.LVL93:
 680 00ce 0446     		mov	r4, r0
 169:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 681              		.loc 1 169 0
 682 00d0 D8F81800 		ldr	r0, [r8, #24]	@ float
 683              	.LVL94:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 684              		.loc 1 185 0
 685 00d4 0D46     		mov	r5, r1
 686              	.LVL95:
 169:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 687              		.loc 1 169 0
 688 00d6 FFF7FEFF 		bl	__aeabi_f2d
 689              	.LVL96:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 690              		.loc 1 185 0
 691 00da 3246     		mov	r2, r6
 692 00dc 3B46     		mov	r3, r7
 693 00de FFF7FEFF 		bl	__aeabi_dmul
 694              	.LVL97:
 695 00e2 0646     		mov	r6, r0
 172:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 696              		.loc 1 172 0
 697 00e4 D8F82400 		ldr	r0, [r8, #36]	@ float
 698              	.LVL98:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 699              		.loc 1 185 0
 700 00e8 0F46     		mov	r7, r1
 172:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 701              		.loc 1 172 0
 702 00ea FFF7FEFF 		bl	__aeabi_f2d
 703              	.LVL99:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 704              		.loc 1 185 0
 705 00ee 5246     		mov	r2, r10
 706 00f0 5B46     		mov	r3, fp
 707 00f2 FFF7FEFF 		bl	__aeabi_dmul
 708              	.LVL100:
 709 00f6 0246     		mov	r2, r0
 710 00f8 0B46     		mov	r3, r1
 711 00fa 3046     		mov	r0, r6
 712 00fc 3946     		mov	r1, r7
 713 00fe FFF7FEFF 		bl	__aeabi_dadd
 714              	.LVL101:
 715 0102 0646     		mov	r6, r0
 175:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 716              		.loc 1 175 0
 717 0104 D8F83000 		ldr	r0, [r8, #48]	@ float
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 718              		.loc 1 185 0
 719 0108 0F46     		mov	r7, r1
 175:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 720              		.loc 1 175 0
 721 010a FFF7FEFF 		bl	__aeabi_f2d
 722              	.LVL102:
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 723              		.loc 1 185 0
 724 010e DDE90023 		ldrd	r2, [sp]
 725 0112 FFF7FEFF 		bl	__aeabi_dmul
 726              	.LVL103:
 727 0116 0246     		mov	r2, r0
 728 0118 0B46     		mov	r3, r1
 729 011a 3046     		mov	r0, r6
 730 011c 3946     		mov	r1, r7
 731 011e FFF7FEFF 		bl	__aeabi_dadd
 732              	.LVL104:
 188:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x;
 733              		.loc 1 188 0
 734 0122 FFF7FEFF 		bl	__aeabi_d2f
 735              	.LVL105:
 736 0126 C9F80000 		str	r0, [r9]	@ float
 189:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 737              		.loc 1 189 0
 738 012a DDE90201 		ldrd	r0, [sp, #8]
 739 012e FFF7FEFF 		bl	__aeabi_d2f
 740              	.LVL106:
 190:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 741              		.loc 1 190 0
 742 0132 2946     		mov	r1, r5
 189:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 743              		.loc 1 189 0
 744 0134 C9F80400 		str	r0, [r9, #4]	@ float
 190:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 745              		.loc 1 190 0
 746 0138 2046     		mov	r0, r4
 747 013a FFF7FEFF 		bl	__aeabi_d2f
 748              	.LVL107:
 749 013e C9F80800 		str	r0, [r9, #8]	@ float
 191:math/pprz_geodetic_float.c **** }
 750              		.loc 1 191 0
 751 0142 05B0     		add	sp, sp, #20
 752              		@ sp needed
 753 0144 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 754              		.cfi_endproc
 755              	.LFE50:
 757              		.section	.text.ecef_of_ned_vect_f,"ax",%progbits
 758              		.align	1
 759              		.global	ecef_of_ned_vect_f
 760              		.thumb
 761              		.thumb_func
 763              	ecef_of_ned_vect_f:
 764              	.LFB51:
 194:math/pprz_geodetic_float.c **** {
 765              		.loc 1 194 0
 766              		.cfi_startproc
 767              		@ args = 0, pretend = 0, frame = 16
 768              		@ frame_needed = 0, uses_anonymous_args = 0
 769              	.LVL108:
 770 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 771              		.cfi_def_cfa_offset 24
 772              		.cfi_offset 0, -24
 773              		.cfi_offset 1, -20
 774              		.cfi_offset 2, -16
 775              		.cfi_offset 3, -12
 776              		.cfi_offset 4, -8
 777              		.cfi_offset 14, -4
 196:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 778              		.loc 1 196 0
 779 0002 D2ED027A 		flds	s15, [r2, #8]
 780 0006 5368     		ldr	r3, [r2, #4]	@ float
 781 0008 0193     		str	r3, [sp, #4]	@ float
 782 000a F1EE677A 		fnegs	s15, s15
 783 000e 1368     		ldr	r3, [r2]	@ float
 784 0010 0293     		str	r3, [sp, #8]	@ float
 197:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 785              		.loc 1 197 0
 786 0012 01AA     		add	r2, sp, #4
 787              	.LVL109:
 196:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 788              		.loc 1 196 0
 789 0014 CDED037A 		fsts	s15, [sp, #12]
 197:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 790              		.loc 1 197 0
 791 0018 FFF7FEFF 		bl	ecef_of_enu_vect_f
 792              	.LVL110:
 198:math/pprz_geodetic_float.c **** }
 793              		.loc 1 198 0
 794 001c 05B0     		add	sp, sp, #20
 795              		@ sp needed
 796 001e 5DF804FB 		ldr	pc, [sp], #4
 797              		.cfi_endproc
 798              	.LFE51:
 800              		.section	.text.lla_of_ecef_f,"ax",%progbits
 801              		.align	1
 802              		.global	lla_of_ecef_f
 803              		.thumb
 804              		.thumb_func
 806              	lla_of_ecef_f:
 807              	.LFB52:
 206:math/pprz_geodetic_float.c **** {
 808              		.loc 1 206 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 0, uses_anonymous_args = 0
 812              	.LVL111:
 813 0000 38B5     		push	{r3, r4, r5, lr}
 814              		.cfi_def_cfa_offset 16
 815              		.cfi_offset 3, -16
 816              		.cfi_offset 4, -12
 817              		.cfi_offset 5, -8
 818              		.cfi_offset 14, -4
 819 0002 2DED088B 		fstmfdd	sp!, {d8, d9, d10, d11}
 820              		.cfi_def_cfa_offset 48
 821              		.cfi_offset 80, -48
 822              		.cfi_offset 82, -40
 823              		.cfi_offset 84, -32
 824              		.cfi_offset 86, -24
 220:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 825              		.loc 1 220 0
 826 0006 D1ED018A 		flds	s17, [r1, #4]
 827 000a D1ED007A 		flds	s15, [r1]
 219:math/pprz_geodetic_float.c ****   const float z2 = in->z * in->z;
 828              		.loc 1 219 0
 829 000e 91ED029A 		flds	s18, [r1, #8]
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 830              		.loc 1 223 0
 831 0012 9FED67BA 		flds	s22, .L13+8
 224:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 832              		.loc 1 224 0
 833 0016 9FED67AA 		flds	s20, .L13+12
 220:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 834              		.loc 1 220 0
 835 001a 68EEA88A 		fmuls	s17, s17, s17
 206:math/pprz_geodetic_float.c **** {
 836              		.loc 1 206 0
 837 001e 0546     		mov	r5, r0
 220:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 838              		.loc 1 220 0
 839 0020 E7EEA78A 		vfma.f32	s17, s15, s15
 206:math/pprz_geodetic_float.c **** {
 840              		.loc 1 206 0
 841 0024 0C46     		mov	r4, r1
 219:math/pprz_geodetic_float.c ****   const float z2 = in->z * in->z;
 842              		.loc 1 219 0
 843 0026 29EE099A 		fmuls	s18, s18, s18
 844              	.LVL112:
 221:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 845              		.loc 1 221 0
 846 002a 18EE900A 		fmrs	r0, s17
 847              	.LVL113:
 848 002e FFF7FEFF 		bl	sqrtf
 849              	.LVL114:
 850 0032 0AEE900A 		fmsr	s21, r0
 851              	.LVL115:
 222:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 852              		.loc 1 222 0
 853 0036 19EE100A 		fmrs	r0, s18
 854              	.LVL116:
 855 003a FFF7FEFF 		bl	__aeabi_f2d
 856              	.LVL117:
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 857              		.loc 1 223 0
 858 003e F0EE689A 		fcpys	s19, s17
 222:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 859              		.loc 1 222 0
 860 0042 59A3     		adr	r3, .L13
 861 0044 D3E90023 		ldrd	r2, [r3]
 862 0048 FFF7FEFF 		bl	__aeabi_dmul
 863              	.LVL118:
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 864              		.loc 1 223 0
 865 004c E9EE0B9A 		vfma.f32	s19, s18, s22
 222:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 866              		.loc 1 222 0
 867 0050 FFF7FEFF 		bl	__aeabi_d2f
 868              	.LVL119:
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 869              		.loc 1 223 0
 870 0054 DFED587A 		flds	s15, .L13+16
 222:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 871              		.loc 1 222 0
 872 0058 0BEE900A 		fmsr	s23, r0
 873              	.LVL120:
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 874              		.loc 1 223 0
 875 005c 79EEE79A 		fsubs	s19, s19, s15
 876              	.LVL121:
 224:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 877              		.loc 1 224 0
 878 0060 2BEE8AAA 		fmuls	s20, s23, s20
 879 0064 69EEA97A 		fmuls	s15, s19, s19
 880 0068 2AEE28AA 		fmuls	s20, s20, s17
 881 006c 67EEA97A 		fmuls	s15, s15, s19
 225:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 882              		.loc 1 225 0
 883 0070 B7EE008A 		fconsts	s16, #112
 224:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 884              		.loc 1 224 0
 885 0074 8AEE27AA 		fdivs	s20, s20, s15
 886              	.LVL122:
 225:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 887              		.loc 1 225 0
 888 0078 7AEE0A7A 		fadds	s15, s20, s20
 889 007c EAEE0A7A 		vfma.f32	s15, s20, s20
 890 0080 17EE900A 		fmrs	r0, s15
 891              	.LVL123:
 892 0084 FFF7FEFF 		bl	sqrtf
 893              	.LVL124:
 894 0088 3AEE08AA 		fadds	s20, s20, s16
 895              	.LVL125:
 896 008c 06EE900A 		fmsr	s13, r0
 897 0090 7AEE266A 		fadds	s13, s20, s13
 898 0094 4949     		ldr	r1, .L13+20
 899 0096 16EE900A 		fmrs	r0, s13
 900 009a FFF7FEFF 		bl	powf
 901              	.LVL126:
 902 009e 07EE100A 		fmsr	s14, r0
 903              	.LVL127:
 226:math/pprz_geodetic_float.c ****   const float s1 = 1 + s + 1 / s;
 904              		.loc 1 226 0
 905 00a2 77EE087A 		fadds	s15, s14, s16
 906 00a6 88EE077A 		fdivs	s14, s16, s14
 907 00aa 77EE877A 		fadds	s15, s15, s14
 908              	.LVL128:
 227:math/pprz_geodetic_float.c ****   const float P = F / (3 * s1 * s1 * G * G);
 909              		.loc 1 227 0
 910 00ae B0EE087A 		fconsts	s14, #8
 911 00b2 27EE877A 		fmuls	s14, s15, s14
 912 00b6 67EE277A 		fmuls	s15, s14, s15
 913              	.LVL129:
 228:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 914              		.loc 1 228 0
 915 00ba B0EE487A 		fcpys	s14, s16
 227:math/pprz_geodetic_float.c ****   const float P = F / (3 * s1 * s1 * G * G);
 916              		.loc 1 227 0
 917 00be 67EEA97A 		fmuls	s15, s15, s19
 918 00c2 67EEA99A 		fmuls	s19, s15, s19
 919              	.LVL130:
 228:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 920              		.loc 1 228 0
 921 00c6 DFED3E7A 		flds	s15, .L13+24
 227:math/pprz_geodetic_float.c ****   const float P = F / (3 * s1 * s1 * G * G);
 922              		.loc 1 227 0
 923 00ca CBEEA99A 		fdivs	s19, s23, s19
 924              	.LVL131:
 228:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 925              		.loc 1 228 0
 926 00ce A9EEA77A 		vfma.f32	s14, s19, s15
 927 00d2 17EE100A 		fmrs	r0, s14
 928              	.LVL132:
 929 00d6 FFF7FEFF 		bl	sqrtf
 930              	.LVL133:
 931 00da 07EE100A 		fmsr	s14, r0
 932              	.LVL134:
 229:math/pprz_geodetic_float.c ****   const float ro = -(e2 * P * r) / (1 + Q) + sqrtf((a * a / 2) * (1 + 1 / Q) - ((1 - e2) * P * z2) 
 933              		.loc 1 229 0
 934 00de 69EE8B7A 		fmuls	s15, s19, s22
 935 00e2 37EE08AA 		fadds	s20, s14, s16
 936 00e6 C8EE076A 		fdivs	s13, s16, s14
 937 00ea 67EE897A 		fmuls	s15, s15, s18
 938 00ee 27EE0A7A 		fmuls	s14, s14, s20
 939 00f2 76EE886A 		fadds	s13, s13, s16
 940 00f6 C7EE877A 		fdivs	s15, s15, s14
 941 00fa 9FED327A 		flds	s14, .L13+28
 942 00fe D6EE877A 		vfnms.f32	s15, s13, s14
 943 0102 68EEE98A 		fnmuls	s17, s17, s19
 944              	.LVL135:
 945 0106 B6EE007A 		fconsts	s14, #96
 946 010a E8EE877A 		vfma.f32	s15, s17, s14
 231:math/pprz_geodetic_float.c ****   const float tmp = (r - e2 * ro) * (r - e2 * ro);
 947              		.loc 1 231 0
 948 010e F0EE6A8A 		fcpys	s17, s21
 229:math/pprz_geodetic_float.c ****   const float ro = -(e2 * P * r) / (1 + Q) + sqrtf((a * a / 2) * (1 + 1 / Q) - ((1 - e2) * P * z2) 
 949              		.loc 1 229 0
 950 0112 17EE900A 		fmrs	r0, s15
 951              	.LVL136:
 952 0116 FFF7FEFF 		bl	sqrtf
 953              	.LVL137:
 954 011a DFED2B7A 		flds	s15, .L13+32
 955 011e 69EEA79A 		fmuls	s19, s19, s15
 956              	.LVL138:
 957 0122 06EE900A 		fmsr	s13, r0
 958 0126 6AEEE99A 		fnmuls	s19, s21, s19
 959 012a 89EE8AAA 		fdivs	s20, s19, s20
 960 012e 3AEE26AA 		fadds	s20, s20, s13
 231:math/pprz_geodetic_float.c ****   const float tmp = (r - e2 * ro) * (r - e2 * ro);
 961              		.loc 1 231 0
 962 0132 EAEE678A 		vfms.f32	s17, s20, s15
 963 0136 68EEA88A 		fmuls	s17, s17, s17
 964              	.LVL139:
 232:math/pprz_geodetic_float.c ****   const float U = sqrtf(tmp + z2);
 965              		.loc 1 232 0
 966 013a 38EE897A 		fadds	s14, s17, s18
 967 013e 17EE100A 		fmrs	r0, s14
 968 0142 FFF7FEFF 		bl	sqrtf
 969              	.LVL140:
 233:math/pprz_geodetic_float.c ****   const float V = sqrtf(tmp + (1 - e2) * z2);
 970              		.loc 1 233 0
 971 0146 E9EE0B8A 		vfma.f32	s17, s18, s22
 972              	.LVL141:
 232:math/pprz_geodetic_float.c ****   const float U = sqrtf(tmp + z2);
 973              		.loc 1 232 0
 974 014a 09EE900A 		fmsr	s19, r0
 975              	.LVL142:
 233:math/pprz_geodetic_float.c ****   const float V = sqrtf(tmp + (1 - e2) * z2);
 976              		.loc 1 233 0
 977 014e 18EE900A 		fmrs	r0, s17
 978              	.LVL143:
 979 0152 FFF7FEFF 		bl	sqrtf
 980              	.LVL144:
 234:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 981              		.loc 1 234 0
 982 0156 9FED1D7A 		flds	s14, .L13+36
 983 015a D4ED027A 		flds	s15, [r4, #8]
 984 015e 06EE900A 		fmsr	s13, r0
 985 0162 26EE877A 		fmuls	s14, s13, s14
 986              	.LVL145:
 236:math/pprz_geodetic_float.c ****   out->alt = U * (1 - b2 / (a * V));
 987              		.loc 1 236 0
 988 0166 DFED1A6A 		flds	s13, .L13+40
 989 016a 86EE876A 		fdivs	s12, s13, s14
 234:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 990              		.loc 1 234 0
 991 016e 67EEA66A 		fmuls	s13, s15, s13
 236:math/pprz_geodetic_float.c ****   out->alt = U * (1 - b2 / (a * V));
 992              		.loc 1 236 0
 993 0172 38EE468A 		fsubs	s16, s16, s12
 234:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 994              		.loc 1 234 0
 995 0176 86EE877A 		fdivs	s14, s13, s14
 996              	.LVL146:
 237:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 997              		.loc 1 237 0
 998 017a 9FED166A 		flds	s12, .L13+44
 999 017e E7EE067A 		vfma.f32	s15, s14, s12
 236:math/pprz_geodetic_float.c ****   out->alt = U * (1 - b2 / (a * V));
 1000              		.loc 1 236 0
 1001 0182 69EE889A 		fmuls	s19, s19, s16
 1002              	.LVL147:
 237:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 1003              		.loc 1 237 0
 1004 0186 C7EEAA7A 		fdivs	s15, s15, s21
 236:math/pprz_geodetic_float.c ****   out->alt = U * (1 - b2 / (a * V));
 1005              		.loc 1 236 0
 1006 018a C5ED029A 		fsts	s19, [r5, #8]
 237:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 1007              		.loc 1 237 0
 1008 018e 17EE900A 		fmrs	r0, s15
 1009              	.LVL148:
 1010 0192 FFF7FEFF 		bl	atanf
 1011              	.LVL149:
 238:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 1012              		.loc 1 238 0
 1013 0196 2168     		ldr	r1, [r4]	@ float
 237:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 1014              		.loc 1 237 0
 1015 0198 2860     		str	r0, [r5]	@ float
 238:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 1016              		.loc 1 238 0
 1017 019a 6068     		ldr	r0, [r4, #4]	@ float
 1018 019c FFF7FEFF 		bl	atan2f
 1019              	.LVL150:
 240:math/pprz_geodetic_float.c **** }
 1020              		.loc 1 240 0
 1021 01a0 BDEC088B 		fldmfdd	sp!, {d8-d11}
 1022              	.LVL151:
 238:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 1023              		.loc 1 238 0
 1024 01a4 6860     		str	r0, [r5, #4]	@ float
 240:math/pprz_geodetic_float.c **** }
 1025              		.loc 1 240 0
 1026 01a6 38BD     		pop	{r3, r4, r5, pc}
 1027              	.LVL152:
 1028              	.L14:
 1029              		.align	3
 1030              	.L13:
 1031 01a8 000000DC 		.word	-603979776
 1032 01ac 3E021F43 		.word	1126105662
 1033 01b0 47497E3F 		.word	1065240903
 1034 01b4 70F73B38 		.word	943454064
 1035 01b8 8B53D94E 		.word	1322865547
 1036 01bc ABAAAA3E 		.word	1051372203
 1037 01c0 70F7BB38 		.word	951842672
 1038 01c4 CAFE9355 		.word	1435762378
 1039 01c8 875CDB3B 		.word	1004231815
 1040 01cc 32A5C24A 		.word	1254270258
 1041 01d0 2A011356 		.word	1444086058
 1042 01d4 FFD6DC3B 		.word	1004328703
 1043              		.cfi_endproc
 1044              	.LFE52:
 1046              		.section	.text.ltp_def_from_ecef_f,"ax",%progbits
 1047              		.align	1
 1048              		.global	ltp_def_from_ecef_f
 1049              		.thumb
 1050              		.thumb_func
 1052              	ltp_def_from_ecef_f:
 1053              	.LFB40:
  37:math/pprz_geodetic_float.c **** {
 1054              		.loc 1 37 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              	.LVL153:
 1059 0000 38B5     		push	{r3, r4, r5, lr}
 1060              		.cfi_def_cfa_offset 16
 1061              		.cfi_offset 3, -16
 1062              		.cfi_offset 4, -12
 1063              		.cfi_offset 5, -8
 1064              		.cfi_offset 14, -4
  40:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
 1065              		.loc 1 40 0
 1066 0002 0B68     		ldr	r3, [r1]	@ float
  37:math/pprz_geodetic_float.c **** {
 1067              		.loc 1 37 0
 1068 0004 2DED048B 		fstmfdd	sp!, {d8, d9}
 1069              		.cfi_def_cfa_offset 32
 1070              		.cfi_offset 80, -32
 1071              		.cfi_offset 82, -24
  40:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
 1072              		.loc 1 40 0
 1073 0008 0360     		str	r3, [r0]	@ float
 1074 000a 4B68     		ldr	r3, [r1, #4]	@ float
 1075 000c 4360     		str	r3, [r0, #4]	@ float
  37:math/pprz_geodetic_float.c **** {
 1076              		.loc 1 37 0
 1077 000e 0446     		mov	r4, r0
  40:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
 1078              		.loc 1 40 0
 1079 0010 8B68     		ldr	r3, [r1, #8]	@ float
 1080 0012 8360     		str	r3, [r0, #8]	@ float
  42:math/pprz_geodetic_float.c ****   lla_of_ecef_f(&def->lla, &def->ecef);
 1081              		.loc 1 42 0
 1082 0014 2146     		mov	r1, r4
 1083              	.LVL154:
 1084 0016 0C30     		adds	r0, r0, #12
 1085              	.LVL155:
 1086 0018 FFF7FEFF 		bl	lla_of_ecef_f
 1087              	.LVL156:
  44:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
 1088              		.loc 1 44 0
 1089 001c E568     		ldr	r5, [r4, #12]	@ float
 1090 001e 2846     		mov	r0, r5	@ float
 1091 0020 FFF7FEFF 		bl	sinf
 1092              	.LVL157:
 1093 0024 09EE100A 		fmsr	s18, r0
 1094              	.LVL158:
  45:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1095              		.loc 1 45 0
 1096 0028 2846     		mov	r0, r5	@ float
 1097              	.LVL159:
 1098 002a FFF7FEFF 		bl	cosf
 1099              	.LVL160:
  46:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1100              		.loc 1 46 0
 1101 002e 2569     		ldr	r5, [r4, #16]	@ float
  45:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1102              		.loc 1 45 0
 1103 0030 08EE900A 		fmsr	s17, r0
 1104              	.LVL161:
  46:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1105              		.loc 1 46 0
 1106 0034 2846     		mov	r0, r5	@ float
 1107              	.LVL162:
 1108 0036 FFF7FEFF 		bl	sinf
 1109              	.LVL163:
 1110 003a 08EE100A 		fmsr	s16, r0
 1111              	.LVL164:
  47:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1112              		.loc 1 47 0
 1113 003e 2846     		mov	r0, r5	@ float
 1114              	.LVL165:
 1115 0040 FFF7FEFF 		bl	cosf
 1116              	.LVL166:
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1117              		.loc 1 48 0
 1118 0044 B1EE487A 		fnegs	s14, s16
  47:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1119              		.loc 1 47 0
 1120 0048 07EE900A 		fmsr	s15, r0
 1121              	.LVL167:
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1122              		.loc 1 48 0
 1123 004c 84ED067A 		fsts	s14, [r4, #24]
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1124              		.loc 1 52 0
 1125 0050 B1EE497A 		fnegs	s14, s18
 1126 0054 67EE276A 		fmuls	s13, s14, s15
  53:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1127              		.loc 1 53 0
 1128 0058 27EE087A 		fmuls	s14, s14, s16
  56:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1129              		.loc 1 56 0
 1130 005c 28EE888A 		fmuls	s16, s17, s16
 1131              	.LVL168:
  55:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
 1132              		.loc 1 55 0
 1133 0060 68EEA77A 		fmuls	s15, s17, s15
  54:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1134              		.loc 1 54 0
 1135 0064 C4ED0B8A 		fsts	s17, [r4, #44]
  56:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1136              		.loc 1 56 0
 1137 0068 84ED0D8A 		fsts	s16, [r4, #52]
  57:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1138              		.loc 1 57 0
 1139 006c 84ED0E9A 		fsts	s18, [r4, #56]
  59:math/pprz_geodetic_float.c **** }
 1140              		.loc 1 59 0
 1141 0070 BDEC048B 		fldmfdd	sp!, {d8-d9}
 1142              	.LVL169:
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
 1143              		.loc 1 51 0
 1144 0074 0023     		movs	r3, #0
  49:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1145              		.loc 1 49 0
 1146 0076 E061     		str	r0, [r4, #28]	@ float
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
 1147              		.loc 1 51 0
 1148 0078 2362     		str	r3, [r4, #32]	@ float
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1149              		.loc 1 52 0
 1150 007a C4ED096A 		fsts	s13, [r4, #36]
  53:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1151              		.loc 1 53 0
 1152 007e 84ED0A7A 		fsts	s14, [r4, #40]
  55:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
 1153              		.loc 1 55 0
 1154 0082 C4ED0C7A 		fsts	s15, [r4, #48]
  59:math/pprz_geodetic_float.c **** }
 1155              		.loc 1 59 0
 1156 0086 38BD     		pop	{r3, r4, r5, pc}
 1157              		.cfi_endproc
 1158              	.LFE40:
 1160              		.section	.text.ecef_of_lla_f,"ax",%progbits
 1161              		.align	1
 1162              		.global	ecef_of_lla_f
 1163              		.thumb
 1164              		.thumb_func
 1166              	ecef_of_lla_f:
 1167              	.LFB53:
 243:math/pprz_geodetic_float.c **** {
 1168              		.loc 1 243 0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 1172              	.LVL170:
 1173 0000 70B5     		push	{r4, r5, r6, lr}
 1174              		.cfi_def_cfa_offset 16
 1175              		.cfi_offset 4, -16
 1176              		.cfi_offset 5, -12
 1177              		.cfi_offset 6, -8
 1178              		.cfi_offset 14, -4
 250:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 1179              		.loc 1 250 0
 1180 0002 0D68     		ldr	r5, [r1]	@ float
 243:math/pprz_geodetic_float.c **** {
 1181              		.loc 1 243 0
 1182 0004 2DED068B 		fstmfdd	sp!, {d8, d9, d10}
 1183              		.cfi_def_cfa_offset 40
 1184              		.cfi_offset 80, -40
 1185              		.cfi_offset 82, -32
 1186              		.cfi_offset 84, -24
 243:math/pprz_geodetic_float.c **** {
 1187              		.loc 1 243 0
 1188 0008 0646     		mov	r6, r0
 250:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 1189              		.loc 1 250 0
 1190 000a 2846     		mov	r0, r5	@ float
 1191              	.LVL171:
 243:math/pprz_geodetic_float.c **** {
 1192              		.loc 1 243 0
 1193 000c 0C46     		mov	r4, r1
 250:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 1194              		.loc 1 250 0
 1195 000e FFF7FEFF 		bl	sinf
 1196              	.LVL172:
 1197 0012 08EE100A 		fmsr	s16, r0
 1198              	.LVL173:
 251:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1199              		.loc 1 251 0
 1200 0016 2846     		mov	r0, r5	@ float
 1201              	.LVL174:
 1202 0018 FFF7FEFF 		bl	cosf
 1203              	.LVL175:
 252:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 1204              		.loc 1 252 0
 1205 001c 6568     		ldr	r5, [r4, #4]	@ float
 251:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1206              		.loc 1 251 0
 1207 001e 0AEE100A 		fmsr	s20, r0
 1208              	.LVL176:
 252:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 1209              		.loc 1 252 0
 1210 0022 2846     		mov	r0, r5	@ float
 1211              	.LVL177:
 1212 0024 FFF7FEFF 		bl	sinf
 1213              	.LVL178:
 1214 0028 09EE100A 		fmsr	s18, r0
 1215              	.LVL179:
 253:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 1216              		.loc 1 253 0
 1217 002c 2846     		mov	r0, r5	@ float
 1218              	.LVL180:
 1219 002e FFF7FEFF 		bl	cosf
 1220              	.LVL181:
 1221 0032 9FED277A 		flds	s14, .L17+8
 1222 0036 27EE487A 		fnmuls	s14, s14, s16
 254:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2 * sin_lat * sin_lat);
 1223              		.loc 1 254 0
 1224 003a F7EE007A 		fconsts	s15, #112
 1225 003e E7EE087A 		vfma.f32	s15, s14, s16
 253:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 1226              		.loc 1 253 0
 1227 0042 09EE900A 		fmsr	s19, r0
 1228              	.LVL182:
 254:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2 * sin_lat * sin_lat);
 1229              		.loc 1 254 0
 1230 0046 17EE900A 		fmrs	r0, s15
 1231              	.LVL183:
 1232 004a FFF7FEFF 		bl	sqrtf
 1233              	.LVL184:
 255:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 1234              		.loc 1 255 0
 1235 004e DFED217A 		flds	s15, .L17+12
 257:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1236              		.loc 1 257 0
 1237 0052 D4ED028A 		flds	s17, [r4, #8]
 255:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 1238              		.loc 1 255 0
 1239 0056 07EE100A 		fmsr	s14, r0
 1240 005a C7EE877A 		fdivs	s15, s15, s14
 1241              	.LVL185:
 257:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1242              		.loc 1 257 0
 1243 005e 37EEA87A 		fadds	s14, s15, s17
 259:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 1244              		.loc 1 259 0
 1245 0062 17EE900A 		fmrs	r0, s15
 1246              	.LVL186:
 257:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1247              		.loc 1 257 0
 1248 0066 27EE0A7A 		fmuls	s14, s14, s20
 1249 006a 67EE299A 		fmuls	s19, s14, s19
 1250              	.LVL187:
 258:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1251              		.loc 1 258 0
 1252 006e 27EE097A 		fmuls	s14, s14, s18
 257:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 1253              		.loc 1 257 0
 1254 0072 C6ED009A 		fsts	s19, [r6]
 258:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1255              		.loc 1 258 0
 1256 0076 86ED017A 		fsts	s14, [r6, #4]
 259:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 1257              		.loc 1 259 0
 1258 007a FFF7FEFF 		bl	__aeabi_f2d
 1259              	.LVL188:
 1260 007e 12A3     		adr	r3, .L17
 1261 0080 D3E90023 		ldrd	r2, [r3]
 1262 0084 FFF7FEFF 		bl	__aeabi_dmul
 1263              	.LVL189:
 1264 0088 0446     		mov	r4, r0
 1265              	.LVL190:
 1266 008a 18EE900A 		fmrs	r0, s17
 1267 008e 0D46     		mov	r5, r1
 1268 0090 FFF7FEFF 		bl	__aeabi_f2d
 1269              	.LVL191:
 1270 0094 0246     		mov	r2, r0
 1271 0096 0B46     		mov	r3, r1
 1272 0098 2046     		mov	r0, r4
 1273 009a 2946     		mov	r1, r5
 1274 009c FFF7FEFF 		bl	__aeabi_dadd
 1275              	.LVL192:
 1276 00a0 0446     		mov	r4, r0
 1277 00a2 18EE100A 		fmrs	r0, s16
 1278 00a6 0D46     		mov	r5, r1
 1279 00a8 FFF7FEFF 		bl	__aeabi_f2d
 1280              	.LVL193:
 1281 00ac 0246     		mov	r2, r0
 1282 00ae 0B46     		mov	r3, r1
 1283 00b0 2046     		mov	r0, r4
 1284 00b2 2946     		mov	r1, r5
 1285 00b4 FFF7FEFF 		bl	__aeabi_dmul
 1286              	.LVL194:
 1287 00b8 FFF7FEFF 		bl	__aeabi_d2f
 1288              	.LVL195:
 260:math/pprz_geodetic_float.c **** }
 1289              		.loc 1 260 0
 1290 00bc BDEC068B 		fldmfdd	sp!, {d8-d10}
 1291              	.LVL196:
 259:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 1292              		.loc 1 259 0
 1293 00c0 B060     		str	r0, [r6, #8]	@ float
 260:math/pprz_geodetic_float.c **** }
 1294              		.loc 1 260 0
 1295 00c2 70BD     		pop	{r4, r5, r6, pc}
 1296              	.LVL197:
 1297              	.L18:
 1298 00c4 AFF30080 		.align	3
 1299              	.L17:
 1300 00c8 000040DE 		.word	-566231040
 1301 00cc 28C9EF3F 		.word	1072679208
 1302 00d0 875CDB3B 		.word	1004231815
 1303 00d4 32A5C24A 		.word	1254270258
 1304              		.cfi_endproc
 1305              	.LFE53:
 1307              		.section	.text.ltp_def_from_lla_f,"ax",%progbits
 1308              		.align	1
 1309              		.global	ltp_def_from_lla_f
 1310              		.thumb
 1311              		.thumb_func
 1313              	ltp_def_from_lla_f:
 1314              	.LFB41:
  62:math/pprz_geodetic_float.c **** {
 1315              		.loc 1 62 0
 1316              		.cfi_startproc
 1317              		@ args = 0, pretend = 0, frame = 0
 1318              		@ frame_needed = 0, uses_anonymous_args = 0
 1319              	.LVL198:
 1320 0000 38B5     		push	{r3, r4, r5, lr}
 1321              		.cfi_def_cfa_offset 16
 1322              		.cfi_offset 3, -16
 1323              		.cfi_offset 4, -12
 1324              		.cfi_offset 5, -8
 1325              		.cfi_offset 14, -4
  64:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
 1326              		.loc 1 64 0
 1327 0002 0B68     		ldr	r3, [r1]	@ float
  62:math/pprz_geodetic_float.c **** {
 1328              		.loc 1 62 0
 1329 0004 2DED048B 		fstmfdd	sp!, {d8, d9}
 1330              		.cfi_def_cfa_offset 32
 1331              		.cfi_offset 80, -32
 1332              		.cfi_offset 82, -24
  64:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
 1333              		.loc 1 64 0
 1334 0008 C360     		str	r3, [r0, #12]	@ float
 1335 000a 4B68     		ldr	r3, [r1, #4]	@ float
 1336 000c 0361     		str	r3, [r0, #16]	@ float
  62:math/pprz_geodetic_float.c **** {
 1337              		.loc 1 62 0
 1338 000e 0446     		mov	r4, r0
  64:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
 1339              		.loc 1 64 0
 1340 0010 8B68     		ldr	r3, [r1, #8]	@ float
 1341 0012 4361     		str	r3, [r0, #20]	@ float
  66:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&def->ecef, &def->lla);
 1342              		.loc 1 66 0
 1343 0014 00F10C01 		add	r1, r0, #12
 1344              	.LVL199:
 1345 0018 FFF7FEFF 		bl	ecef_of_lla_f
 1346              	.LVL200:
  69:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
 1347              		.loc 1 69 0
 1348 001c E568     		ldr	r5, [r4, #12]	@ float
 1349 001e 2846     		mov	r0, r5	@ float
 1350 0020 FFF7FEFF 		bl	sinf
 1351              	.LVL201:
 1352 0024 09EE100A 		fmsr	s18, r0
 1353              	.LVL202:
  70:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1354              		.loc 1 70 0
 1355 0028 2846     		mov	r0, r5	@ float
 1356              	.LVL203:
 1357 002a FFF7FEFF 		bl	cosf
 1358              	.LVL204:
  71:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1359              		.loc 1 71 0
 1360 002e 2569     		ldr	r5, [r4, #16]	@ float
  70:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1361              		.loc 1 70 0
 1362 0030 08EE900A 		fmsr	s17, r0
 1363              	.LVL205:
  71:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1364              		.loc 1 71 0
 1365 0034 2846     		mov	r0, r5	@ float
 1366              	.LVL206:
 1367 0036 FFF7FEFF 		bl	sinf
 1368              	.LVL207:
 1369 003a 08EE100A 		fmsr	s16, r0
 1370              	.LVL208:
  72:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1371              		.loc 1 72 0
 1372 003e 2846     		mov	r0, r5	@ float
 1373              	.LVL209:
 1374 0040 FFF7FEFF 		bl	cosf
 1375              	.LVL210:
  74:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1376              		.loc 1 74 0
 1377 0044 B1EE487A 		fnegs	s14, s16
  72:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1378              		.loc 1 72 0
 1379 0048 07EE900A 		fmsr	s15, r0
 1380              	.LVL211:
  74:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1381              		.loc 1 74 0
 1382 004c 84ED067A 		fsts	s14, [r4, #24]
  78:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1383              		.loc 1 78 0
 1384 0050 B1EE497A 		fnegs	s14, s18
 1385 0054 67EE276A 		fmuls	s13, s14, s15
  79:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1386              		.loc 1 79 0
 1387 0058 27EE087A 		fmuls	s14, s14, s16
  82:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1388              		.loc 1 82 0
 1389 005c 28EE888A 		fmuls	s16, s17, s16
 1390              	.LVL212:
  81:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
 1391              		.loc 1 81 0
 1392 0060 68EEA77A 		fmuls	s15, s17, s15
  80:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1393              		.loc 1 80 0
 1394 0064 C4ED0B8A 		fsts	s17, [r4, #44]
  82:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1395              		.loc 1 82 0
 1396 0068 84ED0D8A 		fsts	s16, [r4, #52]
  83:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1397              		.loc 1 83 0
 1398 006c 84ED0E9A 		fsts	s18, [r4, #56]
  84:math/pprz_geodetic_float.c **** }
 1399              		.loc 1 84 0
 1400 0070 BDEC048B 		fldmfdd	sp!, {d8-d9}
 1401              	.LVL213:
  77:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
 1402              		.loc 1 77 0
 1403 0074 0023     		movs	r3, #0
  75:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1404              		.loc 1 75 0
 1405 0076 E061     		str	r0, [r4, #28]	@ float
  77:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
 1406              		.loc 1 77 0
 1407 0078 2362     		str	r3, [r4, #32]	@ float
  78:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1408              		.loc 1 78 0
 1409 007a C4ED096A 		fsts	s13, [r4, #36]
  79:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1410              		.loc 1 79 0
 1411 007e 84ED0A7A 		fsts	s14, [r4, #40]
  81:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
 1412              		.loc 1 81 0
 1413 0082 C4ED0C7A 		fsts	s15, [r4, #48]
  84:math/pprz_geodetic_float.c **** }
 1414              		.loc 1 84 0
 1415 0086 38BD     		pop	{r3, r4, r5, pc}
 1416              		.cfi_endproc
 1417              	.LFE41:
 1419              		.section	.text.enu_of_lla_point_f,"ax",%progbits
 1420              		.align	1
 1421              		.global	enu_of_lla_point_f
 1422              		.thumb
 1423              		.thumb_func
 1425              	enu_of_lla_point_f:
 1426              	.LFB46:
 114:math/pprz_geodetic_float.c **** {
 1427              		.loc 1 114 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 16
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              	.LVL214:
 1432 0000 30B5     		push	{r4, r5, lr}
 1433              		.cfi_def_cfa_offset 12
 1434              		.cfi_offset 4, -12
 1435              		.cfi_offset 5, -8
 1436              		.cfi_offset 14, -4
 1437 0002 85B0     		sub	sp, sp, #20
 1438              		.cfi_def_cfa_offset 32
 114:math/pprz_geodetic_float.c **** {
 1439              		.loc 1 114 0
 1440 0004 0546     		mov	r5, r0
 1441 0006 0C46     		mov	r4, r1
 116:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef, lla);
 1442              		.loc 1 116 0
 1443 0008 01A8     		add	r0, sp, #4
 1444              	.LVL215:
 1445 000a 1146     		mov	r1, r2
 1446              	.LVL216:
 1447 000c FFF7FEFF 		bl	ecef_of_lla_f
 1448              	.LVL217:
 117:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(enu, def, &ecef);
 1449              		.loc 1 117 0
 1450 0010 2846     		mov	r0, r5
 1451 0012 2146     		mov	r1, r4
 1452 0014 01AA     		add	r2, sp, #4
 1453 0016 FFF7FEFF 		bl	enu_of_ecef_point_f
 1454              	.LVL218:
 118:math/pprz_geodetic_float.c **** }
 1455              		.loc 1 118 0
 1456 001a 05B0     		add	sp, sp, #20
 1457              		@ sp needed
 1458 001c 30BD     		pop	{r4, r5, pc}
 1459              		.cfi_endproc
 1460              	.LFE46:
 1462              		.section	.text.ned_of_lla_point_f,"ax",%progbits
 1463              		.align	1
 1464              		.global	ned_of_lla_point_f
 1465              		.thumb
 1466              		.thumb_func
 1468              	ned_of_lla_point_f:
 1469              	.LFB47:
 121:math/pprz_geodetic_float.c **** {
 1470              		.loc 1 121 0
 1471              		.cfi_startproc
 1472              		@ args = 0, pretend = 0, frame = 16
 1473              		@ frame_needed = 0, uses_anonymous_args = 0
 1474              	.LVL219:
 1475 0000 30B5     		push	{r4, r5, lr}
 1476              		.cfi_def_cfa_offset 12
 1477              		.cfi_offset 4, -12
 1478              		.cfi_offset 5, -8
 1479              		.cfi_offset 14, -4
 1480 0002 85B0     		sub	sp, sp, #20
 1481              		.cfi_def_cfa_offset 32
 121:math/pprz_geodetic_float.c **** {
 1482              		.loc 1 121 0
 1483 0004 0546     		mov	r5, r0
 1484 0006 0C46     		mov	r4, r1
 123:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef, lla);
 1485              		.loc 1 123 0
 1486 0008 01A8     		add	r0, sp, #4
 1487              	.LVL220:
 1488 000a 1146     		mov	r1, r2
 1489              	.LVL221:
 1490 000c FFF7FEFF 		bl	ecef_of_lla_f
 1491              	.LVL222:
 124:math/pprz_geodetic_float.c ****   ned_of_ecef_point_f(ned, def, &ecef);
 1492              		.loc 1 124 0
 1493 0010 2846     		mov	r0, r5
 1494 0012 2146     		mov	r1, r4
 1495 0014 01AA     		add	r2, sp, #4
 1496 0016 FFF7FEFF 		bl	ned_of_ecef_point_f
 1497              	.LVL223:
 125:math/pprz_geodetic_float.c **** }
 1498              		.loc 1 125 0
 1499 001a 05B0     		add	sp, sp, #20
 1500              		@ sp needed
 1501 001c 30BD     		pop	{r4, r5, pc}
 1502              		.cfi_endproc
 1503              	.LFE47:
 1505              		.global	__aeabi_i2d
 1506              		.global	__aeabi_dsub
 1507              		.global	__aeabi_ddiv
 1508              		.section	.text.utm_of_lla_f,"ax",%progbits
 1509              		.align	1
 1510              		.global	utm_of_lla_f
 1511              		.thumb
 1512              		.thumb_func
 1514              	utm_of_lla_f:
 1515              	.LFB57:
 287:math/pprz_geodetic_float.c **** 
 288:math/pprz_geodetic_float.c **** static inline float inverse_isometric_latitude_f(float lat, float e, float epsilon)
 289:math/pprz_geodetic_float.c **** {
 290:math/pprz_geodetic_float.c ****   float exp_l = exp(lat);
 291:math/pprz_geodetic_float.c ****   float phi0 = 2 * atan(exp_l) - M_PI_2;
 292:math/pprz_geodetic_float.c ****   float phi_;
 293:math/pprz_geodetic_float.c ****   uint8_t max_iter = 3; /* To be sure to return */
 294:math/pprz_geodetic_float.c **** 
 295:math/pprz_geodetic_float.c ****   do {
 296:math/pprz_geodetic_float.c ****     phi_ = phi0;
 297:math/pprz_geodetic_float.c ****     float sin_phi = e * sin(phi_);
 298:math/pprz_geodetic_float.c ****     phi0 = 2 * atan(pow((1 + sin_phi) / (1. - sin_phi), e / 2.) * exp_l) - M_PI_2;
 299:math/pprz_geodetic_float.c ****     max_iter--;
 300:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 301:math/pprz_geodetic_float.c ****   return phi0;
 302:math/pprz_geodetic_float.c **** }
 303:math/pprz_geodetic_float.c **** 
 304:math/pprz_geodetic_float.c **** void utm_of_lla_f(struct UtmCoor_f *utm, struct LlaCoor_f *lla)
 305:math/pprz_geodetic_float.c **** {
 1516              		.loc 1 305 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 8
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              	.LVL224:
 1521 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1522              		.cfi_def_cfa_offset 36
 1523              		.cfi_offset 4, -36
 1524              		.cfi_offset 5, -32
 1525              		.cfi_offset 6, -28
 1526              		.cfi_offset 7, -24
 1527              		.cfi_offset 8, -20
 1528              		.cfi_offset 9, -16
 1529              		.cfi_offset 10, -12
 1530              		.cfi_offset 11, -8
 1531              		.cfi_offset 14, -4
 1532 0004 2DED068B 		fstmfdd	sp!, {d8, d9, d10}
 1533              		.cfi_def_cfa_offset 60
 1534              		.cfi_offset 80, -60
 1535              		.cfi_offset 82, -52
 1536              		.cfi_offset 84, -44
 1537 0008 8046     		mov	r8, r0
 306:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1538              		.loc 1 306 0
 1539 000a 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 1540              	.LVL225:
 307:math/pprz_geodetic_float.c ****   float ll = isometric_latitude_f(lla->lat , E);
 308:math/pprz_geodetic_float.c ****   float dl = lla->lon - lambda_c;
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 310:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 311:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 312:math/pprz_geodetic_float.c ****   struct complex z_ = { lambda_,  ll_ };
 313:math/pprz_geodetic_float.c ****   CScal(serie_coeff_proj_mercator[0], z_);
 1541              		.loc 1 313 0
 1542 000c 9FED8E9A 		flds	s18, .L26+40
 306:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1543              		.loc 1 306 0
 1544 0010 0623     		movs	r3, #6
 1545 0012 0138     		subs	r0, r0, #1
 1546 0014 5843     		muls	r0, r3, r0
 305:math/pprz_geodetic_float.c **** {
 1547              		.loc 1 305 0
 1548 0016 83B0     		sub	sp, sp, #12
 1549              		.cfi_def_cfa_offset 72
 306:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1550              		.loc 1 306 0
 1551 0018 B138     		subs	r0, r0, #177
 305:math/pprz_geodetic_float.c **** {
 1552              		.loc 1 305 0
 1553 001a 8946     		mov	r9, r1
 306:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1554              		.loc 1 306 0
 1555 001c FFF7FEFF 		bl	__aeabi_i2d
 1556              	.LVL226:
 1557 0020 7FA3     		adr	r3, .L26
 1558 0022 D3E90023 		ldrd	r2, [r3]
 1559 0026 FFF7FEFF 		bl	__aeabi_dmul
 1560              	.LVL227:
 1561 002a FFF7FEFF 		bl	__aeabi_d2f
 1562              	.LVL228:
 1563 002e 08EE100A 		fmsr	s16, r0
 1564              	.LVL229:
 1565              	.LBB9:
 1566              	.LBB10:
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 1567              		.loc 1 280 0
 1568 0032 D9F80000 		ldr	r0, [r9]	@ float
 1569              	.LVL230:
 1570 0036 FFF7FEFF 		bl	__aeabi_f2d
 1571              	.LVL231:
 1572 003a 0022     		movs	r2, #0
 1573 003c 834B     		ldr	r3, .L26+44
 1574 003e 0646     		mov	r6, r0
 1575 0040 0F46     		mov	r7, r1
 1576 0042 FFF7FEFF 		bl	__aeabi_dmul
 1577              	.LVL232:
 1578 0046 78A3     		adr	r3, .L26+8
 1579 0048 D3E90023 		ldrd	r2, [r3]
 1580 004c FFF7FEFF 		bl	__aeabi_dadd
 1581              	.LVL233:
 1582 0050 FFF7FEFF 		bl	tan
 1583              	.LVL234:
 1584 0054 FFF7FEFF 		bl	log
 1585              	.LVL235:
 1586 0058 0446     		mov	r4, r0
 1587 005a 0D46     		mov	r5, r1
 1588 005c 3046     		mov	r0, r6
 1589 005e 3946     		mov	r1, r7
 1590 0060 FFF7FEFF 		bl	sin
 1591              	.LVL236:
 1592 0064 72A3     		adr	r3, .L26+16
 1593 0066 D3E90023 		ldrd	r2, [r3]
 1594 006a FFF7FEFF 		bl	__aeabi_dmul
 1595              	.LVL237:
 1596 006e 0022     		movs	r2, #0
 1597 0070 774B     		ldr	r3, .L26+48
 1598 0072 8246     		mov	r10, r0
 1599 0074 8B46     		mov	fp, r1
 1600 0076 FFF7FEFF 		bl	__aeabi_dadd
 1601              	.LVL238:
 1602 007a 5246     		mov	r2, r10
 1603 007c 0646     		mov	r6, r0
 1604 007e 0F46     		mov	r7, r1
 1605 0080 5B46     		mov	r3, fp
 1606 0082 0020     		movs	r0, #0
 1607 0084 7249     		ldr	r1, .L26+48
 1608 0086 FFF7FEFF 		bl	__aeabi_dsub
 1609              	.LVL239:
 1610 008a 0246     		mov	r2, r0
 1611 008c 0B46     		mov	r3, r1
 1612 008e 3046     		mov	r0, r6
 1613 0090 3946     		mov	r1, r7
 1614 0092 FFF7FEFF 		bl	__aeabi_ddiv
 1615              	.LVL240:
 1616 0096 FFF7FEFF 		bl	log
 1617              	.LVL241:
 1618              	.LBE10:
 1619              	.LBE9:
 308:math/pprz_geodetic_float.c ****   float dl = lla->lon - lambda_c;
 1620              		.loc 1 308 0
 1621 009a D9ED017A 		flds	s15, [r9, #4]
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1622              		.loc 1 309 0
 1623 009e 77EEC87A 		fsubs	s15, s15, s16
 1624              	.LBB15:
 1625              	.LBB11:
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 1626              		.loc 1 280 0
 1627 00a2 0646     		mov	r6, r0
 1628              	.LBE11:
 1629              	.LBE15:
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1630              		.loc 1 309 0
 1631 00a4 17EE900A 		fmrs	r0, s15
 1632              	.LBB16:
 1633              	.LBB12:
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 1634              		.loc 1 280 0
 1635 00a8 0F46     		mov	r7, r1
 1636              	.LVL242:
 1637              	.LBE12:
 1638              	.LBE16:
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1639              		.loc 1 309 0
 1640 00aa FFF7FEFF 		bl	__aeabi_f2d
 1641              	.LVL243:
 1642 00ae CDE90001 		strd	r0, [sp]
 1643 00b2 FFF7FEFF 		bl	sin
 1644              	.LVL244:
 1645              	.LBB17:
 1646              	.LBB13:
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 1647              		.loc 1 280 0
 1648 00b6 60A3     		adr	r3, .L26+24
 1649 00b8 D3E90023 		ldrd	r2, [r3]
 1650              	.LBE13:
 1651              	.LBE17:
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1652              		.loc 1 309 0
 1653 00bc 8246     		mov	r10, r0
 1654 00be 8B46     		mov	fp, r1
 1655              	.LBB18:
 1656              	.LBB14:
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 1657              		.loc 1 280 0
 1658 00c0 3046     		mov	r0, r6
 1659 00c2 3946     		mov	r1, r7
 1660 00c4 FFF7FEFF 		bl	__aeabi_dmul
 1661              	.LVL245:
 1662 00c8 0246     		mov	r2, r0
 1663 00ca 0B46     		mov	r3, r1
 1664 00cc 2046     		mov	r0, r4
 1665 00ce 2946     		mov	r1, r5
 1666 00d0 FFF7FEFF 		bl	__aeabi_dsub
 1667              	.LVL246:
 1668 00d4 FFF7FEFF 		bl	__aeabi_d2f
 1669              	.LVL247:
 1670              	.LBE14:
 1671              	.LBE18:
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1672              		.loc 1 309 0
 1673 00d8 FFF7FEFF 		bl	__aeabi_f2d
 1674              	.LVL248:
 1675 00dc 0446     		mov	r4, r0
 1676 00de 0D46     		mov	r5, r1
 1677 00e0 FFF7FEFF 		bl	cosh
 1678              	.LVL249:
 1679 00e4 0246     		mov	r2, r0
 1680 00e6 0B46     		mov	r3, r1
 1681 00e8 5046     		mov	r0, r10
 1682 00ea 5946     		mov	r1, fp
 1683 00ec FFF7FEFF 		bl	__aeabi_ddiv
 1684              	.LVL250:
 1685 00f0 FFF7FEFF 		bl	asin
 1686              	.LVL251:
 1687 00f4 FFF7FEFF 		bl	__aeabi_d2f
 1688              	.LVL252:
 310:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 1689              		.loc 1 310 0
 1690 00f8 00EE100A 		fmsr	s0, r0
 1691 00fc FFF7FEFF 		bl	isometric_latitude_fast_f
 1692              	.LVL253:
 311:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 1693              		.loc 1 311 0
 1694 0100 2046     		mov	r0, r4
 1695 0102 2946     		mov	r1, r5
 310:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 1696              		.loc 1 310 0
 1697 0104 F0EE40AA 		fcpys	s21, s0
 1698              	.LVL254:
 311:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 1699              		.loc 1 311 0
 1700 0108 FFF7FEFF 		bl	sinh
 1701              	.LVL255:
 1702 010c 0446     		mov	r4, r0
 1703 010e 0D46     		mov	r5, r1
 1704 0110 DDE90001 		ldrd	r0, [sp]
 1705 0114 FFF7FEFF 		bl	cos
 1706              	.LVL256:
 1707 0118 0246     		mov	r2, r0
 1708 011a 0B46     		mov	r3, r1
 1709 011c 2046     		mov	r0, r4
 1710 011e 2946     		mov	r1, r5
 1711 0120 FFF7FEFF 		bl	__aeabi_ddiv
 1712              	.LVL257:
 1713 0124 FFF7FEFF 		bl	atan
 1714              	.LVL258:
 1715 0128 FFF7FEFF 		bl	__aeabi_d2f
 1716              	.LVL259:
 1717 012c 0AEE100A 		fmsr	s20, r0
 1718              	.LVL260:
 1719              		.loc 1 313 0
 1720 0130 6AEE098A 		fmuls	s17, s20, s18
 1721              	.LVL261:
 1722 0134 2AEE899A 		fmuls	s18, s21, s18
 1723              	.LVL262:
 1724 0138 0226     		movs	r6, #2
 1725              	.LVL263:
 1726              	.L24:
 1727              	.LBB19:
 314:math/pprz_geodetic_float.c ****   uint8_t k;
 315:math/pprz_geodetic_float.c ****   for (k = 1; k < 3; k++) {
 316:math/pprz_geodetic_float.c ****     struct complex z = { lambda_,  ll_ };
 317:math/pprz_geodetic_float.c ****     CScal(2 * k, z);
 1728              		.loc 1 317 0 discriminator 2
 1729 013a 07EE106A 		fmsr	s14, r6	@ int
 1730 013e F8EEC79A 		fsitos	s19, s14
 1731              	.LVL264:
 1732              	.LBB20:
 318:math/pprz_geodetic_float.c ****     CSin(z);
 1733              		.loc 1 318 0 discriminator 2
 1734 0142 69EEEA7A 		fnmuls	s15, s19, s21
 1735              	.LVL265:
 1736 0146 17EE900A 		fmrs	r0, s15
 1737 014a FFF7FEFF 		bl	__aeabi_f2d
 1738              	.LVL266:
 1739 014e FFF7FEFF 		bl	exp
 1740              	.LVL267:
 1741 0152 FFF7FEFF 		bl	__aeabi_d2f
 1742              	.LVL268:
 1743 0156 6AEE299A 		fmuls	s19, s20, s19
 1744              	.LVL269:
 1745 015a 08EE100A 		fmsr	s16, r0
 1746              	.LVL270:
 1747 015e 19EE900A 		fmrs	r0, s19
 1748              	.LVL271:
 1749 0162 FFF7FEFF 		bl	__aeabi_f2d
 1750              	.LVL272:
 1751 0166 0446     		mov	r4, r0
 1752 0168 0D46     		mov	r5, r1
 1753 016a FFF7FEFF 		bl	cos
 1754              	.LVL273:
 1755 016e FFF7FEFF 		bl	__aeabi_d2f
 1756              	.LVL274:
 1757 0172 2946     		mov	r1, r5
 1758 0174 09EE900A 		fmsr	s19, r0
 1759              	.LVL275:
 1760 0178 2046     		mov	r0, r4
 1761              	.LVL276:
 1762 017a FFF7FEFF 		bl	sin
 1763              	.LVL277:
 1764 017e FFF7FEFF 		bl	__aeabi_d2f
 1765              	.LVL278:
 1766 0182 07EE900A 		fmsr	s15, r0
 1767              	.LVL279:
 1768 0186 B1EE677A 		fnegs	s14, s15
 1769              	.LVL280:
 1770 018a 87EE087A 		fdivs	s14, s14, s16
 1771              	.LVL281:
 1772 018e 314B     		ldr	r3, .L26+52
 1773 0190 03EB4603 		add	r3, r3, r6, lsl #1
 1774 0194 0236     		adds	r6, r6, #2
 1775              	.LVL282:
 1776              	.LBE20:
 1777              	.LBE19:
 315:math/pprz_geodetic_float.c ****   for (k = 1; k < 3; k++) {
 1778              		.loc 1 315 0 discriminator 2
 1779 0196 062E     		cmp	r6, #6
 1780              	.LBB24:
 1781              	.LBB22:
 1782              		.loc 1 318 0 discriminator 2
 1783 0198 BEEE006A 		fconsts	s12, #224
 1784 019c 98EE277A 		vfnms.f32	s14, s16, s15
 1785              	.LVL283:
 1786 01a0 C9EE887A 		fdivs	s15, s19, s16
 1787              	.LVL284:
 1788              	.LBE22:
 319:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator[k], z);
 1789              		.loc 1 319 0 discriminator 2
 1790 01a4 D3ED006A 		flds	s13, [r3]
 1791              	.LVL285:
 1792              	.LBB23:
 318:math/pprz_geodetic_float.c ****     CSin(z);
 1793              		.loc 1 318 0 discriminator 2
 1794 01a8 D8EE297A 		vfnms.f32	s15, s16, s19
 1795              	.LVL286:
 1796              	.LBB21:
 1797 01ac 26EE477A 		fnmuls	s14, s12, s14
 1798              	.LBE21:
 1799 01b0 67EE867A 		fmuls	s15, s15, s12
 1800              	.LVL287:
 1801              	.LBE23:
 320:math/pprz_geodetic_float.c ****     CAdd(z, z_);
 1802              		.loc 1 320 0 discriminator 2
 1803 01b4 E7EE268A 		vfma.f32	s17, s14, s13
 1804              	.LVL288:
 1805 01b8 A7EEA69A 		vfma.f32	s18, s15, s13
 1806              	.LVL289:
 1807              	.LBE24:
 315:math/pprz_geodetic_float.c ****   for (k = 1; k < 3; k++) {
 1808              		.loc 1 315 0 discriminator 2
 1809 01bc BDD1     		bne	.L24
 1810              	.LVL290:
 321:math/pprz_geodetic_float.c ****   }
 322:math/pprz_geodetic_float.c ****   CScal(N, z_);
 1811              		.loc 1 322 0
 1812 01be 19EE100A 		fmrs	r0, s18
 1813              	.LVL291:
 1814 01c2 FFF7FEFF 		bl	__aeabi_f2d
 1815              	.LVL292:
 1816 01c6 1EA3     		adr	r3, .L26+32
 1817 01c8 D3E90023 		ldrd	r2, [r3]
 1818 01cc FFF7FEFF 		bl	__aeabi_dmul
 1819              	.LVL293:
 1820 01d0 FFF7FEFF 		bl	__aeabi_d2f
 1821              	.LVL294:
 323:math/pprz_geodetic_float.c ****   utm->east = DELTA_EAST + z_.im;
 1822              		.loc 1 323 0
 1823 01d4 DFED207A 		flds	s15, .L26+56
 1824 01d8 07EE100A 		fmsr	s14, r0
 1825 01dc 77EE277A 		fadds	s15, s14, s15
 322:math/pprz_geodetic_float.c ****   CScal(N, z_);
 1826              		.loc 1 322 0
 1827 01e0 18EE900A 		fmrs	r0, s17
 1828              		.loc 1 323 0
 1829 01e4 C8ED017A 		fsts	s15, [r8, #4]
 322:math/pprz_geodetic_float.c ****   CScal(N, z_);
 1830              		.loc 1 322 0
 1831 01e8 FFF7FEFF 		bl	__aeabi_f2d
 1832              	.LVL295:
 1833 01ec 14A3     		adr	r3, .L26+32
 1834 01ee D3E90023 		ldrd	r2, [r3]
 1835 01f2 FFF7FEFF 		bl	__aeabi_dmul
 1836              	.LVL296:
 1837 01f6 FFF7FEFF 		bl	__aeabi_d2f
 1838              	.LVL297:
 324:math/pprz_geodetic_float.c ****   utm->north = DELTA_NORTH + z_.re;
 1839              		.loc 1 324 0
 1840 01fa DFED187A 		flds	s15, .L26+60
 325:math/pprz_geodetic_float.c **** 
 326:math/pprz_geodetic_float.c ****   // copy alt above reference ellipsoid
 327:math/pprz_geodetic_float.c ****   utm->alt = lla->alt;
 1841              		.loc 1 327 0
 1842 01fe D9F80830 		ldr	r3, [r9, #8]	@ float
 1843 0202 C8F80830 		str	r3, [r8, #8]	@ float
 324:math/pprz_geodetic_float.c ****   utm->north = DELTA_NORTH + z_.re;
 1844              		.loc 1 324 0
 1845 0206 07EE100A 		fmsr	s14, r0
 1846 020a 77EE277A 		fadds	s15, s14, s15
 1847 020e C8ED007A 		fsts	s15, [r8]
 328:math/pprz_geodetic_float.c **** }
 1848              		.loc 1 328 0
 1849 0212 03B0     		add	sp, sp, #12
 1850              		@ sp needed
 1851 0214 BDEC068B 		fldmfdd	sp!, {d8-d10}
 1852              	.LVL298:
 1853 0218 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1854              	.LVL299:
 1855              	.L27:
 1856 021c AFF30080 		.align	3
 1857              	.L26:
 1858 0220 399D52A2 		.word	-1571644103
 1859 0224 46DF913F 		.word	1066524486
 1860 0228 182D4454 		.word	1413754136
 1861 022c FB21E93F 		.word	1072243195
 1862 0230 00000040 		.word	1073741824
 1863 0234 1AF2B43F 		.word	1068823066
 1864 0238 00000040 		.word	1073741824
 1865 023c 1AF2A43F 		.word	1067774490
 1866 0240 585BB16F 		.word	1873894232
 1867 0244 28525841 		.word	1096307240
 1868 0248 2E927F3F 		.word	1065325102
 1869 024c 0000E03F 		.word	1071644672
 1870 0250 0000F03F 		.word	1072693248
 1871 0254 00000000 		.word	.LANCHOR0
 1872 0258 0024F448 		.word	1223959552
 1873 025c 00000000 		.word	0
 1874              		.cfi_endproc
 1875              	.LFE57:
 1877              		.section	.text.lla_of_utm_f,"ax",%progbits
 1878              		.align	1
 1879              		.global	lla_of_utm_f
 1880              		.thumb
 1881              		.thumb_func
 1883              	lla_of_utm_f:
 1884              	.LFB58:
 329:math/pprz_geodetic_float.c **** 
 330:math/pprz_geodetic_float.c **** void lla_of_utm_f(struct LlaCoor_f *lla, struct UtmCoor_f *utm)
 331:math/pprz_geodetic_float.c **** {
 1885              		.loc 1 331 0
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 8
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              	.LVL300:
 1890 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1891              		.cfi_def_cfa_offset 36
 1892              		.cfi_offset 4, -36
 1893              		.cfi_offset 5, -32
 1894              		.cfi_offset 6, -28
 1895              		.cfi_offset 7, -24
 1896              		.cfi_offset 8, -20
 1897              		.cfi_offset 9, -16
 1898              		.cfi_offset 10, -12
 1899              		.cfi_offset 11, -8
 1900              		.cfi_offset 14, -4
 1901 0004 2DED068B 		fstmfdd	sp!, {d8, d9, d10}
 1902              		.cfi_def_cfa_offset 60
 1903              		.cfi_offset 80, -60
 1904              		.cfi_offset 82, -52
 1905              		.cfi_offset 84, -44
 332:math/pprz_geodetic_float.c ****   float scale = 1 / N / serie_coeff_proj_mercator[0];
 333:math/pprz_geodetic_float.c ****   float real = (utm->north - DELTA_NORTH) * scale;
 1906              		.loc 1 333 0
 1907 0008 DFED9B7A 		flds	s15, .L35+48
 1908 000c D1ED008A 		flds	s17, [r1]
 331:math/pprz_geodetic_float.c **** {
 1909              		.loc 1 331 0
 1910 0010 83B0     		sub	sp, sp, #12
 1911              		.cfi_def_cfa_offset 72
 331:math/pprz_geodetic_float.c **** {
 1912              		.loc 1 331 0
 1913 0012 8346     		mov	fp, r0
 334:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 1914              		.loc 1 334 0
 1915 0014 4868     		ldr	r0, [r1, #4]	@ float
 1916              	.LVL301:
 333:math/pprz_geodetic_float.c ****   float real = (utm->north - DELTA_NORTH) * scale;
 1917              		.loc 1 333 0
 1918 0016 68EEA78A 		fmuls	s17, s17, s15
 1919              	.LVL302:
 331:math/pprz_geodetic_float.c **** {
 1920              		.loc 1 331 0
 1921 001a 8A46     		mov	r10, r1
 1922              		.loc 1 334 0
 1923 001c FFF7FEFF 		bl	__aeabi_f2d
 1924              	.LVL303:
 1925 0020 89A3     		adr	r3, .L35
 1926 0022 D3E90023 		ldrd	r2, [r3]
 1927 0026 FFF7FEFF 		bl	__aeabi_dsub
 1928              	.LVL304:
 1929 002a 89A3     		adr	r3, .L35+8
 1930 002c D3E90023 		ldrd	r2, [r3]
 1931 0030 FFF7FEFF 		bl	__aeabi_dmul
 1932              	.LVL305:
 1933 0034 FFF7FEFF 		bl	__aeabi_d2f
 1934              	.LVL306:
 1935 0038 09EE100A 		fmsr	s18, r0
 1936              	.LVL307:
 1937              	.LBB32:
 335:math/pprz_geodetic_float.c ****   struct complex z = { real, img };
 336:math/pprz_geodetic_float.c **** 
 337:math/pprz_geodetic_float.c ****   uint8_t k;
 338:math/pprz_geodetic_float.c ****   for (k = 1; k < 2; k++) {
 339:math/pprz_geodetic_float.c ****     struct complex z_ = { real, img };
 340:math/pprz_geodetic_float.c ****     CScal(2 * k, z_);
 1938              		.loc 1 340 0
 1939 003c 79EE097A 		fadds	s15, s18, s18
 1940              	.LVL308:
 1941              	.LBB33:
 341:math/pprz_geodetic_float.c ****     CSin(z_);
 1942              		.loc 1 341 0
 1943 0040 BEEE00AA 		fconsts	s20, #224
 1944 0044 F1EE677A 		fnegs	s15, s15
 1945              	.LVL309:
 1946 0048 17EE900A 		fmrs	r0, s15
 1947              	.LVL310:
 1948 004c FFF7FEFF 		bl	__aeabi_f2d
 1949              	.LVL311:
 1950 0050 FFF7FEFF 		bl	exp
 1951              	.LVL312:
 1952 0054 FFF7FEFF 		bl	__aeabi_d2f
 1953              	.LVL313:
 1954 0058 78EEA87A 		fadds	s15, s17, s17
 1955              	.LVL314:
 1956 005c 08EE100A 		fmsr	s16, r0
 1957              	.LVL315:
 1958 0060 17EE900A 		fmrs	r0, s15
 1959              	.LVL316:
 1960 0064 FFF7FEFF 		bl	__aeabi_f2d
 1961              	.LVL317:
 1962 0068 0446     		mov	r4, r0
 1963 006a 0D46     		mov	r5, r1
 1964 006c FFF7FEFF 		bl	cos
 1965              	.LVL318:
 1966 0070 FFF7FEFF 		bl	__aeabi_d2f
 1967              	.LVL319:
 1968 0074 2946     		mov	r1, r5
 1969 0076 09EE900A 		fmsr	s19, r0
 1970              	.LVL320:
 1971 007a 2046     		mov	r0, r4
 1972              	.LVL321:
 1973 007c FFF7FEFF 		bl	sin
 1974              	.LVL322:
 1975 0080 FFF7FEFF 		bl	__aeabi_d2f
 1976              	.LVL323:
 1977 0084 0AEE900A 		fmsr	s21, r0
 1978              	.LVL324:
 1979              	.LBE33:
 1980              	.LBE32:
 342:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 343:math/pprz_geodetic_float.c ****     CSub(z_, z);
 344:math/pprz_geodetic_float.c ****   }
 345:math/pprz_geodetic_float.c **** 
 346:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1981              		.loc 1 346 0
 1982 0088 9AF80C00 		ldrb	r0, [r10, #12]	@ zero_extendqisi2
 1983              	.LVL325:
 1984 008c 0623     		movs	r3, #6
 1985 008e 0138     		subs	r0, r0, #1
 1986 0090 5843     		muls	r0, r3, r0
 1987 0092 B138     		subs	r0, r0, #177
 1988 0094 FFF7FEFF 		bl	__aeabi_i2d
 1989              	.LVL326:
 1990 0098 6FA3     		adr	r3, .L35+16
 1991 009a D3E90023 		ldrd	r2, [r3]
 1992 009e FFF7FEFF 		bl	__aeabi_dmul
 1993              	.LVL327:
 1994 00a2 FFF7FEFF 		bl	__aeabi_d2f
 1995              	.LVL328:
 347:math/pprz_geodetic_float.c ****   lla->lon = lambda_c + atan(sinh(z.im) / cos(z.re));
 1996              		.loc 1 347 0
 1997 00a6 FFF7FEFF 		bl	__aeabi_f2d
 1998              	.LVL329:
 1999              	.LBB38:
 2000              	.LBB34:
 341:math/pprz_geodetic_float.c ****     CSin(z_);
 2001              		.loc 1 341 0
 2002 00aa 89EE887A 		fdivs	s14, s19, s16
 2003              	.LVL330:
 2004              	.LBE34:
 2005              	.LBE38:
 2006              		.loc 1 347 0
 2007 00ae 0646     		mov	r6, r0
 2008 00b0 0F46     		mov	r7, r1
 2009              	.LBB39:
 2010              	.LBB35:
 341:math/pprz_geodetic_float.c ****     CSin(z_);
 2011              		.loc 1 341 0
 2012 00b2 98EE297A 		vfnms.f32	s14, s16, s19
 2013              	.LVL331:
 2014              	.LBE35:
 343:math/pprz_geodetic_float.c ****     CSub(z_, z);
 2015              		.loc 1 343 0
 2016 00b6 DFED719A 		flds	s19, .L35+52
 2017              	.LVL332:
 2018 00ba 2AEE477A 		fnmuls	s14, s20, s14
 2019              	.LBE39:
 2020              		.loc 1 347 0
 2021 00be A7EE299A 		vfma.f32	s18, s14, s19
 2022              	.LVL333:
 2023 00c2 19EE100A 		fmrs	r0, s18
 2024 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2025              	.LVL334:
 2026 00ca CDE90001 		strd	r0, [sp]
 2027 00ce FFF7FEFF 		bl	sinh
 2028              	.LVL335:
 2029              	.LBB40:
 2030              	.LBB36:
 341:math/pprz_geodetic_float.c ****     CSin(z_);
 2031              		.loc 1 341 0
 2032 00d2 F1EE6A7A 		fnegs	s15, s21
 2033 00d6 C7EE887A 		fdivs	s15, s15, s16
 2034              	.LVL336:
 2035              	.LBE36:
 2036              	.LBE40:
 2037              		.loc 1 347 0
 2038 00da 8046     		mov	r8, r0
 2039 00dc 8946     		mov	r9, r1
 2040              	.LBB41:
 2041              	.LBB37:
 341:math/pprz_geodetic_float.c ****     CSin(z_);
 2042              		.loc 1 341 0
 2043 00de D8EE2A7A 		vfnms.f32	s15, s16, s21
 2044              	.LVL337:
 2045 00e2 6AEE277A 		fmuls	s15, s20, s15
 2046              	.LBE37:
 2047              	.LBE41:
 2048              		.loc 1 347 0
 2049 00e6 E7EEA98A 		vfma.f32	s17, s15, s19
 2050              	.LVL338:
 2051 00ea 18EE900A 		fmrs	r0, s17
 2052 00ee FFF7FEFF 		bl	__aeabi_f2d
 2053              	.LVL339:
 2054 00f2 0446     		mov	r4, r0
 2055 00f4 0D46     		mov	r5, r1
 2056 00f6 FFF7FEFF 		bl	cos
 2057              	.LVL340:
 2058 00fa 0246     		mov	r2, r0
 2059 00fc 0B46     		mov	r3, r1
 2060 00fe 4046     		mov	r0, r8
 2061 0100 4946     		mov	r1, r9
 2062 0102 FFF7FEFF 		bl	__aeabi_ddiv
 2063              	.LVL341:
 2064 0106 FFF7FEFF 		bl	atan
 2065              	.LVL342:
 2066 010a 0246     		mov	r2, r0
 2067 010c 0B46     		mov	r3, r1
 2068 010e 3046     		mov	r0, r6
 2069 0110 3946     		mov	r1, r7
 2070 0112 FFF7FEFF 		bl	__aeabi_dadd
 2071              	.LVL343:
 2072 0116 FFF7FEFF 		bl	__aeabi_d2f
 2073              	.LVL344:
 348:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(z.re) / cosh(z.im));
 2074              		.loc 1 348 0
 2075 011a 2946     		mov	r1, r5
 347:math/pprz_geodetic_float.c ****   lla->lon = lambda_c + atan(sinh(z.im) / cos(z.re));
 2076              		.loc 1 347 0
 2077 011c CBF80400 		str	r0, [fp, #4]	@ float
 2078              		.loc 1 348 0
 2079 0120 2046     		mov	r0, r4
 2080 0122 FFF7FEFF 		bl	sin
 2081              	.LVL345:
 2082 0126 0446     		mov	r4, r0
 2083 0128 0D46     		mov	r5, r1
 2084 012a DDE90001 		ldrd	r0, [sp]
 2085 012e FFF7FEFF 		bl	cosh
 2086              	.LVL346:
 2087 0132 0246     		mov	r2, r0
 2088 0134 0B46     		mov	r3, r1
 2089 0136 2046     		mov	r0, r4
 2090 0138 2946     		mov	r1, r5
 2091 013a FFF7FEFF 		bl	__aeabi_ddiv
 2092              	.LVL347:
 2093 013e FFF7FEFF 		bl	asin
 2094              	.LVL348:
 2095 0142 FFF7FEFF 		bl	__aeabi_d2f
 2096              	.LVL349:
 349:math/pprz_geodetic_float.c ****   float il = isometric_latitude_fast_f(phi_);
 2097              		.loc 1 349 0
 2098 0146 00EE100A 		fmsr	s0, r0
 2099 014a FFF7FEFF 		bl	isometric_latitude_fast_f
 2100              	.LVL350:
 2101              	.LBB42:
 2102              	.LBB43:
 290:math/pprz_geodetic_float.c ****   float exp_l = exp(lat);
 2103              		.loc 1 290 0
 2104 014e 10EE100A 		fmrs	r0, s0
 2105 0152 FFF7FEFF 		bl	__aeabi_f2d
 2106              	.LVL351:
 2107 0156 FFF7FEFF 		bl	exp
 2108              	.LVL352:
 2109 015a FFF7FEFF 		bl	__aeabi_d2f
 2110              	.LVL353:
 291:math/pprz_geodetic_float.c ****   float phi0 = 2 * atan(exp_l) - M_PI_2;
 2111              		.loc 1 291 0
 2112 015e FFF7FEFF 		bl	__aeabi_f2d
 2113              	.LVL354:
 2114 0162 8046     		mov	r8, r0
 2115 0164 8946     		mov	r9, r1
 2116 0166 FFF7FEFF 		bl	atan
 2117              	.LVL355:
 2118 016a 0246     		mov	r2, r0
 2119 016c 0B46     		mov	r3, r1
 2120 016e FFF7FEFF 		bl	__aeabi_dadd
 2121              	.LVL356:
 2122 0172 3BA3     		adr	r3, .L35+24
 2123 0174 D3E90023 		ldrd	r2, [r3]
 2124 0178 FFF7FEFF 		bl	__aeabi_dsub
 2125              	.LVL357:
 2126 017c FFF7FEFF 		bl	__aeabi_d2f
 2127              	.LVL358:
 2128 0180 08EE100A 		fmsr	s16, r0
 2129              	.LVL359:
 2130 0184 0326     		movs	r6, #3
 2131              	.LVL360:
 2132              	.L32:
 2133              	.LBB44:
 297:math/pprz_geodetic_float.c ****     float sin_phi = e * sin(phi_);
 2134              		.loc 1 297 0
 2135 0186 18EE100A 		fmrs	r0, s16
 2136 018a FFF7FEFF 		bl	__aeabi_f2d
 2137              	.LVL361:
 2138 018e FFF7FEFF 		bl	sin
 2139              	.LVL362:
 2140 0192 35A3     		adr	r3, .L35+32
 2141 0194 D3E90023 		ldrd	r2, [r3]
 2142 0198 FFF7FEFF 		bl	__aeabi_dmul
 2143              	.LVL363:
 2144 019c FFF7FEFF 		bl	__aeabi_d2f
 2145              	.LVL364:
 2146 01a0 08EE900A 		fmsr	s17, r0
 2147              	.LVL365:
 298:math/pprz_geodetic_float.c ****     phi0 = 2 * atan(pow((1 + sin_phi) / (1. - sin_phi), e / 2.) * exp_l) - M_PI_2;
 2148              		.loc 1 298 0
 2149 01a4 F7EE007A 		fconsts	s15, #112
 2150 01a8 78EEA77A 		fadds	s15, s17, s15
 2151 01ac 013E     		subs	r6, r6, #1
 2152              	.LVL366:
 2153 01ae 17EE900A 		fmrs	r0, s15
 2154              	.LVL367:
 2155 01b2 FFF7FEFF 		bl	__aeabi_f2d
 2156              	.LVL368:
 2157 01b6 0446     		mov	r4, r0
 2158 01b8 18EE900A 		fmrs	r0, s17
 2159 01bc 0D46     		mov	r5, r1
 2160 01be FFF7FEFF 		bl	__aeabi_f2d
 2161              	.LVL369:
 2162 01c2 0246     		mov	r2, r0
 2163 01c4 0B46     		mov	r3, r1
 2164 01c6 0020     		movs	r0, #0
 2165 01c8 2D49     		ldr	r1, .L35+56
 2166 01ca FFF7FEFF 		bl	__aeabi_dsub
 2167              	.LVL370:
 2168 01ce 0246     		mov	r2, r0
 2169 01d0 0B46     		mov	r3, r1
 2170 01d2 2046     		mov	r0, r4
 2171 01d4 2946     		mov	r1, r5
 2172 01d6 FFF7FEFF 		bl	__aeabi_ddiv
 2173              	.LVL371:
 2174 01da 25A3     		adr	r3, .L35+40
 2175 01dc D3E90023 		ldrd	r2, [r3]
 2176 01e0 FFF7FEFF 		bl	pow
 2177              	.LVL372:
 2178 01e4 4246     		mov	r2, r8
 2179 01e6 4B46     		mov	r3, r9
 2180 01e8 FFF7FEFF 		bl	__aeabi_dmul
 2181              	.LVL373:
 2182 01ec FFF7FEFF 		bl	atan
 2183              	.LVL374:
 2184 01f0 0246     		mov	r2, r0
 2185 01f2 0B46     		mov	r3, r1
 2186 01f4 FFF7FEFF 		bl	__aeabi_dadd
 2187              	.LVL375:
 2188 01f8 19A3     		adr	r3, .L35+24
 2189 01fa D3E90023 		ldrd	r2, [r3]
 2190 01fe FFF7FEFF 		bl	__aeabi_dsub
 2191              	.LVL376:
 2192 0202 FFF7FEFF 		bl	__aeabi_d2f
 2193              	.LVL377:
 2194              	.LBE44:
 300:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2195              		.loc 1 300 0
 2196 0206 16F0FF06 		ands	r6, r6, #255
 2197              	.LVL378:
 2198              	.LBB45:
 298:math/pprz_geodetic_float.c ****     phi0 = 2 * atan(pow((1 + sin_phi) / (1. - sin_phi), e / 2.) * exp_l) - M_PI_2;
 2199              		.loc 1 298 0
 2200 020a 07EE900A 		fmsr	s15, r0
 2201              	.LVL379:
 2202              	.LBE45:
 300:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2203              		.loc 1 300 0
 2204 020e 0AD1     		bne	.L29
 2205              	.LVL380:
 2206              	.L30:
 2207              	.LBE43:
 2208              	.LBE42:
 350:math/pprz_geodetic_float.c ****   lla->lat = inverse_isometric_latitude_f(il, E, 1e-8);
 351:math/pprz_geodetic_float.c **** 
 352:math/pprz_geodetic_float.c ****   // copy alt above reference ellipsoid
 353:math/pprz_geodetic_float.c ****   lla->alt = utm->alt;
 2209              		.loc 1 353 0
 2210 0210 DAF80830 		ldr	r3, [r10, #8]	@ float
 350:math/pprz_geodetic_float.c ****   lla->lat = inverse_isometric_latitude_f(il, E, 1e-8);
 2211              		.loc 1 350 0
 2212 0214 CBED007A 		fsts	s15, [fp]
 2213              		.loc 1 353 0
 2214 0218 CBF80830 		str	r3, [fp, #8]	@ float
 354:math/pprz_geodetic_float.c **** }
 2215              		.loc 1 354 0
 2216 021c 03B0     		add	sp, sp, #12
 2217              		@ sp needed
 2218 021e BDEC068B 		fldmfdd	sp!, {d8-d10}
 2219 0222 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2220              	.LVL381:
 2221              	.L29:
 2222              	.LBB48:
 2223              	.LBB47:
 300:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 2224              		.loc 1 300 0
 2225 0226 38EE678A 		fsubs	s16, s16, s15
 2226              	.LVL382:
 2227 022a 9FED167A 		flds	s14, .L35+60
 2228 022e B0EEC88A 		fabss	s16, s16
 2229 0232 B4EEC78A 		fcmpes	s16, s14
 2230 0236 F1EE10FA 		fmstat
 2231 023a E9DD     		ble	.L30
 2232              	.LBB46:
 298:math/pprz_geodetic_float.c ****     phi0 = 2 * atan(pow((1 + sin_phi) / (1. - sin_phi), e / 2.) * exp_l) - M_PI_2;
 2233              		.loc 1 298 0
 2234 023c 08EE100A 		fmsr	s16, r0
 2235 0240 A1E7     		b	.L32
 2236              	.L36:
 2237 0242 00BFAFF3 		.align	3
 2237      0080
 2238              	.L35:
 2239 0248 00000000 		.word	0
 2240 024c 80841E41 		.word	1092519040
 2241 0250 00000060 		.word	1610612736
 2242 0254 5016853E 		.word	1048909392
 2243 0258 399D52A2 		.word	-1571644103
 2244 025c 46DF913F 		.word	1066524486
 2245 0260 182D4454 		.word	1413754136
 2246 0264 FB21F93F 		.word	1073291771
 2247 0268 00000040 		.word	1073741824
 2248 026c 1AF2B43F 		.word	1068823066
 2249 0270 00000040 		.word	1073741824
 2250 0274 1AF2A43F 		.word	1067774490
 2251 0278 83B22834 		.word	875082371
 2252 027c 419B5B3A 		.word	979082049
 2253 0280 0000F03F 		.word	1072693248
 2254 0284 77CC2B32 		.word	841731191
 2255              	.LBE46:
 2256              	.LBE47:
 2257              	.LBE48:
 2258              		.cfi_endproc
 2259              	.LFE58:
 2261              		.section	.rodata.serie_coeff_proj_mercator,"a",%progbits
 2262              		.align	2
 2263              		.set	.LANCHOR0,. + 0
 2266              	serie_coeff_proj_mercator:
 2267 0000 2E927F3F 		.word	1065325102
 2268 0004 063D5B3A 		.word	979057926
 2269 0008 CBE54B35 		.word	894166475
 2270 000c 8A53A430 		.word	816075658
 2271 0010 19A5292C 		.word	740926745
 2272              		.text
 2273              	.Letext0:
 2274              		.file 2 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_default_types.h"
 2275              		.file 3 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 2276              		.file 4 "math/pprz_algebra_float.h"
 2277              		.file 5 "math/pprz_geodetic_float.h"
 2278              		.file 6 "math/pprz_algebra_double.h"
 2279              		.file 7 "math/pprz_geodetic_double.h"
 2280              		.file 8 "./math/pprz_geodetic_utm.h"
 2281              		.file 9 "/home/lsk/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pprz_geodetic_float.c
     /tmp/ccngjdEc.s:24     .text.isometric_latitude_fast_f:00000000 $t
     /tmp/ccngjdEc.s:28     .text.isometric_latitude_fast_f:00000000 isometric_latitude_fast_f
     /tmp/ccngjdEc.s:64     .text.isometric_latitude_fast_f:00000030 $d
     /tmp/ccngjdEc.s:71     .text.enu_of_ecef_point_f:00000000 $t
     /tmp/ccngjdEc.s:76     .text.enu_of_ecef_point_f:00000000 enu_of_ecef_point_f
     /tmp/ccngjdEc.s:127    .text.ned_of_ecef_point_f:00000000 $t
     /tmp/ccngjdEc.s:132    .text.ned_of_ecef_point_f:00000000 ned_of_ecef_point_f
     /tmp/ccngjdEc.s:170    .text.enu_of_ecef_vect_f:00000000 $t
     /tmp/ccngjdEc.s:175    .text.enu_of_ecef_vect_f:00000000 enu_of_ecef_vect_f
     /tmp/ccngjdEc.s:213    .text.ned_of_ecef_vect_f:00000000 $t
     /tmp/ccngjdEc.s:218    .text.ned_of_ecef_vect_f:00000000 ned_of_ecef_vect_f
     /tmp/ccngjdEc.s:256    .text.ecef_of_enu_point_f:00000000 $t
     /tmp/ccngjdEc.s:261    .text.ecef_of_enu_point_f:00000000 ecef_of_enu_point_f
     /tmp/ccngjdEc.s:490    .text.ecef_of_ned_point_f:00000000 $t
     /tmp/ccngjdEc.s:495    .text.ecef_of_ned_point_f:00000000 ecef_of_ned_point_f
     /tmp/ccngjdEc.s:533    .text.ecef_of_enu_vect_f:00000000 $t
     /tmp/ccngjdEc.s:538    .text.ecef_of_enu_vect_f:00000000 ecef_of_enu_vect_f
     /tmp/ccngjdEc.s:758    .text.ecef_of_ned_vect_f:00000000 $t
     /tmp/ccngjdEc.s:763    .text.ecef_of_ned_vect_f:00000000 ecef_of_ned_vect_f
     /tmp/ccngjdEc.s:801    .text.lla_of_ecef_f:00000000 $t
     /tmp/ccngjdEc.s:806    .text.lla_of_ecef_f:00000000 lla_of_ecef_f
     /tmp/ccngjdEc.s:1031   .text.lla_of_ecef_f:000001a8 $d
     /tmp/ccngjdEc.s:1047   .text.ltp_def_from_ecef_f:00000000 $t
     /tmp/ccngjdEc.s:1052   .text.ltp_def_from_ecef_f:00000000 ltp_def_from_ecef_f
     /tmp/ccngjdEc.s:1161   .text.ecef_of_lla_f:00000000 $t
     /tmp/ccngjdEc.s:1166   .text.ecef_of_lla_f:00000000 ecef_of_lla_f
     /tmp/ccngjdEc.s:1300   .text.ecef_of_lla_f:000000c8 $d
     /tmp/ccngjdEc.s:1308   .text.ltp_def_from_lla_f:00000000 $t
     /tmp/ccngjdEc.s:1313   .text.ltp_def_from_lla_f:00000000 ltp_def_from_lla_f
     /tmp/ccngjdEc.s:1420   .text.enu_of_lla_point_f:00000000 $t
     /tmp/ccngjdEc.s:1425   .text.enu_of_lla_point_f:00000000 enu_of_lla_point_f
     /tmp/ccngjdEc.s:1463   .text.ned_of_lla_point_f:00000000 $t
     /tmp/ccngjdEc.s:1468   .text.ned_of_lla_point_f:00000000 ned_of_lla_point_f
     /tmp/ccngjdEc.s:1509   .text.utm_of_lla_f:00000000 $t
     /tmp/ccngjdEc.s:1514   .text.utm_of_lla_f:00000000 utm_of_lla_f
     /tmp/ccngjdEc.s:1858   .text.utm_of_lla_f:00000220 $d
     /tmp/ccngjdEc.s:1878   .text.lla_of_utm_f:00000000 $t
     /tmp/ccngjdEc.s:1883   .text.lla_of_utm_f:00000000 lla_of_utm_f
     /tmp/ccngjdEc.s:2239   .text.lla_of_utm_f:00000248 $d
     /tmp/ccngjdEc.s:2262   .rodata.serie_coeff_proj_mercator:00000000 $d
     /tmp/ccngjdEc.s:2266   .rodata.serie_coeff_proj_mercator:00000000 serie_coeff_proj_mercator
                     .debug_frame:00000010 $d
     /tmp/ccngjdEc.s:70     .text.isometric_latitude_fast_f:0000003c $t
                           .group:00000000 wm4.0.61e172dafa1e7adfbd840ee8b103061f
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.newlib.h.8.fec018e441fee7bfa1923812ad010f97
                           .group:00000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:00000000 wm4.config.h.212.4163ef2871a828c674038d036b081cfd
                           .group:00000000 wm4._ansi.h.23.2147fde150631f5584b9dc29b914d1b8
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4._default_types.h.6.9e4229723f5523536bc8f574589d6a99
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.56.a2d04de9d47039852021e66fca39bb58
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.string.h.126.6ff3aa59129e7f66b2c273baf353e066
                           .group:00000000 wm4.stdint.h.10.d0f8e374834fcfc2e296d5d5fe82f02a
                           .group:00000000 wm4.inttypes.h.24.4db40689d622c4d3b547b5801303bdae
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.math.h.35.6ddd393aa87bd6f6206738d11f2687bd
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.pprz_algebra_double.h.32.ffddb69f4b2468d251e675e232b5bba1
                           .group:00000000 wm4.pprz_geodetic_utm.h.31.62f7b8d6a14b5a86d16c21424652c0cf

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
tan
log
sqrtf
powf
atanf
atan2f
sinf
cosf
__aeabi_i2d
__aeabi_dsub
__aeabi_ddiv
sin
cosh
asin
sinh
cos
atan
exp
pow
