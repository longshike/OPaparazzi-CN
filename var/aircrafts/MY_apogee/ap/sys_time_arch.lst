   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"sys_time_arch.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dadd
  21              		.global	__aeabi_d2uiz
  22              		.section	.text.sys_time_arch_init,"ax",%progbits
  23              		.align	1
  24              		.global	sys_time_arch_init
  25              		.thumb
  26              		.thumb_func
  28              	sys_time_arch_init:
  29              	.LFB24:
  30              		.file 1 "arch/stm32/mcu_periph/sys_time_arch.c"
   1:arch/stm32/mcu_periph/sys_time_arch.c **** /*
   2:arch/stm32/mcu_periph/sys_time_arch.c ****  * Copyright (C) 2009-2011 The Paparazzi Team
   3:arch/stm32/mcu_periph/sys_time_arch.c ****  *
   4:arch/stm32/mcu_periph/sys_time_arch.c ****  * This file is part of paparazzi.
   5:arch/stm32/mcu_periph/sys_time_arch.c ****  *
   6:arch/stm32/mcu_periph/sys_time_arch.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:arch/stm32/mcu_periph/sys_time_arch.c ****  * it under the terms of the GNU General Public License as published by
   8:arch/stm32/mcu_periph/sys_time_arch.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:arch/stm32/mcu_periph/sys_time_arch.c ****  * any later version.
  10:arch/stm32/mcu_periph/sys_time_arch.c ****  *
  11:arch/stm32/mcu_periph/sys_time_arch.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:arch/stm32/mcu_periph/sys_time_arch.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:arch/stm32/mcu_periph/sys_time_arch.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:arch/stm32/mcu_periph/sys_time_arch.c ****  * GNU General Public License for more details.
  15:arch/stm32/mcu_periph/sys_time_arch.c ****  *
  16:arch/stm32/mcu_periph/sys_time_arch.c ****  * You should have received a copy of the GNU General Public License
  17:arch/stm32/mcu_periph/sys_time_arch.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:arch/stm32/mcu_periph/sys_time_arch.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:arch/stm32/mcu_periph/sys_time_arch.c ****  * Boston, MA 02111-1307, USA.
  20:arch/stm32/mcu_periph/sys_time_arch.c ****  */
  21:arch/stm32/mcu_periph/sys_time_arch.c **** 
  22:arch/stm32/mcu_periph/sys_time_arch.c **** /**
  23:arch/stm32/mcu_periph/sys_time_arch.c ****  * @file arch/stm32/mcu_periph/sys_time_arch.c
  24:arch/stm32/mcu_periph/sys_time_arch.c ****  * @ingroup stm32_arch
  25:arch/stm32/mcu_periph/sys_time_arch.c ****  *
  26:arch/stm32/mcu_periph/sys_time_arch.c ****  * STM32 timing functions.
  27:arch/stm32/mcu_periph/sys_time_arch.c ****  *
  28:arch/stm32/mcu_periph/sys_time_arch.c ****  */
  29:arch/stm32/mcu_periph/sys_time_arch.c **** 
  30:arch/stm32/mcu_periph/sys_time_arch.c **** #include "mcu_periph/sys_time.h"
  31:arch/stm32/mcu_periph/sys_time_arch.c **** 
  32:arch/stm32/mcu_periph/sys_time_arch.c **** #include "libopencm3/cm3/systick.h"
  33:arch/stm32/mcu_periph/sys_time_arch.c **** 
  34:arch/stm32/mcu_periph/sys_time_arch.c **** #ifdef SYS_TIME_LED
  35:arch/stm32/mcu_periph/sys_time_arch.c **** #include "led.h"
  36:arch/stm32/mcu_periph/sys_time_arch.c **** #endif
  37:arch/stm32/mcu_periph/sys_time_arch.c **** 
  38:arch/stm32/mcu_periph/sys_time_arch.c **** #ifndef USE_OCM3_SYSTICK_INIT
  39:arch/stm32/mcu_periph/sys_time_arch.c **** #define USE_OCM3_SYSTICK_INIT 1
  40:arch/stm32/mcu_periph/sys_time_arch.c **** #endif
  41:arch/stm32/mcu_periph/sys_time_arch.c **** 
  42:arch/stm32/mcu_periph/sys_time_arch.c **** void sys_tick_handler(void);
  43:arch/stm32/mcu_periph/sys_time_arch.c **** 
  44:arch/stm32/mcu_periph/sys_time_arch.c **** /** Initialize SysTick.
  45:arch/stm32/mcu_periph/sys_time_arch.c ****  * Generate SysTick interrupt every sys_time.resolution_cpu_ticks
  46:arch/stm32/mcu_periph/sys_time_arch.c ****  */
  47:arch/stm32/mcu_periph/sys_time_arch.c **** void sys_time_arch_init(void)
  48:arch/stm32/mcu_periph/sys_time_arch.c **** {
  31              		.loc 1 48 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35 0000 10B5     		push	{r4, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 4, -8
  38              		.cfi_offset 14, -4
  49:arch/stm32/mcu_periph/sys_time_arch.c ****   /* run cortex systick timer with 72MHz (FIXME only 72 or does it work with 168MHz???) */
  50:arch/stm32/mcu_periph/sys_time_arch.c **** #if USE_OCM3_SYSTICK_INIT
  51:arch/stm32/mcu_periph/sys_time_arch.c ****   systick_set_clocksource(STK_CSR_CLKSOURCE_AHB);
  52:arch/stm32/mcu_periph/sys_time_arch.c **** #endif
  53:arch/stm32/mcu_periph/sys_time_arch.c ****   sys_time.cpu_ticks_per_sec = AHB_CLK;
  39              		.loc 1 53 0
  40 0002 114C     		ldr	r4, .L2
  51:arch/stm32/mcu_periph/sys_time_arch.c **** #endif
  41              		.loc 1 51 0
  42 0004 0420     		movs	r0, #4
  43 0006 FFF7FEFF 		bl	systick_set_clocksource
  44              	.LVL0:
  54:arch/stm32/mcu_periph/sys_time_arch.c **** 
  55:arch/stm32/mcu_periph/sys_time_arch.c ****   /* cpu ticks per desired sys_time timer step */
  56:arch/stm32/mcu_periph/sys_time_arch.c ****   sys_time.resolution_cpu_ticks = (uint32_t)(sys_time.resolution * sys_time.cpu_ticks_per_sec + 0.5
  45              		.loc 1 56 0
  46 000a 94ED537A 		flds	s14, [r4, #332]
  47 000e DFED0F7A 		flds	s15, .L2+4
  53:arch/stm32/mcu_periph/sys_time_arch.c **** 
  48              		.loc 1 53 0
  49 0012 0F4B     		ldr	r3, .L2+8
  50 0014 C4F85831 		str	r3, [r4, #344]
  51              		.loc 1 56 0
  52 0018 67EE277A 		fmuls	s15, s14, s15
  53 001c 17EE900A 		fmrs	r0, s15
  54 0020 FFF7FEFF 		bl	__aeabi_f2d
  55              	.LVL1:
  56 0024 0022     		movs	r2, #0
  57 0026 0B4B     		ldr	r3, .L2+12
  58 0028 FFF7FEFF 		bl	__aeabi_dadd
  59              	.LVL2:
  60 002c FFF7FEFF 		bl	__aeabi_d2uiz
  61              	.LVL3:
  62 0030 C4F85401 		str	r0, [r4, #340]
  57:arch/stm32/mcu_periph/sys_time_arch.c **** 
  58:arch/stm32/mcu_periph/sys_time_arch.c **** #if USE_OCM3_SYSTICK_INIT
  59:arch/stm32/mcu_periph/sys_time_arch.c ****   /* The timer interrupt is activated on the transition from 1 to 0,
  60:arch/stm32/mcu_periph/sys_time_arch.c ****    * therefore it activates every n+1 clock ticks.
  61:arch/stm32/mcu_periph/sys_time_arch.c ****    */
  62:arch/stm32/mcu_periph/sys_time_arch.c ****   systick_set_reload(sys_time.resolution_cpu_ticks - 1);
  63              		.loc 1 62 0
  64 0034 0138     		subs	r0, r0, #1
  65 0036 FFF7FEFF 		bl	systick_set_reload
  66              	.LVL4:
  63:arch/stm32/mcu_periph/sys_time_arch.c **** 
  64:arch/stm32/mcu_periph/sys_time_arch.c ****   systick_interrupt_enable();
  67              		.loc 1 64 0
  68 003a FFF7FEFF 		bl	systick_interrupt_enable
  69              	.LVL5:
  65:arch/stm32/mcu_periph/sys_time_arch.c ****   systick_counter_enable();
  66:arch/stm32/mcu_periph/sys_time_arch.c **** #endif
  67:arch/stm32/mcu_periph/sys_time_arch.c **** }
  70              		.loc 1 67 0
  71 003e BDE81040 		pop	{r4, lr}
  72              		.cfi_restore 14
  73              		.cfi_restore 4
  74              		.cfi_def_cfa_offset 0
  65:arch/stm32/mcu_periph/sys_time_arch.c ****   systick_counter_enable();
  75              		.loc 1 65 0
  76 0042 FFF7FEBF 		b	systick_counter_enable
  77              	.LVL6:
  78              	.L3:
  79 0046 00BF     		.align	2
  80              	.L2:
  81 0048 00000000 		.word	sys_time
  82 004c A037204D 		.word	1293957024
  83 0050 007A030A 		.word	168000000
  84 0054 0000E03F 		.word	1071644672
  85              		.cfi_endproc
  86              	.LFE24:
  88              		.section	.text.sys_tick_handler,"ax",%progbits
  89              		.align	1
  90              		.global	sys_tick_handler
  91              		.thumb
  92              		.thumb_func
  94              	sys_tick_handler:
  95              	.LFB25:
  68:arch/stm32/mcu_periph/sys_time_arch.c **** 
  69:arch/stm32/mcu_periph/sys_time_arch.c **** 
  70:arch/stm32/mcu_periph/sys_time_arch.c **** // FIXME : nb_tick rollover ???
  71:arch/stm32/mcu_periph/sys_time_arch.c **** //
  72:arch/stm32/mcu_periph/sys_time_arch.c **** // 97 days at 512hz
  73:arch/stm32/mcu_periph/sys_time_arch.c **** // 12 hours at 100khz
  74:arch/stm32/mcu_periph/sys_time_arch.c **** //
  75:arch/stm32/mcu_periph/sys_time_arch.c **** void sys_tick_handler(void)
  76:arch/stm32/mcu_periph/sys_time_arch.c **** {
  96              		.loc 1 76 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
  77:arch/stm32/mcu_periph/sys_time_arch.c ****   sys_time.nb_tick++;
 100              		.loc 1 77 0
 101 0000 1A4B     		ldr	r3, .L15
 102 0002 9A68     		ldr	r2, [r3, #8]
 103 0004 0132     		adds	r2, r2, #1
  76:arch/stm32/mcu_periph/sys_time_arch.c ****   sys_time.nb_tick++;
 104              		.loc 1 76 0
 105 0006 70B5     		push	{r4, r5, r6, lr}
 106              		.cfi_def_cfa_offset 16
 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 6, -8
 110              		.cfi_offset 14, -4
 111              		.loc 1 77 0
 112 0008 9A60     		str	r2, [r3, #8]
  78:arch/stm32/mcu_periph/sys_time_arch.c **** 
  79:arch/stm32/mcu_periph/sys_time_arch.c ****   sys_time.nb_sec_rem += sys_time.resolution_cpu_ticks;
 113              		.loc 1 79 0
 114 000a 5968     		ldr	r1, [r3, #4]
 115 000c D3F85421 		ldr	r2, [r3, #340]
 116 0010 0A44     		add	r2, r2, r1
 117 0012 5A60     		str	r2, [r3, #4]
  80:arch/stm32/mcu_periph/sys_time_arch.c ****   if (sys_time.nb_sec_rem >= sys_time.cpu_ticks_per_sec) {
 118              		.loc 1 80 0
 119 0014 5968     		ldr	r1, [r3, #4]
 120 0016 D3F85821 		ldr	r2, [r3, #344]
 121 001a 9142     		cmp	r1, r2
 122 001c 1C46     		mov	r4, r3
 123 001e 09D3     		bcc	.L5
  81:arch/stm32/mcu_periph/sys_time_arch.c ****     sys_time.nb_sec_rem -= sys_time.cpu_ticks_per_sec;
 124              		.loc 1 81 0
 125 0020 5B68     		ldr	r3, [r3, #4]
  82:arch/stm32/mcu_periph/sys_time_arch.c ****     sys_time.nb_sec++;
  83:arch/stm32/mcu_periph/sys_time_arch.c **** 
  84:arch/stm32/mcu_periph/sys_time_arch.c **** #ifdef SYS_TIME_LED
  85:arch/stm32/mcu_periph/sys_time_arch.c ****     LED_TOGGLE(SYS_TIME_LED);
 126              		.loc 1 85 0
 127 0022 1348     		ldr	r0, .L15+4
  81:arch/stm32/mcu_periph/sys_time_arch.c ****     sys_time.nb_sec_rem -= sys_time.cpu_ticks_per_sec;
 128              		.loc 1 81 0
 129 0024 9B1A     		subs	r3, r3, r2
 130 0026 6360     		str	r3, [r4, #4]
  82:arch/stm32/mcu_periph/sys_time_arch.c ****     sys_time.nb_sec++;
 131              		.loc 1 82 0
 132 0028 2368     		ldr	r3, [r4]
 133              		.loc 1 85 0
 134 002a 0121     		movs	r1, #1
  82:arch/stm32/mcu_periph/sys_time_arch.c ****     sys_time.nb_sec++;
 135              		.loc 1 82 0
 136 002c 0133     		adds	r3, r3, #1
 137 002e 2360     		str	r3, [r4]
 138              		.loc 1 85 0
 139 0030 FFF7FEFF 		bl	gpio_toggle
 140              	.LVL7:
 141              	.L5:
 142 0034 0D4D     		ldr	r5, .L15
  76:arch/stm32/mcu_periph/sys_time_arch.c ****   sys_time.nb_tick++;
 143              		.loc 1 76 0 discriminator 1
 144 0036 0026     		movs	r6, #0
 145              	.LVL8:
 146              	.L9:
 147              	.LBB2:
  86:arch/stm32/mcu_periph/sys_time_arch.c **** #endif
  87:arch/stm32/mcu_periph/sys_time_arch.c ****   }
  88:arch/stm32/mcu_periph/sys_time_arch.c ****   for (unsigned int i = 0; i < SYS_TIME_NB_TIMER; i++) {
  89:arch/stm32/mcu_periph/sys_time_arch.c ****     if (sys_time.timer[i].in_use &&
 148              		.loc 1 89 0
 149 0038 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 150 003a 83B1     		cbz	r3, .L7
  90:arch/stm32/mcu_periph/sys_time_arch.c ****         sys_time.nb_tick >= sys_time.timer[i].end_time) {
 151              		.loc 1 90 0 discriminator 1
 152 003c A268     		ldr	r2, [r4, #8]
 153 003e AB69     		ldr	r3, [r5, #24]
  89:arch/stm32/mcu_periph/sys_time_arch.c ****         sys_time.nb_tick >= sys_time.timer[i].end_time) {
 154              		.loc 1 89 0 discriminator 1
 155 0040 9A42     		cmp	r2, r3
 156 0042 0CD3     		bcc	.L7
  91:arch/stm32/mcu_periph/sys_time_arch.c ****       sys_time.timer[i].end_time += sys_time.timer[i].duration;
 157              		.loc 1 91 0
 158 0044 EA69     		ldr	r2, [r5, #28]
 159 0046 1344     		add	r3, r3, r2
  92:arch/stm32/mcu_periph/sys_time_arch.c ****       sys_time.timer[i].elapsed = TRUE;
 160              		.loc 1 92 0
 161 0048 084A     		ldr	r2, .L15
  91:arch/stm32/mcu_periph/sys_time_arch.c ****       sys_time.timer[i].end_time += sys_time.timer[i].duration;
 162              		.loc 1 91 0
 163 004a AB61     		str	r3, [r5, #24]
 164              		.loc 1 92 0
 165 004c 1423     		movs	r3, #20
 166 004e 03FB0623 		mla	r3, r3, r6, r2
 167 0052 0122     		movs	r2, #1
 168 0054 1A75     		strb	r2, [r3, #20]
  93:arch/stm32/mcu_periph/sys_time_arch.c ****       if (sys_time.timer[i].cb) {
 169              		.loc 1 93 0
 170 0056 2B69     		ldr	r3, [r5, #16]
 171 0058 0BB1     		cbz	r3, .L7
  94:arch/stm32/mcu_periph/sys_time_arch.c ****         sys_time.timer[i].cb(i);
 172              		.loc 1 94 0
 173 005a F0B2     		uxtb	r0, r6
 174 005c 9847     		blx	r3
 175              	.LVL9:
 176              	.L7:
  88:arch/stm32/mcu_periph/sys_time_arch.c ****     if (sys_time.timer[i].in_use &&
 177              		.loc 1 88 0 discriminator 2
 178 005e 0136     		adds	r6, r6, #1
 179              	.LVL10:
 180 0060 102E     		cmp	r6, #16
 181 0062 05F11405 		add	r5, r5, #20
 182 0066 E7D1     		bne	.L9
 183              	.LBE2:
  95:arch/stm32/mcu_periph/sys_time_arch.c ****       }
  96:arch/stm32/mcu_periph/sys_time_arch.c ****     }
  97:arch/stm32/mcu_periph/sys_time_arch.c ****   }
  98:arch/stm32/mcu_periph/sys_time_arch.c **** }
 184              		.loc 1 98 0
 185 0068 70BD     		pop	{r4, r5, r6, pc}
 186              	.LVL11:
 187              	.L16:
 188 006a 00BF     		.align	2
 189              	.L15:
 190 006c 00000000 		.word	sys_time
 191 0070 00080240 		.word	1073874944
 192              		.cfi_endproc
 193              	.LFE25:
 195              		.text
 196              	.Letext0:
 197              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 198              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 199              		.file 4 "/home/dino/paparazzi/sw/include/std.h"
 200              		.file 5 "./mcu_periph/sys_time.h"
 201              		.file 6 "../ext/libopencm3/include/libopencm3/cm3/systick.h"
 202              		.file 7 "../ext/libopencm3/include/libopencm3/stm32/common/gpio_common_all.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sys_time_arch.c
     /tmp/ccNWUxar.s:23     .text.sys_time_arch_init:00000000 $t
     /tmp/ccNWUxar.s:28     .text.sys_time_arch_init:00000000 sys_time_arch_init
     /tmp/ccNWUxar.s:81     .text.sys_time_arch_init:00000048 $d
     /tmp/ccNWUxar.s:89     .text.sys_tick_handler:00000000 $t
     /tmp/ccNWUxar.s:94     .text.sys_tick_handler:00000000 sys_tick_handler
     /tmp/ccNWUxar.s:190    .text.sys_tick_handler:0000006c $d
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.7f506cdee5614e5fae524d20989ad8c8
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._intsup.h.10.b2832a532eae49c14d45880be6d4ca65
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.23.a096771aacee9aba4b33c2d04aacc9b1
                           .group:00000000 wm4._ansi.h.13.1b5575dc7921a4c0cff7dbaa2f33e670
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.stddef.h.184.e5e1bea8c259692d06c9231e54cad476
                           .group:00000000 wm4.stddef.h.39.d0197034aa5fd947cae140b9289e6734
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.math.h.35.ad242c9287d2217c7d2035216e5d04ca
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.apogee_1.0.h.2.34ab7bb688056eecb54e2e3ffff48ca6
                           .group:00000000 wm4.sys_time.h.40.92f532b5cea824e0ec5ea845e7275d34
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dadd
__aeabi_d2uiz
systick_set_clocksource
systick_set_reload
systick_interrupt_enable
systick_counter_enable
sys_time
gpio_toggle
