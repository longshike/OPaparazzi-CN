   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"nav.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.nav_set_altitude,"ax",%progbits
  20              		.align	1
  21              		.thumb
  22              		.thumb_func
  24              	nav_set_altitude:
  25              	.LFB227:
  26              		.file 1 "firmwares/fixedwing/nav.c"
   1:firmwares/fixedwing/nav.c **** /*
   2:firmwares/fixedwing/nav.c ****  * Copyright (C) 2003-2005  Pascal Brisset, Antoine Drouin
   3:firmwares/fixedwing/nav.c ****  *
   4:firmwares/fixedwing/nav.c ****  * This file is part of paparazzi.
   5:firmwares/fixedwing/nav.c ****  *
   6:firmwares/fixedwing/nav.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:firmwares/fixedwing/nav.c ****  * it under the terms of the GNU General Public License as published by
   8:firmwares/fixedwing/nav.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:firmwares/fixedwing/nav.c ****  * any later version.
  10:firmwares/fixedwing/nav.c ****  *
  11:firmwares/fixedwing/nav.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:firmwares/fixedwing/nav.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:firmwares/fixedwing/nav.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:firmwares/fixedwing/nav.c ****  * GNU General Public License for more details.
  15:firmwares/fixedwing/nav.c ****  *
  16:firmwares/fixedwing/nav.c ****  * You should have received a copy of the GNU General Public License
  17:firmwares/fixedwing/nav.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:firmwares/fixedwing/nav.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:firmwares/fixedwing/nav.c ****  * Boston, MA 02111-1307, USA.
  20:firmwares/fixedwing/nav.c ****  */
  21:firmwares/fixedwing/nav.c **** 
  22:firmwares/fixedwing/nav.c **** /**
  23:firmwares/fixedwing/nav.c ****  * @file firmwares/fixedwing/nav.c
  24:firmwares/fixedwing/nav.c ****  * Fixedwing functions to compute navigation.
  25:firmwares/fixedwing/nav.c ****  *
  26:firmwares/fixedwing/nav.c ****  */
  27:firmwares/fixedwing/nav.c **** 
  28:firmwares/fixedwing/nav.c **** #define NAV_C
  29:firmwares/fixedwing/nav.c **** 
  30:firmwares/fixedwing/nav.c **** #include <math.h>
  31:firmwares/fixedwing/nav.c **** 
  32:firmwares/fixedwing/nav.c **** #include "firmwares/fixedwing/nav.h"
  33:firmwares/fixedwing/nav.c **** #include "subsystems/gps.h"
  34:firmwares/fixedwing/nav.c **** #include "firmwares/fixedwing/stabilization/stabilization_attitude.h"
  35:firmwares/fixedwing/nav.c **** #include "firmwares/fixedwing/autopilot.h"
  36:firmwares/fixedwing/nav.c **** #include "inter_mcu.h"
  37:firmwares/fixedwing/nav.c **** #include "subsystems/navigation/traffic_info.h"
  38:firmwares/fixedwing/nav.c **** 
  39:firmwares/fixedwing/nav.c **** #define RCLost() bit_is_set(fbw_state->status, STATUS_RADIO_REALLY_LOST)
  40:firmwares/fixedwing/nav.c **** 
  41:firmwares/fixedwing/nav.c **** enum oval_status oval_status;
  42:firmwares/fixedwing/nav.c **** 
  43:firmwares/fixedwing/nav.c **** float last_x, last_y;
  44:firmwares/fixedwing/nav.c **** 
  45:firmwares/fixedwing/nav.c **** /** Index of last waypoint. Used only in "go" stage in "route" horiz mode */
  46:firmwares/fixedwing/nav.c **** static uint8_t last_wp __attribute__((unused));
  47:firmwares/fixedwing/nav.c **** 
  48:firmwares/fixedwing/nav.c **** float rc_pitch;
  49:firmwares/fixedwing/nav.c **** float carrot_x, carrot_y;
  50:firmwares/fixedwing/nav.c **** 
  51:firmwares/fixedwing/nav.c **** /** Status on the current circle */
  52:firmwares/fixedwing/nav.c **** float nav_circle_radians; /* Cumulated */
  53:firmwares/fixedwing/nav.c **** float nav_circle_radians_no_rewind; /* Cumulated */
  54:firmwares/fixedwing/nav.c **** float nav_circle_trigo_qdr; /* Angle from center to mobile */
  55:firmwares/fixedwing/nav.c **** float nav_radius, nav_course, nav_climb, nav_shift;
  56:firmwares/fixedwing/nav.c **** 
  57:firmwares/fixedwing/nav.c **** 
  58:firmwares/fixedwing/nav.c **** /** Status on the current leg (percentage, 0. < < 1.) in route mode */
  59:firmwares/fixedwing/nav.c **** static float nav_leg_progress;
  60:firmwares/fixedwing/nav.c **** static float nav_carrot_leg_progress;
  61:firmwares/fixedwing/nav.c **** 
  62:firmwares/fixedwing/nav.c **** /** length of the current leg (m) */
  63:firmwares/fixedwing/nav.c **** static float nav_leg_length;
  64:firmwares/fixedwing/nav.c **** 
  65:firmwares/fixedwing/nav.c **** bool_t nav_in_circle = FALSE;
  66:firmwares/fixedwing/nav.c **** bool_t nav_in_segment = FALSE;
  67:firmwares/fixedwing/nav.c **** float nav_circle_x, nav_circle_y, nav_circle_radius;
  68:firmwares/fixedwing/nav.c **** float nav_segment_x_1, nav_segment_y_1, nav_segment_x_2, nav_segment_y_2;
  69:firmwares/fixedwing/nav.c **** uint8_t horizontal_mode;
  70:firmwares/fixedwing/nav.c **** float circle_bank = 0;
  71:firmwares/fixedwing/nav.c **** 
  72:firmwares/fixedwing/nav.c **** /** Dynamically adjustable, reset to nav_altitude when it is changing */
  73:firmwares/fixedwing/nav.c **** float flight_altitude;
  74:firmwares/fixedwing/nav.c **** 
  75:firmwares/fixedwing/nav.c **** float nav_glide_pitch_trim;
  76:firmwares/fixedwing/nav.c **** #ifndef NAV_GLIDE_PITCH_TRIM
  77:firmwares/fixedwing/nav.c **** #define NAV_GLIDE_PITCH_TRIM 0.
  78:firmwares/fixedwing/nav.c **** #endif
  79:firmwares/fixedwing/nav.c **** 
  80:firmwares/fixedwing/nav.c **** 
  81:firmwares/fixedwing/nav.c **** 
  82:firmwares/fixedwing/nav.c **** float nav_ground_speed_setpoint, nav_ground_speed_pgain;
  83:firmwares/fixedwing/nav.c **** 
  84:firmwares/fixedwing/nav.c **** /* Used in nav_survey_rectangle. Defined here for downlink and uplink */
  85:firmwares/fixedwing/nav.c **** float nav_survey_shift;
  86:firmwares/fixedwing/nav.c **** float nav_survey_west, nav_survey_east, nav_survey_north, nav_survey_south;
  87:firmwares/fixedwing/nav.c **** bool_t nav_survey_active;
  88:firmwares/fixedwing/nav.c **** 
  89:firmwares/fixedwing/nav.c **** int nav_mode;
  90:firmwares/fixedwing/nav.c **** 
  91:firmwares/fixedwing/nav.c **** void nav_init_stage(void)
  92:firmwares/fixedwing/nav.c **** {
  93:firmwares/fixedwing/nav.c ****   last_x = stateGetPositionEnu_f()->x;
  94:firmwares/fixedwing/nav.c ****   last_y = stateGetPositionEnu_f()->y;
  95:firmwares/fixedwing/nav.c ****   stage_time = 0;
  96:firmwares/fixedwing/nav.c ****   nav_circle_radians = 0;
  97:firmwares/fixedwing/nav.c ****   nav_circle_radians_no_rewind = 0;
  98:firmwares/fixedwing/nav.c ****   nav_in_circle = FALSE;
  99:firmwares/fixedwing/nav.c ****   nav_in_segment = FALSE;
 100:firmwares/fixedwing/nav.c ****   nav_shift = 0;
 101:firmwares/fixedwing/nav.c **** }
 102:firmwares/fixedwing/nav.c **** 
 103:firmwares/fixedwing/nav.c **** #define PowerVoltage() (vsupply/10.)
 104:firmwares/fixedwing/nav.c **** #define RcRoll(travel) (fbw_state->channels[RADIO_ROLL]* (float)travel /(float)MAX_PPRZ)
 105:firmwares/fixedwing/nav.c **** 
 106:firmwares/fixedwing/nav.c **** #define MIN_DX ((int16_t)(MAX_PPRZ * 0.05))
 107:firmwares/fixedwing/nav.c **** 
 108:firmwares/fixedwing/nav.c **** 
 109:firmwares/fixedwing/nav.c **** /** Navigates around (x, y). Clockwise iff radius > 0 */
 110:firmwares/fixedwing/nav.c **** void nav_circle_XY(float x, float y, float radius)
 111:firmwares/fixedwing/nav.c **** {
 112:firmwares/fixedwing/nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 113:firmwares/fixedwing/nav.c ****   float last_trigo_qdr = nav_circle_trigo_qdr;
 114:firmwares/fixedwing/nav.c ****   nav_circle_trigo_qdr = atan2f(pos->y - y, pos->x - x);
 115:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 116:firmwares/fixedwing/nav.c **** 
 117:firmwares/fixedwing/nav.c ****   if (nav_in_circle) {
 118:firmwares/fixedwing/nav.c ****     float trigo_diff = nav_circle_trigo_qdr - last_trigo_qdr;
 119:firmwares/fixedwing/nav.c ****     NormRadAngle(trigo_diff);
 120:firmwares/fixedwing/nav.c ****     nav_circle_radians += trigo_diff;
 121:firmwares/fixedwing/nav.c ****     trigo_diff *= - sign_radius;
 122:firmwares/fixedwing/nav.c ****     if (trigo_diff > 0) { // do not rewind if the change in angle is in the opposite sense than nav
 123:firmwares/fixedwing/nav.c ****       nav_circle_radians_no_rewind += trigo_diff;
 124:firmwares/fixedwing/nav.c ****     }
 125:firmwares/fixedwing/nav.c ****   }
 126:firmwares/fixedwing/nav.c **** 
 127:firmwares/fixedwing/nav.c ****   float dist2_center = DistanceSquare(pos->x, pos->y, x, y);
 128:firmwares/fixedwing/nav.c ****   float dist_carrot = CARROT * NOMINAL_AIRSPEED;
 129:firmwares/fixedwing/nav.c **** 
 130:firmwares/fixedwing/nav.c ****   radius += -nav_shift;
 131:firmwares/fixedwing/nav.c **** 
 132:firmwares/fixedwing/nav.c ****   float abs_radius = fabs(radius);
 133:firmwares/fixedwing/nav.c **** 
 134:firmwares/fixedwing/nav.c ****   /** Computes a prebank. Go straight if inside or outside the circle */
 135:firmwares/fixedwing/nav.c ****   circle_bank =
 136:firmwares/fixedwing/nav.c ****     (dist2_center > Square(abs_radius + dist_carrot)
 137:firmwares/fixedwing/nav.c ****      || dist2_center < Square(abs_radius - dist_carrot)) ?
 138:firmwares/fixedwing/nav.c ****     0 :
 139:firmwares/fixedwing/nav.c ****     atanf((*stateGetHorizontalSpeedNorm_f()) * (*stateGetHorizontalSpeedNorm_f()) / (NAV_GRAVITY * 
 140:firmwares/fixedwing/nav.c **** 
 141:firmwares/fixedwing/nav.c ****   float carrot_angle = dist_carrot / abs_radius;
 142:firmwares/fixedwing/nav.c ****   carrot_angle = Min(carrot_angle, M_PI / 4);
 143:firmwares/fixedwing/nav.c ****   carrot_angle = Max(carrot_angle, M_PI / 16);
 144:firmwares/fixedwing/nav.c ****   float alpha_carrot = nav_circle_trigo_qdr - sign_radius * carrot_angle;
 145:firmwares/fixedwing/nav.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 146:firmwares/fixedwing/nav.c ****   float radius_carrot = abs_radius;
 147:firmwares/fixedwing/nav.c ****   if (nav_mode == NAV_MODE_COURSE) {
 148:firmwares/fixedwing/nav.c ****     radius_carrot += (abs_radius / cosf(carrot_angle) - abs_radius);
 149:firmwares/fixedwing/nav.c ****   }
 150:firmwares/fixedwing/nav.c ****   fly_to_xy(x + cosf(alpha_carrot)*radius_carrot,
 151:firmwares/fixedwing/nav.c ****             y + sinf(alpha_carrot)*radius_carrot);
 152:firmwares/fixedwing/nav.c ****   nav_in_circle = TRUE;
 153:firmwares/fixedwing/nav.c ****   nav_circle_x = x;
 154:firmwares/fixedwing/nav.c ****   nav_circle_y = y;
 155:firmwares/fixedwing/nav.c ****   nav_circle_radius = radius;
 156:firmwares/fixedwing/nav.c **** }
 157:firmwares/fixedwing/nav.c **** 
 158:firmwares/fixedwing/nav.c **** 
 159:firmwares/fixedwing/nav.c **** #define NavGlide(_last_wp, _wp) {                                       \
 160:firmwares/fixedwing/nav.c ****     float start_alt = waypoints[_last_wp].a;                            \
 161:firmwares/fixedwing/nav.c ****     float diff_alt = waypoints[_wp].a - start_alt;                      \
 162:firmwares/fixedwing/nav.c ****     float alt = start_alt + nav_leg_progress * diff_alt;                \
 163:firmwares/fixedwing/nav.c ****     float pre_climb = (*stateGetHorizontalSpeedNorm_f()) * diff_alt / nav_leg_length; \
 164:firmwares/fixedwing/nav.c ****     NavVerticalAltitudeMode(alt, pre_climb);                            \
 165:firmwares/fixedwing/nav.c ****   }
 166:firmwares/fixedwing/nav.c **** 
 167:firmwares/fixedwing/nav.c **** 
 168:firmwares/fixedwing/nav.c **** 
 169:firmwares/fixedwing/nav.c **** 
 170:firmwares/fixedwing/nav.c **** #define MAX_DIST_CARROT 250.
 171:firmwares/fixedwing/nav.c **** #define MIN_HEIGHT_CARROT 50.
 172:firmwares/fixedwing/nav.c **** #define MAX_HEIGHT_CARROT 150.
 173:firmwares/fixedwing/nav.c **** 
 174:firmwares/fixedwing/nav.c **** #define Goto3D(radius) {                                                \
 175:firmwares/fixedwing/nav.c ****     if (pprz_mode == PPRZ_MODE_AUTO2) {                                 \
 176:firmwares/fixedwing/nav.c ****       int16_t yaw = fbw_state->channels[RADIO_YAW];                     \
 177:firmwares/fixedwing/nav.c ****       if (yaw > MIN_DX || yaw < -MIN_DX) {                              \
 178:firmwares/fixedwing/nav.c ****         carrot_x += FLOAT_OF_PPRZ(yaw, 0, -20.);                        \
 179:firmwares/fixedwing/nav.c ****         carrot_x = Min(carrot_x, MAX_DIST_CARROT);                      \
 180:firmwares/fixedwing/nav.c ****         carrot_x = Max(carrot_x, -MAX_DIST_CARROT);                     \
 181:firmwares/fixedwing/nav.c ****       }                                                                 \
 182:firmwares/fixedwing/nav.c ****       int16_t pitch = fbw_state->channels[RADIO_PITCH];                 \
 183:firmwares/fixedwing/nav.c ****       if (pitch > MIN_DX || pitch < -MIN_DX) {                          \
 184:firmwares/fixedwing/nav.c ****         carrot_y += FLOAT_OF_PPRZ(pitch, 0, -20.);                      \
 185:firmwares/fixedwing/nav.c ****         carrot_y = Min(carrot_y, MAX_DIST_CARROT);                      \
 186:firmwares/fixedwing/nav.c ****         carrot_y = Max(carrot_y, -MAX_DIST_CARROT);                     \
 187:firmwares/fixedwing/nav.c ****       }                                                                 \
 188:firmwares/fixedwing/nav.c ****       v_ctl_mode = V_CTL_MODE_AUTO_ALT;                                 \
 189:firmwares/fixedwing/nav.c ****       int16_t roll =  fbw_state->channels[RADIO_ROLL];                  \
 190:firmwares/fixedwing/nav.c ****       if (roll > MIN_DX || roll < -MIN_DX) {                            \
 191:firmwares/fixedwing/nav.c ****         nav_altitude += FLOAT_OF_PPRZ(roll, 0, -1.0);                   \
 192:firmwares/fixedwing/nav.c ****         nav_altitude = Max(nav_altitude, MIN_HEIGHT_CARROT+ground_alt); \
 193:firmwares/fixedwing/nav.c ****         nav_altitude = Min(nav_altitude, MAX_HEIGHT_CARROT+ground_alt); \
 194:firmwares/fixedwing/nav.c ****       }                                                                 \
 195:firmwares/fixedwing/nav.c ****     }                                                                   \
 196:firmwares/fixedwing/nav.c ****     nav_circle_XY(carrot_x, carrot_y, radius);                          \
 197:firmwares/fixedwing/nav.c ****   }
 198:firmwares/fixedwing/nav.c **** 
 199:firmwares/fixedwing/nav.c **** 
 200:firmwares/fixedwing/nav.c **** #define NavFollow(_ac_id, _distance, _height)   \
 201:firmwares/fixedwing/nav.c ****   nav_follow(_ac_id, _distance, _height);
 202:firmwares/fixedwing/nav.c **** 
 203:firmwares/fixedwing/nav.c **** 
 204:firmwares/fixedwing/nav.c **** static unit_t unit __attribute__((unused));
 205:firmwares/fixedwing/nav.c **** 
 206:firmwares/fixedwing/nav.c **** static inline void nav_follow(uint8_t _ac_id, float _distance, float _height);
 207:firmwares/fixedwing/nav.c **** 
 208:firmwares/fixedwing/nav.c **** #ifdef NAV_GROUND_SPEED_PGAIN
 209:firmwares/fixedwing/nav.c **** /** \brief Computes cruise throttle from ground speed setpoint
 210:firmwares/fixedwing/nav.c ****  */
 211:firmwares/fixedwing/nav.c **** static void nav_ground_speed_loop(void)
 212:firmwares/fixedwing/nav.c **** {
 213:firmwares/fixedwing/nav.c ****   if (MINIMUM_AIRSPEED < nav_ground_speed_setpoint
 214:firmwares/fixedwing/nav.c ****       && nav_ground_speed_setpoint < MAXIMUM_AIRSPEED) {
 215:firmwares/fixedwing/nav.c ****     float err = nav_ground_speed_setpoint - (*stateGetHorizontalSpeedNorm_f());
 216:firmwares/fixedwing/nav.c ****     v_ctl_auto_throttle_cruise_throttle += nav_ground_speed_pgain * err;
 217:firmwares/fixedwing/nav.c ****     Bound(v_ctl_auto_throttle_cruise_throttle, v_ctl_auto_throttle_min_cruise_throttle,
 218:firmwares/fixedwing/nav.c ****           v_ctl_auto_throttle_max_cruise_throttle);
 219:firmwares/fixedwing/nav.c ****   } else {
 220:firmwares/fixedwing/nav.c ****     /* Reset cruise throttle to nominal value */
 221:firmwares/fixedwing/nav.c ****     v_ctl_auto_throttle_cruise_throttle = V_CTL_AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE;
 222:firmwares/fixedwing/nav.c ****   }
 223:firmwares/fixedwing/nav.c **** }
 224:firmwares/fixedwing/nav.c **** #endif
 225:firmwares/fixedwing/nav.c **** 
 226:firmwares/fixedwing/nav.c **** static float baseleg_out_qdr;
 227:firmwares/fixedwing/nav.c **** static inline bool_t nav_compute_baseleg(uint8_t wp_af, uint8_t wp_td, uint8_t wp_baseleg, float ra
 228:firmwares/fixedwing/nav.c **** {
 229:firmwares/fixedwing/nav.c ****   nav_radius = radius;
 230:firmwares/fixedwing/nav.c **** 
 231:firmwares/fixedwing/nav.c ****   float x_0 = waypoints[wp_td].x - waypoints[wp_af].x;
 232:firmwares/fixedwing/nav.c ****   float y_0 = waypoints[wp_td].y - waypoints[wp_af].y;
 233:firmwares/fixedwing/nav.c **** 
 234:firmwares/fixedwing/nav.c ****   /* Unit vector from AF to TD */
 235:firmwares/fixedwing/nav.c ****   float d = sqrtf(x_0 * x_0 + y_0 * y_0);
 236:firmwares/fixedwing/nav.c ****   float x_1 = x_0 / d;
 237:firmwares/fixedwing/nav.c ****   float y_1 = y_0 / d;
 238:firmwares/fixedwing/nav.c **** 
 239:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].x = waypoints[wp_af].x + y_1 * nav_radius;
 240:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].y = waypoints[wp_af].y - x_1 * nav_radius;
 241:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].a = waypoints[wp_af].a;
 242:firmwares/fixedwing/nav.c ****   baseleg_out_qdr = M_PI - atan2f(-y_1, -x_1);
 243:firmwares/fixedwing/nav.c ****   if (nav_radius < 0) {
 244:firmwares/fixedwing/nav.c ****     baseleg_out_qdr += M_PI;
 245:firmwares/fixedwing/nav.c ****   }
 246:firmwares/fixedwing/nav.c **** 
 247:firmwares/fixedwing/nav.c ****   return FALSE;
 248:firmwares/fixedwing/nav.c **** }
 249:firmwares/fixedwing/nav.c **** 
 250:firmwares/fixedwing/nav.c **** static inline bool_t nav_compute_final_from_glide(uint8_t wp_af, uint8_t wp_td, float glide)
 251:firmwares/fixedwing/nav.c **** {
 252:firmwares/fixedwing/nav.c **** 
 253:firmwares/fixedwing/nav.c ****   float x_0 = waypoints[wp_td].x - waypoints[wp_af].x;
 254:firmwares/fixedwing/nav.c ****   float y_0 = waypoints[wp_td].y - waypoints[wp_af].y;
 255:firmwares/fixedwing/nav.c ****   float h_0 = waypoints[wp_td].a - waypoints[wp_af].a;
 256:firmwares/fixedwing/nav.c **** 
 257:firmwares/fixedwing/nav.c ****   /* Unit vector from AF to TD */
 258:firmwares/fixedwing/nav.c ****   float d = sqrtf(x_0 * x_0 + y_0 * y_0);
 259:firmwares/fixedwing/nav.c ****   float x_1 = x_0 / d;
 260:firmwares/fixedwing/nav.c ****   float y_1 = y_0 / d;
 261:firmwares/fixedwing/nav.c **** 
 262:firmwares/fixedwing/nav.c ****   waypoints[wp_af].x = waypoints[wp_td].x + x_1 * h_0 * glide;
 263:firmwares/fixedwing/nav.c ****   waypoints[wp_af].y = waypoints[wp_td].y + y_1 * h_0 * glide;
 264:firmwares/fixedwing/nav.c ****   waypoints[wp_af].a = waypoints[wp_af].a;
 265:firmwares/fixedwing/nav.c **** 
 266:firmwares/fixedwing/nav.c ****   return FALSE;
 267:firmwares/fixedwing/nav.c **** }
 268:firmwares/fixedwing/nav.c **** 
 269:firmwares/fixedwing/nav.c **** 
 270:firmwares/fixedwing/nav.c **** /* For a landing UPWIND.
 271:firmwares/fixedwing/nav.c ****    Computes Top Of Descent waypoint from Touch Down and Approach Fix
 272:firmwares/fixedwing/nav.c ****    waypoints, using glide airspeed, glide vertical speed and wind */
 273:firmwares/fixedwing/nav.c **** static inline bool_t compute_TOD(uint8_t _af, uint8_t _td, uint8_t _tod, float glide_airspeed, floa
 274:firmwares/fixedwing/nav.c **** {
 275:firmwares/fixedwing/nav.c ****   struct FloatVect2 *wind = stateGetHorizontalWindspeed_f();
 276:firmwares/fixedwing/nav.c ****   float td_af_x = WaypointX(_af) - WaypointX(_td);
 277:firmwares/fixedwing/nav.c ****   float td_af_y = WaypointY(_af) - WaypointY(_td);
 278:firmwares/fixedwing/nav.c ****   float td_af = sqrtf(td_af_x * td_af_x + td_af_y * td_af_y);
 279:firmwares/fixedwing/nav.c ****   float td_tod = (WaypointAlt(_af) - WaypointAlt(_td)) / glide_vspeed * (glide_airspeed - sqrtf(
 280:firmwares/fixedwing/nav.c ****                    wind->x * wind->x + wind->y * wind->y));
 281:firmwares/fixedwing/nav.c ****   WaypointX(_tod) = WaypointX(_td) + td_af_x / td_af * td_tod;
 282:firmwares/fixedwing/nav.c ****   WaypointY(_tod) = WaypointY(_td) + td_af_y / td_af * td_tod;
 283:firmwares/fixedwing/nav.c ****   WaypointAlt(_tod) = WaypointAlt(_af);
 284:firmwares/fixedwing/nav.c ****   return FALSE;
 285:firmwares/fixedwing/nav.c **** }
 286:firmwares/fixedwing/nav.c **** 
 287:firmwares/fixedwing/nav.c **** 
 288:firmwares/fixedwing/nav.c **** #include "generated/flight_plan.h"
 289:firmwares/fixedwing/nav.c **** 
 290:firmwares/fixedwing/nav.c **** 
 291:firmwares/fixedwing/nav.c **** #ifndef LINE_START_FUNCTION
 292:firmwares/fixedwing/nav.c **** #define LINE_START_FUNCTION {}
 293:firmwares/fixedwing/nav.c **** #endif
 294:firmwares/fixedwing/nav.c **** #ifndef LINE_STOP_FUNCTION
 295:firmwares/fixedwing/nav.c **** #define LINE_STOP_FUNCTION {}
 296:firmwares/fixedwing/nav.c **** #endif
 297:firmwares/fixedwing/nav.c **** 
 298:firmwares/fixedwing/nav.c **** 
 299:firmwares/fixedwing/nav.c **** 
 300:firmwares/fixedwing/nav.c **** static inline void nav_follow(uint8_t _ac_id, float _distance, float _height)
 301:firmwares/fixedwing/nav.c **** {
 302:firmwares/fixedwing/nav.c ****   struct ac_info_ * ac = get_ac_info(_ac_id);
 303:firmwares/fixedwing/nav.c ****   NavVerticalAutoThrottleMode(0.);
 304:firmwares/fixedwing/nav.c ****   NavVerticalAltitudeMode(Max(ac->alt + _height, ground_alt + SECURITY_HEIGHT), 0.);
 305:firmwares/fixedwing/nav.c ****   float alpha = M_PI / 2 - ac->course;
 306:firmwares/fixedwing/nav.c ****   float ca = cosf(alpha), sa = sinf(alpha);
 307:firmwares/fixedwing/nav.c ****   float x = ac->east - _distance * ca;
 308:firmwares/fixedwing/nav.c ****   float y = ac->north - _distance * sa;
 309:firmwares/fixedwing/nav.c ****   fly_to_xy(x, y);
 310:firmwares/fixedwing/nav.c **** #ifdef NAV_FOLLOW_PGAIN
 311:firmwares/fixedwing/nav.c ****   float s = (stateGetPositionEnu_f()->x - x) * ca + (stateGetPositionEnu_f()->y - y) * sa;
 312:firmwares/fixedwing/nav.c ****   nav_ground_speed_setpoint = ac->gspeed + NAV_FOLLOW_PGAIN * s;
 313:firmwares/fixedwing/nav.c ****   nav_ground_speed_loop();
 314:firmwares/fixedwing/nav.c **** #endif
 315:firmwares/fixedwing/nav.c **** }
 316:firmwares/fixedwing/nav.c **** 
 317:firmwares/fixedwing/nav.c **** float nav_altitude = GROUND_ALT + MIN_HEIGHT_CARROT;
 318:firmwares/fixedwing/nav.c **** float desired_x, desired_y;
 319:firmwares/fixedwing/nav.c **** pprz_t nav_throttle_setpoint;
 320:firmwares/fixedwing/nav.c **** float nav_pitch; /* Rad */
 321:firmwares/fixedwing/nav.c **** float fp_pitch; /* deg */
 322:firmwares/fixedwing/nav.c **** 
 323:firmwares/fixedwing/nav.c **** 
 324:firmwares/fixedwing/nav.c **** /** \brief Decide if the UAV is approaching the current waypoint.
 325:firmwares/fixedwing/nav.c ****  *  Computes \a dist2_to_wp and compare it to square \a carrot.
 326:firmwares/fixedwing/nav.c ****  *  Return true if it is smaller. Else computes by scalar products if
 327:firmwares/fixedwing/nav.c ****  *  uav has not gone past waypoint.
 328:firmwares/fixedwing/nav.c ****  *  \a approaching_time can be negative and in this case, the UAV will
 329:firmwares/fixedwing/nav.c ****  *  fly after the waypoint for the given number of seconds.
 330:firmwares/fixedwing/nav.c ****  *
 331:firmwares/fixedwing/nav.c ****  *  @return true if the position (x, y) is reached
 332:firmwares/fixedwing/nav.c ****  */
 333:firmwares/fixedwing/nav.c **** bool_t nav_approaching_xy(float x, float y, float from_x, float from_y, float approaching_time)
 334:firmwares/fixedwing/nav.c **** {
 335:firmwares/fixedwing/nav.c ****   /** distance to waypoint in x */
 336:firmwares/fixedwing/nav.c ****   float pw_x = x - stateGetPositionEnu_f()->x;
 337:firmwares/fixedwing/nav.c ****   /** distance to waypoint in y */
 338:firmwares/fixedwing/nav.c ****   float pw_y = y - stateGetPositionEnu_f()->y;
 339:firmwares/fixedwing/nav.c **** 
 340:firmwares/fixedwing/nav.c ****   if (approaching_time < 0.) {
 341:firmwares/fixedwing/nav.c ****     // fly after the destination waypoint
 342:firmwares/fixedwing/nav.c ****     float leg_x = x - from_x;
 343:firmwares/fixedwing/nav.c ****     float leg_y = y - from_y;
 344:firmwares/fixedwing/nav.c ****     float leg = sqrtf(Max(leg_x * leg_x + leg_y * leg_y, 1.));
 345:firmwares/fixedwing/nav.c ****     float exceed_dist = approaching_time * (*stateGetHorizontalSpeedNorm_f()); // negative value
 346:firmwares/fixedwing/nav.c ****     float scal_prod = (leg_x * pw_x + leg_y * pw_y) / leg;
 347:firmwares/fixedwing/nav.c ****     return (scal_prod < exceed_dist);
 348:firmwares/fixedwing/nav.c ****   } else {
 349:firmwares/fixedwing/nav.c ****     // fly close enough of the waypoint or cross it
 350:firmwares/fixedwing/nav.c ****     dist2_to_wp = pw_x * pw_x + pw_y * pw_y;
 351:firmwares/fixedwing/nav.c ****     float min_dist = approaching_time * (*stateGetHorizontalSpeedNorm_f());
 352:firmwares/fixedwing/nav.c ****     if (dist2_to_wp < min_dist * min_dist) {
 353:firmwares/fixedwing/nav.c ****       return TRUE;
 354:firmwares/fixedwing/nav.c ****     }
 355:firmwares/fixedwing/nav.c ****     float scal_prod = (x - from_x) * pw_x + (y - from_y) * pw_y;
 356:firmwares/fixedwing/nav.c ****     return (scal_prod < 0.);
 357:firmwares/fixedwing/nav.c ****   }
 358:firmwares/fixedwing/nav.c **** }
 359:firmwares/fixedwing/nav.c **** 
 360:firmwares/fixedwing/nav.c **** 
 361:firmwares/fixedwing/nav.c **** /**
 362:firmwares/fixedwing/nav.c ****  *  \brief Computes \a desired_x, \a desired_y and \a desired_course.
 363:firmwares/fixedwing/nav.c ****  */
 364:firmwares/fixedwing/nav.c **** //static inline void fly_to_xy(float x, float y) {
 365:firmwares/fixedwing/nav.c **** void fly_to_xy(float x, float y)
 366:firmwares/fixedwing/nav.c **** {
 367:firmwares/fixedwing/nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 368:firmwares/fixedwing/nav.c ****   desired_x = x;
 369:firmwares/fixedwing/nav.c ****   desired_y = y;
 370:firmwares/fixedwing/nav.c ****   if (nav_mode == NAV_MODE_COURSE) {
 371:firmwares/fixedwing/nav.c ****     h_ctl_course_setpoint = atan2f(x - pos->x, y - pos->y);
 372:firmwares/fixedwing/nav.c ****     if (h_ctl_course_setpoint < 0.) {
 373:firmwares/fixedwing/nav.c ****       h_ctl_course_setpoint += 2 * M_PI;
 374:firmwares/fixedwing/nav.c ****     }
 375:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_COURSE;
 376:firmwares/fixedwing/nav.c ****   } else {
 377:firmwares/fixedwing/nav.c ****     float diff = atan2f(x - pos->x, y - pos->y) - (*stateGetHorizontalSpeedDir_f());
 378:firmwares/fixedwing/nav.c ****     NormRadAngle(diff);
 379:firmwares/fixedwing/nav.c ****     BoundAbs(diff, M_PI / 2.);
 380:firmwares/fixedwing/nav.c ****     float s = sinf(diff);
 381:firmwares/fixedwing/nav.c ****     float speed = *stateGetHorizontalSpeedNorm_f();
 382:firmwares/fixedwing/nav.c ****     h_ctl_roll_setpoint = atanf(2 * speed * speed * s * h_ctl_course_pgain / (CARROT * NOMINAL_AIRS
 383:firmwares/fixedwing/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 384:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 385:firmwares/fixedwing/nav.c ****   }
 386:firmwares/fixedwing/nav.c **** }
 387:firmwares/fixedwing/nav.c **** 
 388:firmwares/fixedwing/nav.c **** /**
 389:firmwares/fixedwing/nav.c ****  *  \brief Computes the carrot position along the desired segment.
 390:firmwares/fixedwing/nav.c ****  */
 391:firmwares/fixedwing/nav.c **** void nav_route_xy(float last_wp_x, float last_wp_y, float wp_x, float wp_y)
 392:firmwares/fixedwing/nav.c **** {
 393:firmwares/fixedwing/nav.c ****   float leg_x = wp_x - last_wp_x;
 394:firmwares/fixedwing/nav.c ****   float leg_y = wp_y - last_wp_y;
 395:firmwares/fixedwing/nav.c ****   float leg2 = Max(leg_x * leg_x + leg_y * leg_y, 1.);
 396:firmwares/fixedwing/nav.c ****   nav_leg_progress = ((stateGetPositionEnu_f()->x - last_wp_x) * leg_x + (stateGetPositionEnu_f()->
 397:firmwares/fixedwing/nav.c ****                       leg_y) / leg2;
 398:firmwares/fixedwing/nav.c ****   nav_leg_length = sqrtf(leg2);
 399:firmwares/fixedwing/nav.c **** 
 400:firmwares/fixedwing/nav.c ****   /** distance of carrot (in meter) */
 401:firmwares/fixedwing/nav.c ****   float carrot = CARROT * NOMINAL_AIRSPEED;
 402:firmwares/fixedwing/nav.c **** 
 403:firmwares/fixedwing/nav.c ****   nav_carrot_leg_progress = nav_leg_progress + Max(carrot / nav_leg_length, 0.);
 404:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 405:firmwares/fixedwing/nav.c ****   nav_segment_x_1 = last_wp_x;
 406:firmwares/fixedwing/nav.c ****   nav_segment_y_1 = last_wp_y;
 407:firmwares/fixedwing/nav.c ****   nav_segment_x_2 = wp_x;
 408:firmwares/fixedwing/nav.c ****   nav_segment_y_2 = wp_y;
 409:firmwares/fixedwing/nav.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 410:firmwares/fixedwing/nav.c **** 
 411:firmwares/fixedwing/nav.c ****   fly_to_xy(last_wp_x + nav_carrot_leg_progress * leg_x + nav_shift * leg_y / nav_leg_length,
 412:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 413:firmwares/fixedwing/nav.c **** }
 414:firmwares/fixedwing/nav.c **** 
 415:firmwares/fixedwing/nav.c **** #include "subsystems/navigation/common_nav.c"
 416:firmwares/fixedwing/nav.c **** 
 417:firmwares/fixedwing/nav.c **** #ifndef FAILSAFE_HOME_RADIUS
 418:firmwares/fixedwing/nav.c **** #define FAILSAFE_HOME_RADIUS DEFAULT_CIRCLE_RADIUS
 419:firmwares/fixedwing/nav.c **** #endif
 420:firmwares/fixedwing/nav.c **** 
 421:firmwares/fixedwing/nav.c **** static void nav_set_altitude(void)
 422:firmwares/fixedwing/nav.c **** {
  27              		.loc 1 422 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 423:firmwares/fixedwing/nav.c ****   static float last_nav_altitude;
 424:firmwares/fixedwing/nav.c ****   if (fabs(nav_altitude - last_nav_altitude) > 1.) {
  32              		.loc 1 424 0
  33 0000 0C4A     		ldr	r2, .L5
  34 0002 0D4B     		ldr	r3, .L5+4
  35 0004 D2ED007A 		flds	s15, [r2]
  36 0008 93ED007A 		flds	s14, [r3]
  37 000c 0B4B     		ldr	r3, .L5+8
  38 000e 77EE677A 		fsubs	s15, s14, s15
  39 0012 F7EE006A 		fconsts	s13, #112
  40 0016 F0EEE77A 		fabss	s15, s15
  41 001a F4EEE67A 		fcmpes	s15, s13
  42 001e F1EE10FA 		fmstat
 425:firmwares/fixedwing/nav.c ****     flight_altitude = nav_altitude;
  43              		.loc 1 425 0
  44 0022 C4BF     		itt	gt
  45 0024 83ED007A 		fstsgt	s14, [r3]
 426:firmwares/fixedwing/nav.c ****     last_nav_altitude = nav_altitude;
  46              		.loc 1 426 0
  47 0028 82ED007A 		fstsgt	s14, [r2]
 427:firmwares/fixedwing/nav.c ****   }
 428:firmwares/fixedwing/nav.c ****   v_ctl_altitude_setpoint = flight_altitude;
  48              		.loc 1 428 0
  49 002c 1A68     		ldr	r2, [r3]	@ float
  50 002e 044B     		ldr	r3, .L5+12
  51 0030 1A60     		str	r2, [r3]	@ float
  52 0032 7047     		bx	lr
  53              	.L6:
  54              		.align	2
  55              	.L5:
  56 0034 00000000 		.word	.LANCHOR1
  57 0038 00000000 		.word	.LANCHOR0
  58 003c 00000000 		.word	.LANCHOR2
  59 0040 00000000 		.word	v_ctl_altitude_setpoint
  60              		.cfi_endproc
  61              	.LFE227:
  63              		.section	.text.stateGetPositionEnu_f,"ax",%progbits
  64              		.align	1
  65              		.thumb
  66              		.thumb_func
  68              	stateGetPositionEnu_f:
  69              	.LFB76:
  70              		.file 2 "./state.h"
   1:./state.h     **** /*
   2:./state.h     ****  * Copyright (C) 2011-2012 Felix Ruess <felix.ruess@gmail.com>
   3:./state.h     ****  *
   4:./state.h     ****  * This file is part of paparazzi.
   5:./state.h     ****  *
   6:./state.h     ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./state.h     ****  * it under the terms of the GNU General Public License as published by
   8:./state.h     ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./state.h     ****  * any later version.
  10:./state.h     ****  *
  11:./state.h     ****  * paparazzi is distributed in the hope that it will be useful,
  12:./state.h     ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./state.h     ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./state.h     ****  * GNU General Public License for more details.
  15:./state.h     ****  *
  16:./state.h     ****  * You should have received a copy of the GNU General Public License
  17:./state.h     ****  * along with paparazzi; see the file COPYING.  If not, see
  18:./state.h     ****  * <http://www.gnu.org/licenses/>.
  19:./state.h     ****  */
  20:./state.h     **** 
  21:./state.h     **** /**
  22:./state.h     ****  * @file state.h
  23:./state.h     ****  *
  24:./state.h     ****  * API to get/set the generic vehicle states.
  25:./state.h     ****  *
  26:./state.h     ****  * Also see the @ref state_interface "State Interface" page.
  27:./state.h     ****  *
  28:./state.h     ****  * @author Felix Ruess <felix.ruess@gmail.com>
  29:./state.h     ****  */
  30:./state.h     **** 
  31:./state.h     **** #ifndef STATE_H
  32:./state.h     **** #define STATE_H
  33:./state.h     **** 
  34:./state.h     **** #include "math/pprz_algebra_int.h"
  35:./state.h     **** #include "math/pprz_algebra_float.h"
  36:./state.h     **** #include "math/pprz_geodetic_int.h"
  37:./state.h     **** #include "math/pprz_geodetic_float.h"
  38:./state.h     **** #include "math/pprz_orientation_conversion.h"
  39:./state.h     **** 
  40:./state.h     **** #include "std.h"
  41:./state.h     **** #include <string.h>
  42:./state.h     **** 
  43:./state.h     **** /**
  44:./state.h     ****  * This general state interface holds all the most important vehicle states like
  45:./state.h     ****  * position, velocity, attitude, etc. It handles coordinate system and
  46:./state.h     ****  * fixed-/floating-point conversion on the fly when needed.
  47:./state.h     ****  *
  48:./state.h     ****  * You can set e.g. the position in any coordinate system you wish:
  49:./state.h     ****  * stateSetPositionNed_i() to set the position in fixed-point NED coordinates.
  50:./state.h     ****  * If you need to read the position somewhere else in a different representation,
  51:./state.h     ****  * call: stateGetPositionLla_f() and only then the LLA float position representation
  52:./state.h     ****  * is calculated on the fly and returned. It's also only calculated once,
  53:./state.h     ****  * until a new position is set which invalidates all the other representations again.
  54:./state.h     ****  */
  55:./state.h     **** 
  56:./state.h     **** /**
  57:./state.h     ****  * @defgroup state_interface State interface
  58:./state.h     ****  * @{
  59:./state.h     ****  */
  60:./state.h     **** 
  61:./state.h     **** /**
  62:./state.h     ****  * @defgroup state_position Position representations
  63:./state.h     ****  * @{
  64:./state.h     ****  */
  65:./state.h     **** #define POS_ECEF_I 0
  66:./state.h     **** #define POS_NED_I  1
  67:./state.h     **** #define POS_ENU_I  2
  68:./state.h     **** #define POS_LLA_I  3
  69:./state.h     **** #define POS_UTM_I  4
  70:./state.h     **** #define POS_ECEF_F 5
  71:./state.h     **** #define POS_NED_F  6
  72:./state.h     **** #define POS_ENU_F  7
  73:./state.h     **** #define POS_LLA_F  8
  74:./state.h     **** #define POS_UTM_F  9
  75:./state.h     **** #define POS_LOCAL_COORD ((1<<POS_NED_I)|(1<<POS_NED_F)|(1<<POS_ENU_I)|(1<<POS_ENU_F))
  76:./state.h     **** #define POS_GLOBAL_COORD ((1<<POS_ECEF_I)|(1<<POS_ECEF_F)|(1<<POS_LLA_I)|(1<<POS_LLA_F)|(1<<POS_UTM
  77:./state.h     **** /**@}*/
  78:./state.h     **** 
  79:./state.h     **** /**
  80:./state.h     ****  * @defgroup state_velocity Speed representations
  81:./state.h     ****  * @{
  82:./state.h     ****  */
  83:./state.h     **** #define SPEED_ECEF_I  0
  84:./state.h     **** #define SPEED_NED_I   1
  85:./state.h     **** #define SPEED_ENU_I   2
  86:./state.h     **** #define SPEED_HNORM_I 3
  87:./state.h     **** #define SPEED_HDIR_I  4
  88:./state.h     **** #define SPEED_ECEF_F  5
  89:./state.h     **** #define SPEED_NED_F   6
  90:./state.h     **** #define SPEED_ENU_F   7
  91:./state.h     **** #define SPEED_HNORM_F 8
  92:./state.h     **** #define SPEED_HDIR_F  9
  93:./state.h     **** #define SPEED_LOCAL_COORD ((1<<SPEED_NED_I)|(1<<SPEED_ENU_I)|(1<<SPEED_NED_F)|(1<<SPEED_ENU_F))
  94:./state.h     **** /**@}*/
  95:./state.h     **** 
  96:./state.h     **** /**
  97:./state.h     ****  * @defgroup state_acceleration Acceleration representations
  98:./state.h     ****  * @{
  99:./state.h     ****  */
 100:./state.h     **** #define ACCEL_ECEF_I 0
 101:./state.h     **** #define ACCEL_NED_I  1
 102:./state.h     **** #define ACCEL_ECEF_F 2
 103:./state.h     **** #define ACCEL_NED_F  3
 104:./state.h     **** /**@}*/
 105:./state.h     **** 
 106:./state.h     **** /**
 107:./state.h     ****  * @defgroup state_rate Angular rate representations
 108:./state.h     ****  * @{
 109:./state.h     ****  */
 110:./state.h     **** #define RATE_I 0
 111:./state.h     **** #define RATE_F 1
 112:./state.h     **** /**@}*/
 113:./state.h     **** 
 114:./state.h     **** /**
 115:./state.h     ****  * @defgroup state_wind_airspeed Wind- and airspeed representations
 116:./state.h     ****  * @{
 117:./state.h     ****  */
 118:./state.h     **** #define WINDSPEED_I 0
 119:./state.h     **** #define AIRSPEED_I  1
 120:./state.h     **** #define WINDSPEED_F 2
 121:./state.h     **** #define AIRSPEED_F  3
 122:./state.h     **** #define AOA_F       4
 123:./state.h     **** #define SIDESLIP_F  5
 124:./state.h     **** /**@}*/
 125:./state.h     **** 
 126:./state.h     **** 
 127:./state.h     **** /**
 128:./state.h     ****  * Structure holding vehicle state data.
 129:./state.h     ****  */
 130:./state.h     **** struct State {
 131:./state.h     **** 
 132:./state.h     ****   /** @addtogroup state_position
 133:./state.h     ****    *  @{ */
 134:./state.h     **** 
 135:./state.h     ****   /**
 136:./state.h     ****    * Holds the status bits for all position representations.
 137:./state.h     ****    * When the corresponding bit is set the representation
 138:./state.h     ****    * is already computed.
 139:./state.h     ****    */
 140:./state.h     ****   uint16_t pos_status;
 141:./state.h     **** 
 142:./state.h     ****   /**
 143:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 144:./state.h     ****    * Units: centimeters
 145:./state.h     ****    */
 146:./state.h     ****   struct EcefCoor_i ecef_pos_i;
 147:./state.h     **** 
 148:./state.h     ****   /**
 149:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 150:./state.h     ****    * Units lat,lon: degrees*1e7
 151:./state.h     ****    * Units alt: milimeters above reference ellipsoid
 152:./state.h     ****    */
 153:./state.h     ****   struct LlaCoor_i lla_pos_i;
 154:./state.h     **** 
 155:./state.h     ****   /**
 156:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 157:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 158:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 159:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 160:./state.h     ****    * (int version)
 161:./state.h     ****    */
 162:./state.h     ****   struct LtpDef_i ned_origin_i;
 163:./state.h     **** 
 164:./state.h     ****   /**
 165:./state.h     ****    * true if local int coordinate frame is initialsed
 166:./state.h     ****    */
 167:./state.h     ****   bool_t ned_initialized_i;
 168:./state.h     **** 
 169:./state.h     ****   /**
 170:./state.h     ****    * Position in North East Down coordinates.
 171:./state.h     ****    * with respect to ned_origin_i (flat earth)
 172:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 173:./state.h     ****    */
 174:./state.h     ****   struct NedCoor_i ned_pos_i;
 175:./state.h     **** 
 176:./state.h     ****   /**
 177:./state.h     ****    * Position in East North Up coordinates.
 178:./state.h     ****    * with respect to ned_origin_i (flat earth)
 179:./state.h     ****    * Units: m in BFP with INT32_POS_FRAC
 180:./state.h     ****    */
 181:./state.h     ****   struct EnuCoor_i enu_pos_i;
 182:./state.h     **** 
 183:./state.h     ****   /**
 184:./state.h     ****    * Position in UTM coordinates.
 185:./state.h     ****    * Units x,y: meters.
 186:./state.h     ****    * Units z: meters above MSL
 187:./state.h     ****    */
 188:./state.h     ****   struct UtmCoor_f utm_pos_f;
 189:./state.h     **** 
 190:./state.h     ****   /**
 191:./state.h     ****    * Altitude above ground level.
 192:./state.h     ****    * Unit: meters
 193:./state.h     ****    */
 194:./state.h     ****   float alt_agl_f;
 195:./state.h     **** 
 196:./state.h     ****   /**
 197:./state.h     ****    * Position in Latitude, Longitude and Altitude.
 198:./state.h     ****    * Units lat,lon: radians
 199:./state.h     ****    * Units alt: meters above reference ellipsoid
 200:./state.h     ****    */
 201:./state.h     ****   struct LlaCoor_f lla_pos_f;
 202:./state.h     **** 
 203:./state.h     ****   /**
 204:./state.h     ****    * Position in EarthCenteredEarthFixed coordinates.
 205:./state.h     ****    * Units: meters
 206:./state.h     ****    */
 207:./state.h     ****   struct EcefCoor_f ecef_pos_f;
 208:./state.h     **** 
 209:./state.h     ****   /**
 210:./state.h     ****    * Definition of the local (flat earth) coordinate system.
 211:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 212:./state.h     ****    * in ECEF (EarthCenteredEarthFixed) and LLA (LatitudeLongitudeAlt)
 213:./state.h     ****    * coordinates and the roation matrix from ECEF to local frame.
 214:./state.h     ****    * (float version)
 215:./state.h     ****    */
 216:./state.h     ****   struct LtpDef_f ned_origin_f;
 217:./state.h     **** 
 218:./state.h     ****   /// True if local float coordinate frame is initialsed
 219:./state.h     ****   bool_t ned_initialized_f;
 220:./state.h     **** 
 221:./state.h     ****   /**
 222:./state.h     ****    * Definition of the origin of Utm coordinate system.
 223:./state.h     ****    * Defines the origin of the local NorthEastDown coordinate system
 224:./state.h     ****    * in UTM coordinates, used as a reference when ned_origin is not
 225:./state.h     ****    * initialized.
 226:./state.h     ****    * (float version)
 227:./state.h     ****    */
 228:./state.h     ****   struct UtmCoor_f utm_origin_f;
 229:./state.h     **** 
 230:./state.h     ****   /// True if utm origin (float) coordinate frame is initialsed
 231:./state.h     ****   bool_t utm_initialized_f;
 232:./state.h     **** 
 233:./state.h     ****   /**
 234:./state.h     ****    * Position in North East Down coordinates.
 235:./state.h     ****    * with respect to ned_origin_i (flat earth)
 236:./state.h     ****    * Units: meters
 237:./state.h     ****    */
 238:./state.h     ****   struct NedCoor_f ned_pos_f;
 239:./state.h     **** 
 240:./state.h     ****   /**
 241:./state.h     ****    * Position in East North Up coordinates.
 242:./state.h     ****    * with respect to ned_origin_i (flat earth)
 243:./state.h     ****    * Units: meters
 244:./state.h     ****    */
 245:./state.h     ****   struct EnuCoor_f enu_pos_f;
 246:./state.h     ****   /** @}*/
 247:./state.h     **** 
 248:./state.h     **** 
 249:./state.h     ****   /** @addtogroup state_velocity
 250:./state.h     ****    *  @{ */
 251:./state.h     ****   /**
 252:./state.h     ****    * Holds the status bits for all ground speed representations.
 253:./state.h     ****    * When the corresponding bit is one the representation
 254:./state.h     ****    * is already computed.
 255:./state.h     ****    */
 256:./state.h     ****   uint16_t speed_status;
 257:./state.h     **** 
 258:./state.h     ****   /**
 259:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 260:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 261:./state.h     ****    */
 262:./state.h     ****   struct EcefCoor_i ecef_speed_i;
 263:./state.h     **** 
 264:./state.h     ****   /**
 265:./state.h     ****    * Velocity in North East Down coordinates.
 266:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 267:./state.h     ****    */
 268:./state.h     ****   struct NedCoor_i ned_speed_i;
 269:./state.h     **** 
 270:./state.h     ****   /**
 271:./state.h     ****    * Velocity in East North Up coordinates.
 272:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 273:./state.h     ****    */
 274:./state.h     ****   struct EnuCoor_i enu_speed_i;
 275:./state.h     **** 
 276:./state.h     ****   /**
 277:./state.h     ****    * Norm of horizontal ground speed.
 278:./state.h     ****    * Unit: m/s in BFP with #INT32_SPEED_FRAC
 279:./state.h     ****    */
 280:./state.h     ****   uint32_t h_speed_norm_i;
 281:./state.h     **** 
 282:./state.h     ****   /**
 283:./state.h     ****    * Direction of horizontal ground speed.
 284:./state.h     ****    * Unit: rad in BFP with #INT32_ANGLE_FRAC
 285:./state.h     ****    * (clockwise, zero=north)
 286:./state.h     ****    */
 287:./state.h     ****   int32_t h_speed_dir_i;
 288:./state.h     **** 
 289:./state.h     ****   /**
 290:./state.h     ****    * Velocity in EarthCenteredEarthFixed coordinates.
 291:./state.h     ****    * Units: m/s
 292:./state.h     ****    */
 293:./state.h     ****   struct EcefCoor_f ecef_speed_f;
 294:./state.h     **** 
 295:./state.h     ****   /**
 296:./state.h     ****    * @brief speed in North East Down coordinates
 297:./state.h     ****    * @details Units: m/s */
 298:./state.h     ****   struct NedCoor_f ned_speed_f;
 299:./state.h     **** 
 300:./state.h     ****   /**
 301:./state.h     ****    * Velocity in East North Up coordinates.
 302:./state.h     ****    * Units: m/s
 303:./state.h     ****    */
 304:./state.h     ****   struct EnuCoor_f enu_speed_f;
 305:./state.h     **** 
 306:./state.h     ****   /**
 307:./state.h     ****    * Norm of horizontal ground speed.
 308:./state.h     ****    * Unit: m/s
 309:./state.h     ****    */
 310:./state.h     ****   float h_speed_norm_f;
 311:./state.h     **** 
 312:./state.h     ****   /**
 313:./state.h     ****    * Direction of horizontal ground speed.
 314:./state.h     ****    * Unit: rad (clockwise, zero=north)
 315:./state.h     ****    */
 316:./state.h     ****   float h_speed_dir_f;
 317:./state.h     ****   /** @}*/
 318:./state.h     **** 
 319:./state.h     **** 
 320:./state.h     ****   /** @addtogroup state_acceleration
 321:./state.h     ****    *  @{ */
 322:./state.h     ****   /**
 323:./state.h     ****    * Holds the status bits for all acceleration representations.
 324:./state.h     ****    * When the corresponding bit is one the representation
 325:./state.h     ****    * is already computed.
 326:./state.h     ****    */
 327:./state.h     ****   uint8_t accel_status;
 328:./state.h     **** 
 329:./state.h     ****   /**
 330:./state.h     ****    * Acceleration in North East Down coordinates.
 331:./state.h     ****    * Units: m/s^2 in BFP with #INT32_ACCEL_FRAC
 332:./state.h     ****    */
 333:./state.h     ****   struct NedCoor_i ned_accel_i;
 334:./state.h     **** 
 335:./state.h     ****   /**
 336:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 337:./state.h     ****    * Units: m/s^2 in BFP with INT32_ACCEL_FRAC
 338:./state.h     ****    */
 339:./state.h     ****   struct EcefCoor_i ecef_accel_i;
 340:./state.h     **** 
 341:./state.h     ****   /**
 342:./state.h     ****    * Acceleration in North East Down coordinates.
 343:./state.h     ****    * Units: m/s^2
 344:./state.h     ****    */
 345:./state.h     ****   struct NedCoor_f ned_accel_f;
 346:./state.h     **** 
 347:./state.h     ****   /**
 348:./state.h     ****    * Acceleration in EarthCenteredEarthFixed coordinates.
 349:./state.h     ****    * Units: m/s^2
 350:./state.h     ****    */
 351:./state.h     ****   struct EcefCoor_f ecef_accel_f;
 352:./state.h     ****   /** @}*/
 353:./state.h     **** 
 354:./state.h     **** 
 355:./state.h     ****   /** @defgroup state_attitude Attitude representations
 356:./state.h     ****    */
 357:./state.h     ****   struct OrientationReps ned_to_body_orientation;
 358:./state.h     **** 
 359:./state.h     **** 
 360:./state.h     ****   /** @addtogroup state_rate
 361:./state.h     ****    *  @{ */
 362:./state.h     ****   /**
 363:./state.h     ****    * Holds the status bits for all angular rate representations.
 364:./state.h     ****    * When the corresponding bit is one the representation
 365:./state.h     ****    * is already computed.
 366:./state.h     ****    */
 367:./state.h     ****   uint8_t rate_status;
 368:./state.h     **** 
 369:./state.h     ****   /**
 370:./state.h     ****    * Angular rates in body frame.
 371:./state.h     ****    * Units: rad/s in BFP with #INT32_RATE_FRAC
 372:./state.h     ****    */
 373:./state.h     ****   struct Int32Rates  body_rates_i;
 374:./state.h     **** 
 375:./state.h     ****   /**
 376:./state.h     ****    * Angular rates in body frame.
 377:./state.h     ****    * Units: rad/s
 378:./state.h     ****    */
 379:./state.h     ****   struct FloatRates  body_rates_f;
 380:./state.h     ****   /** @}*/
 381:./state.h     **** 
 382:./state.h     **** 
 383:./state.h     ****   /** @addtogroup state_wind_airspeed
 384:./state.h     ****    *  @{ */
 385:./state.h     ****   /**
 386:./state.h     ****    * Holds the status bits for all wind- and airspeed representations.
 387:./state.h     ****    * When the corresponding bit is one the representation
 388:./state.h     ****    * is already computed.
 389:./state.h     ****    */
 390:./state.h     ****   uint8_t wind_air_status;
 391:./state.h     **** 
 392:./state.h     ****   /**
 393:./state.h     ****    * Horizontal windspeed in north/east.
 394:./state.h     ****    * Units: m/s in BFP with #INT32_SPEED_FRAC
 395:./state.h     ****    */
 396:./state.h     ****   struct Int32Vect2 h_windspeed_i;
 397:./state.h     **** 
 398:./state.h     ****   /**
 399:./state.h     ****    * Norm of horizontal ground speed.
 400:./state.h     ****    * @details Unit: m/s in BFP with #INT32_SPEED_FRAC
 401:./state.h     ****    */
 402:./state.h     ****   int32_t airspeed_i;
 403:./state.h     **** 
 404:./state.h     ****   /**
 405:./state.h     ****    * Horizontal windspeed.
 406:./state.h     ****    * Units: m/s with x=north, y=east
 407:./state.h     ****    */
 408:./state.h     ****   struct FloatVect2 h_windspeed_f;
 409:./state.h     **** 
 410:./state.h     ****   /**
 411:./state.h     ****    * Norm of relative air speed.
 412:./state.h     ****    * Unit: m/s
 413:./state.h     ****    */
 414:./state.h     ****   float airspeed_f;
 415:./state.h     **** 
 416:./state.h     ****   /**
 417:./state.h     ****    * Angle of attack
 418:./state.h     ****    * Unit: rad
 419:./state.h     ****    */
 420:./state.h     ****   float angle_of_attack_f;
 421:./state.h     **** 
 422:./state.h     ****   /**
 423:./state.h     ****    * Sideslip angle
 424:./state.h     ****    * Unit: rad
 425:./state.h     ****    */
 426:./state.h     ****   float sideslip_f;
 427:./state.h     **** 
 428:./state.h     ****   /** @}*/
 429:./state.h     **** 
 430:./state.h     **** };
 431:./state.h     **** 
 432:./state.h     **** extern struct State state;
 433:./state.h     **** 
 434:./state.h     **** extern void stateInit(void);
 435:./state.h     **** 
 436:./state.h     **** /** @addtogroup state_position
 437:./state.h     ****  *  @{ */
 438:./state.h     **** 
 439:./state.h     **** /// Set the local (flat earth) coordinate frame origin (int).
 440:./state.h     **** static inline void stateSetLocalOrigin_i(struct LtpDef_i *ltp_def)
 441:./state.h     **** {
 442:./state.h     ****   memcpy(&state.ned_origin_i, ltp_def, sizeof(struct LtpDef_i));
 443:./state.h     ****   /* convert to float */
 444:./state.h     ****   ECEF_FLOAT_OF_BFP(state.ned_origin_f.ecef, state.ned_origin_i.ecef);
 445:./state.h     ****   LLA_FLOAT_OF_BFP(state.ned_origin_f.lla, state.ned_origin_i.lla);
 446:./state.h     ****   HIGH_RES_RMAT_FLOAT_OF_BFP(state.ned_origin_f.ltp_of_ecef, state.ned_origin_i.ltp_of_ecef);
 447:./state.h     ****   state.ned_origin_f.hmsl = M_OF_MM(state.ned_origin_i.hmsl);
 448:./state.h     **** 
 449:./state.h     ****   /* clear bits for all local frame representations */
 450:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 451:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 452:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 453:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 454:./state.h     **** 
 455:./state.h     ****   state.ned_initialized_i = TRUE;
 456:./state.h     ****   state.ned_initialized_f = TRUE;
 457:./state.h     **** }
 458:./state.h     **** 
 459:./state.h     **** /// Set the local (flat earth) coordinate frame origin from UTM (float).
 460:./state.h     **** static inline void stateSetLocalUtmOrigin_f(struct UtmCoor_f *utm_def)
 461:./state.h     **** {
 462:./state.h     ****   memcpy(&state.utm_origin_f, utm_def, sizeof(struct UtmCoor_f));
 463:./state.h     ****   state.utm_initialized_f = TRUE;
 464:./state.h     **** 
 465:./state.h     ****   /* clear bits for all local frame representations */
 466:./state.h     ****   state.pos_status &= ~(POS_LOCAL_COORD);
 467:./state.h     ****   state.speed_status &= ~(SPEED_LOCAL_COORD);
 468:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_I);
 469:./state.h     ****   ClearBit(state.accel_status, ACCEL_NED_F);
 470:./state.h     **** }
 471:./state.h     **** /*******************************************************************************
 472:./state.h     ****  *                                                                             *
 473:./state.h     ****  * Set and Get functions for the POSITION representations                      *
 474:./state.h     ****  *                                                                             *
 475:./state.h     ****  ******************************************************************************/
 476:./state.h     **** 
 477:./state.h     **** /************* declaration of transformation functions ************/
 478:./state.h     **** extern void stateCalcPositionEcef_i(void);
 479:./state.h     **** extern void stateCalcPositionNed_i(void);
 480:./state.h     **** extern void stateCalcPositionEnu_i(void);
 481:./state.h     **** extern void stateCalcPositionLla_i(void);
 482:./state.h     **** extern void stateCalcPositionUtm_f(void);
 483:./state.h     **** extern void stateCalcPositionEcef_f(void);
 484:./state.h     **** extern void stateCalcPositionNed_f(void);
 485:./state.h     **** extern void stateCalcPositionEnu_f(void);
 486:./state.h     **** extern void stateCalcPositionLla_f(void);
 487:./state.h     **** 
 488:./state.h     **** /*********************** validity test functions ******************/
 489:./state.h     **** 
 490:./state.h     **** /// Test if local coordinates are valid.
 491:./state.h     **** static inline bool_t stateIsLocalCoordinateValid(void)
 492:./state.h     **** {
 493:./state.h     ****   return ((state.ned_initialized_i || state.ned_initialized_f || state.utm_initialized_f)
 494:./state.h     ****           && (state.pos_status & (POS_LOCAL_COORD)));
 495:./state.h     **** }
 496:./state.h     **** 
 497:./state.h     **** /// Test if global coordinates are valid.
 498:./state.h     **** static inline bool_t stateIsGlobalCoordinateValid(void)
 499:./state.h     **** {
 500:./state.h     ****   return ((state.pos_status & (POS_GLOBAL_COORD)) || stateIsLocalCoordinateValid());
 501:./state.h     **** }
 502:./state.h     **** 
 503:./state.h     **** /************************ Set functions ****************************/
 504:./state.h     **** 
 505:./state.h     **** /// Set position from ECEF coordinates (int).
 506:./state.h     **** static inline void stateSetPositionEcef_i(struct EcefCoor_i *ecef_pos)
 507:./state.h     **** {
 508:./state.h     ****   VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 509:./state.h     ****   /* clear bits for all position representations and only set the new one */
 510:./state.h     ****   state.pos_status = (1 << POS_ECEF_I);
 511:./state.h     **** }
 512:./state.h     **** 
 513:./state.h     **** /// Set position from local NED coordinates (int).
 514:./state.h     **** static inline void stateSetPositionNed_i(struct NedCoor_i *ned_pos)
 515:./state.h     **** {
 516:./state.h     ****   VECT3_COPY(state.ned_pos_i, *ned_pos);
 517:./state.h     ****   /* clear bits for all position representations and only set the new one */
 518:./state.h     ****   state.pos_status = (1 << POS_NED_I);
 519:./state.h     **** }
 520:./state.h     **** 
 521:./state.h     **** /// Set position from local ENU coordinates (int).
 522:./state.h     **** static inline void stateSetPositionEnu_i(struct EnuCoor_i *enu_pos)
 523:./state.h     **** {
 524:./state.h     ****   VECT3_COPY(state.enu_pos_i, *enu_pos);
 525:./state.h     ****   /* clear bits for all position representations and only set the new one */
 526:./state.h     ****   state.pos_status = (1 << POS_ENU_I);
 527:./state.h     **** }
 528:./state.h     **** 
 529:./state.h     **** /// Set position from LLA coordinates (int).
 530:./state.h     **** static inline void stateSetPositionLla_i(struct LlaCoor_i *lla_pos)
 531:./state.h     **** {
 532:./state.h     ****   LLA_COPY(state.lla_pos_i, *lla_pos);
 533:./state.h     ****   /* clear bits for all position representations and only set the new one */
 534:./state.h     ****   state.pos_status = (1 << POS_LLA_I);
 535:./state.h     **** }
 536:./state.h     **** 
 537:./state.h     **** /// Set multiple position coordinates (int).
 538:./state.h     **** static inline void stateSetPosition_i(
 539:./state.h     ****   struct EcefCoor_i *ecef_pos,
 540:./state.h     ****   struct NedCoor_i *ned_pos,
 541:./state.h     ****   struct EnuCoor_i *enu_pos,
 542:./state.h     ****   struct LlaCoor_i *lla_pos)
 543:./state.h     **** {
 544:./state.h     ****   /* clear all status bit */
 545:./state.h     ****   state.pos_status = 0;
 546:./state.h     ****   if (ecef_pos != NULL) {
 547:./state.h     ****     VECT3_COPY(state.ecef_pos_i, *ecef_pos);
 548:./state.h     ****     state.pos_status |= (1 << POS_ECEF_I);
 549:./state.h     ****   }
 550:./state.h     ****   if (ned_pos != NULL) {
 551:./state.h     ****     VECT3_COPY(state.ned_pos_i, *ned_pos);
 552:./state.h     ****     state.pos_status |= (1 << POS_NED_I);
 553:./state.h     ****   }
 554:./state.h     ****   if (enu_pos != NULL) {
 555:./state.h     ****     VECT3_COPY(state.enu_pos_i, *enu_pos);
 556:./state.h     ****     state.pos_status |= (1 << POS_ENU_I);
 557:./state.h     ****   }
 558:./state.h     ****   if (lla_pos != NULL) {
 559:./state.h     ****     LLA_COPY(state.lla_pos_i, *lla_pos);
 560:./state.h     ****     state.pos_status |= (1 << POS_LLA_I);
 561:./state.h     ****   }
 562:./state.h     **** }
 563:./state.h     **** 
 564:./state.h     **** /// Set position from UTM coordinates (float).
 565:./state.h     **** static inline void stateSetPositionUtm_f(struct UtmCoor_f *utm_pos)
 566:./state.h     **** {
 567:./state.h     ****   memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 568:./state.h     ****   /* clear bits for all position representations and only set the new one */
 569:./state.h     ****   state.pos_status = (1 << POS_UTM_F);
 570:./state.h     **** }
 571:./state.h     **** 
 572:./state.h     **** /// Set position from ECEF coordinates (float).
 573:./state.h     **** static inline void stateSetPositionEcef_f(struct EcefCoor_f *ecef_pos)
 574:./state.h     **** {
 575:./state.h     ****   VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 576:./state.h     ****   /* clear bits for all position representations and only set the new one */
 577:./state.h     ****   state.pos_status = (1 << POS_ECEF_F);
 578:./state.h     **** }
 579:./state.h     **** 
 580:./state.h     **** /// Set position from local NED coordinates (float).
 581:./state.h     **** static inline void stateSetPositionNed_f(struct NedCoor_f *ned_pos)
 582:./state.h     **** {
 583:./state.h     ****   VECT3_COPY(state.ned_pos_f, *ned_pos);
 584:./state.h     ****   /* clear bits for all position representations and only set the new one */
 585:./state.h     ****   state.pos_status = (1 << POS_NED_F);
 586:./state.h     **** }
 587:./state.h     **** 
 588:./state.h     **** /// Set position from local ENU coordinates (float).
 589:./state.h     **** static inline void stateSetPositionEnu_f(struct EnuCoor_f *enu_pos)
 590:./state.h     **** {
 591:./state.h     ****   VECT3_COPY(state.enu_pos_f, *enu_pos);
 592:./state.h     ****   /* clear bits for all position representations and only set the new one */
 593:./state.h     ****   state.pos_status = (1 << POS_ENU_F);
 594:./state.h     **** }
 595:./state.h     **** 
 596:./state.h     **** /// Set position from LLA coordinates (float).
 597:./state.h     **** static inline void stateSetPositionLla_f(struct LlaCoor_f *lla_pos)
 598:./state.h     **** {
 599:./state.h     ****   LLA_COPY(state.lla_pos_f, *lla_pos);
 600:./state.h     ****   /* clear bits for all position representations and only set the new one */
 601:./state.h     ****   state.pos_status = (1 << POS_LLA_F);
 602:./state.h     **** }
 603:./state.h     **** 
 604:./state.h     **** /// Set multiple position coordinates (float).
 605:./state.h     **** static inline void stateSetPosition_f(
 606:./state.h     ****   struct EcefCoor_f *ecef_pos,
 607:./state.h     ****   struct NedCoor_f *ned_pos,
 608:./state.h     ****   struct EnuCoor_f *enu_pos,
 609:./state.h     ****   struct LlaCoor_f *lla_pos,
 610:./state.h     ****   struct UtmCoor_f *utm_pos)
 611:./state.h     **** {
 612:./state.h     ****   /* clear all status bit */
 613:./state.h     ****   state.pos_status = 0;
 614:./state.h     ****   if (ecef_pos != NULL) {
 615:./state.h     ****     VECT3_COPY(state.ecef_pos_f, *ecef_pos);
 616:./state.h     ****     state.pos_status |= (1 << POS_ECEF_F);
 617:./state.h     ****   }
 618:./state.h     ****   if (ned_pos != NULL) {
 619:./state.h     ****     VECT3_COPY(state.ned_pos_f, *ned_pos);
 620:./state.h     ****     state.pos_status |= (1 << POS_NED_F);
 621:./state.h     ****   }
 622:./state.h     ****   if (enu_pos != NULL) {
 623:./state.h     ****     VECT3_COPY(state.enu_pos_f, *enu_pos);
 624:./state.h     ****     state.pos_status |= (1 << POS_ENU_F);
 625:./state.h     ****   }
 626:./state.h     ****   if (lla_pos != NULL) {
 627:./state.h     ****     LLA_COPY(state.lla_pos_f, *lla_pos);
 628:./state.h     ****     state.pos_status |= (1 << POS_LLA_F);
 629:./state.h     ****   }
 630:./state.h     ****   if (utm_pos != NULL) {
 631:./state.h     ****     memcpy(&state.utm_pos_f, utm_pos, sizeof(struct UtmCoor_f));
 632:./state.h     ****     state.pos_status |= (1 << POS_UTM_F);
 633:./state.h     ****   }
 634:./state.h     **** }
 635:./state.h     **** 
 636:./state.h     **** /************************ Get functions ****************************/
 637:./state.h     **** 
 638:./state.h     **** /// Get position in ECEF coordinates (int).
 639:./state.h     **** static inline struct EcefCoor_i *stateGetPositionEcef_i(void)
 640:./state.h     **** {
 641:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_I)) {
 642:./state.h     ****     stateCalcPositionEcef_i();
 643:./state.h     ****   }
 644:./state.h     ****   return &state.ecef_pos_i;
 645:./state.h     **** }
 646:./state.h     **** 
 647:./state.h     **** /// Get position in local NED coordinates (int).
 648:./state.h     **** static inline struct NedCoor_i *stateGetPositionNed_i(void)
 649:./state.h     **** {
 650:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_I)) {
 651:./state.h     ****     stateCalcPositionNed_i();
 652:./state.h     ****   }
 653:./state.h     ****   return &state.ned_pos_i;
 654:./state.h     **** }
 655:./state.h     **** 
 656:./state.h     **** /// Get position in local ENU coordinates (int).
 657:./state.h     **** static inline struct EnuCoor_i *stateGetPositionEnu_i(void)
 658:./state.h     **** {
 659:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_I)) {
 660:./state.h     ****     stateCalcPositionEnu_i();
 661:./state.h     ****   }
 662:./state.h     ****   return &state.enu_pos_i;
 663:./state.h     **** }
 664:./state.h     **** 
 665:./state.h     **** /// Get position in LLA coordinates (int).
 666:./state.h     **** static inline struct LlaCoor_i *stateGetPositionLla_i(void)
 667:./state.h     **** {
 668:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_I)) {
 669:./state.h     ****     stateCalcPositionLla_i();
 670:./state.h     ****   }
 671:./state.h     ****   return &state.lla_pos_i;
 672:./state.h     **** }
 673:./state.h     **** 
 674:./state.h     **** /// Get position in UTM coordinates (float).
 675:./state.h     **** static inline struct UtmCoor_f *stateGetPositionUtm_f(void)
 676:./state.h     **** {
 677:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F)) {
 678:./state.h     ****     stateCalcPositionUtm_f();
 679:./state.h     ****   }
 680:./state.h     ****   return &state.utm_pos_f;
 681:./state.h     **** }
 682:./state.h     **** 
 683:./state.h     **** /// Get position in ECEF coordinates (float).
 684:./state.h     **** static inline struct EcefCoor_f *stateGetPositionEcef_f(void)
 685:./state.h     **** {
 686:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ECEF_F)) {
 687:./state.h     ****     stateCalcPositionEcef_f();
 688:./state.h     ****   }
 689:./state.h     ****   return &state.ecef_pos_f;
 690:./state.h     **** }
 691:./state.h     **** 
 692:./state.h     **** /// Get position in local NED coordinates (float).
 693:./state.h     **** static inline struct NedCoor_f *stateGetPositionNed_f(void)
 694:./state.h     **** {
 695:./state.h     ****   if (!bit_is_set(state.pos_status, POS_NED_F)) {
 696:./state.h     ****     stateCalcPositionNed_f();
 697:./state.h     ****   }
 698:./state.h     ****   return &state.ned_pos_f;
 699:./state.h     **** }
 700:./state.h     **** 
 701:./state.h     **** /// Get position in local ENU coordinates (float).
 702:./state.h     **** static inline struct EnuCoor_f *stateGetPositionEnu_f(void)
 703:./state.h     **** {
  71              		.loc 2 703 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 0
  74              		@ frame_needed = 0, uses_anonymous_args = 0
  75 0000 08B5     		push	{r3, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 3, -8
  78              		.cfi_offset 14, -4
 704:./state.h     ****   if (!bit_is_set(state.pos_status, POS_ENU_F)) {
  79              		.loc 2 704 0
  80 0002 044B     		ldr	r3, .L10
  81 0004 1B88     		ldrh	r3, [r3]
  82 0006 1B06     		lsls	r3, r3, #24
  83 0008 01D4     		bmi	.L8
 705:./state.h     ****     stateCalcPositionEnu_f();
  84              		.loc 2 705 0
  85 000a FFF7FEFF 		bl	stateCalcPositionEnu_f
  86              	.LVL0:
  87              	.L8:
 706:./state.h     ****   }
 707:./state.h     ****   return &state.enu_pos_f;
 708:./state.h     **** }
  88              		.loc 2 708 0
  89 000e 0248     		ldr	r0, .L10+4
  90 0010 08BD     		pop	{r3, pc}
  91              	.L11:
  92 0012 00BF     		.align	2
  93              	.L10:
  94 0014 00000000 		.word	state
  95 0018 08010000 		.word	state+264
  96              		.cfi_endproc
  97              	.LFE76:
  99              		.section	.text.stateGetHorizontalSpeedNorm_f,"ax",%progbits
 100              		.align	1
 101              		.thumb
 102              		.thumb_func
 104              	stateGetHorizontalSpeedNorm_f:
 105              	.LFB94:
 709:./state.h     **** 
 710:./state.h     **** /// Get position in LLA coordinates (float).
 711:./state.h     **** static inline struct LlaCoor_f *stateGetPositionLla_f(void)
 712:./state.h     **** {
 713:./state.h     ****   if (!bit_is_set(state.pos_status, POS_LLA_F)) {
 714:./state.h     ****     stateCalcPositionLla_f();
 715:./state.h     ****   }
 716:./state.h     ****   return &state.lla_pos_f;
 717:./state.h     **** }
 718:./state.h     **** 
 719:./state.h     **** /** @}*/
 720:./state.h     **** 
 721:./state.h     **** 
 722:./state.h     **** 
 723:./state.h     **** /******************************************************************************
 724:./state.h     ****  *                                                                            *
 725:./state.h     ****  * Set and Get functions for the SPEED representations                        *
 726:./state.h     ****  *                                                                            *
 727:./state.h     ****  *****************************************************************************/
 728:./state.h     **** /** @addtogroup state_velocity
 729:./state.h     ****  *  @{ */
 730:./state.h     **** 
 731:./state.h     **** /************* declaration of transformation functions ************/
 732:./state.h     **** extern void stateCalcSpeedNed_i(void);
 733:./state.h     **** extern void stateCalcSpeedEnu_i(void);
 734:./state.h     **** extern void stateCalcSpeedEcef_i(void);
 735:./state.h     **** extern void stateCalcHorizontalSpeedNorm_i(void);
 736:./state.h     **** extern void stateCalcHorizontalSpeedDir_i(void);
 737:./state.h     **** extern void stateCalcSpeedNed_f(void);
 738:./state.h     **** extern void stateCalcSpeedEnu_f(void);
 739:./state.h     **** extern void stateCalcSpeedEcef_f(void);
 740:./state.h     **** extern void stateCalcHorizontalSpeedNorm_f(void);
 741:./state.h     **** extern void stateCalcHorizontalSpeedDir_f(void);
 742:./state.h     **** 
 743:./state.h     **** /************************ Set functions ****************************/
 744:./state.h     **** 
 745:./state.h     **** /// Set ground speed in local NED coordinates (int).
 746:./state.h     **** static inline void stateSetSpeedNed_i(struct NedCoor_i *ned_speed)
 747:./state.h     **** {
 748:./state.h     ****   VECT3_COPY(state.ned_speed_i, *ned_speed);
 749:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 750:./state.h     ****   state.speed_status = (1 << SPEED_NED_I);
 751:./state.h     **** }
 752:./state.h     **** 
 753:./state.h     **** /// Set ground speed in local ENU coordinates (int).
 754:./state.h     **** static inline void stateSetSpeedEnu_i(struct EnuCoor_i *enu_speed)
 755:./state.h     **** {
 756:./state.h     ****   VECT3_COPY(state.enu_speed_i, *enu_speed);
 757:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 758:./state.h     ****   state.speed_status = (1 << SPEED_ENU_I);
 759:./state.h     **** }
 760:./state.h     **** 
 761:./state.h     **** /// Set ground speed in ECEF coordinates (int).
 762:./state.h     **** static inline void stateSetSpeedEcef_i(struct EcefCoor_i *ecef_speed)
 763:./state.h     **** {
 764:./state.h     ****   VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 765:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 766:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_I);
 767:./state.h     **** }
 768:./state.h     **** 
 769:./state.h     **** /// Set multiple speed coordinates (int).
 770:./state.h     **** static inline void stateSetSpeed_i(
 771:./state.h     ****   struct EcefCoor_i *ecef_speed,
 772:./state.h     ****   struct NedCoor_i *ned_speed,
 773:./state.h     ****   struct EnuCoor_i *enu_speed)
 774:./state.h     **** {
 775:./state.h     ****   /* clear all status bit */
 776:./state.h     ****   state.speed_status = 0;
 777:./state.h     ****   if (ecef_speed != NULL) {
 778:./state.h     ****     VECT3_COPY(state.ecef_speed_i, *ecef_speed);
 779:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_I);
 780:./state.h     ****   }
 781:./state.h     ****   if (ned_speed != NULL) {
 782:./state.h     ****     VECT3_COPY(state.ned_speed_i, *ned_speed);
 783:./state.h     ****     state.speed_status |= (1 << SPEED_NED_I);
 784:./state.h     ****   }
 785:./state.h     ****   if (enu_speed != NULL) {
 786:./state.h     ****     VECT3_COPY(state.enu_speed_i, *enu_speed);
 787:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_I);
 788:./state.h     ****   }
 789:./state.h     **** }
 790:./state.h     **** 
 791:./state.h     **** /// Set ground speed in local NED coordinates (float).
 792:./state.h     **** static inline void stateSetSpeedNed_f(struct NedCoor_f *ned_speed)
 793:./state.h     **** {
 794:./state.h     ****   VECT3_COPY(state.ned_speed_f, *ned_speed);
 795:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 796:./state.h     ****   state.speed_status = (1 << SPEED_NED_F);
 797:./state.h     **** }
 798:./state.h     **** 
 799:./state.h     **** /// Set ground speed in local ENU coordinates (float).
 800:./state.h     **** static inline void stateSetSpeedEnu_f(struct EnuCoor_f *enu_speed)
 801:./state.h     **** {
 802:./state.h     ****   VECT3_COPY(state.enu_speed_f, *enu_speed);
 803:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 804:./state.h     ****   state.speed_status = (1 << SPEED_ENU_F);
 805:./state.h     **** }
 806:./state.h     **** 
 807:./state.h     **** /// Set ground speed in ECEF coordinates (float).
 808:./state.h     **** static inline void stateSetSpeedEcef_f(struct EcefCoor_f *ecef_speed)
 809:./state.h     **** {
 810:./state.h     ****   VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 811:./state.h     ****   /* clear bits for all speed representations and only set the new one */
 812:./state.h     ****   state.speed_status = (1 << SPEED_ECEF_F);
 813:./state.h     **** }
 814:./state.h     **** 
 815:./state.h     **** /// Set multiple speed coordinates (float).
 816:./state.h     **** static inline void stateSetSpeed_f(
 817:./state.h     ****   struct EcefCoor_f *ecef_speed,
 818:./state.h     ****   struct NedCoor_f *ned_speed,
 819:./state.h     ****   struct EnuCoor_f *enu_speed)
 820:./state.h     **** {
 821:./state.h     ****   /* clear all status bit */
 822:./state.h     ****   state.speed_status = 0;
 823:./state.h     ****   if (ecef_speed != NULL) {
 824:./state.h     ****     VECT3_COPY(state.ecef_speed_f, *ecef_speed);
 825:./state.h     ****     state.speed_status |= (1 << SPEED_ECEF_F);
 826:./state.h     ****   }
 827:./state.h     ****   if (ned_speed != NULL) {
 828:./state.h     ****     VECT3_COPY(state.ned_speed_f, *ned_speed);
 829:./state.h     ****     state.speed_status |= (1 << SPEED_NED_F);
 830:./state.h     ****   }
 831:./state.h     ****   if (enu_speed != NULL) {
 832:./state.h     ****     VECT3_COPY(state.enu_speed_f, *enu_speed);
 833:./state.h     ****     state.speed_status |= (1 << SPEED_ENU_F);
 834:./state.h     ****   }
 835:./state.h     **** }
 836:./state.h     **** 
 837:./state.h     **** /************************ Get functions ****************************/
 838:./state.h     **** 
 839:./state.h     **** /// Get ground speed in local NED coordinates (int).
 840:./state.h     **** static inline struct NedCoor_i *stateGetSpeedNed_i(void)
 841:./state.h     **** {
 842:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_I)) {
 843:./state.h     ****     stateCalcSpeedNed_i();
 844:./state.h     ****   }
 845:./state.h     ****   return &state.ned_speed_i;
 846:./state.h     **** }
 847:./state.h     **** 
 848:./state.h     **** /// Get ground speed in local ENU coordinates (int).
 849:./state.h     **** static inline struct EnuCoor_i *stateGetSpeedEnu_i(void)
 850:./state.h     **** {
 851:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_I)) {
 852:./state.h     ****     stateCalcSpeedEnu_i();
 853:./state.h     ****   }
 854:./state.h     ****   return &state.enu_speed_i;
 855:./state.h     **** }
 856:./state.h     **** 
 857:./state.h     **** /// Get ground speed in ECEF coordinates (int).
 858:./state.h     **** static inline struct EcefCoor_i *stateGetSpeedEcef_i(void)
 859:./state.h     **** {
 860:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_I)) {
 861:./state.h     ****     stateCalcSpeedEcef_i();
 862:./state.h     ****   }
 863:./state.h     ****   return &state.ecef_speed_i;
 864:./state.h     **** }
 865:./state.h     **** 
 866:./state.h     **** /// Get norm of horizontal ground speed (int).
 867:./state.h     **** static inline uint32_t *stateGetHorizontalSpeedNorm_i(void)
 868:./state.h     **** {
 869:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_I)) {
 870:./state.h     ****     stateCalcHorizontalSpeedNorm_i();
 871:./state.h     ****   }
 872:./state.h     ****   return &state.h_speed_norm_i;
 873:./state.h     **** }
 874:./state.h     **** 
 875:./state.h     **** /// Get dir of horizontal ground speed (int).
 876:./state.h     **** static inline int32_t *stateGetHorizontalSpeedDir_i(void)
 877:./state.h     **** {
 878:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_I)) {
 879:./state.h     ****     stateCalcHorizontalSpeedDir_i();
 880:./state.h     ****   }
 881:./state.h     ****   return &state.h_speed_dir_i;
 882:./state.h     **** }
 883:./state.h     **** 
 884:./state.h     **** /// Get ground speed in local NED coordinates (float).
 885:./state.h     **** static inline struct NedCoor_f *stateGetSpeedNed_f(void)
 886:./state.h     **** {
 887:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_NED_F)) {
 888:./state.h     ****     stateCalcSpeedNed_f();
 889:./state.h     ****   }
 890:./state.h     ****   return &state.ned_speed_f;
 891:./state.h     **** }
 892:./state.h     **** 
 893:./state.h     **** /// Get ground speed in local ENU coordinates (float).
 894:./state.h     **** static inline struct EnuCoor_f *stateGetSpeedEnu_f(void)
 895:./state.h     **** {
 896:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ENU_F)) {
 897:./state.h     ****     stateCalcSpeedEnu_f();
 898:./state.h     ****   }
 899:./state.h     ****   return &state.enu_speed_f;
 900:./state.h     **** }
 901:./state.h     **** 
 902:./state.h     **** /// Get ground speed in ECEF coordinates (float).
 903:./state.h     **** static inline struct EcefCoor_f *stateGetSpeedEcef_f(void)
 904:./state.h     **** {
 905:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_ECEF_F)) {
 906:./state.h     ****     stateCalcSpeedEcef_f();
 907:./state.h     ****   }
 908:./state.h     ****   return &state.ecef_speed_f;
 909:./state.h     **** }
 910:./state.h     **** 
 911:./state.h     **** /// Get norm of horizontal ground speed (float).
 912:./state.h     **** static inline float *stateGetHorizontalSpeedNorm_f(void)
 913:./state.h     **** {
 106              		.loc 2 913 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110 0000 08B5     		push	{r3, lr}
 111              		.cfi_def_cfa_offset 8
 112              		.cfi_offset 3, -8
 113              		.cfi_offset 14, -4
 914:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HNORM_F)) {
 114              		.loc 2 914 0
 115 0002 044B     		ldr	r3, .L14
 116 0004 B3F81431 		ldrh	r3, [r3, #276]
 117 0008 DB05     		lsls	r3, r3, #23
 118 000a 01D4     		bmi	.L13
 915:./state.h     ****     stateCalcHorizontalSpeedNorm_f();
 119              		.loc 2 915 0
 120 000c FFF7FEFF 		bl	stateCalcHorizontalSpeedNorm_f
 121              	.LVL1:
 122              	.L13:
 916:./state.h     ****   }
 917:./state.h     ****   return &state.h_speed_norm_f;
 918:./state.h     **** }
 123              		.loc 2 918 0
 124 0010 0148     		ldr	r0, .L14+4
 125 0012 08BD     		pop	{r3, pc}
 126              	.L15:
 127              		.align	2
 128              	.L14:
 129 0014 00000000 		.word	state
 130 0018 68010000 		.word	state+360
 131              		.cfi_endproc
 132              	.LFE94:
 134              		.section	.text.stateGetPositionUtm_f,"ax",%progbits
 135              		.align	1
 136              		.thumb
 137              		.thumb_func
 139              	stateGetPositionUtm_f:
 140              	.LFB73:
 676:./state.h     ****   if (!bit_is_set(state.pos_status, POS_UTM_F)) {
 141              		.loc 2 676 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 3, -8
 148              		.cfi_offset 14, -4
 677:./state.h     ****     stateCalcPositionUtm_f();
 149              		.loc 2 677 0
 150 0002 044B     		ldr	r3, .L18
 151 0004 1B88     		ldrh	r3, [r3]
 152 0006 9B05     		lsls	r3, r3, #22
 153 0008 01D4     		bmi	.L17
 678:./state.h     ****   }
 154              		.loc 2 678 0
 155 000a FFF7FEFF 		bl	stateCalcPositionUtm_f
 156              	.LVL2:
 157              	.L17:
 681:./state.h     **** 
 158              		.loc 2 681 0
 159 000e 0248     		ldr	r0, .L18+4
 160 0010 08BD     		pop	{r3, pc}
 161              	.L19:
 162 0012 00BF     		.align	2
 163              	.L18:
 164 0014 00000000 		.word	state
 165 0018 78000000 		.word	state+120
 166              		.cfi_endproc
 167              	.LFE73:
 169              		.section	.text.pprz_msg_send_WP_MOVED.constprop.4,"ax",%progbits
 170              		.align	1
 171              		.thumb
 172              		.thumb_func
 174              	pprz_msg_send_WP_MOVED.constprop.4:
 175              	.LFB503:
 176              		.file 3 "/home/dino/paparazzi/var/include/messages.h"
   1:/home/dino/paparazzi/var/include/messages.h **** /* Automatically generated by gen_messages from /home/dino/paparazzi/conf/messages.xml */
   2:/home/dino/paparazzi/var/include/messages.h **** /* Please DO NOT EDIT */
   3:/home/dino/paparazzi/var/include/messages.h **** /* Macros to send and receive messages of class telemetry */
   4:/home/dino/paparazzi/var/include/messages.h **** #ifndef _VAR_MESSAGES_telemetry_H_
   5:/home/dino/paparazzi/var/include/messages.h **** #define _VAR_MESSAGES_telemetry_H_
   6:/home/dino/paparazzi/var/include/messages.h **** #include "subsystems/datalink/transport.h"
   7:/home/dino/paparazzi/var/include/messages.h **** #include "mcu_periph/link_device.h"
   8:/home/dino/paparazzi/var/include/messages.h **** #if DOWNLINK
   9:/home/dino/paparazzi/var/include/messages.h **** #define DL_AUTOPILOT_VERSION 1
  10:/home/dino/paparazzi/var/include/messages.h **** #define DL_ALIVE 2
  11:/home/dino/paparazzi/var/include/messages.h **** #define DL_PONG 3
  12:/home/dino/paparazzi/var/include/messages.h **** #define DL_TAKEOFF 4
  13:/home/dino/paparazzi/var/include/messages.h **** #define DL_ARDRONE_NAVDATA 5
  14:/home/dino/paparazzi/var/include/messages.h **** #define DL_ATTITUDE 6
  15:/home/dino/paparazzi/var/include/messages.h **** #define DL_IR_SENSORS 7
  16:/home/dino/paparazzi/var/include/messages.h **** #define DL_GPS 8
  17:/home/dino/paparazzi/var/include/messages.h **** #define DL_NAVIGATION_REF 9
  18:/home/dino/paparazzi/var/include/messages.h **** #define DL_NAVIGATION 10
  19:/home/dino/paparazzi/var/include/messages.h **** #define DL_PPRZ_MODE 11
  20:/home/dino/paparazzi/var/include/messages.h **** #define DL_BAT 12
  21:/home/dino/paparazzi/var/include/messages.h **** #define DL_DEBUG_MCU_LINK 13
  22:/home/dino/paparazzi/var/include/messages.h **** #define DL_CALIBRATION 14
  23:/home/dino/paparazzi/var/include/messages.h **** #define DL_SETTINGS 15
  24:/home/dino/paparazzi/var/include/messages.h **** #define DL_DESIRED 16
  25:/home/dino/paparazzi/var/include/messages.h **** #define DL_GPS_SOL 17
  26:/home/dino/paparazzi/var/include/messages.h **** #define DL_ADC_GENERIC 18
  27:/home/dino/paparazzi/var/include/messages.h **** #define DL_TEST_FORMAT 19
  28:/home/dino/paparazzi/var/include/messages.h **** #define DL_CAM 20
  29:/home/dino/paparazzi/var/include/messages.h **** #define DL_CIRCLE 21
  30:/home/dino/paparazzi/var/include/messages.h **** #define DL_SEGMENT 22
  31:/home/dino/paparazzi/var/include/messages.h **** #define DL_SVINFO 25
  32:/home/dino/paparazzi/var/include/messages.h **** #define DL_DEBUG 26
  33:/home/dino/paparazzi/var/include/messages.h **** #define DL_SURVEY 27
  34:/home/dino/paparazzi/var/include/messages.h **** #define DL_WC_RSSI 28
  35:/home/dino/paparazzi/var/include/messages.h **** #define DL_RANGEFINDER 29
  36:/home/dino/paparazzi/var/include/messages.h **** #define DL_DATALINK_REPORT 30
  37:/home/dino/paparazzi/var/include/messages.h **** #define DL_DL_VALUE 31
  38:/home/dino/paparazzi/var/include/messages.h **** #define DL_MARK 32
  39:/home/dino/paparazzi/var/include/messages.h **** #define DL_SYS_MON 33
  40:/home/dino/paparazzi/var/include/messages.h **** #define DL_MOTOR 34
  41:/home/dino/paparazzi/var/include/messages.h **** #define DL_WP_MOVED 35
  42:/home/dino/paparazzi/var/include/messages.h **** #define DL_MKK 36
  43:/home/dino/paparazzi/var/include/messages.h **** #define DL_ENERGY 37
  44:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85_CALIB 38
  45:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_BMP85 39
  46:/home/dino/paparazzi/var/include/messages.h **** #define DL_SPEED_LOOP 40
  47:/home/dino/paparazzi/var/include/messages.h **** #define DL_ALT_KALMAN 41
  48:/home/dino/paparazzi/var/include/messages.h **** #define DL_ESTIMATOR 42
  49:/home/dino/paparazzi/var/include/messages.h **** #define DL_TUNE_ROLL 43
  50:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_MS5534A 44
  51:/home/dino/paparazzi/var/include/messages.h **** #define DL_PRESSURE 45
  52:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_WORDS 46
  53:/home/dino/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_LLA 47
  54:/home/dino/paparazzi/var/include/messages.h **** #define DL_CHRONO 48
  55:/home/dino/paparazzi/var/include/messages.h **** #define DL_WP_MOVED_ENU 49
  56:/home/dino/paparazzi/var/include/messages.h **** #define DL_WINDTURBINE_STATUS_ 50
  57:/home/dino/paparazzi/var/include/messages.h **** #define DL_RC_3CH_ 51
  58:/home/dino/paparazzi/var/include/messages.h **** #define DL_MPPT 52
  59:/home/dino/paparazzi/var/include/messages.h **** #define DL_DEBUG_IR_I2C 53
  60:/home/dino/paparazzi/var/include/messages.h **** #define DL_AIRSPEED 54
  61:/home/dino/paparazzi/var/include/messages.h **** #define DL_XSENS 55
  62:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_ETS 56
  63:/home/dino/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_ETS 57
  64:/home/dino/paparazzi/var/include/messages.h **** #define DL_PBN 58
  65:/home/dino/paparazzi/var/include/messages.h **** #define DL_GPS_LLA 59
  66:/home/dino/paparazzi/var/include/messages.h **** #define DL_H_CTL_A 60
  67:/home/dino/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_RAW 61
  68:/home/dino/paparazzi/var/include/messages.h **** #define DL_TURB_PRESSURE_VOLTAGE 62
  69:/home/dino/paparazzi/var/include/messages.h **** #define DL_CAM_POINT 63
  70:/home/dino/paparazzi/var/include/messages.h **** #define DL_DC_INFO 64
  71:/home/dino/paparazzi/var/include/messages.h **** #define DL_AMSYS_BARO 65
  72:/home/dino/paparazzi/var/include/messages.h **** #define DL_AMSYS_AIRSPEED 66
  73:/home/dino/paparazzi/var/include/messages.h **** #define DL_FLIGHT_BENCHMARK 67
  74:/home/dino/paparazzi/var/include/messages.h **** #define DL_MPL3115_BARO 68
  75:/home/dino/paparazzi/var/include/messages.h **** #define DL_AOA_ADC 69
  76:/home/dino/paparazzi/var/include/messages.h **** #define DL_XTEND_RSSI 70
  77:/home/dino/paparazzi/var/include/messages.h **** #define DL_SUPERBITRF 72
  78:/home/dino/paparazzi/var/include/messages.h **** #define DL_GX3_INFO 73
  79:/home/dino/paparazzi/var/include/messages.h **** #define DL_EXPLAIN 74
  80:/home/dino/paparazzi/var/include/messages.h **** #define DL_VIDEO_TELEMETRY 75
  81:/home/dino/paparazzi/var/include/messages.h **** #define DL_VF_UPDATE 76
  82:/home/dino/paparazzi/var/include/messages.h **** #define DL_VF_PREDICT 77
  83:/home/dino/paparazzi/var/include/messages.h **** #define DL_INV_FILTER 78
  84:/home/dino/paparazzi/var/include/messages.h **** #define DL_MISSION_STATUS 79
  85:/home/dino/paparazzi/var/include/messages.h **** #define DL_CROSS_TRACK_ERROR 80
  86:/home/dino/paparazzi/var/include/messages.h **** #define DL_GENERIC_COM 81
  87:/home/dino/paparazzi/var/include/messages.h **** #define DL_FORMATION_SLOT_TM 82
  88:/home/dino/paparazzi/var/include/messages.h **** #define DL_FORMATION_STATUS_TM 83
  89:/home/dino/paparazzi/var/include/messages.h **** #define DL_BMP_STATUS 84
  90:/home/dino/paparazzi/var/include/messages.h **** #define DL_MLX_STATUS 85
  91:/home/dino/paparazzi/var/include/messages.h **** #define DL_TMP_STATUS 86
  92:/home/dino/paparazzi/var/include/messages.h **** #define DL_WIND_INFO_RET 87
  93:/home/dino/paparazzi/var/include/messages.h **** #define DL_SCP_STATUS 88
  94:/home/dino/paparazzi/var/include/messages.h **** #define DL_SHT_STATUS 89
  95:/home/dino/paparazzi/var/include/messages.h **** #define DL_ENOSE_STATUS 90
  96:/home/dino/paparazzi/var/include/messages.h **** #define DL_DPICCO_STATUS 91
  97:/home/dino/paparazzi/var/include/messages.h **** #define DL_ANTENNA_DEBUG 92
  98:/home/dino/paparazzi/var/include/messages.h **** #define DL_ANTENNA_STATUS 93
  99:/home/dino/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATUS 94
 100:/home/dino/paparazzi/var/include/messages.h **** #define DL_MOTOR_BENCH_STATIC 95
 101:/home/dino/paparazzi/var/include/messages.h **** #define DL_HIH_STATUS 96
 102:/home/dino/paparazzi/var/include/messages.h **** #define DL_TEMT_STATUS 97
 103:/home/dino/paparazzi/var/include/messages.h **** #define DL_GP2Y_STATUS 98
 104:/home/dino/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_SERIAL 99
 105:/home/dino/paparazzi/var/include/messages.h **** #define DL_PPM 100
 106:/home/dino/paparazzi/var/include/messages.h **** #define DL_RC 101
 107:/home/dino/paparazzi/var/include/messages.h **** #define DL_COMMANDS 102
 108:/home/dino/paparazzi/var/include/messages.h **** #define DL_FBW_STATUS 103
 109:/home/dino/paparazzi/var/include/messages.h **** #define DL_ADC 104
 110:/home/dino/paparazzi/var/include/messages.h **** #define DL_ACTUATORS 105
 111:/home/dino/paparazzi/var/include/messages.h **** #define DL_DC_SHOT 110
 112:/home/dino/paparazzi/var/include/messages.h **** #define DL_TEST_BOARD_RESULTS 111
 113:/home/dino/paparazzi/var/include/messages.h **** #define DL_MLX_SERIAL 113
 114:/home/dino/paparazzi/var/include/messages.h **** #define DL_PAYLOAD 114
 115:/home/dino/paparazzi/var/include/messages.h **** #define DL_HTM_STATUS 115
 116:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_MS5611 116
 117:/home/dino/paparazzi/var/include/messages.h **** #define DL_MS5611_COEFF 117
 118:/home/dino/paparazzi/var/include/messages.h **** #define DL_ATMOSPHERE_CHARGE 118
 119:/home/dino/paparazzi/var/include/messages.h **** #define DL_SOLAR_RADIATION 119
 120:/home/dino/paparazzi/var/include/messages.h **** #define DL_TCAS_TA 120
 121:/home/dino/paparazzi/var/include/messages.h **** #define DL_TCAS_RA 121
 122:/home/dino/paparazzi/var/include/messages.h **** #define DL_TCAS_RESOLVED 122
 123:/home/dino/paparazzi/var/include/messages.h **** #define DL_TCAS_DEBUG 123
 124:/home/dino/paparazzi/var/include/messages.h **** #define DL_POTENTIAL 124
 125:/home/dino/paparazzi/var/include/messages.h **** #define DL_VERTICAL_ENERGY 125
 126:/home/dino/paparazzi/var/include/messages.h **** #define DL_TEMP_TCOUPLE 126
 127:/home/dino/paparazzi/var/include/messages.h **** #define DL_SHT_I2C_STATUS 127
 128:/home/dino/paparazzi/var/include/messages.h **** #define DL_CAMERA_SNAPSHOT 128
 129:/home/dino/paparazzi/var/include/messages.h **** #define DL_TIMESTAMP 129
 130:/home/dino/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_FLOAT 130
 131:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_SCALED 131
 132:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_SCALED 132
 133:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SCALED 133
 134:/home/dino/paparazzi/var/include/messages.h **** #define DL_FILTER 134
 135:/home/dino/paparazzi/var/include/messages.h **** #define DL_FILTER2 135
 136:/home/dino/paparazzi/var/include/messages.h **** #define DL_RATE_LOOP 136
 137:/home/dino/paparazzi/var/include/messages.h **** #define DL_FILTER_ALIGNER 137
 138:/home/dino/paparazzi/var/include/messages.h **** #define DL_AIRSPEED_MS45XX 138
 139:/home/dino/paparazzi/var/include/messages.h **** #define DL_FILTER_COR 139
 140:/home/dino/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INT 140
 141:/home/dino/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_INT 141
 142:/home/dino/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_REF_FLOAT 142
 143:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CMD 143
 144:/home/dino/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_INT 144
 145:/home/dino/paparazzi/var/include/messages.h **** #define DL_VERT_LOOP 145
 146:/home/dino/paparazzi/var/include/messages.h **** #define DL_HOVER_LOOP 146
 147:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_FP 147
 148:/home/dino/paparazzi/var/include/messages.h **** #define DL_TEMP_ADC 148
 149:/home/dino/paparazzi/var/include/messages.h **** #define DL_GUIDANCE_H_REF_INT 149
 150:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_TUNE_HOVER 150
 151:/home/dino/paparazzi/var/include/messages.h **** #define DL_INS_Z 151
 152:/home/dino/paparazzi/var/include/messages.h **** #define DL_PCAP01_STATUS 152
 153:/home/dino/paparazzi/var/include/messages.h **** #define DL_GEIGER_COUNTER 153
 154:/home/dino/paparazzi/var/include/messages.h **** #define DL_INS_REF 154
 155:/home/dino/paparazzi/var/include/messages.h **** #define DL_GPS_INT 155
 156:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER_INT 156
 157:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_QUAT_INT 157
 158:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_RMAT_INT 158
 159:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_NAV_STATUS 159
 160:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_RADIO_CONTROL 160
 161:/home/dino/paparazzi/var/include/messages.h **** #define DL_VFF_EXTENDED 161
 162:/home/dino/paparazzi/var/include/messages.h **** #define DL_VFF 162
 163:/home/dino/paparazzi/var/include/messages.h **** #define DL_GEO_MAG 163
 164:/home/dino/paparazzi/var/include/messages.h **** #define DL_HFF 164
 165:/home/dino/paparazzi/var/include/messages.h **** #define DL_HFF_DBG 165
 166:/home/dino/paparazzi/var/include/messages.h **** #define DL_HFF_GPS 166
 167:/home/dino/paparazzi/var/include/messages.h **** #define DL_INS_SONAR 167
 168:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_CAM 168
 169:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_REF_QUAT 169
 170:/home/dino/paparazzi/var/include/messages.h **** #define DL_EKF7_XHAT 170
 171:/home/dino/paparazzi/var/include/messages.h **** #define DL_EKF7_Y 171
 172:/home/dino/paparazzi/var/include/messages.h **** #define DL_EKF7_P_DIAG 172
 173:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_EULER 173
 174:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_MEASUREMENT_EULER 174
 175:/home/dino/paparazzi/var/include/messages.h **** #define DL_WT 175
 176:/home/dino/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_DEBUG 176
 177:/home/dino/paparazzi/var/include/messages.h **** #define DL_CSC_CAN_MSG 177
 178:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_GYRO_BIAS_INT 178
 179:/home/dino/paparazzi/var/include/messages.h **** #define DL_FLOW_AP_OTF 179
 180:/home/dino/paparazzi/var/include/messages.h **** #define DL_FMS_TIME 180
 181:/home/dino/paparazzi/var/include/messages.h **** #define DL_LOADCELL 181
 182:/home/dino/paparazzi/var/include/messages.h **** #define DL_FLA_DEBUG 182
 183:/home/dino/paparazzi/var/include/messages.h **** #define DL_BLMC_FAULT_STATUS 183
 184:/home/dino/paparazzi/var/include/messages.h **** #define DL_BLMC_SPEEDS 184
 185:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_DEBUG_QUAT 185
 186:/home/dino/paparazzi/var/include/messages.h **** #define DL_BLMC_BUSVOLTS 186
 187:/home/dino/paparazzi/var/include/messages.h **** #define DL_SYSTEM_STATUS 187
 188:/home/dino/paparazzi/var/include/messages.h **** #define DL_DYNAMIXEL 188
 189:/home/dino/paparazzi/var/include/messages.h **** #define DL_RMAT_DEBUG 189
 190:/home/dino/paparazzi/var/include/messages.h **** #define DL_SIMPLE_COMMANDS 190
 191:/home/dino/paparazzi/var/include/messages.h **** #define DL_VANE_SENSOR 191
 192:/home/dino/paparazzi/var/include/messages.h **** #define DL_CONTROLLER_GAINS 192
 193:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF 193
 194:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_DEBUG 194
 195:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_ACC_DBG 195
 196:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_LKF_MAG_DBG 196
 197:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_SENSORS_SCALED 197
 198:/home/dino/paparazzi/var/include/messages.h **** #define DL_INS 198
 199:/home/dino/paparazzi/var/include/messages.h **** #define DL_GPS_ERROR 199
 200:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO 200
 201:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_MAG 201
 202:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL 202
 203:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_RAW 203
 204:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_ACCEL_RAW 204
 205:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_RAW 205
 206:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_SETTINGS 206
 207:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_MAG_CURRENT_CALIBRATION 207
 208:/home/dino/paparazzi/var/include/messages.h **** #define DL_UART_ERRORS 208
 209:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_GYRO_LP 209
 210:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_PRESSURE 210
 211:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_HS_GYRO 211
 212:/home/dino/paparazzi/var/include/messages.h **** #define DL_TEST_PASSTHROUGH_STATUS 212
 213:/home/dino/paparazzi/var/include/messages.h **** #define DL_TUNE_VERT 213
 214:/home/dino/paparazzi/var/include/messages.h **** #define DL_MF_DAQ_STATE 214
 215:/home/dino/paparazzi/var/include/messages.h **** #define DL_INFO_MSG 215
 216:/home/dino/paparazzi/var/include/messages.h **** #define DL_STAB_ATTITUDE_INDI 216
 217:/home/dino/paparazzi/var/include/messages.h **** #define DL_BEBOP_ACTUATORS 218
 218:/home/dino/paparazzi/var/include/messages.h **** #define DL_WEATHER 219
 219:/home/dino/paparazzi/var/include/messages.h **** #define DL_IMU_TURNTABLE 220
 220:/home/dino/paparazzi/var/include/messages.h **** #define DL_BARO_RAW 221
 221:/home/dino/paparazzi/var/include/messages.h **** #define DL_AIR_DATA 222
 222:/home/dino/paparazzi/var/include/messages.h **** #define DL_AMSL 223
 223:/home/dino/paparazzi/var/include/messages.h **** #define DL_VIDEO_SYNC 225
 224:/home/dino/paparazzi/var/include/messages.h **** #define DL_PERIODIC_TELEMETRY_ERR 226
 225:/home/dino/paparazzi/var/include/messages.h **** #define DL_TIME 227
 226:/home/dino/paparazzi/var/include/messages.h **** #define DL_OPTIC_FLOW_EST 228
 227:/home/dino/paparazzi/var/include/messages.h **** #define DL_AHRS_ARDRONE2 230
 228:/home/dino/paparazzi/var/include/messages.h **** #define DL_ROTORCRAFT_STATUS 231
 229:/home/dino/paparazzi/var/include/messages.h **** #define DL_STATE_FILTER_STATUS 232
 230:/home/dino/paparazzi/var/include/messages.h **** #define DL_PX4FLOW 233
 231:/home/dino/paparazzi/var/include/messages.h **** #define DL_OPTICFLOW 234
 232:/home/dino/paparazzi/var/include/messages.h **** #define DL_VISUALTARGET 235
 233:/home/dino/paparazzi/var/include/messages.h **** #define DL_SONAR 236
 234:/home/dino/paparazzi/var/include/messages.h **** #define DL_PAYLOAD_FLOAT 237
 235:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_POS_LLH 238
 236:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_RPMS 239
 237:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_SPEED_POS 240
 238:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_RATE_ATTITUDE 241
 239:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_GYRO_BIAS 242
 240:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_RANGE_METER 243
 241:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_WIND 244
 242:/home/dino/paparazzi/var/include/messages.h **** #define DL_PPRZ_DEBUG 247
 243:/home/dino/paparazzi/var/include/messages.h **** #define DL_NPS_ACCEL_LTP 248
 244:/home/dino/paparazzi/var/include/messages.h **** #define DL_LOOSE_INS_GPS 249
 245:/home/dino/paparazzi/var/include/messages.h **** #define DL_AFL_COEFFS 250
 246:/home/dino/paparazzi/var/include/messages.h **** #define DL_I2C_ERRORS 253
 247:/home/dino/paparazzi/var/include/messages.h **** #define DL_RDYB_TRAJECTORY 254
 248:/home/dino/paparazzi/var/include/messages.h **** #define DL_HENRY_GNSS 255
 249:/home/dino/paparazzi/var/include/messages.h **** #define DL_MSG_telemetry_NB 240
 250:/home/dino/paparazzi/var/include/messages.h **** 
 251:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_AUTOPILOT_VERSION(_trans, _dev, version, nb_desc, desc) pprz_msg_send_AUTOPIL
 252:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_AUTOPILOT_VERSION(struct transport_tx *trans, struct link_device *
 253:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 
 254:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1+nb_desc*1 +2 /* msg heade
 255:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1+nb_desc*1 +2 /* msg header overhead */);
 256:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 257:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_AUTOPILOT_VERSION, "
 258:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _version);
 259:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_desc)
 260:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_CHAR, DL_FORMAT_ARRAY, 1 * nb_desc, (void *) _desc);
 261:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 262:/home/dino/paparazzi/var/include/messages.h **** 	} else
 263:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 264:/home/dino/paparazzi/var/include/messages.h **** }
 265:/home/dino/paparazzi/var/include/messages.h **** 
 266:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ALIVE(_trans, _dev, nb_md5sum, md5sum) pprz_msg_send_ALIVE(&((_trans).trans_t
 267:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ALIVE(struct transport_tx *trans, struct link_device *dev, uint8_t
 268:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 
 269:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_md5sum*1 +2 /* msg heade
 270:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_md5sum*1 +2 /* msg header overhead */);
 271:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 272:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ALIVE, "ALIVE");
 273:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_md5su
 274:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_md5sum, (void *) _md5s
 275:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 276:/home/dino/paparazzi/var/include/messages.h **** 	} else
 277:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 278:/home/dino/paparazzi/var/include/messages.h **** }
 279:/home/dino/paparazzi/var/include/messages.h **** 
 280:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PONG(_trans, _dev) pprz_msg_send_PONG(&((_trans).trans_tx), &((_dev).device),
 281:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PONG(struct transport_tx *trans, struct link_device *dev, uint8_t 
 282:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header 
 283:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0 +2 /* msg header overhead */)
 284:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0 +2 /* msg header overhead */);
 285:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 286:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PONG, "PONG");
 287:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 288:/home/dino/paparazzi/var/include/messages.h **** 	} else
 289:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 290:/home/dino/paparazzi/var/include/messages.h **** }
 291:/home/dino/paparazzi/var/include/messages.h **** 
 292:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TAKEOFF(_trans, _dev, cpu_time) pprz_msg_send_TAKEOFF(&((_trans).trans_tx), &
 293:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TAKEOFF(struct transport_tx *trans, struct link_device *dev, uint8
 294:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg heade
 295:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2 +2 /* msg header overhead *
 296:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2 +2 /* msg header overhead */);
 297:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 298:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TAKEOFF, "TAKEOFF");
 299:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _cpu_time);
 300:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 301:/home/dino/paparazzi/var/include/messages.h **** 	} else
 302:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 303:/home/dino/paparazzi/var/include/messages.h **** }
 304:/home/dino/paparazzi/var/include/messages.h **** 
 305:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ARDRONE_NAVDATA(_trans, _dev, taille, nu_trame, ax, ay, az, vx, vy, vz, tempe
 306:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ARDRONE_NAVDATA(struct transport_tx *trans, struct link_device *de
 307:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2
 308:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2
 309:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+2+4+2+2+4+2+2+2+2+2
 310:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 311:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ARDRONE_NAVDATA, "AR
 312:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _taille);
 313:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nu_trame);
 314:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ax);
 315:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ay);
 316:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _az);
 317:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vx);
 318:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vy);
 319:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vz);
 320:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_ac
 321:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_gy
 322:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _ultrasound);
 323:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_debut_echo)
 324:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_fin_echo);
 325:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_association
 326:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_distance_ec
 327:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_time)
 328:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_value
 329:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _us_curve_ref);
 330:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _nb_echo);
 331:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _sum_echo);
 332:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _gradient);
 333:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flag_echo_ini)
 334:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _pressure);
 335:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _temperature_pr
 336:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mx);
 337:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _my);
 338:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _mz);
 339:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _chksum);
 340:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _checksum_error
 341:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 342:/home/dino/paparazzi/var/include/messages.h **** 	} else
 343:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 344:/home/dino/paparazzi/var/include/messages.h **** }
 345:/home/dino/paparazzi/var/include/messages.h **** 
 346:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ATTITUDE(_trans, _dev, phi, psi, theta) pprz_msg_send_ATTITUDE(&((_trans).tra
 347:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ATTITUDE(struct transport_tx *trans, struct link_device *dev, uint
 348:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 349:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 350:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 351:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 352:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ATTITUDE, "ATTITUDE"
 353:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _phi);
 354:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _psi);
 355:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _theta);
 356:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 357:/home/dino/paparazzi/var/include/messages.h **** 	} else
 358:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 359:/home/dino/paparazzi/var/include/messages.h **** }
 360:/home/dino/paparazzi/var/include/messages.h **** 
 361:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_IR_SENSORS(_trans, _dev, ir1, ir2, longitudinal, lateral, vertical) pprz_msg_
 362:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_IR_SENSORS(struct transport_tx *trans, struct link_device *dev, ui
 363:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* m
 364:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2 +2 /* msg header ov
 365:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2 +2 /* msg header overhead */);
 366:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 367:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_IR_SENSORS, "IR_SENS
 368:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir1);
 369:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _ir2);
 370:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _longitudinal);
 371:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _lateral);
 372:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _vertical);
 373:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 374:/home/dino/paparazzi/var/include/messages.h **** 	} else
 375:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 376:/home/dino/paparazzi/var/include/messages.h **** }
 377:/home/dino/paparazzi/var/include/messages.h **** 
 378:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS(_trans, _dev, mode, utm_east, utm_north, course, alt, speed, climb, week,
 379:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS(struct transport_tx *trans, struct link_device *dev, uint8_t a
 380:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4
 381:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* m
 382:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+2+4+2+2+2+4+1+1 +2 /* msg header overhead */);
 383:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 384:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS, "GPS");
 385:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mode);
 386:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 387:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 388:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _course);
 389:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _alt);
 390:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _speed);
 391:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _climb);
 392:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _week);
 393:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _itow);
 394:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 395:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _gps_nb_err);
 396:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 397:/home/dino/paparazzi/var/include/messages.h **** 	} else
 398:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 399:/home/dino/paparazzi/var/include/messages.h **** }
 400:/home/dino/paparazzi/var/include/messages.h **** 
 401:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION_REF(_trans, _dev, utm_east, utm_north, utm_zone, ground_alt) pprz_
 402:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION_REF(struct transport_tx *trans, struct link_device *dev
 403:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg
 404:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 405:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 406:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 407:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 408:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 409:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 410:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 411:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 412:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 413:/home/dino/paparazzi/var/include/messages.h **** 	} else
 414:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 415:/home/dino/paparazzi/var/include/messages.h **** }
 416:/home/dino/paparazzi/var/include/messages.h **** 
 417:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_NAVIGATION(_trans, _dev, cur_block, cur_stage, pos_x, pos_y, dist_wp, dist_ho
 418:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_NAVIGATION(struct transport_tx *trans, struct link_device *dev, ui
 419:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +
 420:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 421:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 422:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 423:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 424:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 425:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 426:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 427:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 428:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 429:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 430:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 431:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 432:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 433:/home/dino/paparazzi/var/include/messages.h **** 	} else
 434:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 435:/home/dino/paparazzi/var/include/messages.h **** }
 436:/home/dino/paparazzi/var/include/messages.h **** 
 437:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_PPRZ_MODE(_trans, _dev, ap_mode, ap_gaz, ap_lateral, ap_horizontal, if_calib_
 438:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_PPRZ_MODE(struct transport_tx *trans, struct link_device *dev, uin
 439:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /*
 440:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1 +2 /* msg header 
 441:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1 +2 /* msg header overhead */);
 442:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 443:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_PPRZ_MODE, "PPRZ_MOD
 444:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_mode);
 445:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_gaz);
 446:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_lateral);
 447:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ap_horizontal);
 448:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _if_calib_mode);
 449:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _mcu1_status);
 450:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 451:/home/dino/paparazzi/var/include/messages.h **** 	} else
 452:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 453:/home/dino/paparazzi/var/include/messages.h **** }
 454:/home/dino/paparazzi/var/include/messages.h **** 
 455:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_BAT(_trans, _dev, throttle, voltage, amps, flight_time, kill_auto_throttle, b
 456:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_BAT(struct transport_tx *trans, struct link_device *dev, uint8_t a
 457:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +
 458:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1+2+2+2 +2 /* msg hea
 459:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1+2+2+2 +2 /* msg header overhead */);
 460:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 461:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_BAT, "BAT");
 462:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _throttle);
 463:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _voltage);
 464:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _amps);
 465:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _flight_time);
 466:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _kill_auto_throt
 467:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _block_time);
 468:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _stage_time);
 469:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _energy);
 470:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 471:/home/dino/paparazzi/var/include/messages.h **** 	} else
 472:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 473:/home/dino/paparazzi/var/include/messages.h **** }
 474:/home/dino/paparazzi/var/include/messages.h **** 
 475:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG_MCU_LINK(_trans, _dev, i2c_nb_err, i2c_mcu1_nb_err, ppm_rate) pprz_msg_
 476:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG_MCU_LINK(struct transport_tx *trans, struct link_device *dev
 477:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg h
 478:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1 +2 /* msg header overhe
 479:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1 +2 /* msg header overhead */);
 480:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 481:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG_MCU_LINK, "DEB
 482:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_nb_err);
 483:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _i2c_mcu1_nb_err
 484:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ppm_rate);
 485:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 486:/home/dino/paparazzi/var/include/messages.h **** 	} else
 487:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 488:/home/dino/paparazzi/var/include/messages.h **** }
 489:/home/dino/paparazzi/var/include/messages.h **** 
 490:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CALIBRATION(_trans, _dev, climb_sum_err, climb_gaz_submode) pprz_msg_send_CAL
 491:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CALIBRATION(struct transport_tx *trans, struct link_device *dev, u
 492:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg hea
 493:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+1 +2 /* msg header overhead
 494:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+1 +2 /* msg header overhead */);
 495:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 496:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CALIBRATION, "CALIBR
 497:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb_sum_err);
 498:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _climb_gaz_submo
 499:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 500:/home/dino/paparazzi/var/include/messages.h **** 	} else
 501:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 502:/home/dino/paparazzi/var/include/messages.h **** }
 503:/home/dino/paparazzi/var/include/messages.h **** 
 504:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SETTINGS(_trans, _dev, slider_1_val, slider_2_val) pprz_msg_send_SETTINGS(&((
 505:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SETTINGS(struct transport_tx *trans, struct link_device *dev, uint
 506:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg hea
 507:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4 +2 /* msg header overhead
 508:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4 +2 /* msg header overhead */);
 509:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 510:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SETTINGS, "SETTINGS"
 511:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_1_val);
 512:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _slider_2_val);
 513:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 514:/home/dino/paparazzi/var/include/messages.h **** 	} else
 515:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 516:/home/dino/paparazzi/var/include/messages.h **** }
 517:/home/dino/paparazzi/var/include/messages.h **** 
 518:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DESIRED(_trans, _dev, roll, pitch, course, x, y, altitude, climb, airspeed) p
 519:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DESIRED(struct transport_tx *trans, struct link_device *dev, uint8
 520:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +
 521:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4+4+4+4+4 +2 /* msg hea
 522:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4+4+4+4+4 +2 /* msg header overhead */);
 523:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 524:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DESIRED, "DESIRED");
 525:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _roll);
 526:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pitch);
 527:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _course);
 528:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _x);
 529:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _y);
 530:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _altitude);
 531:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _climb);
 532:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _airspeed);
 533:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 534:/home/dino/paparazzi/var/include/messages.h **** 	} else
 535:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 536:/home/dino/paparazzi/var/include/messages.h **** }
 537:/home/dino/paparazzi/var/include/messages.h **** 
 538:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_GPS_SOL(_trans, _dev, Pacc, Sacc, PDOP, numSV) pprz_msg_send_GPS_SOL(&((_tran
 539:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_GPS_SOL(struct transport_tx *trans, struct link_device *dev, uint8
 540:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg
 541:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+2+1 +2 /* msg header over
 542:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+2+1 +2 /* msg header overhead */);
 543:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 544:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_GPS_SOL, "GPS_SOL");
 545:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Pacc);
 546:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT32, DL_FORMAT_SCALAR, 4, (void *) _Sacc);
 547:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _PDOP);
 548:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _numSV);
 549:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 550:/home/dino/paparazzi/var/include/messages.h **** 	} else
 551:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 552:/home/dino/paparazzi/var/include/messages.h **** }
 553:/home/dino/paparazzi/var/include/messages.h **** 
 554:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_ADC_GENERIC(_trans, _dev, val1, val2) pprz_msg_send_ADC_GENERIC(&((_trans).tr
 555:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_ADC_GENERIC(struct transport_tx *trans, struct link_device *dev, u
 556:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg hea
 557:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2 +2 /* msg header overhead
 558:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2 +2 /* msg header overhead */);
 559:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 560:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_ADC_GENERIC, "ADC_GE
 561:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val1);
 562:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _val2);
 563:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 564:/home/dino/paparazzi/var/include/messages.h **** 	} else
 565:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 566:/home/dino/paparazzi/var/include/messages.h **** }
 567:/home/dino/paparazzi/var/include/messages.h **** 
 568:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_TEST_FORMAT(_trans, _dev, val1, val2) pprz_msg_send_TEST_FORMAT(&((_trans).tr
 569:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_TEST_FORMAT(struct transport_tx *trans, struct link_device *dev, u
 570:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg hea
 571:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+8+4 +2 /* msg header overhead
 572:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+8+4 +2 /* msg header overhead */);
 573:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 574:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_TEST_FORMAT, "TEST_F
 575:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_DOUBLE, DL_FORMAT_SCALAR, 8, (void *) _val1);
 576:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _val2);
 577:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 578:/home/dino/paparazzi/var/include/messages.h **** 	} else
 579:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 580:/home/dino/paparazzi/var/include/messages.h **** }
 581:/home/dino/paparazzi/var/include/messages.h **** 
 582:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CAM(_trans, _dev, phi, theta, target_x, target_y) pprz_msg_send_CAM(&((_trans
 583:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CAM(struct transport_tx *trans, struct link_device *dev, uint8_t a
 584:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg
 585:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2 +2 /* msg header over
 586:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2 +2 /* msg header overhead */);
 587:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 588:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CAM, "CAM");
 589:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _phi);
 590:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _theta);
 591:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_x);
 592:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _target_y);
 593:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 594:/home/dino/paparazzi/var/include/messages.h **** 	} else
 595:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 596:/home/dino/paparazzi/var/include/messages.h **** }
 597:/home/dino/paparazzi/var/include/messages.h **** 
 598:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_CIRCLE(_trans, _dev, center_east, center_north, radius) pprz_msg_send_CIRCLE(
 599:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_CIRCLE(struct transport_tx *trans, struct link_device *dev, uint8_
 600:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg h
 601:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 602:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 603:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 604:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 605:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 606:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 607:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 608:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 609:/home/dino/paparazzi/var/include/messages.h **** 	} else
 610:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 611:/home/dino/paparazzi/var/include/messages.h **** }
 612:/home/dino/paparazzi/var/include/messages.h **** 
 613:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SEGMENT(_trans, _dev, segment_east_1, segment_north_1, segment_east_2, segmen
 614:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SEGMENT(struct transport_tx *trans, struct link_device *dev, uint8
 615:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 616:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 617:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 618:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 619:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 620:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 621:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 622:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 623:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 624:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 625:/home/dino/paparazzi/var/include/messages.h **** 	} else
 626:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 627:/home/dino/paparazzi/var/include/messages.h **** }
 628:/home/dino/paparazzi/var/include/messages.h **** 
 629:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SVINFO(_trans, _dev, chn, SVID, Flags, QI, CNO, Elev, Azim) pprz_msg_send_SVI
 630:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SVINFO(struct transport_tx *trans, struct link_device *dev, uint8_
 631:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 
 632:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+1+1+1+1+2 +2 /* msg heade
 633:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+1+1+1+1+2 +2 /* msg header overhead */);
 634:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 635:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SVINFO, "SVINFO");
 636:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _chn);
 637:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _SVID);
 638:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _Flags);
 639:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _QI);
 640:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _CNO);
 641:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT8, DL_FORMAT_SCALAR, 1, (void *) _Elev);
 642:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT16, DL_FORMAT_SCALAR, 2, (void *) _Azim);
 643:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 644:/home/dino/paparazzi/var/include/messages.h **** 	} else
 645:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 646:/home/dino/paparazzi/var/include/messages.h **** }
 647:/home/dino/paparazzi/var/include/messages.h **** 
 648:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DEBUG(_trans, _dev, nb_msg, msg) pprz_msg_send_DEBUG(&((_trans).trans_tx), &(
 649:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DEBUG(struct transport_tx *trans, struct link_device *dev, uint8_t
 650:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* 
 651:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+nb_msg*1 +2 /* msg header o
 652:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+nb_msg*1 +2 /* msg header overhead */);
 653:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 654:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DEBUG, "DEBUG");
 655:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_ARRAY_LENGTH, DL_FORMAT_SCALAR, 1, (void *) &nb_msg);
 656:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_ARRAY, 1 * nb_msg, (void *) _msg);
 657:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 658:/home/dino/paparazzi/var/include/messages.h **** 	} else
 659:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 660:/home/dino/paparazzi/var/include/messages.h **** }
 661:/home/dino/paparazzi/var/include/messages.h **** 
 662:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SURVEY(_trans, _dev, east, north, west, south) pprz_msg_send_SURVEY(&((_trans
 663:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SURVEY(struct transport_tx *trans, struct link_device *dev, uint8_
 664:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg
 665:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 666:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 667:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 668:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 669:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 670:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 671:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 672:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 673:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 674:/home/dino/paparazzi/var/include/messages.h **** 	} else
 675:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 676:/home/dino/paparazzi/var/include/messages.h **** }
 677:/home/dino/paparazzi/var/include/messages.h **** 
 678:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WC_RSSI(_trans, _dev, raw_level) pprz_msg_send_WC_RSSI(&((_trans).trans_tx), 
 679:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WC_RSSI(struct transport_tx *trans, struct link_device *dev, uint8
 680:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg heade
 681:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1 +2 /* msg header overhead *
 682:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1 +2 /* msg header overhead */);
 683:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 684:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WC_RSSI, "WC_RSSI");
 685:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _raw_level);
 686:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 687:/home/dino/paparazzi/var/include/messages.h **** 	} else
 688:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 689:/home/dino/paparazzi/var/include/messages.h **** }
 690:/home/dino/paparazzi/var/include/messages.h **** 
 691:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_RANGEFINDER(_trans, _dev, range, z_dot, z_dot_sum_err, z_dot_setpoint, z_sum_
 692:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_RANGEFINDER(struct transport_tx *trans, struct link_device *dev, u
 693:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 
 694:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4+4+4+4+4+1 +2 /* msg heade
 695:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4+4+4+4+4+1 +2 /* msg header overhead */);
 696:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 697:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_RANGEFINDER, "RANGEF
 698:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _range);
 699:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot);
 700:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_sum_err);
 701:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_dot_setpoint)
 702:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_sum_err);
 703:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _z_setpoint);
 704:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _flying);
 705:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 706:/home/dino/paparazzi/var/include/messages.h **** 	} else
 707:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 708:/home/dino/paparazzi/var/include/messages.h **** }
 709:/home/dino/paparazzi/var/include/messages.h **** 
 710:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DATALINK_REPORT(_trans, _dev, uplink_lost_time, uplink_nb_msgs, downlink_nb_m
 711:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DATALINK_REPORT(struct transport_tx *trans, struct link_device *de
 712:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* m
 713:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+1 +2 /* msg header ov
 714:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+1 +2 /* msg header overhead */);
 715:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 716:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DATALINK_REPORT, "DA
 717:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_lost_ti
 718:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _uplink_nb_msgs
 719:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_nb_ms
 720:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _downlink_rate)
 721:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _downlink_ovrn);
 722:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 723:/home/dino/paparazzi/var/include/messages.h **** 	} else
 724:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 725:/home/dino/paparazzi/var/include/messages.h **** }
 726:/home/dino/paparazzi/var/include/messages.h **** 
 727:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_DL_VALUE(_trans, _dev, index, value) pprz_msg_send_DL_VALUE(&((_trans).trans_
 728:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_DL_VALUE(struct transport_tx *trans, struct link_device *dev, uint
 729:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg hea
 730:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4 +2 /* msg header overhead
 731:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4 +2 /* msg header overhead */);
 732:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 733:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_DL_VALUE, "DL_VALUE"
 734:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _index);
 735:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _value);
 736:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 737:/home/dino/paparazzi/var/include/messages.h **** 	} else
 738:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 739:/home/dino/paparazzi/var/include/messages.h **** }
 740:/home/dino/paparazzi/var/include/messages.h **** 
 741:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MARK(_trans, _dev, ac_id, lat, long) pprz_msg_send_MARK(&((_trans).trans_tx),
 742:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MARK(struct transport_tx *trans, struct link_device *dev, uint8_t 
 743:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg h
 744:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4 +2 /* msg header overhe
 745:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4 +2 /* msg header overhead */);
 746:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 747:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MARK, "MARK");
 748:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _ac_id);
 749:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _lat);
 750:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _long);
 751:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 752:/home/dino/paparazzi/var/include/messages.h **** 	} else
 753:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 754:/home/dino/paparazzi/var/include/messages.h **** }
 755:/home/dino/paparazzi/var/include/messages.h **** 
 756:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_SYS_MON(_trans, _dev, periodic_time, periodic_time_min, periodic_time_max, pe
 757:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_SYS_MON(struct transport_tx *trans, struct link_device *dev, uint8
 758:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +
 759:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+2+2+2+2+2+2+1 +2 /* msg hea
 760:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+2+2+2+2+2+2+1 +2 /* msg header overhead */);
 761:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 762:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SYS_MON, "SYS_MON");
 763:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time)
 764:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 765:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_time_
 766:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 767:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 768:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _periodic_cycle
 769:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _event_number);
 770:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cpu_load);
 771:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 772:/home/dino/paparazzi/var/include/messages.h **** 	} else
 773:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 774:/home/dino/paparazzi/var/include/messages.h **** }
 775:/home/dino/paparazzi/var/include/messages.h **** 
 776:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_MOTOR(_trans, _dev, rpm, current) pprz_msg_send_MOTOR(&((_trans).trans_tx), &
 777:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_MOTOR(struct transport_tx *trans, struct link_device *dev, uint8_t
 778:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg hea
 779:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+2+4 +2 /* msg header overhead
 780:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+2+4 +2 /* msg header overhead */);
 781:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 782:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_MOTOR, "MOTOR");
 783:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT16, DL_FORMAT_SCALAR, 2, (void *) _rpm);
 784:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _current);
 785:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 786:/home/dino/paparazzi/var/include/messages.h **** 	} else
 787:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 788:/home/dino/paparazzi/var/include/messages.h **** }
 789:/home/dino/paparazzi/var/include/messages.h **** 
 790:/home/dino/paparazzi/var/include/messages.h **** #define DOWNLINK_SEND_WP_MOVED(_trans, _dev, wp_id, utm_east, utm_north, alt, utm_zone) pprz_msg_se
 791:/home/dino/paparazzi/var/include/messages.h **** static inline void pprz_msg_send_WP_MOVED(struct transport_tx *trans, struct link_device *dev, uint
 177              		.loc 3 791 0
 178              		.cfi_startproc
 179              		@ args = 8, pretend = 0, frame = 8
 180              		@ frame_needed = 0, uses_anonymous_args = 0
 181              	.LVL3:
 182 0000 2DE9FF47 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, lr}
 183              		.cfi_def_cfa_offset 48
 184              		.cfi_offset 4, -32
 185              		.cfi_offset 5, -28
 186              		.cfi_offset 6, -24
 187              		.cfi_offset 7, -20
 188              		.cfi_offset 8, -16
 189              		.cfi_offset 9, -12
 190              		.cfi_offset 10, -8
 191              		.cfi_offset 14, -4
 792:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 192              		.loc 3 792 0
 193 0004 076A     		ldr	r7, [r0, #32]
 194 0006 D0F804A0 		ldr	r10, [r0, #4]
 195 000a 0126     		movs	r6, #1
 791:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 196              		.loc 3 791 0
 197 000c 0D46     		mov	r5, r1
 198 000e 0446     		mov	r4, r0
 199              		.loc 3 792 0
 200 0010 1021     		movs	r1, #16
 201              	.LVL4:
 791:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 202              		.loc 3 791 0
 203 0012 9946     		mov	r9, r3
 204 0014 8DF80F60 		strb	r6, [sp, #15]
 205              		.loc 3 792 0
 206 0018 0368     		ldr	r3, [r0]
 207              	.LVL5:
 208 001a 3846     		mov	r0, r7
 209              	.LVL6:
 791:/home/dino/paparazzi/var/include/messages.h **** 	if (trans->check_available_space(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* m
 210              		.loc 3 791 0
 211 001c 9046     		mov	r8, r2
 212              	.LVL7:
 213              		.loc 3 792 0
 214 001e 9847     		blx	r3
 215              	.LVL8:
 216 0020 2946     		mov	r1, r5
 217 0022 0246     		mov	r2, r0
 218 0024 3846     		mov	r0, r7
 219 0026 D047     		blx	r10
 220              	.LVL9:
 221 0028 0028     		cmp	r0, #0
 222 002a 54D0     		beq	.L21
 793:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+4+4+4+1 +2 /* msg header ov
 223              		.loc 3 793 0
 224 002c 276A     		ldr	r7, [r4, #32]
 225 002e 2368     		ldr	r3, [r4]
 226 0030 D4F81CA0 		ldr	r10, [r4, #28]
 227 0034 3846     		mov	r0, r7
 228 0036 1021     		movs	r1, #16
 229 0038 9847     		blx	r3
 230              	.LVL10:
 231 003a 2946     		mov	r1, r5
 232 003c 0246     		mov	r2, r0
 233 003e 3846     		mov	r0, r7
 234 0040 D047     		blx	r10
 235              	.LVL11:
 794:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+4+4+4+1 +2 /* msg header overhead */);
 236              		.loc 3 794 0
 237 0042 2369     		ldr	r3, [r4, #16]
 238 0044 206A     		ldr	r0, [r4, #32]
 239 0046 2946     		mov	r1, r5
 240 0048 1022     		movs	r2, #16
 241 004a 9847     		blx	r3
 242              	.LVL12:
 795:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 243              		.loc 3 795 0
 244 004c 0DF10F03 		add	r3, sp, #15
 245 0050 0096     		str	r6, [sp]
 246 0052 0193     		str	r3, [sp, #4]
 247 0054 A768     		ldr	r7, [r4, #8]
 248 0056 206A     		ldr	r0, [r4, #32]
 249 0058 2946     		mov	r1, r5
 250 005a 0222     		movs	r2, #2
 251 005c 0023     		movs	r3, #0
 252 005e B847     		blx	r7
 253              	.LVL13:
 796:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_WP_MOVED, "WP_MOVED"
 254              		.loc 3 796 0
 255 0060 2323     		movs	r3, #35
 256 0062 0093     		str	r3, [sp]
 257 0064 1F4B     		ldr	r3, .L24
 258 0066 0193     		str	r3, [sp, #4]
 259 0068 E768     		ldr	r7, [r4, #12]
 260 006a 206A     		ldr	r0, [r4, #32]
 261 006c 2946     		mov	r1, r5
 262 006e 0222     		movs	r2, #2
 263 0070 0023     		movs	r3, #0
 264 0072 B847     		blx	r7
 265              	.LVL14:
 797:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 266              		.loc 3 797 0
 267 0074 8DE84001 		stmia	sp, {r6, r8}
 268 0078 A768     		ldr	r7, [r4, #8]
 269 007a 206A     		ldr	r0, [r4, #32]
 798:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 270              		.loc 3 798 0
 271 007c 4FF00408 		mov	r8, #4
 272              	.LVL15:
 797:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _wp_id);
 273              		.loc 3 797 0
 274 0080 2946     		mov	r1, r5
 275 0082 0222     		movs	r2, #2
 276 0084 0023     		movs	r3, #0
 277 0086 B847     		blx	r7
 278              	.LVL16:
 279              		.loc 3 798 0
 280 0088 206A     		ldr	r0, [r4, #32]
 281 008a A768     		ldr	r7, [r4, #8]
 282 008c 2946     		mov	r1, r5
 283 008e 0A22     		movs	r2, #10
 284 0090 0023     		movs	r3, #0
 285 0092 8DE80003 		stmia	sp, {r8, r9}
 286 0096 B847     		blx	r7
 287              	.LVL17:
 799:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 288              		.loc 3 799 0
 289 0098 0C9B     		ldr	r3, [sp, #48]
 290 009a 0193     		str	r3, [sp, #4]
 291 009c 206A     		ldr	r0, [r4, #32]
 292 009e A768     		ldr	r7, [r4, #8]
 293 00a0 CDF80080 		str	r8, [sp]
 294 00a4 2946     		mov	r1, r5
 295 00a6 0A22     		movs	r2, #10
 296 00a8 0023     		movs	r3, #0
 297 00aa B847     		blx	r7
 298              	.LVL18:
 800:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _alt);
 299              		.loc 3 800 0
 300 00ac 0D9B     		ldr	r3, [sp, #52]
 301 00ae 0193     		str	r3, [sp, #4]
 302 00b0 206A     		ldr	r0, [r4, #32]
 303 00b2 CDF80080 		str	r8, [sp]
 304 00b6 2946     		mov	r1, r5
 305 00b8 0A22     		movs	r2, #10
 306 00ba 0023     		movs	r3, #0
 307 00bc A768     		ldr	r7, [r4, #8]
 308 00be B847     		blx	r7
 309              	.LVL19:
 801:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 310              		.loc 3 801 0
 311 00c0 094B     		ldr	r3, .L24+4
 312 00c2 0096     		str	r6, [sp]
 313 00c4 0193     		str	r3, [sp, #4]
 314 00c6 A668     		ldr	r6, [r4, #8]
 315              	.LVL20:
 316 00c8 206A     		ldr	r0, [r4, #32]
 317 00ca 0023     		movs	r3, #0
 318 00cc 2946     		mov	r1, r5
 319 00ce 0222     		movs	r2, #2
 320 00d0 B047     		blx	r6
 321              	.LVL21:
 802:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 322              		.loc 3 802 0
 323 00d2 6369     		ldr	r3, [r4, #20]
 324 00d4 00E0     		b	.L23
 325              	.LVL22:
 326              	.L21:
 327              	.LBB13:
 328              	.LBB14:
 803:/home/dino/paparazzi/var/include/messages.h **** 	} else
 804:/home/dino/paparazzi/var/include/messages.h **** 	  trans->overrun(trans->impl, dev);
 329              		.loc 3 804 0
 330 00d6 A369     		ldr	r3, [r4, #24]
 331              	.LVL23:
 332              	.L23:
 333 00d8 206A     		ldr	r0, [r4, #32]
 334 00da 2946     		mov	r1, r5
 335 00dc 9847     		blx	r3
 336              	.LVL24:
 337              	.LBE14:
 338              	.LBE13:
 805:/home/dino/paparazzi/var/include/messages.h **** }
 339              		.loc 3 805 0
 340 00de 04B0     		add	sp, sp, #16
 341              		.cfi_def_cfa_offset 32
 342              		@ sp needed
 343 00e0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 344              	.LVL25:
 345              	.L25:
 346              		.align	2
 347              	.L24:
 348 00e4 00000000 		.word	.LC0
 349 00e8 00000000 		.word	.LANCHOR3
 350              		.cfi_endproc
 351              	.LFE503:
 353              		.section	.text.send_wp_moved,"ax",%progbits
 354              		.align	1
 355              		.thumb
 356              		.thumb_func
 358              	send_wp_moved:
 359              	.LFB482:
 429:firmwares/fixedwing/nav.c **** }
 430:firmwares/fixedwing/nav.c **** 
 431:firmwares/fixedwing/nav.c **** /** \brief Home mode navigation (circle around HOME) */
 432:firmwares/fixedwing/nav.c **** void nav_home(void)
 433:firmwares/fixedwing/nav.c **** {
 434:firmwares/fixedwing/nav.c ****   NavCircleWaypoint(WP_HOME, FAILSAFE_HOME_RADIUS);
 435:firmwares/fixedwing/nav.c ****   /** Nominal speed */
 436:firmwares/fixedwing/nav.c ****   nav_pitch = 0.;
 437:firmwares/fixedwing/nav.c ****   v_ctl_mode = V_CTL_MODE_AUTO_ALT;
 438:firmwares/fixedwing/nav.c ****   nav_altitude = ground_alt + HOME_MODE_HEIGHT;
 439:firmwares/fixedwing/nav.c ****   compute_dist2_to_home();
 440:firmwares/fixedwing/nav.c ****   dist2_to_wp = dist2_to_home;
 441:firmwares/fixedwing/nav.c ****   nav_set_altitude();
 442:firmwares/fixedwing/nav.c **** }
 443:firmwares/fixedwing/nav.c **** 
 444:firmwares/fixedwing/nav.c **** /**
 445:firmwares/fixedwing/nav.c ****  *  \brief Navigation main: call to the code generated from the XML flight
 446:firmwares/fixedwing/nav.c ****  * plan
 447:firmwares/fixedwing/nav.c ****  */
 448:firmwares/fixedwing/nav.c **** void nav_periodic_task(void)
 449:firmwares/fixedwing/nav.c **** {
 450:firmwares/fixedwing/nav.c ****   nav_survey_active = FALSE;
 451:firmwares/fixedwing/nav.c **** 
 452:firmwares/fixedwing/nav.c ****   compute_dist2_to_home();
 453:firmwares/fixedwing/nav.c ****   dist2_to_wp = 0.;
 454:firmwares/fixedwing/nav.c **** 
 455:firmwares/fixedwing/nav.c ****   auto_nav(); /* From flight_plan.h */
 456:firmwares/fixedwing/nav.c **** 
 457:firmwares/fixedwing/nav.c ****   h_ctl_course_pre_bank = nav_in_circle ? circle_bank : 0;
 458:firmwares/fixedwing/nav.c **** 
 459:firmwares/fixedwing/nav.c **** #ifdef AGR_CLIMB
 460:firmwares/fixedwing/nav.c ****   if (v_ctl_mode == V_CTL_MODE_AUTO_CLIMB) {
 461:firmwares/fixedwing/nav.c ****     v_ctl_auto_throttle_submode =  V_CTL_AUTO_THROTTLE_STANDARD;
 462:firmwares/fixedwing/nav.c ****   }
 463:firmwares/fixedwing/nav.c **** #endif
 464:firmwares/fixedwing/nav.c **** 
 465:firmwares/fixedwing/nav.c ****   nav_set_altitude();
 466:firmwares/fixedwing/nav.c **** }
 467:firmwares/fixedwing/nav.c **** 
 468:firmwares/fixedwing/nav.c **** /**
 469:firmwares/fixedwing/nav.c ****  * \brief Periodic telemetry
 470:firmwares/fixedwing/nav.c ****  */
 471:firmwares/fixedwing/nav.c **** #if PERIODIC_TELEMETRY
 472:firmwares/fixedwing/nav.c **** #include "subsystems/datalink/telemetry.h"
 473:firmwares/fixedwing/nav.c **** 
 474:firmwares/fixedwing/nav.c **** static void send_nav_ref(struct transport_tx *trans, struct link_device *dev)
 475:firmwares/fixedwing/nav.c **** {
 476:firmwares/fixedwing/nav.c ****   pprz_msg_send_NAVIGATION_REF(trans, dev, AC_ID,
 477:firmwares/fixedwing/nav.c ****                                &nav_utm_east0, &nav_utm_north0, &nav_utm_zone0, &ground_alt);
 478:firmwares/fixedwing/nav.c **** }
 479:firmwares/fixedwing/nav.c **** 
 480:firmwares/fixedwing/nav.c **** static void send_nav(struct transport_tx *trans, struct link_device *dev)
 481:firmwares/fixedwing/nav.c **** {
 482:firmwares/fixedwing/nav.c ****   SEND_NAVIGATION(trans, dev);
 483:firmwares/fixedwing/nav.c **** }
 484:firmwares/fixedwing/nav.c **** 
 485:firmwares/fixedwing/nav.c **** static void send_wp_moved(struct transport_tx *trans, struct link_device *dev)
 486:firmwares/fixedwing/nav.c **** {
 360              		.loc 1 486 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 8
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              	.LVL26:
 365 0000 30B5     		push	{r4, r5, lr}
 366              		.cfi_def_cfa_offset 12
 367              		.cfi_offset 4, -12
 368              		.cfi_offset 5, -8
 369              		.cfi_offset 14, -4
 487:firmwares/fixedwing/nav.c ****   static uint8_t i;
 488:firmwares/fixedwing/nav.c ****   i++;
 370              		.loc 1 488 0
 371 0002 174B     		ldr	r3, .L30
 372              	.LBB15:
 489:firmwares/fixedwing/nav.c ****   if (i >= nb_waypoint) { i = 0; }
 490:firmwares/fixedwing/nav.c ****   DownlinkSendWp(trans, dev, i);
 373              		.loc 1 490 0
 374 0004 174C     		ldr	r4, .L30+4
 375              	.LBE15:
 488:firmwares/fixedwing/nav.c ****   if (i >= nb_waypoint) { i = 0; }
 376              		.loc 1 488 0
 377 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 378              	.LBB16:
 379              		.loc 1 490 0
 380 0008 174D     		ldr	r5, .L30+8
 381              	.LBE16:
 488:firmwares/fixedwing/nav.c ****   if (i >= nb_waypoint) { i = 0; }
 382              		.loc 1 488 0
 383 000a 0132     		adds	r2, r2, #1
 384 000c D2B2     		uxtb	r2, r2
 489:firmwares/fixedwing/nav.c ****   if (i >= nb_waypoint) { i = 0; }
 385              		.loc 1 489 0
 386 000e 0B2A     		cmp	r2, #11
 387 0010 88BF     		it	hi
 388 0012 0022     		movhi	r2, #0
 389 0014 1A70     		strb	r2, [r3]
 390              	.LBB17:
 391              		.loc 1 490 0
 392 0016 154A     		ldr	r2, .L30+12
 393 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 394 001a D2ED007A 		flds	s15, [r2]	@ int
 395 001e 0C22     		movs	r2, #12
 396 0020 5343     		muls	r3, r2, r3
 397 0022 E218     		adds	r2, r4, r3
 398 0024 92ED007A 		flds	s14, [r2]
 399 0028 F8EEE77A 		fsitos	s15, s15
 400              	.LBE17:
 486:firmwares/fixedwing/nav.c ****   static uint8_t i;
 401              		.loc 1 486 0
 402 002c 85B0     		sub	sp, sp, #20
 403              		.cfi_def_cfa_offset 32
 404              	.LBB18:
 405              		.loc 1 490 0
 406 002e 77EE877A 		fadds	s15, s15, s14
 407 0032 92ED017A 		flds	s14, [r2, #4]
 408 0036 CDED027A 		fsts	s15, [sp, #8]
 409 003a D5ED007A 		flds	s15, [r5]	@ int
 410 003e F8EEE77A 		fsitos	s15, s15
 411 0042 0833     		adds	r3, r3, #8
 412 0044 77EE877A 		fadds	s15, s15, s14
 413 0048 03AA     		add	r2, sp, #12
 414 004a 2344     		add	r3, r3, r4
 415 004c 0092     		str	r2, [sp]
 416 004e 0193     		str	r3, [sp, #4]
 417 0050 034A     		ldr	r2, .L30
 418 0052 CDED037A 		fsts	s15, [sp, #12]
 419 0056 02AB     		add	r3, sp, #8
 420 0058 FFF7FEFF 		bl	pprz_msg_send_WP_MOVED.constprop.4
 421              	.LVL27:
 422              	.LBE18:
 491:firmwares/fixedwing/nav.c **** }
 423              		.loc 1 491 0
 424 005c 05B0     		add	sp, sp, #20
 425              		.cfi_def_cfa_offset 12
 426              		@ sp needed
 427 005e 30BD     		pop	{r4, r5, pc}
 428              	.L31:
 429              		.align	2
 430              	.L30:
 431 0060 00000000 		.word	.LANCHOR4
 432 0064 00000000 		.word	.LANCHOR6
 433 0068 00000000 		.word	.LANCHOR7
 434 006c 00000000 		.word	.LANCHOR5
 435              		.cfi_endproc
 436              	.LFE482:
 438              		.global	__aeabi_f2d
 439              		.global	__aeabi_ddiv
 440              		.global	__aeabi_d2uiz
 441              		.section	.text.send_nav,"ax",%progbits
 442              		.align	1
 443              		.thumb
 444              		.thumb_func
 446              	send_nav:
 447              	.LFB481:
 481:firmwares/fixedwing/nav.c ****   SEND_NAVIGATION(trans, dev);
 448              		.loc 1 481 0
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 0, uses_anonymous_args = 0
 452              	.LVL28:
 453 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 454              		.cfi_def_cfa_offset 32
 455              		.cfi_offset 4, -32
 456              		.cfi_offset 5, -28
 457              		.cfi_offset 6, -24
 458              		.cfi_offset 7, -20
 459              		.cfi_offset 8, -16
 460              		.cfi_offset 9, -12
 461              		.cfi_offset 10, -8
 462              		.cfi_offset 14, -4
 463              	.LBB22:
 482:firmwares/fixedwing/nav.c **** }
 464              		.loc 1 482 0
 465 0004 684B     		ldr	r3, .L36+8
 466 0006 D3ED007A 		flds	s15, [r3]
 467 000a F0EEE77A 		fabss	s15, s15
 468              	.LBE22:
 481:firmwares/fixedwing/nav.c ****   SEND_NAVIGATION(trans, dev);
 469              		.loc 1 481 0
 470 000e 86B0     		sub	sp, sp, #24
 471              		.cfi_def_cfa_offset 56
 481:firmwares/fixedwing/nav.c ****   SEND_NAVIGATION(trans, dev);
 472              		.loc 1 481 0
 473 0010 8246     		mov	r10, r0
 474              	.LBB29:
 482:firmwares/fixedwing/nav.c **** }
 475              		.loc 1 482 0
 476 0012 17EE900A 		fmrs	r0, s15
 477              	.LVL29:
 478              	.LBE29:
 481:firmwares/fixedwing/nav.c ****   SEND_NAVIGATION(trans, dev);
 479              		.loc 1 481 0
 480 0016 0C46     		mov	r4, r1
 481              	.LBB30:
 482:firmwares/fixedwing/nav.c **** }
 482              		.loc 1 482 0
 483 0018 FFF7FEFF 		bl	__aeabi_f2d
 484              	.LVL30:
 485 001c 60A3     		adr	r3, .L36
 486 001e D3E90023 		ldrd	r2, [r3]
 487 0022 FFF7FEFF 		bl	__aeabi_ddiv
 488              	.LVL31:
 489 0026 FFF7FEFF 		bl	__aeabi_d2uiz
 490              	.LVL32:
 491 002a 8DF80E00 		strb	r0, [sp, #14]
 492 002e FFF7FEFF 		bl	stateGetPositionEnu_f
 493              	.LVL33:
 494 0032 5E4B     		ldr	r3, .L36+12
 495 0034 8046     		mov	r8, r0
 496              	.LVL34:
 497 0036 1868     		ldr	r0, [r3]	@ float
 498              	.LVL35:
 499 0038 FFF7FEFF 		bl	sqrtf
 500              	.LVL36:
 501 003c 5C4B     		ldr	r3, .L36+16
 502 003e 0490     		str	r0, [sp, #16]	@ float
 503 0040 1868     		ldr	r0, [r3]	@ float
 504 0042 FFF7FEFF 		bl	sqrtf
 505              	.LVL37:
 506              	.LBB23:
 507              	.LBB24:
 419:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 508              		.loc 3 419 0
 509 0046 DAF82060 		ldr	r6, [r10, #32]
 510              	.LBE24:
 511              	.LBE23:
 482:firmwares/fixedwing/nav.c **** }
 512              		.loc 1 482 0
 513 004a 0590     		str	r0, [sp, #20]	@ float
 514              	.LVL38:
 515 004c 0125     		movs	r5, #1
 516              	.LBB27:
 517              	.LBB25:
 419:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+1+1+4+4+4+4+1+1 +2 /* msg hea
 518              		.loc 3 419 0
 519 004e 1621     		movs	r1, #22
 520 0050 8DF80F50 		strb	r5, [sp, #15]
 521              	.LVL39:
 522 0054 DAF80030 		ldr	r3, [r10]
 523 0058 DAF80470 		ldr	r7, [r10, #4]
 524 005c 3046     		mov	r0, r6
 525 005e 9847     		blx	r3
 526              	.LVL40:
 527 0060 2146     		mov	r1, r4
 528 0062 0246     		mov	r2, r0
 529 0064 3046     		mov	r0, r6
 530 0066 B847     		blx	r7
 531              	.LVL41:
 532 0068 0028     		cmp	r0, #0
 533 006a 00F08F80 		beq	.L33
 420:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+1+1+4+4+4+4+1+1 +2 /* msg header overhead */);
 534              		.loc 3 420 0
 535 006e DAF82060 		ldr	r6, [r10, #32]
 536 0072 DAF80030 		ldr	r3, [r10]
 537 0076 DAF81C70 		ldr	r7, [r10, #28]
 538 007a 3046     		mov	r0, r6
 539 007c 1621     		movs	r1, #22
 540 007e 9847     		blx	r3
 541              	.LVL42:
 542 0080 2146     		mov	r1, r4
 543 0082 0246     		mov	r2, r0
 544 0084 3046     		mov	r0, r6
 545 0086 B847     		blx	r7
 546              	.LVL43:
 421:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 547              		.loc 3 421 0
 548 0088 DAF81030 		ldr	r3, [r10, #16]
 549 008c DAF82000 		ldr	r0, [r10, #32]
 550 0090 2146     		mov	r1, r4
 551 0092 1622     		movs	r2, #22
 552 0094 9847     		blx	r3
 553              	.LVL44:
 422:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION, "NAVIGAT
 554              		.loc 3 422 0
 555 0096 0DF10F03 		add	r3, sp, #15
 556 009a 0095     		str	r5, [sp]
 557 009c 0193     		str	r3, [sp, #4]
 558 009e DAF80860 		ldr	r6, [r10, #8]
 559 00a2 DAF82000 		ldr	r0, [r10, #32]
 560 00a6 2146     		mov	r1, r4
 561 00a8 0222     		movs	r2, #2
 562 00aa 0023     		movs	r3, #0
 563 00ac B047     		blx	r6
 564              	.LVL45:
 423:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_block);
 565              		.loc 3 423 0
 566 00ae 0A26     		movs	r6, #10
 567 00b0 404B     		ldr	r3, .L36+20
 568 00b2 0096     		str	r6, [sp]
 569 00b4 0193     		str	r3, [sp, #4]
 570 00b6 DAF80C70 		ldr	r7, [r10, #12]
 571 00ba DAF82000 		ldr	r0, [r10, #32]
 572 00be 2146     		mov	r1, r4
 573 00c0 0222     		movs	r2, #2
 574 00c2 0023     		movs	r3, #0
 575 00c4 B847     		blx	r7
 576              	.LVL46:
 424:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _cur_stage);
 577              		.loc 3 424 0
 578 00c6 3C4B     		ldr	r3, .L36+24
 579 00c8 0095     		str	r5, [sp]
 580 00ca 0193     		str	r3, [sp, #4]
 581 00cc DAF80870 		ldr	r7, [r10, #8]
 582 00d0 DAF82000 		ldr	r0, [r10, #32]
 583 00d4 2146     		mov	r1, r4
 584 00d6 0222     		movs	r2, #2
 585 00d8 0023     		movs	r3, #0
 586 00da B847     		blx	r7
 587              	.LVL47:
 425:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 588              		.loc 3 425 0
 589 00dc 374B     		ldr	r3, .L36+28
 590 00de 0095     		str	r5, [sp]
 426:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 591              		.loc 3 426 0
 592 00e0 4FF00409 		mov	r9, #4
 425:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_x);
 593              		.loc 3 425 0
 594 00e4 0193     		str	r3, [sp, #4]
 595 00e6 DAF80870 		ldr	r7, [r10, #8]
 596 00ea DAF82000 		ldr	r0, [r10, #32]
 597 00ee 2146     		mov	r1, r4
 598 00f0 0222     		movs	r2, #2
 599 00f2 0023     		movs	r3, #0
 600 00f4 B847     		blx	r7
 601              	.LVL48:
 426:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _pos_y);
 602              		.loc 3 426 0
 603 00f6 3246     		mov	r2, r6
 604 00f8 DAF82000 		ldr	r0, [r10, #32]
 605 00fc DAF80870 		ldr	r7, [r10, #8]
 606 0100 CDF80090 		str	r9, [sp]
 607 0104 2146     		mov	r1, r4
 608 0106 0023     		movs	r3, #0
 609 0108 CDF80480 		str	r8, [sp, #4]
 610 010c B847     		blx	r7
 611              	.LVL49:
 612              	.LBE25:
 613              	.LBE27:
 482:firmwares/fixedwing/nav.c **** }
 614              		.loc 1 482 0
 615 010e 08EB0903 		add	r3, r8, r9
 616              	.LVL50:
 617              	.LBB28:
 618              	.LBB26:
 427:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_wp);
 619              		.loc 3 427 0
 620 0112 3246     		mov	r2, r6
 621 0114 0193     		str	r3, [sp, #4]
 622 0116 DAF82000 		ldr	r0, [r10, #32]
 623 011a DAF80870 		ldr	r7, [r10, #8]
 624 011e CDF80090 		str	r9, [sp]
 625 0122 2146     		mov	r1, r4
 626 0124 0023     		movs	r3, #0
 627              	.LVL51:
 628 0126 B847     		blx	r7
 629              	.LVL52:
 428:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _dist_home);
 630              		.loc 3 428 0
 631 0128 04AB     		add	r3, sp, #16
 632              	.LVL53:
 633 012a 3246     		mov	r2, r6
 634 012c 0193     		str	r3, [sp, #4]
 635 012e DAF82000 		ldr	r0, [r10, #32]
 636 0132 DAF80870 		ldr	r7, [r10, #8]
 637 0136 CDF80090 		str	r9, [sp]
 638 013a 2146     		mov	r1, r4
 639 013c 0023     		movs	r3, #0
 640              	.LVL54:
 641 013e B847     		blx	r7
 642              	.LVL55:
 429:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _circle_count);
 643              		.loc 3 429 0
 644 0140 05AB     		add	r3, sp, #20
 645              	.LVL56:
 646 0142 3246     		mov	r2, r6
 647 0144 0193     		str	r3, [sp, #4]
 648 0146 DAF82000 		ldr	r0, [r10, #32]
 649 014a CDF80090 		str	r9, [sp]
 650 014e 2146     		mov	r1, r4
 651 0150 0023     		movs	r3, #0
 652              	.LVL57:
 653 0152 DAF80870 		ldr	r7, [r10, #8]
 654 0156 B847     		blx	r7
 655              	.LVL58:
 430:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _oval_count);
 656              		.loc 3 430 0
 657 0158 0DF10E03 		add	r3, sp, #14
 658              	.LVL59:
 659 015c 0095     		str	r5, [sp]
 660 015e 0193     		str	r3, [sp, #4]
 661 0160 DAF82000 		ldr	r0, [r10, #32]
 662 0164 DAF80860 		ldr	r6, [r10, #8]
 663 0168 2146     		mov	r1, r4
 664 016a 0222     		movs	r2, #2
 665 016c 0023     		movs	r3, #0
 666              	.LVL60:
 667 016e B047     		blx	r6
 668              	.LVL61:
 431:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 669              		.loc 3 431 0
 670 0170 134B     		ldr	r3, .L36+32
 671 0172 0095     		str	r5, [sp]
 672 0174 0193     		str	r3, [sp, #4]
 673 0176 DAF80850 		ldr	r5, [r10, #8]
 674              	.LVL62:
 675 017a DAF82000 		ldr	r0, [r10, #32]
 676 017e 0023     		movs	r3, #0
 677 0180 2146     		mov	r1, r4
 678 0182 0222     		movs	r2, #2
 679 0184 A847     		blx	r5
 680              	.LVL63:
 432:/home/dino/paparazzi/var/include/messages.h **** 	} else
 681              		.loc 3 432 0
 682 0186 DAF81430 		ldr	r3, [r10, #20]
 683 018a 01E0     		b	.L35
 684              	.L33:
 434:/home/dino/paparazzi/var/include/messages.h **** }
 685              		.loc 3 434 0
 686 018c DAF81830 		ldr	r3, [r10, #24]
 687              	.L35:
 688 0190 DAF82000 		ldr	r0, [r10, #32]
 689 0194 2146     		mov	r1, r4
 690 0196 9847     		blx	r3
 691              	.LVL64:
 692              	.LBE26:
 693              	.LBE28:
 694              	.LBE30:
 483:firmwares/fixedwing/nav.c **** 
 695              		.loc 1 483 0
 696 0198 06B0     		add	sp, sp, #24
 697              		.cfi_def_cfa_offset 32
 698              		@ sp needed
 699 019a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 700              	.LVL65:
 701              	.L37:
 702 019e 00BF     		.align	3
 703              	.L36:
 704 01a0 182D4454 		.word	1413754136
 705 01a4 FB211940 		.word	1075388923
 706 01a8 00000000 		.word	.LANCHOR8
 707 01ac 00000000 		.word	.LANCHOR9
 708 01b0 00000000 		.word	.LANCHOR10
 709 01b4 09000000 		.word	.LC1
 710 01b8 00000000 		.word	nav_block
 711 01bc 00000000 		.word	nav_stage
 712 01c0 00000000 		.word	.LANCHOR11
 713              		.cfi_endproc
 714              	.LFE481:
 716              		.section	.text.send_nav_ref,"ax",%progbits
 717              		.align	1
 718              		.thumb
 719              		.thumb_func
 721              	send_nav_ref:
 722              	.LFB480:
 475:firmwares/fixedwing/nav.c ****   pprz_msg_send_NAVIGATION_REF(trans, dev, AC_ID,
 723              		.loc 1 475 0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 8
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              	.LVL66:
 728 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 729              		.cfi_def_cfa_offset 40
 730              		.cfi_offset 4, -24
 731              		.cfi_offset 5, -20
 732              		.cfi_offset 6, -16
 733              		.cfi_offset 7, -12
 734              		.cfi_offset 8, -8
 735              		.cfi_offset 14, -4
 736              	.LBB33:
 737              	.LBB34:
 403:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 738              		.loc 3 403 0
 739 0004 066A     		ldr	r6, [r0, #32]
 740 0006 4768     		ldr	r7, [r0, #4]
 741 0008 0368     		ldr	r3, [r0]
 742 000a 4FF00108 		mov	r8, #1
 743              	.LBE34:
 744              	.LBE33:
 475:firmwares/fixedwing/nav.c ****   pprz_msg_send_NAVIGATION_REF(trans, dev, AC_ID,
 745              		.loc 1 475 0
 746 000e 0D46     		mov	r5, r1
 747              	.LVL67:
 748 0010 0446     		mov	r4, r0
 749              	.LBB36:
 750              	.LBB35:
 403:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+1+4 +2 /* msg header over
 751              		.loc 3 403 0
 752 0012 0F21     		movs	r1, #15
 753              	.LVL68:
 754 0014 8DF80F80 		strb	r8, [sp, #15]
 755              	.LVL69:
 756 0018 3046     		mov	r0, r6
 757              	.LVL70:
 758 001a 9847     		blx	r3
 759              	.LVL71:
 760 001c 2946     		mov	r1, r5
 761 001e 0246     		mov	r2, r0
 762 0020 3046     		mov	r0, r6
 763 0022 B847     		blx	r7
 764              	.LVL72:
 765 0024 0028     		cmp	r0, #0
 766 0026 4BD0     		beq	.L39
 404:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+1+4 +2 /* msg header overhead */);
 767              		.loc 3 404 0
 768 0028 266A     		ldr	r6, [r4, #32]
 769 002a 2368     		ldr	r3, [r4]
 770 002c E769     		ldr	r7, [r4, #28]
 771 002e 3046     		mov	r0, r6
 772 0030 0F21     		movs	r1, #15
 773 0032 9847     		blx	r3
 774              	.LVL73:
 775 0034 2946     		mov	r1, r5
 776 0036 0246     		mov	r2, r0
 777 0038 3046     		mov	r0, r6
 778 003a B847     		blx	r7
 779              	.LVL74:
 405:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 780              		.loc 3 405 0
 781 003c 2369     		ldr	r3, [r4, #16]
 782 003e 206A     		ldr	r0, [r4, #32]
 783 0040 2946     		mov	r1, r5
 784 0042 0F22     		movs	r2, #15
 785 0044 9847     		blx	r3
 786              	.LVL75:
 406:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_NAVIGATION_REF, "NAV
 787              		.loc 3 406 0
 788 0046 0DF10F03 		add	r3, sp, #15
 789 004a 0193     		str	r3, [sp, #4]
 790 004c A668     		ldr	r6, [r4, #8]
 791 004e 206A     		ldr	r0, [r4, #32]
 792 0050 CDF80080 		str	r8, [sp]
 793 0054 2946     		mov	r1, r5
 794 0056 0222     		movs	r2, #2
 795 0058 0023     		movs	r3, #0
 796 005a B047     		blx	r6
 797              	.LVL76:
 407:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_east);
 798              		.loc 3 407 0
 799 005c 0923     		movs	r3, #9
 800 005e 0093     		str	r3, [sp]
 801 0060 1B4B     		ldr	r3, .L42
 802 0062 0193     		str	r3, [sp, #4]
 803 0064 E668     		ldr	r6, [r4, #12]
 804 0066 206A     		ldr	r0, [r4, #32]
 805 0068 2946     		mov	r1, r5
 806 006a 0222     		movs	r2, #2
 807 006c 0023     		movs	r3, #0
 808 006e B047     		blx	r6
 809              	.LVL77:
 408:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_INT32, DL_FORMAT_SCALAR, 4, (void *) _utm_north);
 810              		.loc 3 408 0
 811 0070 0426     		movs	r6, #4
 812 0072 184B     		ldr	r3, .L42+4
 813 0074 0096     		str	r6, [sp]
 814 0076 0193     		str	r3, [sp, #4]
 815 0078 A768     		ldr	r7, [r4, #8]
 816 007a 206A     		ldr	r0, [r4, #32]
 817 007c 2946     		mov	r1, r5
 818 007e 0722     		movs	r2, #7
 819 0080 0023     		movs	r3, #0
 820 0082 B847     		blx	r7
 821              	.LVL78:
 409:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, (void *) _utm_zone);
 822              		.loc 3 409 0
 823 0084 144B     		ldr	r3, .L42+8
 824 0086 0096     		str	r6, [sp]
 825 0088 0193     		str	r3, [sp, #4]
 826 008a A768     		ldr	r7, [r4, #8]
 827 008c 206A     		ldr	r0, [r4, #32]
 828 008e 2946     		mov	r1, r5
 829 0090 0722     		movs	r2, #7
 830 0092 0023     		movs	r3, #0
 831 0094 B847     		blx	r7
 832              	.LVL79:
 410:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _ground_alt);
 833              		.loc 3 410 0
 834 0096 114B     		ldr	r3, .L42+12
 835 0098 0193     		str	r3, [sp, #4]
 836 009a 206A     		ldr	r0, [r4, #32]
 837 009c CDF80080 		str	r8, [sp]
 838 00a0 2946     		mov	r1, r5
 839 00a2 0222     		movs	r2, #2
 840 00a4 0023     		movs	r3, #0
 841 00a6 A768     		ldr	r7, [r4, #8]
 842 00a8 B847     		blx	r7
 843              	.LVL80:
 411:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 844              		.loc 3 411 0
 845 00aa 0D4B     		ldr	r3, .L42+16
 846 00ac 0096     		str	r6, [sp]
 847 00ae 0193     		str	r3, [sp, #4]
 848 00b0 A668     		ldr	r6, [r4, #8]
 849 00b2 206A     		ldr	r0, [r4, #32]
 850 00b4 0023     		movs	r3, #0
 851 00b6 2946     		mov	r1, r5
 852 00b8 0A22     		movs	r2, #10
 853 00ba B047     		blx	r6
 854              	.LVL81:
 412:/home/dino/paparazzi/var/include/messages.h **** 	} else
 855              		.loc 3 412 0
 856 00bc 6369     		ldr	r3, [r4, #20]
 857 00be 00E0     		b	.L41
 858              	.L39:
 414:/home/dino/paparazzi/var/include/messages.h **** }
 859              		.loc 3 414 0
 860 00c0 A369     		ldr	r3, [r4, #24]
 861              	.L41:
 862 00c2 206A     		ldr	r0, [r4, #32]
 863 00c4 2946     		mov	r1, r5
 864 00c6 9847     		blx	r3
 865              	.LVL82:
 866              	.LBE35:
 867              	.LBE36:
 478:firmwares/fixedwing/nav.c **** 
 868              		.loc 1 478 0
 869 00c8 04B0     		add	sp, sp, #16
 870              		.cfi_def_cfa_offset 24
 871              		@ sp needed
 872 00ca BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 873              	.LVL83:
 874              	.L43:
 875 00ce 00BF     		.align	2
 876              	.L42:
 877 00d0 14000000 		.word	.LC2
 878 00d4 00000000 		.word	.LANCHOR5
 879 00d8 00000000 		.word	.LANCHOR7
 880 00dc 00000000 		.word	.LANCHOR3
 881 00e0 00000000 		.word	.LANCHOR12
 882              		.cfi_endproc
 883              	.LFE480:
 885              		.section	.text.send_survey,"ax",%progbits
 886              		.align	1
 887              		.thumb
 888              		.thumb_func
 890              	send_survey:
 891              	.LFB486:
 492:firmwares/fixedwing/nav.c **** 
 493:firmwares/fixedwing/nav.c **** bool_t DownlinkSendWpNr(uint8_t _wp)
 494:firmwares/fixedwing/nav.c **** {
 495:firmwares/fixedwing/nav.c ****   DownlinkSendWp(&(DefaultChannel).trans_tx, &(DefaultDevice).device, _wp);
 496:firmwares/fixedwing/nav.c ****   return FALSE;
 497:firmwares/fixedwing/nav.c **** }
 498:firmwares/fixedwing/nav.c **** 
 499:firmwares/fixedwing/nav.c **** 
 500:firmwares/fixedwing/nav.c **** static void send_circle(struct transport_tx *trans, struct link_device *dev)
 501:firmwares/fixedwing/nav.c **** {
 502:firmwares/fixedwing/nav.c ****   if (nav_in_circle) {
 503:firmwares/fixedwing/nav.c ****     pprz_msg_send_CIRCLE(trans, dev, AC_ID,
 504:firmwares/fixedwing/nav.c ****                          &nav_circle_x, &nav_circle_y, &nav_circle_radius);
 505:firmwares/fixedwing/nav.c ****   }
 506:firmwares/fixedwing/nav.c **** }
 507:firmwares/fixedwing/nav.c **** 
 508:firmwares/fixedwing/nav.c **** static void send_segment(struct transport_tx *trans, struct link_device *dev)
 509:firmwares/fixedwing/nav.c **** {
 510:firmwares/fixedwing/nav.c ****   if (nav_in_segment) {
 511:firmwares/fixedwing/nav.c ****     pprz_msg_send_SEGMENT(trans, dev, AC_ID,
 512:firmwares/fixedwing/nav.c ****                           &nav_segment_x_1, &nav_segment_y_1, &nav_segment_x_2, &nav_segment_y_2);
 513:firmwares/fixedwing/nav.c ****   }
 514:firmwares/fixedwing/nav.c **** }
 515:firmwares/fixedwing/nav.c **** 
 516:firmwares/fixedwing/nav.c **** static void send_survey(struct transport_tx *trans, struct link_device *dev)
 517:firmwares/fixedwing/nav.c **** {
 892              		.loc 1 517 0
 893              		.cfi_startproc
 894              		@ args = 0, pretend = 0, frame = 8
 895              		@ frame_needed = 0, uses_anonymous_args = 0
 896              	.LVL84:
 897 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 898              		.cfi_def_cfa_offset 40
 899              		.cfi_offset 4, -24
 900              		.cfi_offset 5, -20
 901              		.cfi_offset 6, -16
 902              		.cfi_offset 7, -12
 903              		.cfi_offset 8, -8
 904              		.cfi_offset 14, -4
 518:firmwares/fixedwing/nav.c ****   if (nav_survey_active) {
 905              		.loc 1 518 0
 906 0004 334B     		ldr	r3, .L51
 907 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:firmwares/fixedwing/nav.c ****   if (nav_survey_active) {
 908              		.loc 1 517 0
 909 0008 0446     		mov	r4, r0
 910 000a 0D46     		mov	r5, r1
 911              		.loc 1 518 0
 912 000c 002B     		cmp	r3, #0
 913 000e 5ED0     		beq	.L44
 914              	.LVL85:
 915              	.LBB41:
 916              	.LBB42:
 917              	.LBB43:
 664:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 918              		.loc 3 664 0
 919 0010 076A     		ldr	r7, [r0, #32]
 920 0012 D0F80480 		ldr	r8, [r0, #4]
 921 0016 0368     		ldr	r3, [r0]
 922 0018 0126     		movs	r6, #1
 923 001a 1221     		movs	r1, #18
 924              	.LVL86:
 925 001c 8DF80F60 		strb	r6, [sp, #15]
 926              	.LVL87:
 927 0020 3846     		mov	r0, r7
 928              	.LVL88:
 929 0022 9847     		blx	r3
 930              	.LVL89:
 931 0024 2946     		mov	r1, r5
 932 0026 0246     		mov	r2, r0
 933 0028 3846     		mov	r0, r7
 934 002a C047     		blx	r8
 935              	.LVL90:
 936 002c 0028     		cmp	r0, #0
 937 002e 4AD0     		beq	.L46
 665:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 938              		.loc 3 665 0
 939 0030 276A     		ldr	r7, [r4, #32]
 940 0032 2368     		ldr	r3, [r4]
 941 0034 D4F81C80 		ldr	r8, [r4, #28]
 942 0038 3846     		mov	r0, r7
 943 003a 1221     		movs	r1, #18
 944 003c 9847     		blx	r3
 945              	.LVL91:
 946 003e 2946     		mov	r1, r5
 947 0040 0246     		mov	r2, r0
 948 0042 3846     		mov	r0, r7
 949 0044 C047     		blx	r8
 950              	.LVL92:
 666:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 951              		.loc 3 666 0
 952 0046 2369     		ldr	r3, [r4, #16]
 953 0048 206A     		ldr	r0, [r4, #32]
 954 004a 2946     		mov	r1, r5
 955 004c 1222     		movs	r2, #18
 956 004e 9847     		blx	r3
 957              	.LVL93:
 667:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SURVEY, "SURVEY");
 958              		.loc 3 667 0
 959 0050 0DF10F03 		add	r3, sp, #15
 960 0054 0096     		str	r6, [sp]
 961 0056 0193     		str	r3, [sp, #4]
 962 0058 A668     		ldr	r6, [r4, #8]
 963              	.LVL94:
 964 005a 206A     		ldr	r0, [r4, #32]
 965 005c 2946     		mov	r1, r5
 966 005e 0222     		movs	r2, #2
 967 0060 0023     		movs	r3, #0
 968              	.LVL95:
 969 0062 B047     		blx	r6
 970              	.LVL96:
 668:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _east);
 971              		.loc 3 668 0
 972 0064 1B23     		movs	r3, #27
 973 0066 0093     		str	r3, [sp]
 974 0068 1B4B     		ldr	r3, .L51+4
 975 006a 0193     		str	r3, [sp, #4]
 976 006c E668     		ldr	r6, [r4, #12]
 977 006e 206A     		ldr	r0, [r4, #32]
 978 0070 2946     		mov	r1, r5
 979 0072 0222     		movs	r2, #2
 980 0074 0023     		movs	r3, #0
 981 0076 B047     		blx	r6
 982              	.LVL97:
 669:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _north);
 983              		.loc 3 669 0
 984 0078 0426     		movs	r6, #4
 985 007a 184B     		ldr	r3, .L51+8
 986 007c 0096     		str	r6, [sp]
 987 007e 0193     		str	r3, [sp, #4]
 988 0080 A768     		ldr	r7, [r4, #8]
 989 0082 206A     		ldr	r0, [r4, #32]
 990 0084 2946     		mov	r1, r5
 991 0086 0A22     		movs	r2, #10
 992 0088 0023     		movs	r3, #0
 993 008a B847     		blx	r7
 994              	.LVL98:
 670:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _west);
 995              		.loc 3 670 0
 996 008c 144B     		ldr	r3, .L51+12
 997 008e 0096     		str	r6, [sp]
 998 0090 0193     		str	r3, [sp, #4]
 999 0092 A768     		ldr	r7, [r4, #8]
 1000 0094 206A     		ldr	r0, [r4, #32]
 1001 0096 2946     		mov	r1, r5
 1002 0098 0A22     		movs	r2, #10
 1003 009a 0023     		movs	r3, #0
 1004 009c B847     		blx	r7
 1005              	.LVL99:
 671:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _south);
 1006              		.loc 3 671 0
 1007 009e 114B     		ldr	r3, .L51+16
 1008 00a0 0096     		str	r6, [sp]
 1009 00a2 0193     		str	r3, [sp, #4]
 1010 00a4 206A     		ldr	r0, [r4, #32]
 1011 00a6 A768     		ldr	r7, [r4, #8]
 1012 00a8 2946     		mov	r1, r5
 1013 00aa 0A22     		movs	r2, #10
 1014 00ac 0023     		movs	r3, #0
 1015 00ae B847     		blx	r7
 1016              	.LVL100:
 672:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1017              		.loc 3 672 0
 1018 00b0 0D4B     		ldr	r3, .L51+20
 1019 00b2 0096     		str	r6, [sp]
 1020 00b4 0193     		str	r3, [sp, #4]
 1021 00b6 A668     		ldr	r6, [r4, #8]
 1022 00b8 206A     		ldr	r0, [r4, #32]
 1023 00ba 0023     		movs	r3, #0
 1024 00bc 2946     		mov	r1, r5
 1025 00be 0A22     		movs	r2, #10
 1026 00c0 B047     		blx	r6
 1027              	.LVL101:
 673:/home/dino/paparazzi/var/include/messages.h **** 	} else
 1028              		.loc 3 673 0
 1029 00c2 6369     		ldr	r3, [r4, #20]
 1030 00c4 00E0     		b	.L50
 1031              	.L46:
 675:/home/dino/paparazzi/var/include/messages.h **** }
 1032              		.loc 3 675 0
 1033 00c6 A369     		ldr	r3, [r4, #24]
 1034              	.L50:
 1035 00c8 206A     		ldr	r0, [r4, #32]
 1036 00ca 2946     		mov	r1, r5
 1037 00cc 9847     		blx	r3
 1038              	.LVL102:
 1039              	.L44:
 1040              	.LBE43:
 1041              	.LBE42:
 1042              	.LBE41:
 519:firmwares/fixedwing/nav.c ****     pprz_msg_send_SURVEY(trans, dev, AC_ID,
 520:firmwares/fixedwing/nav.c ****                          &nav_survey_east, &nav_survey_north, &nav_survey_west, &nav_survey_south);
 521:firmwares/fixedwing/nav.c ****   }
 522:firmwares/fixedwing/nav.c **** }
 1043              		.loc 1 522 0
 1044 00ce 04B0     		add	sp, sp, #16
 1045              		.cfi_def_cfa_offset 24
 1046              		@ sp needed
 1047 00d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1048              	.LVL103:
 1049              	.L52:
 1050              		.align	2
 1051              	.L51:
 1052 00d4 00000000 		.word	.LANCHOR13
 1053 00d8 23000000 		.word	.LC3
 1054 00dc 00000000 		.word	.LANCHOR14
 1055 00e0 00000000 		.word	.LANCHOR15
 1056 00e4 00000000 		.word	.LANCHOR16
 1057 00e8 00000000 		.word	.LANCHOR17
 1058              		.cfi_endproc
 1059              	.LFE486:
 1061              		.section	.text.send_segment,"ax",%progbits
 1062              		.align	1
 1063              		.thumb
 1064              		.thumb_func
 1066              	send_segment:
 1067              	.LFB485:
 509:firmwares/fixedwing/nav.c ****   if (nav_in_segment) {
 1068              		.loc 1 509 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 8
 1071              		@ frame_needed = 0, uses_anonymous_args = 0
 1072              	.LVL104:
 1073 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1074              		.cfi_def_cfa_offset 40
 1075              		.cfi_offset 4, -24
 1076              		.cfi_offset 5, -20
 1077              		.cfi_offset 6, -16
 1078              		.cfi_offset 7, -12
 1079              		.cfi_offset 8, -8
 1080              		.cfi_offset 14, -4
 510:firmwares/fixedwing/nav.c ****     pprz_msg_send_SEGMENT(trans, dev, AC_ID,
 1081              		.loc 1 510 0
 1082 0004 334B     		ldr	r3, .L60
 1083 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 509:firmwares/fixedwing/nav.c ****   if (nav_in_segment) {
 1084              		.loc 1 509 0
 1085 0008 0446     		mov	r4, r0
 1086 000a 0D46     		mov	r5, r1
 510:firmwares/fixedwing/nav.c ****     pprz_msg_send_SEGMENT(trans, dev, AC_ID,
 1087              		.loc 1 510 0
 1088 000c 002B     		cmp	r3, #0
 1089 000e 5ED0     		beq	.L53
 1090              	.LVL105:
 1091              	.LBB48:
 1092              	.LBB49:
 1093              	.LBB50:
 615:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4+4 +2 /* msg header over
 1094              		.loc 3 615 0
 1095 0010 076A     		ldr	r7, [r0, #32]
 1096 0012 D0F80480 		ldr	r8, [r0, #4]
 1097 0016 0368     		ldr	r3, [r0]
 1098 0018 0126     		movs	r6, #1
 1099 001a 1221     		movs	r1, #18
 1100              	.LVL106:
 1101 001c 8DF80F60 		strb	r6, [sp, #15]
 1102              	.LVL107:
 1103 0020 3846     		mov	r0, r7
 1104              	.LVL108:
 1105 0022 9847     		blx	r3
 1106              	.LVL109:
 1107 0024 2946     		mov	r1, r5
 1108 0026 0246     		mov	r2, r0
 1109 0028 3846     		mov	r0, r7
 1110 002a C047     		blx	r8
 1111              	.LVL110:
 1112 002c 0028     		cmp	r0, #0
 1113 002e 4AD0     		beq	.L55
 616:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4+4 +2 /* msg header overhead */);
 1114              		.loc 3 616 0
 1115 0030 276A     		ldr	r7, [r4, #32]
 1116 0032 2368     		ldr	r3, [r4]
 1117 0034 D4F81C80 		ldr	r8, [r4, #28]
 1118 0038 3846     		mov	r0, r7
 1119 003a 1221     		movs	r1, #18
 1120 003c 9847     		blx	r3
 1121              	.LVL111:
 1122 003e 2946     		mov	r1, r5
 1123 0040 0246     		mov	r2, r0
 1124 0042 3846     		mov	r0, r7
 1125 0044 C047     		blx	r8
 1126              	.LVL112:
 617:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1127              		.loc 3 617 0
 1128 0046 2369     		ldr	r3, [r4, #16]
 1129 0048 206A     		ldr	r0, [r4, #32]
 1130 004a 2946     		mov	r1, r5
 1131 004c 1222     		movs	r2, #18
 1132 004e 9847     		blx	r3
 1133              	.LVL113:
 618:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_SEGMENT, "SEGMENT");
 1134              		.loc 3 618 0
 1135 0050 0DF10F03 		add	r3, sp, #15
 1136 0054 0096     		str	r6, [sp]
 1137 0056 0193     		str	r3, [sp, #4]
 1138 0058 A668     		ldr	r6, [r4, #8]
 1139              	.LVL114:
 1140 005a 206A     		ldr	r0, [r4, #32]
 1141 005c 2946     		mov	r1, r5
 1142 005e 0222     		movs	r2, #2
 1143 0060 0023     		movs	r3, #0
 1144              	.LVL115:
 1145 0062 B047     		blx	r6
 1146              	.LVL116:
 619:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_1)
 1147              		.loc 3 619 0
 1148 0064 1623     		movs	r3, #22
 1149 0066 0093     		str	r3, [sp]
 1150 0068 1B4B     		ldr	r3, .L60+4
 1151 006a 0193     		str	r3, [sp, #4]
 1152 006c E668     		ldr	r6, [r4, #12]
 1153 006e 206A     		ldr	r0, [r4, #32]
 1154 0070 2946     		mov	r1, r5
 1155 0072 0222     		movs	r2, #2
 1156 0074 0023     		movs	r3, #0
 1157 0076 B047     		blx	r6
 1158              	.LVL117:
 620:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_1
 1159              		.loc 3 620 0
 1160 0078 0426     		movs	r6, #4
 1161 007a 184B     		ldr	r3, .L60+8
 1162 007c 0096     		str	r6, [sp]
 1163 007e 0193     		str	r3, [sp, #4]
 1164 0080 A768     		ldr	r7, [r4, #8]
 1165 0082 206A     		ldr	r0, [r4, #32]
 1166 0084 2946     		mov	r1, r5
 1167 0086 0A22     		movs	r2, #10
 1168 0088 0023     		movs	r3, #0
 1169 008a B847     		blx	r7
 1170              	.LVL118:
 621:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_east_2)
 1171              		.loc 3 621 0
 1172 008c 144B     		ldr	r3, .L60+12
 1173 008e 0096     		str	r6, [sp]
 1174 0090 0193     		str	r3, [sp, #4]
 1175 0092 A768     		ldr	r7, [r4, #8]
 1176 0094 206A     		ldr	r0, [r4, #32]
 1177 0096 2946     		mov	r1, r5
 1178 0098 0A22     		movs	r2, #10
 1179 009a 0023     		movs	r3, #0
 1180 009c B847     		blx	r7
 1181              	.LVL119:
 622:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _segment_north_2
 1182              		.loc 3 622 0
 1183 009e 114B     		ldr	r3, .L60+16
 1184 00a0 0096     		str	r6, [sp]
 1185 00a2 0193     		str	r3, [sp, #4]
 1186 00a4 206A     		ldr	r0, [r4, #32]
 1187 00a6 A768     		ldr	r7, [r4, #8]
 1188 00a8 2946     		mov	r1, r5
 1189 00aa 0A22     		movs	r2, #10
 1190 00ac 0023     		movs	r3, #0
 1191 00ae B847     		blx	r7
 1192              	.LVL120:
 623:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1193              		.loc 3 623 0
 1194 00b0 0D4B     		ldr	r3, .L60+20
 1195 00b2 0096     		str	r6, [sp]
 1196 00b4 0193     		str	r3, [sp, #4]
 1197 00b6 A668     		ldr	r6, [r4, #8]
 1198 00b8 206A     		ldr	r0, [r4, #32]
 1199 00ba 0023     		movs	r3, #0
 1200 00bc 2946     		mov	r1, r5
 1201 00be 0A22     		movs	r2, #10
 1202 00c0 B047     		blx	r6
 1203              	.LVL121:
 624:/home/dino/paparazzi/var/include/messages.h **** 	} else
 1204              		.loc 3 624 0
 1205 00c2 6369     		ldr	r3, [r4, #20]
 1206 00c4 00E0     		b	.L59
 1207              	.L55:
 626:/home/dino/paparazzi/var/include/messages.h **** }
 1208              		.loc 3 626 0
 1209 00c6 A369     		ldr	r3, [r4, #24]
 1210              	.L59:
 1211 00c8 206A     		ldr	r0, [r4, #32]
 1212 00ca 2946     		mov	r1, r5
 1213 00cc 9847     		blx	r3
 1214              	.LVL122:
 1215              	.L53:
 1216              	.LBE50:
 1217              	.LBE49:
 1218              	.LBE48:
 514:firmwares/fixedwing/nav.c **** 
 1219              		.loc 1 514 0
 1220 00ce 04B0     		add	sp, sp, #16
 1221              		.cfi_def_cfa_offset 24
 1222              		@ sp needed
 1223 00d0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1224              	.LVL123:
 1225              	.L61:
 1226              		.align	2
 1227              	.L60:
 1228 00d4 00000000 		.word	.LANCHOR18
 1229 00d8 2A000000 		.word	.LC4
 1230 00dc 00000000 		.word	.LANCHOR19
 1231 00e0 00000000 		.word	.LANCHOR20
 1232 00e4 00000000 		.word	.LANCHOR21
 1233 00e8 00000000 		.word	.LANCHOR22
 1234              		.cfi_endproc
 1235              	.LFE485:
 1237              		.section	.text.send_circle,"ax",%progbits
 1238              		.align	1
 1239              		.thumb
 1240              		.thumb_func
 1242              	send_circle:
 1243              	.LFB484:
 501:firmwares/fixedwing/nav.c ****   if (nav_in_circle) {
 1244              		.loc 1 501 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 8
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              	.LVL124:
 1249 0000 2DE9FF41 		push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 1250              		.cfi_def_cfa_offset 40
 1251              		.cfi_offset 4, -24
 1252              		.cfi_offset 5, -20
 1253              		.cfi_offset 6, -16
 1254              		.cfi_offset 7, -12
 1255              		.cfi_offset 8, -8
 1256              		.cfi_offset 14, -4
 502:firmwares/fixedwing/nav.c ****     pprz_msg_send_CIRCLE(trans, dev, AC_ID,
 1257              		.loc 1 502 0
 1258 0004 2F4B     		ldr	r3, .L69
 1259 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501:firmwares/fixedwing/nav.c ****   if (nav_in_circle) {
 1260              		.loc 1 501 0
 1261 0008 0446     		mov	r4, r0
 1262 000a 0D46     		mov	r5, r1
 502:firmwares/fixedwing/nav.c ****     pprz_msg_send_CIRCLE(trans, dev, AC_ID,
 1263              		.loc 1 502 0
 1264 000c 002B     		cmp	r3, #0
 1265 000e 55D0     		beq	.L62
 1266              	.LVL125:
 1267              	.LBB55:
 1268              	.LBB56:
 1269              	.LBB57:
 600:/home/dino/paparazzi/var/include/messages.h **** 	  trans->count_bytes(trans->impl, dev, trans->size_of(trans->impl, 0+4+4+4 +2 /* msg header overhe
 1270              		.loc 3 600 0
 1271 0010 076A     		ldr	r7, [r0, #32]
 1272 0012 D0F80480 		ldr	r8, [r0, #4]
 1273 0016 0368     		ldr	r3, [r0]
 1274 0018 0126     		movs	r6, #1
 1275 001a 0E21     		movs	r1, #14
 1276              	.LVL126:
 1277 001c 8DF80F60 		strb	r6, [sp, #15]
 1278              	.LVL127:
 1279 0020 3846     		mov	r0, r7
 1280              	.LVL128:
 1281 0022 9847     		blx	r3
 1282              	.LVL129:
 1283 0024 2946     		mov	r1, r5
 1284 0026 0246     		mov	r2, r0
 1285 0028 3846     		mov	r0, r7
 1286 002a C047     		blx	r8
 1287              	.LVL130:
 1288 002c 0028     		cmp	r0, #0
 1289 002e 41D0     		beq	.L64
 601:/home/dino/paparazzi/var/include/messages.h **** 	  trans->start_message(trans->impl, dev, 0+4+4+4 +2 /* msg header overhead */);
 1290              		.loc 3 601 0
 1291 0030 276A     		ldr	r7, [r4, #32]
 1292 0032 2368     		ldr	r3, [r4]
 1293 0034 D4F81C80 		ldr	r8, [r4, #28]
 1294 0038 3846     		mov	r0, r7
 1295 003a 0E21     		movs	r1, #14
 1296 003c 9847     		blx	r3
 1297              	.LVL131:
 1298 003e 2946     		mov	r1, r5
 1299 0040 0246     		mov	r2, r0
 1300 0042 3846     		mov	r0, r7
 1301 0044 C047     		blx	r8
 1302              	.LVL132:
 602:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, 1, &ac_id);
 1303              		.loc 3 602 0
 1304 0046 2369     		ldr	r3, [r4, #16]
 1305 0048 206A     		ldr	r0, [r4, #32]
 1306 004a 2946     		mov	r1, r5
 1307 004c 0E22     		movs	r2, #14
 1308 004e 9847     		blx	r3
 1309              	.LVL133:
 603:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_named_byte(trans->impl, dev, DL_TYPE_UINT8, DL_FORMAT_SCALAR, DL_CIRCLE, "CIRCLE");
 1310              		.loc 3 603 0
 1311 0050 0DF10F03 		add	r3, sp, #15
 1312 0054 0096     		str	r6, [sp]
 1313 0056 0193     		str	r3, [sp, #4]
 1314 0058 A668     		ldr	r6, [r4, #8]
 1315              	.LVL134:
 1316 005a 206A     		ldr	r0, [r4, #32]
 1317 005c 2946     		mov	r1, r5
 1318 005e 0222     		movs	r2, #2
 1319 0060 0023     		movs	r3, #0
 1320              	.LVL135:
 1321 0062 B047     		blx	r6
 1322              	.LVL136:
 604:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_east);
 1323              		.loc 3 604 0
 1324 0064 1523     		movs	r3, #21
 1325 0066 0093     		str	r3, [sp]
 1326 0068 174B     		ldr	r3, .L69+4
 1327 006a 0193     		str	r3, [sp, #4]
 1328 006c E668     		ldr	r6, [r4, #12]
 1329 006e 206A     		ldr	r0, [r4, #32]
 1330 0070 2946     		mov	r1, r5
 1331 0072 0222     		movs	r2, #2
 1332 0074 0023     		movs	r3, #0
 1333 0076 B047     		blx	r6
 1334              	.LVL137:
 605:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _center_north);
 1335              		.loc 3 605 0
 1336 0078 0426     		movs	r6, #4
 1337 007a 144B     		ldr	r3, .L69+8
 1338 007c 0096     		str	r6, [sp]
 1339 007e 0193     		str	r3, [sp, #4]
 1340 0080 A768     		ldr	r7, [r4, #8]
 1341 0082 206A     		ldr	r0, [r4, #32]
 1342 0084 2946     		mov	r1, r5
 1343 0086 0A22     		movs	r2, #10
 1344 0088 0023     		movs	r3, #0
 1345 008a B847     		blx	r7
 1346              	.LVL138:
 606:/home/dino/paparazzi/var/include/messages.h **** 	  trans->put_bytes(trans->impl, dev, DL_TYPE_FLOAT, DL_FORMAT_SCALAR, 4, (void *) _radius);
 1347              		.loc 3 606 0
 1348 008c 104B     		ldr	r3, .L69+12
 1349 008e 0096     		str	r6, [sp]
 1350 0090 0193     		str	r3, [sp, #4]
 1351 0092 206A     		ldr	r0, [r4, #32]
 1352 0094 A768     		ldr	r7, [r4, #8]
 1353 0096 2946     		mov	r1, r5
 1354 0098 0A22     		movs	r2, #10
 1355 009a 0023     		movs	r3, #0
 1356 009c B847     		blx	r7
 1357              	.LVL139:
 607:/home/dino/paparazzi/var/include/messages.h **** 	  trans->end_message(trans->impl, dev);
 1358              		.loc 3 607 0
 1359 009e 0D4B     		ldr	r3, .L69+16
 1360 00a0 0096     		str	r6, [sp]
 1361 00a2 0193     		str	r3, [sp, #4]
 1362 00a4 A668     		ldr	r6, [r4, #8]
 1363 00a6 206A     		ldr	r0, [r4, #32]
 1364 00a8 0023     		movs	r3, #0
 1365 00aa 2946     		mov	r1, r5
 1366 00ac 0A22     		movs	r2, #10
 1367 00ae B047     		blx	r6
 1368              	.LVL140:
 608:/home/dino/paparazzi/var/include/messages.h **** 	} else
 1369              		.loc 3 608 0
 1370 00b0 6369     		ldr	r3, [r4, #20]
 1371 00b2 00E0     		b	.L68
 1372              	.L64:
 610:/home/dino/paparazzi/var/include/messages.h **** }
 1373              		.loc 3 610 0
 1374 00b4 A369     		ldr	r3, [r4, #24]
 1375              	.L68:
 1376 00b6 206A     		ldr	r0, [r4, #32]
 1377 00b8 2946     		mov	r1, r5
 1378 00ba 9847     		blx	r3
 1379              	.LVL141:
 1380              	.L62:
 1381              	.LBE57:
 1382              	.LBE56:
 1383              	.LBE55:
 506:firmwares/fixedwing/nav.c **** 
 1384              		.loc 1 506 0
 1385 00bc 04B0     		add	sp, sp, #16
 1386              		.cfi_def_cfa_offset 24
 1387              		@ sp needed
 1388 00be BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1389              	.LVL142:
 1390              	.L70:
 1391 00c2 00BF     		.align	2
 1392              	.L69:
 1393 00c4 00000000 		.word	.LANCHOR23
 1394 00c8 32000000 		.word	.LC5
 1395 00cc 00000000 		.word	.LANCHOR24
 1396 00d0 00000000 		.word	.LANCHOR25
 1397 00d4 00000000 		.word	.LANCHOR26
 1398              		.cfi_endproc
 1399              	.LFE484:
 1401              		.section	.text.nav_init_stage,"ax",%progbits
 1402              		.align	1
 1403              		.global	nav_init_stage
 1404              		.thumb
 1405              		.thumb_func
 1407              	nav_init_stage:
 1408              	.LFB170:
  92:firmwares/fixedwing/nav.c ****   last_x = stateGetPositionEnu_f()->x;
 1409              		.loc 1 92 0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413 0000 08B5     		push	{r3, lr}
 1414              		.cfi_def_cfa_offset 8
 1415              		.cfi_offset 3, -8
 1416              		.cfi_offset 14, -4
  93:firmwares/fixedwing/nav.c ****   last_y = stateGetPositionEnu_f()->y;
 1417              		.loc 1 93 0
 1418 0002 FFF7FEFF 		bl	stateGetPositionEnu_f
 1419              	.LVL143:
 1420 0006 0B4B     		ldr	r3, .L72
 1421 0008 0268     		ldr	r2, [r0]	@ float
 1422 000a 1A60     		str	r2, [r3]	@ float
  94:firmwares/fixedwing/nav.c ****   stage_time = 0;
 1423              		.loc 1 94 0
 1424 000c FFF7FEFF 		bl	stateGetPositionEnu_f
 1425              	.LVL144:
 1426 0010 094B     		ldr	r3, .L72+4
 1427 0012 4268     		ldr	r2, [r0, #4]	@ float
 1428 0014 1A60     		str	r2, [r3]	@ float
  95:firmwares/fixedwing/nav.c ****   nav_circle_radians = 0;
 1429              		.loc 1 95 0
 1430 0016 094B     		ldr	r3, .L72+8
  96:firmwares/fixedwing/nav.c ****   nav_circle_radians_no_rewind = 0;
 1431              		.loc 1 96 0
 1432 0018 0949     		ldr	r1, .L72+12
  95:firmwares/fixedwing/nav.c ****   nav_circle_radians = 0;
 1433              		.loc 1 95 0
 1434 001a 0022     		movs	r2, #0
 1435 001c 1A80     		strh	r2, [r3]	@ movhi
  96:firmwares/fixedwing/nav.c ****   nav_circle_radians_no_rewind = 0;
 1436              		.loc 1 96 0
 1437 001e 0023     		movs	r3, #0
 1438 0020 0B60     		str	r3, [r1]	@ float
  97:firmwares/fixedwing/nav.c ****   nav_in_circle = FALSE;
 1439              		.loc 1 97 0
 1440 0022 0849     		ldr	r1, .L72+16
 1441 0024 0B60     		str	r3, [r1]	@ float
  98:firmwares/fixedwing/nav.c ****   nav_in_segment = FALSE;
 1442              		.loc 1 98 0
 1443 0026 0849     		ldr	r1, .L72+20
 1444 0028 0A70     		strb	r2, [r1]
  99:firmwares/fixedwing/nav.c ****   nav_shift = 0;
 1445              		.loc 1 99 0
 1446 002a 0849     		ldr	r1, .L72+24
 1447 002c 0A70     		strb	r2, [r1]
 100:firmwares/fixedwing/nav.c **** }
 1448              		.loc 1 100 0
 1449 002e 084A     		ldr	r2, .L72+28
 1450 0030 1360     		str	r3, [r2]	@ float
 1451 0032 08BD     		pop	{r3, pc}
 1452              	.L73:
 1453              		.align	2
 1454              	.L72:
 1455 0034 00000000 		.word	.LANCHOR27
 1456 0038 00000000 		.word	.LANCHOR28
 1457 003c 00000000 		.word	stage_time
 1458 0040 00000000 		.word	.LANCHOR8
 1459 0044 00000000 		.word	.LANCHOR29
 1460 0048 00000000 		.word	.LANCHOR23
 1461 004c 00000000 		.word	.LANCHOR18
 1462 0050 00000000 		.word	.LANCHOR30
 1463              		.cfi_endproc
 1464              	.LFE170:
 1466              		.section	.text.nav_approaching_xy,"ax",%progbits
 1467              		.align	1
 1468              		.global	nav_approaching_xy
 1469              		.thumb
 1470              		.thumb_func
 1472              	nav_approaching_xy:
 1473              	.LFB217:
 334:firmwares/fixedwing/nav.c ****   /** distance to waypoint in x */
 1474              		.loc 1 334 0
 1475              		.cfi_startproc
 1476              		@ args = 4, pretend = 0, frame = 0
 1477              		@ frame_needed = 0, uses_anonymous_args = 0
 1478              	.LVL145:
 1479 0000 10B5     		push	{r4, lr}
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 4, -8
 1482              		.cfi_offset 14, -4
 1483 0002 2DED088B 		fstmfdd	sp!, {d8, d9, d10, d11}
 1484              		.cfi_def_cfa_offset 40
 1485              		.cfi_offset 80, -40
 1486              		.cfi_offset 81, -36
 1487              		.cfi_offset 82, -32
 1488              		.cfi_offset 83, -28
 1489              		.cfi_offset 84, -24
 1490              		.cfi_offset 85, -20
 1491              		.cfi_offset 86, -16
 1492              		.cfi_offset 87, -12
 334:firmwares/fixedwing/nav.c ****   /** distance to waypoint in x */
 1493              		.loc 1 334 0
 1494 0006 9DED0AAA 		flds	s20, [sp, #40]
 1495 000a 09EE901A 		fmsr	s19, r1
 1496 000e 08EE100A 		fmsr	s16, r0
 1497 0012 0BEE902A 		fmsr	s23, r2
 1498 0016 09EE103A 		fmsr	s18, r3
 336:firmwares/fixedwing/nav.c ****   /** distance to waypoint in y */
 1499              		.loc 1 336 0
 1500 001a FFF7FEFF 		bl	stateGetPositionEnu_f
 1501              	.LVL146:
 1502 001e D0ED00AA 		flds	s21, [r0]
 338:firmwares/fixedwing/nav.c **** 
 1503              		.loc 1 338 0
 1504 0022 FFF7FEFF 		bl	stateGetPositionEnu_f
 1505              	.LVL147:
 340:firmwares/fixedwing/nav.c ****     // fly after the destination waypoint
 1506              		.loc 1 340 0
 1507 0026 B5EEC0AA 		fcmpezs	s20
 338:firmwares/fixedwing/nav.c **** 
 1508              		.loc 1 338 0
 1509 002a D0ED018A 		flds	s17, [r0, #4]
 340:firmwares/fixedwing/nav.c ****     // fly after the destination waypoint
 1510              		.loc 1 340 0
 1511 002e F1EE10FA 		fmstat
 336:firmwares/fixedwing/nav.c ****   /** distance to waypoint in y */
 1512              		.loc 1 336 0
 1513 0032 78EE6AAA 		fsubs	s21, s16, s21
 1514              	.LVL148:
 338:firmwares/fixedwing/nav.c **** 
 1515              		.loc 1 338 0
 1516 0036 39EEE8BA 		fsubs	s22, s19, s17
 1517              	.LVL149:
 340:firmwares/fixedwing/nav.c ****     // fly after the destination waypoint
 1518              		.loc 1 340 0
 1519 003a 25D5     		bpl	.L83
 1520              	.LBB58:
 343:firmwares/fixedwing/nav.c ****     float leg = sqrtf(Max(leg_x * leg_x + leg_y * leg_y, 1.));
 1521              		.loc 1 343 0
 1522 003c 79EEC98A 		fsubs	s17, s19, s18
 342:firmwares/fixedwing/nav.c ****     float leg_y = y - from_y;
 1523              		.loc 1 342 0
 1524 0040 38EE6B8A 		fsubs	s16, s16, s23
 1525              	.LVL150:
 344:firmwares/fixedwing/nav.c ****     float exceed_dist = approaching_time * (*stateGetHorizontalSpeedNorm_f()); // negative value
 1526              		.loc 1 344 0
 1527 0044 68EEA87A 		fmuls	s15, s17, s17
 1528 0048 B7EE007A 		fconsts	s14, #112
 1529 004c E8EE087A 		vfma.f32	s15, s16, s16
 1530 0050 F4EEC77A 		fcmpes	s15, s14
 1531 0054 F1EE10FA 		fmstat
 1532 0058 D4BF     		ite	le
 1533 005a 17EE100A 		fmrsle	r0, s14
 1534 005e 17EE900A 		fmrsgt	r0, s15
 1535 0062 FFF7FEFF 		bl	sqrtf
 1536              	.LVL151:
 1537 0066 09EE100A 		fmsr	s18, r0
 1538              	.LVL152:
 345:firmwares/fixedwing/nav.c ****     float scal_prod = (leg_x * pw_x + leg_y * pw_y) / leg;
 1539              		.loc 1 345 0
 1540 006a FFF7FEFF 		bl	stateGetHorizontalSpeedNorm_f
 1541              	.LVL153:
 346:firmwares/fixedwing/nav.c ****     return (scal_prod < exceed_dist);
 1542              		.loc 1 346 0
 1543 006e 68EE8B8A 		fmuls	s17, s17, s22
 1544              	.LVL154:
 345:firmwares/fixedwing/nav.c ****     float scal_prod = (leg_x * pw_x + leg_y * pw_y) / leg;
 1545              		.loc 1 345 0
 1546 0072 D0ED007A 		flds	s15, [r0]
 346:firmwares/fixedwing/nav.c ****     return (scal_prod < exceed_dist);
 1547              		.loc 1 346 0
 1548 0076 E8EE2A8A 		vfma.f32	s17, s16, s21
 345:firmwares/fixedwing/nav.c ****     float scal_prod = (leg_x * pw_x + leg_y * pw_y) / leg;
 1549              		.loc 1 345 0
 1550 007a 2AEE27AA 		fmuls	s20, s20, s15
 1551              	.LVL155:
 346:firmwares/fixedwing/nav.c ****     return (scal_prod < exceed_dist);
 1552              		.loc 1 346 0
 1553 007e C8EE898A 		fdivs	s17, s17, s18
 1554              	.LVL156:
 347:firmwares/fixedwing/nav.c ****   } else {
 1555              		.loc 1 347 0
 1556 0082 F4EECA8A 		fcmpes	s17, s20
 1557 0086 1FE0     		b	.L84
 1558              	.LVL157:
 1559              	.L83:
 1560              	.LBE58:
 1561              	.LBB59:
 350:firmwares/fixedwing/nav.c ****     float min_dist = approaching_time * (*stateGetHorizontalSpeedNorm_f());
 1562              		.loc 1 350 0
 1563 0088 6BEE0B7A 		fmuls	s15, s22, s22
 1564 008c 134C     		ldr	r4, .L85
 1565 008e EAEEAA7A 		vfma.f32	s15, s21, s21
 1566 0092 C4ED007A 		fsts	s15, [r4]
 351:firmwares/fixedwing/nav.c ****     if (dist2_to_wp < min_dist * min_dist) {
 1567              		.loc 1 351 0
 1568 0096 FFF7FEFF 		bl	stateGetHorizontalSpeedNorm_f
 1569              	.LVL158:
 1570 009a D0ED007A 		flds	s15, [r0]
 1571 009e 2AEE27AA 		fmuls	s20, s20, s15
 1572              	.LVL159:
 352:firmwares/fixedwing/nav.c ****       return TRUE;
 1573              		.loc 1 352 0
 1574 00a2 D4ED007A 		flds	s15, [r4]
 1575 00a6 2AEE0AAA 		fmuls	s20, s20, s20
 1576              	.LVL160:
 1577 00aa F4EECA7A 		fcmpes	s15, s20
 1578 00ae F1EE10FA 		fmstat
 1579 00b2 0FD4     		bmi	.L81
 1580              	.LVL161:
 355:firmwares/fixedwing/nav.c ****     return (scal_prod < 0.);
 1581              		.loc 1 355 0
 1582 00b4 79EEC97A 		fsubs	s15, s19, s18
 1583 00b8 38EE6B8A 		fsubs	s16, s16, s23
 1584              	.LVL162:
 1585 00bc 67EE8B7A 		fmuls	s15, s15, s22
 1586 00c0 E8EE2A7A 		vfma.f32	s15, s16, s21
 1587              	.LVL163:
 356:firmwares/fixedwing/nav.c ****   }
 1588              		.loc 1 356 0
 1589 00c4 F5EEC07A 		fcmpezs	s15
 1590              	.LVL164:
 1591              	.L84:
 1592 00c8 F1EE10FA 		fmstat
 1593 00cc 4CBF     		ite	mi
 1594 00ce 0120     		movmi	r0, #1
 1595 00d0 0020     		movpl	r0, #0
 1596 00d2 00E0     		b	.L79
 1597              	.LVL165:
 1598              	.L81:
 353:firmwares/fixedwing/nav.c ****     }
 1599              		.loc 1 353 0
 1600 00d4 0120     		movs	r0, #1
 1601              	.LVL166:
 1602              	.L79:
 1603              	.LBE59:
 358:firmwares/fixedwing/nav.c **** 
 1604              		.loc 1 358 0
 1605 00d6 BDEC088B 		fldmfdd	sp!, {d8-d11}
 1606              		.cfi_restore 86
 1607              		.cfi_restore 87
 1608              		.cfi_restore 84
 1609              		.cfi_restore 85
 1610              		.cfi_restore 82
 1611              		.cfi_restore 83
 1612              		.cfi_restore 80
 1613              		.cfi_restore 81
 1614              		.cfi_def_cfa_offset 8
 1615              	.LVL167:
 1616 00da 10BD     		pop	{r4, pc}
 1617              	.LVL168:
 1618              	.L86:
 1619              		.align	2
 1620              	.L85:
 1621 00dc 00000000 		.word	.LANCHOR9
 1622              		.cfi_endproc
 1623              	.LFE217:
 1625              		.global	__aeabi_dadd
 1626              		.global	__aeabi_d2f
 1627              		.global	__aeabi_dsub
 1628              		.global	__aeabi_dcmpgt
 1629              		.global	__aeabi_dcmplt
 1630              		.section	.text.fly_to_xy,"ax",%progbits
 1631              		.align	1
 1632              		.global	fly_to_xy
 1633              		.thumb
 1634              		.thumb_func
 1636              	fly_to_xy:
 1637              	.LFB218:
 366:firmwares/fixedwing/nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 1638              		.loc 1 366 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              	.LVL169:
 1643 0000 38B5     		push	{r3, r4, r5, lr}
 1644              		.cfi_def_cfa_offset 16
 1645              		.cfi_offset 3, -16
 1646              		.cfi_offset 4, -12
 1647              		.cfi_offset 5, -8
 1648              		.cfi_offset 14, -4
 1649 0002 2DED028B 		fstmfdd	sp!, {d8}
 1650              		.cfi_def_cfa_offset 24
 1651              		.cfi_offset 80, -24
 1652              		.cfi_offset 81, -20
 366:firmwares/fixedwing/nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 1653              		.loc 1 366 0
 1654 0006 08EE101A 		fmsr	s16, r1
 1655 000a 08EE900A 		fmsr	s17, r0
 367:firmwares/fixedwing/nav.c ****   desired_x = x;
 1656              		.loc 1 367 0
 1657 000e FFF7FEFF 		bl	stateGetPositionEnu_f
 1658              	.LVL170:
 368:firmwares/fixedwing/nav.c ****   desired_y = y;
 1659              		.loc 1 368 0
 1660 0012 6F4B     		ldr	r3, .L111+48
 1661 0014 90ED007A 		flds	s14, [r0]
 1662 0018 C3ED008A 		fsts	s17, [r3]
 369:firmwares/fixedwing/nav.c ****   if (nav_mode == NAV_MODE_COURSE) {
 1663              		.loc 1 369 0
 1664 001c 6D4B     		ldr	r3, .L111+52
 1665 001e D0ED017A 		flds	s15, [r0, #4]
 1666 0022 83ED008A 		fsts	s16, [r3]
 370:firmwares/fixedwing/nav.c ****     h_ctl_course_setpoint = atan2f(x - pos->x, y - pos->y);
 1667              		.loc 1 370 0
 1668 0026 6C4B     		ldr	r3, .L111+56
 1669 0028 1B68     		ldr	r3, [r3]
 371:firmwares/fixedwing/nav.c ****     if (h_ctl_course_setpoint < 0.) {
 1670              		.loc 1 371 0
 1671 002a 38EEC77A 		fsubs	s14, s17, s14
 1672 002e 78EE677A 		fsubs	s15, s16, s15
 370:firmwares/fixedwing/nav.c ****     h_ctl_course_setpoint = atan2f(x - pos->x, y - pos->y);
 1673              		.loc 1 370 0
 1674 0032 022B     		cmp	r3, #2
 371:firmwares/fixedwing/nav.c ****     if (h_ctl_course_setpoint < 0.) {
 1675              		.loc 1 371 0
 1676 0034 17EE100A 		fmrs	r0, s14
 1677              	.LVL171:
 1678 0038 17EE901A 		fmrs	r1, s15
 370:firmwares/fixedwing/nav.c ****     h_ctl_course_setpoint = atan2f(x - pos->x, y - pos->y);
 1679              		.loc 1 370 0
 1680 003c 17D1     		bne	.L88
 371:firmwares/fixedwing/nav.c ****     if (h_ctl_course_setpoint < 0.) {
 1681              		.loc 1 371 0
 1682 003e FFF7FEFF 		bl	atan2f
 1683              	.LVL172:
 1684 0042 07EE900A 		fmsr	s15, r0
 372:firmwares/fixedwing/nav.c ****       h_ctl_course_setpoint += 2 * M_PI;
 1685              		.loc 1 372 0
 1686 0046 F5EEC07A 		fcmpezs	s15
 1687 004a F1EE10FA 		fmstat
 1688 004e 634C     		ldr	r4, .L111+60
 1689 0050 01D4     		bmi	.L89
 371:firmwares/fixedwing/nav.c ****     if (h_ctl_course_setpoint < 0.) {
 1690              		.loc 1 371 0
 1691 0052 2060     		str	r0, [r4]	@ float
 1692 0054 09E0     		b	.L90
 1693              	.L89:
 373:firmwares/fixedwing/nav.c ****     }
 1694              		.loc 1 373 0
 1695 0056 FFF7FEFF 		bl	__aeabi_f2d
 1696              	.LVL173:
 1697 005a 51A3     		adr	r3, .L111
 1698 005c D3E90023 		ldrd	r2, [r3]
 1699 0060 FFF7FEFF 		bl	__aeabi_dadd
 1700              	.LVL174:
 1701 0064 FFF7FEFF 		bl	__aeabi_d2f
 1702              	.LVL175:
 1703 0068 2060     		str	r0, [r4]	@ float
 1704              	.L90:
 375:firmwares/fixedwing/nav.c ****   } else {
 1705              		.loc 1 375 0
 1706 006a 0322     		movs	r2, #3
 1707 006c 90E0     		b	.L109
 1708              	.L88:
 1709              	.LBB63:
 377:firmwares/fixedwing/nav.c ****     NormRadAngle(diff);
 1710              		.loc 1 377 0
 1711 006e FFF7FEFF 		bl	atan2f
 1712              	.LVL176:
 1713              	.LBB64:
 1714              	.LBB65:
 919:./state.h     **** 
 920:./state.h     **** /// Get dir of horizontal ground speed (float).
 921:./state.h     **** static inline float *stateGetHorizontalSpeedDir_f(void)
 922:./state.h     **** {
 923:./state.h     ****   if (!bit_is_set(state.speed_status, SPEED_HDIR_F)) {
 1715              		.loc 2 923 0
 1716 0072 5B4B     		ldr	r3, .L111+64
 1717 0074 B3F81421 		ldrh	r2, [r3, #276]
 1718 0078 12F4007F 		tst	r2, #512
 1719              	.LBE65:
 1720              	.LBE64:
 377:firmwares/fixedwing/nav.c ****     NormRadAngle(diff);
 1721              		.loc 1 377 0
 1722 007c 08EE100A 		fmsr	s16, r0
 1723              	.LVL177:
 1724 0080 1C46     		mov	r4, r3
 1725              	.LBB67:
 1726              	.LBB66:
 1727              		.loc 2 923 0
 1728 0082 01D1     		bne	.L92
 924:./state.h     ****     stateCalcHorizontalSpeedDir_f();
 1729              		.loc 2 924 0
 1730 0084 FFF7FEFF 		bl	stateCalcHorizontalSpeedDir_f
 1731              	.LVL178:
 1732              	.L92:
 1733              	.LBE66:
 1734              	.LBE67:
 377:firmwares/fixedwing/nav.c ****     NormRadAngle(diff);
 1735              		.loc 1 377 0
 1736 0088 D4ED5B7A 		flds	s15, [r4, #364]
 1737 008c 38EE678A 		fsubs	s16, s16, s15
 1738              	.LVL179:
 1739              	.L93:
 378:firmwares/fixedwing/nav.c ****     BoundAbs(diff, M_PI / 2.);
 1740              		.loc 1 378 0 discriminator 1
 1741 0090 18EE100A 		fmrs	r0, s16
 1742 0094 FFF7FEFF 		bl	__aeabi_f2d
 1743              	.LVL180:
 1744 0098 43A3     		adr	r3, .L111+8
 1745 009a D3E90023 		ldrd	r2, [r3]
 1746 009e 0446     		mov	r4, r0
 1747 00a0 0D46     		mov	r5, r1
 1748 00a2 FFF7FEFF 		bl	__aeabi_dcmpgt
 1749              	.LVL181:
 1750 00a6 58B1     		cbz	r0, .L95
 378:firmwares/fixedwing/nav.c ****     BoundAbs(diff, M_PI / 2.);
 1751              		.loc 1 378 0 is_stmt 0 discriminator 2
 1752 00a8 3DA3     		adr	r3, .L111
 1753 00aa D3E90023 		ldrd	r2, [r3]
 1754 00ae 2046     		mov	r0, r4
 1755 00b0 2946     		mov	r1, r5
 1756 00b2 FFF7FEFF 		bl	__aeabi_dsub
 1757              	.LVL182:
 1758 00b6 FFF7FEFF 		bl	__aeabi_d2f
 1759              	.LVL183:
 1760 00ba 08EE100A 		fmsr	s16, r0
 1761              	.LVL184:
 1762 00be E7E7     		b	.L93
 1763              	.LVL185:
 1764              	.L95:
 378:firmwares/fixedwing/nav.c ****     BoundAbs(diff, M_PI / 2.);
 1765              		.loc 1 378 0 discriminator 3
 1766 00c0 18EE100A 		fmrs	r0, s16
 1767 00c4 FFF7FEFF 		bl	__aeabi_f2d
 1768              	.LVL186:
 1769 00c8 39A3     		adr	r3, .L111+16
 1770 00ca D3E90023 		ldrd	r2, [r3]
 1771 00ce 0446     		mov	r4, r0
 1772 00d0 0D46     		mov	r5, r1
 1773 00d2 FFF7FEFF 		bl	__aeabi_dcmplt
 1774              	.LVL187:
 1775 00d6 58B1     		cbz	r0, .L110
 378:firmwares/fixedwing/nav.c ****     BoundAbs(diff, M_PI / 2.);
 1776              		.loc 1 378 0 discriminator 4
 1777 00d8 31A3     		adr	r3, .L111
 1778 00da D3E90023 		ldrd	r2, [r3]
 1779 00de 2046     		mov	r0, r4
 1780 00e0 2946     		mov	r1, r5
 1781 00e2 FFF7FEFF 		bl	__aeabi_dadd
 1782              	.LVL188:
 1783 00e6 FFF7FEFF 		bl	__aeabi_d2f
 1784              	.LVL189:
 1785 00ea 08EE100A 		fmsr	s16, r0
 1786              	.LVL190:
 1787 00ee E7E7     		b	.L95
 1788              	.LVL191:
 1789              	.L110:
 379:firmwares/fixedwing/nav.c ****     float s = sinf(diff);
 1790              		.loc 1 379 0 is_stmt 1
 1791 00f0 2046     		mov	r0, r4
 1792 00f2 2946     		mov	r1, r5
 1793 00f4 30A3     		adr	r3, .L111+24
 1794 00f6 D3E90023 		ldrd	r2, [r3]
 1795 00fa FFF7FEFF 		bl	__aeabi_dcmpgt
 1796              	.LVL192:
 1797 00fe 68B9     		cbnz	r0, .L103
 379:firmwares/fixedwing/nav.c ****     float s = sinf(diff);
 1798              		.loc 1 379 0 is_stmt 0 discriminator 2
 1799 0100 2046     		mov	r0, r4
 1800 0102 2946     		mov	r1, r5
 1801 0104 2EA3     		adr	r3, .L111+32
 1802 0106 D3E90023 		ldrd	r2, [r3]
 1803 010a FFF7FEFF 		bl	__aeabi_dcmplt
 1804              	.LVL193:
 1805 010e DFED357A 		flds	s15, .L111+68
 1806 0112 0028     		cmp	r0, #0
 1807 0114 18BF     		it	ne
 1808 0116 B0EE678A 		fcpysne	s16, s15
 1809              	.LVL194:
 1810 011a 01E0     		b	.L97
 1811              	.LVL195:
 1812              	.L103:
 379:firmwares/fixedwing/nav.c ****     float s = sinf(diff);
 1813              		.loc 1 379 0
 1814 011c 9FED328A 		flds	s16, .L111+72
 1815              	.LVL196:
 1816              	.L97:
 380:firmwares/fixedwing/nav.c ****     float speed = *stateGetHorizontalSpeedNorm_f();
 1817              		.loc 1 380 0 is_stmt 1
 1818 0120 18EE100A 		fmrs	r0, s16
 1819 0124 FFF7FEFF 		bl	sinf
 1820              	.LVL197:
 1821 0128 08EE100A 		fmsr	s16, r0
 1822              	.LVL198:
 381:firmwares/fixedwing/nav.c ****     h_ctl_roll_setpoint = atanf(2 * speed * speed * s * h_ctl_course_pgain / (CARROT * NOMINAL_AIRS
 1823              		.loc 1 381 0
 1824 012c FFF7FEFF 		bl	stateGetHorizontalSpeedNorm_f
 1825              	.LVL199:
 1826 0130 90ED007A 		flds	s14, [r0]
 1827              	.LVL200:
 382:firmwares/fixedwing/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 1828              		.loc 1 382 0
 1829 0134 2D4B     		ldr	r3, .L111+76
 1830 0136 77EE077A 		fadds	s15, s14, s14
 1831 013a 67EE877A 		fmuls	s15, s15, s14
 1832 013e 93ED007A 		flds	s14, [r3]
 1833              	.LVL201:
 1834 0142 67EE887A 		fmuls	s15, s15, s16
 1835 0146 67EE877A 		fmuls	s15, s15, s14
 1836 014a 17EE900A 		fmrs	r0, s15
 1837              	.LVL202:
 1838 014e FFF7FEFF 		bl	__aeabi_f2d
 1839              	.LVL203:
 1840 0152 1DA3     		adr	r3, .L111+40
 1841 0154 D3E90023 		ldrd	r2, [r3]
 1842 0158 FFF7FEFF 		bl	__aeabi_ddiv
 1843              	.LVL204:
 1844 015c FFF7FEFF 		bl	__aeabi_d2f
 1845              	.LVL205:
 1846 0160 FFF7FEFF 		bl	atanf
 1847              	.LVL206:
 383:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 1848              		.loc 1 383 0
 1849 0164 224A     		ldr	r2, .L111+80
 382:firmwares/fixedwing/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 1850              		.loc 1 382 0
 1851 0166 234B     		ldr	r3, .L111+84
 383:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 1852              		.loc 1 383 0
 1853 0168 D2ED007A 		flds	s15, [r2]
 382:firmwares/fixedwing/nav.c ****     BoundAbs(h_ctl_roll_setpoint, h_ctl_roll_max_setpoint);
 1854              		.loc 1 382 0
 1855 016c 1860     		str	r0, [r3]	@ float
 1856 016e 07EE100A 		fmsr	s14, r0
 383:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 1857              		.loc 1 383 0
 1858 0172 B4EEE77A 		fcmpes	s14, s15
 1859 0176 F1EE10FA 		fmstat
 1860 017a 06DC     		bgt	.L108
 383:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 1861              		.loc 1 383 0 is_stmt 0 discriminator 2
 1862 017c F1EE677A 		fnegs	s15, s15
 1863 0180 B4EEE77A 		fcmpes	s14, s15
 1864 0184 F1EE10FA 		fmstat
 1865 0188 01D5     		bpl	.L101
 1866              	.L108:
 383:firmwares/fixedwing/nav.c ****     lateral_mode = LATERAL_MODE_ROLL;
 1867              		.loc 1 383 0 discriminator 3
 1868 018a C3ED007A 		fsts	s15, [r3]
 1869              	.L101:
 384:firmwares/fixedwing/nav.c ****   }
 1870              		.loc 1 384 0 is_stmt 1
 1871 018e 0222     		movs	r2, #2
 1872              	.LVL207:
 1873              	.L109:
 1874 0190 194B     		ldr	r3, .L111+88
 1875 0192 1A70     		strb	r2, [r3]
 1876              	.LBE63:
 386:firmwares/fixedwing/nav.c **** 
 1877              		.loc 1 386 0
 1878 0194 BDEC028B 		fldmfdd	sp!, {d8}
 1879              		.cfi_restore 80
 1880              		.cfi_restore 81
 1881              		.cfi_def_cfa_offset 16
 1882 0198 38BD     		pop	{r3, r4, r5, pc}
 1883              	.L112:
 1884 019a 00BFAFF3 		.align	3
 1884      0080
 1885              	.L111:
 1886 01a0 182D4454 		.word	1413754136
 1887 01a4 FB211940 		.word	1075388923
 1888 01a8 182D4454 		.word	1413754136
 1889 01ac FB210940 		.word	1074340347
 1890 01b0 182D4454 		.word	1413754136
 1891 01b4 FB2109C0 		.word	-1073143301
 1892 01b8 182D4454 		.word	1413754136
 1893 01bc FB21F93F 		.word	1073291771
 1894 01c0 182D4454 		.word	1413754136
 1895 01c4 FB21F9BF 		.word	-1074191877
 1896 01c8 34333333 		.word	858993460
 1897 01cc 33977B40 		.word	1081841459
 1898 01d0 00000000 		.word	.LANCHOR31
 1899 01d4 00000000 		.word	.LANCHOR32
 1900 01d8 00000000 		.word	.LANCHOR33
 1901 01dc 00000000 		.word	h_ctl_course_setpoint
 1902 01e0 00000000 		.word	state
 1903 01e4 DB0FC9BF 		.word	-1077342245
 1904 01e8 DB0FC93F 		.word	1070141403
 1905 01ec 00000000 		.word	h_ctl_course_pgain
 1906 01f0 00000000 		.word	h_ctl_roll_max_setpoint
 1907 01f4 00000000 		.word	h_ctl_roll_setpoint
 1908 01f8 00000000 		.word	lateral_mode
 1909              		.cfi_endproc
 1910              	.LFE218:
 1912              		.global	__aeabi_dmul
 1913              		.section	.text.nav_circle_XY,"ax",%progbits
 1914              		.align	1
 1915              		.global	nav_circle_XY
 1916              		.thumb
 1917              		.thumb_func
 1919              	nav_circle_XY:
 1920              	.LFB171:
 111:firmwares/fixedwing/nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 1921              		.loc 1 111 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 0
 1924              		@ frame_needed = 0, uses_anonymous_args = 0
 1925              	.LVL208:
 1926 0000 2DE97043 		push	{r4, r5, r6, r8, r9, lr}
 1927              		.cfi_def_cfa_offset 24
 1928              		.cfi_offset 4, -24
 1929              		.cfi_offset 5, -20
 1930              		.cfi_offset 6, -16
 1931              		.cfi_offset 8, -12
 1932              		.cfi_offset 9, -8
 1933              		.cfi_offset 14, -4
 1934 0004 2DED088B 		fstmfdd	sp!, {d8, d9, d10, d11}
 1935              		.cfi_def_cfa_offset 56
 1936              		.cfi_offset 80, -56
 1937              		.cfi_offset 81, -52
 1938              		.cfi_offset 82, -48
 1939              		.cfi_offset 83, -44
 1940              		.cfi_offset 84, -40
 1941              		.cfi_offset 85, -36
 1942              		.cfi_offset 86, -32
 1943              		.cfi_offset 87, -28
 111:firmwares/fixedwing/nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 1944              		.loc 1 111 0
 1945 0008 08EE902A 		fmsr	s17, r2
 1946 000c 09EE901A 		fmsr	s19, r1
 1947 0010 0AEE100A 		fmsr	s20, r0
 112:firmwares/fixedwing/nav.c ****   float last_trigo_qdr = nav_circle_trigo_qdr;
 1948              		.loc 1 112 0
 1949 0014 FFF7FEFF 		bl	stateGetPositionEnu_f
 1950              	.LVL209:
 114:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1951              		.loc 1 114 0
 1952 0018 90ED017A 		flds	s14, [r0, #4]
 1953 001c D0ED007A 		flds	s15, [r0]
 113:firmwares/fixedwing/nav.c ****   nav_circle_trigo_qdr = atan2f(pos->y - y, pos->x - x);
 1954              		.loc 1 113 0
 1955 0020 974D     		ldr	r5, .L136+48
 114:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1956              		.loc 1 114 0
 1957 0022 37EE697A 		fsubs	s14, s14, s19
 1958 0026 77EECA7A 		fsubs	s15, s15, s20
 112:firmwares/fixedwing/nav.c ****   float last_trigo_qdr = nav_circle_trigo_qdr;
 1959              		.loc 1 112 0
 1960 002a 0446     		mov	r4, r0
 1961              	.LVL210:
 114:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1962              		.loc 1 114 0
 1963 002c 17EE901A 		fmrs	r1, s15
 1964 0030 17EE100A 		fmrs	r0, s14
 1965              	.LVL211:
 113:firmwares/fixedwing/nav.c ****   nav_circle_trigo_qdr = atan2f(pos->y - y, pos->x - x);
 1966              		.loc 1 113 0
 1967 0034 95ED008A 		flds	s16, [r5]
 1968              	.LVL212:
 114:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1969              		.loc 1 114 0
 1970 0038 FFF7FEFF 		bl	atan2f
 1971              	.LVL213:
 117:firmwares/fixedwing/nav.c ****     float trigo_diff = nav_circle_trigo_qdr - last_trigo_qdr;
 1972              		.loc 1 117 0
 1973 003c 914B     		ldr	r3, .L136+52
 114:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1974              		.loc 1 114 0
 1975 003e 2860     		str	r0, [r5]	@ float
 115:firmwares/fixedwing/nav.c **** 
 1976              		.loc 1 115 0
 1977 0040 F5EEC08A 		fcmpezs	s17
 117:firmwares/fixedwing/nav.c ****     float trigo_diff = nav_circle_trigo_qdr - last_trigo_qdr;
 1978              		.loc 1 117 0
 1979 0044 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 115:firmwares/fixedwing/nav.c **** 
 1980              		.loc 1 115 0
 1981 0046 F1EE10FA 		fmstat
 1982 004a BFEE007A 		fconsts	s14, #240
 1983 004e B7EE00BA 		fconsts	s22, #112
 114:firmwares/fixedwing/nav.c ****   float sign_radius = radius > 0 ? 1 : -1;
 1984              		.loc 1 114 0
 1985 0052 07EE900A 		fmsr	s15, r0
 115:firmwares/fixedwing/nav.c **** 
 1986              		.loc 1 115 0
 1987 0056 D8BF     		it	le
 1988 0058 B0EE47BA 		fcpysle	s22, s14
 1989              	.LVL214:
 1990 005c 1E46     		mov	r6, r3
 117:firmwares/fixedwing/nav.c ****     float trigo_diff = nav_circle_trigo_qdr - last_trigo_qdr;
 1991              		.loc 1 117 0
 1992 005e 002A     		cmp	r2, #0
 1993 0060 46D0     		beq	.L116
 1994              	.LBB68:
 118:firmwares/fixedwing/nav.c ****     NormRadAngle(trigo_diff);
 1995              		.loc 1 118 0
 1996 0062 37EEC88A 		fsubs	s16, s15, s16
 1997              	.LVL215:
 1998              	.L117:
 119:firmwares/fixedwing/nav.c ****     nav_circle_radians += trigo_diff;
 1999              		.loc 1 119 0 discriminator 1
 2000 0066 18EE100A 		fmrs	r0, s16
 2001 006a FFF7FEFF 		bl	__aeabi_f2d
 2002              	.LVL216:
 2003 006e 78A3     		adr	r3, .L136
 2004 0070 D3E90023 		ldrd	r2, [r3]
 2005 0074 8046     		mov	r8, r0
 2006 0076 8946     		mov	r9, r1
 2007 0078 FFF7FEFF 		bl	__aeabi_dcmpgt
 2008              	.LVL217:
 2009 007c 58B1     		cbz	r0, .L119
 119:firmwares/fixedwing/nav.c ****     nav_circle_radians += trigo_diff;
 2010              		.loc 1 119 0 is_stmt 0 discriminator 2
 2011 007e 76A3     		adr	r3, .L136+8
 2012 0080 D3E90023 		ldrd	r2, [r3]
 2013 0084 4046     		mov	r0, r8
 2014 0086 4946     		mov	r1, r9
 2015 0088 FFF7FEFF 		bl	__aeabi_dsub
 2016              	.LVL218:
 2017 008c FFF7FEFF 		bl	__aeabi_d2f
 2018              	.LVL219:
 2019 0090 08EE100A 		fmsr	s16, r0
 2020              	.LVL220:
 2021 0094 E7E7     		b	.L117
 2022              	.LVL221:
 2023              	.L119:
 119:firmwares/fixedwing/nav.c ****     nav_circle_radians += trigo_diff;
 2024              		.loc 1 119 0 discriminator 3
 2025 0096 18EE100A 		fmrs	r0, s16
 2026 009a FFF7FEFF 		bl	__aeabi_f2d
 2027              	.LVL222:
 2028 009e 70A3     		adr	r3, .L136+16
 2029 00a0 D3E90023 		ldrd	r2, [r3]
 2030 00a4 8046     		mov	r8, r0
 2031 00a6 8946     		mov	r9, r1
 2032 00a8 FFF7FEFF 		bl	__aeabi_dcmplt
 2033              	.LVL223:
 2034 00ac 58B1     		cbz	r0, .L135
 119:firmwares/fixedwing/nav.c ****     nav_circle_radians += trigo_diff;
 2035              		.loc 1 119 0 discriminator 4
 2036 00ae 6AA3     		adr	r3, .L136+8
 2037 00b0 D3E90023 		ldrd	r2, [r3]
 2038 00b4 4046     		mov	r0, r8
 2039 00b6 4946     		mov	r1, r9
 2040 00b8 FFF7FEFF 		bl	__aeabi_dadd
 2041              	.LVL224:
 2042 00bc FFF7FEFF 		bl	__aeabi_d2f
 2043              	.LVL225:
 2044 00c0 08EE100A 		fmsr	s16, r0
 2045              	.LVL226:
 2046 00c4 E7E7     		b	.L119
 2047              	.LVL227:
 2048              	.L135:
 120:firmwares/fixedwing/nav.c ****     trigo_diff *= - sign_radius;
 2049              		.loc 1 120 0 is_stmt 1
 2050 00c6 704B     		ldr	r3, .L136+56
 2051 00c8 D3ED007A 		flds	s15, [r3]
 2052 00cc 77EE887A 		fadds	s15, s15, s16
 121:firmwares/fixedwing/nav.c ****     if (trigo_diff > 0) { // do not rewind if the change in angle is in the opposite sense than nav
 2053              		.loc 1 121 0
 2054 00d0 2BEE488A 		fnmuls	s16, s22, s16
 2055              	.LVL228:
 120:firmwares/fixedwing/nav.c ****     trigo_diff *= - sign_radius;
 2056              		.loc 1 120 0
 2057 00d4 C3ED007A 		fsts	s15, [r3]
 122:firmwares/fixedwing/nav.c ****       nav_circle_radians_no_rewind += trigo_diff;
 2058              		.loc 1 122 0
 2059 00d8 B5EEC08A 		fcmpezs	s16
 2060 00dc F1EE10FA 		fmstat
 123:firmwares/fixedwing/nav.c ****     }
 2061              		.loc 1 123 0
 2062 00e0 C1BF     		itttt	gt
 2063 00e2 6A4B     		ldrgt	r3, .L136+60
 2064 00e4 D3ED007A 		fldsgt	s15, [r3]
 2065 00e8 37EE888A 		faddsgt	s16, s15, s16
 2066              	.LVL229:
 2067 00ec 83ED008A 		fstsgt	s16, [r3]
 2068              	.L116:
 2069              	.LBE68:
 130:firmwares/fixedwing/nav.c **** 
 2070              		.loc 1 130 0
 2071 00f0 674B     		ldr	r3, .L136+64
 127:firmwares/fixedwing/nav.c ****   float dist_carrot = CARROT * NOMINAL_AIRSPEED;
 2072              		.loc 1 127 0
 2073 00f2 D4ED017A 		flds	s15, [r4, #4]
 130:firmwares/fixedwing/nav.c **** 
 2074              		.loc 1 130 0
 2075 00f6 93ED009A 		flds	s18, [r3]
 127:firmwares/fixedwing/nav.c ****   float dist_carrot = CARROT * NOMINAL_AIRSPEED;
 2076              		.loc 1 127 0
 2077 00fa 94ED007A 		flds	s14, [r4]
 136:firmwares/fixedwing/nav.c ****      || dist2_center < Square(abs_radius - dist_carrot)) ?
 2078              		.loc 1 136 0
 2079 00fe 9FED658A 		flds	s16, .L136+68
 127:firmwares/fixedwing/nav.c ****   float dist_carrot = CARROT * NOMINAL_AIRSPEED;
 2080              		.loc 1 127 0
 2081 0102 77EEE97A 		fsubs	s15, s15, s19
 130:firmwares/fixedwing/nav.c **** 
 2082              		.loc 1 130 0
 2083 0106 38EEC99A 		fsubs	s18, s17, s18
 127:firmwares/fixedwing/nav.c ****   float dist_carrot = CARROT * NOMINAL_AIRSPEED;
 2084              		.loc 1 127 0
 2085 010a 37EE4A7A 		fsubs	s14, s14, s20
 2086 010e 67EEA77A 		fmuls	s15, s15, s15
 132:firmwares/fixedwing/nav.c **** 
 2087              		.loc 1 132 0
 2088 0112 F0EEC98A 		fabss	s17, s18
 2089              	.LVL230:
 127:firmwares/fixedwing/nav.c ****   float dist_carrot = CARROT * NOMINAL_AIRSPEED;
 2090              		.loc 1 127 0
 2091 0116 E7EE077A 		vfma.f32	s15, s14, s14
 2092              	.LVL231:
 136:firmwares/fixedwing/nav.c ****      || dist2_center < Square(abs_radius - dist_carrot)) ?
 2093              		.loc 1 136 0
 2094 011a 38EE887A 		fadds	s14, s17, s16
 2095 011e 27EE077A 		fmuls	s14, s14, s14
 138:firmwares/fixedwing/nav.c ****     atanf((*stateGetHorizontalSpeedNorm_f()) * (*stateGetHorizontalSpeedNorm_f()) / (NAV_GRAVITY * 
 2096              		.loc 1 138 0
 2097 0122 F4EEC77A 		fcmpes	s15, s14
 2098 0126 F1EE10FA 		fmstat
 2099 012a 2CDC     		bgt	.L131
 137:firmwares/fixedwing/nav.c ****     0 :
 2100              		.loc 1 137 0
 2101 012c 38EEC87A 		fsubs	s14, s17, s16
 2102 0130 27EE077A 		fmuls	s14, s14, s14
 2103 0134 F4EEC77A 		fcmpes	s15, s14
 2104 0138 F1EE10FA 		fmstat
 2105 013c 23D4     		bmi	.L131
 139:firmwares/fixedwing/nav.c **** 
 2106              		.loc 1 139 0
 2107 013e FFF7FEFF 		bl	stateGetHorizontalSpeedNorm_f
 2108              	.LVL232:
 2109 0142 D0ED00AA 		flds	s21, [r0]
 2110 0146 FFF7FEFF 		bl	stateGetHorizontalSpeedNorm_f
 2111              	.LVL233:
 2112 014a D0ED007A 		flds	s15, [r0]
 2113 014e 6AEEA77A 		fmuls	s15, s21, s15
 2114 0152 17EE900A 		fmrs	r0, s15
 2115 0156 FFF7FEFF 		bl	__aeabi_f2d
 2116              	.LVL234:
 2117 015a 8046     		mov	r8, r0
 2118 015c 19EE100A 		fmrs	r0, s18
 2119 0160 8946     		mov	r9, r1
 2120 0162 FFF7FEFF 		bl	__aeabi_f2d
 2121              	.LVL235:
 2122 0166 40A3     		adr	r3, .L136+24
 2123 0168 D3E90023 		ldrd	r2, [r3]
 2124 016c FFF7FEFF 		bl	__aeabi_dmul
 2125              	.LVL236:
 2126 0170 0246     		mov	r2, r0
 2127 0172 0B46     		mov	r3, r1
 2128 0174 4046     		mov	r0, r8
 2129 0176 4946     		mov	r1, r9
 2130 0178 FFF7FEFF 		bl	__aeabi_ddiv
 2131              	.LVL237:
 2132 017c FFF7FEFF 		bl	__aeabi_d2f
 2133              	.LVL238:
 138:firmwares/fixedwing/nav.c ****     atanf((*stateGetHorizontalSpeedNorm_f()) * (*stateGetHorizontalSpeedNorm_f()) / (NAV_GRAVITY * 
 2134              		.loc 1 138 0
 2135 0180 FFF7FEFF 		bl	atanf
 2136              	.LVL239:
 2137 0184 00E0     		b	.L123
 2138              	.LVL240:
 2139              	.L131:
 2140 0186 0020     		movs	r0, #0
 2141              	.LVL241:
 2142              	.L123:
 141:firmwares/fixedwing/nav.c ****   carrot_angle = Min(carrot_angle, M_PI / 4);
 2143              		.loc 1 141 0
 2144 0188 88EE288A 		fdivs	s16, s16, s17
 2145              	.LVL242:
 135:firmwares/fixedwing/nav.c ****     (dist2_center > Square(abs_radius + dist_carrot)
 2146              		.loc 1 135 0
 2147 018c 424B     		ldr	r3, .L136+72
 2148 018e 1860     		str	r0, [r3]	@ float
 142:firmwares/fixedwing/nav.c ****   carrot_angle = Max(carrot_angle, M_PI / 16);
 2149              		.loc 1 142 0
 2150 0190 18EE100A 		fmrs	r0, s16
 2151 0194 FFF7FEFF 		bl	__aeabi_f2d
 2152              	.LVL243:
 2153 0198 35A3     		adr	r3, .L136+32
 2154 019a D3E90023 		ldrd	r2, [r3]
 2155 019e FFF7FEFF 		bl	__aeabi_dcmplt
 2156              	.LVL244:
 2157 01a2 DFED3E7A 		flds	s15, .L136+76
 2158 01a6 0028     		cmp	r0, #0
 2159 01a8 08BF     		it	eq
 2160 01aa B0EE678A 		fcpyseq	s16, s15
 2161              	.LVL245:
 143:firmwares/fixedwing/nav.c ****   float alpha_carrot = nav_circle_trigo_qdr - sign_radius * carrot_angle;
 2162              		.loc 1 143 0
 2163 01ae 18EE100A 		fmrs	r0, s16
 2164 01b2 FFF7FEFF 		bl	__aeabi_f2d
 2165              	.LVL246:
 2166 01b6 30A3     		adr	r3, .L136+40
 2167 01b8 D3E90023 		ldrd	r2, [r3]
 2168 01bc FFF7FEFF 		bl	__aeabi_dcmpgt
 2169              	.LVL247:
 145:firmwares/fixedwing/nav.c ****   float radius_carrot = abs_radius;
 2170              		.loc 1 145 0
 2171 01c0 374B     		ldr	r3, .L136+80
 143:firmwares/fixedwing/nav.c ****   float alpha_carrot = nav_circle_trigo_qdr - sign_radius * carrot_angle;
 2172              		.loc 1 143 0
 2173 01c2 DFED387A 		flds	s15, .L136+84
 144:firmwares/fixedwing/nav.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 2174              		.loc 1 144 0
 2175 01c6 D5ED00AA 		flds	s21, [r5]
 145:firmwares/fixedwing/nav.c ****   float radius_carrot = abs_radius;
 2176              		.loc 1 145 0
 2177 01ca 0222     		movs	r2, #2
 2178 01cc 1A70     		strb	r2, [r3]
 147:firmwares/fixedwing/nav.c ****     radius_carrot += (abs_radius / cosf(carrot_angle) - abs_radius);
 2179              		.loc 1 147 0
 2180 01ce 364B     		ldr	r3, .L136+88
 2181 01d0 1B68     		ldr	r3, [r3]
 143:firmwares/fixedwing/nav.c ****   float alpha_carrot = nav_circle_trigo_qdr - sign_radius * carrot_angle;
 2182              		.loc 1 143 0
 2183 01d2 0028     		cmp	r0, #0
 2184 01d4 08BF     		it	eq
 2185 01d6 B0EE678A 		fcpyseq	s16, s15
 2186              	.LVL248:
 147:firmwares/fixedwing/nav.c ****     radius_carrot += (abs_radius / cosf(carrot_angle) - abs_radius);
 2187              		.loc 1 147 0
 2188 01da 9342     		cmp	r3, r2
 144:firmwares/fixedwing/nav.c ****   horizontal_mode = HORIZONTAL_MODE_CIRCLE;
 2189              		.loc 1 144 0
 2190 01dc EBEE48AA 		vfms.f32	s21, s22, s16
 2191              	.LVL249:
 147:firmwares/fixedwing/nav.c ****     radius_carrot += (abs_radius / cosf(carrot_angle) - abs_radius);
 2192              		.loc 1 147 0
 2193 01e0 0BD1     		bne	.L128
 148:firmwares/fixedwing/nav.c ****   }
 2194              		.loc 1 148 0
 2195 01e2 18EE100A 		fmrs	r0, s16
 2196 01e6 FFF7FEFF 		bl	cosf
 2197              	.LVL250:
 2198 01ea 07EE900A 		fmsr	s15, r0
 2199 01ee C8EEA77A 		fdivs	s15, s17, s15
 2200 01f2 77EEE87A 		fsubs	s15, s15, s17
 2201 01f6 78EEA78A 		fadds	s17, s17, s15
 2202              	.LVL251:
 2203              	.L128:
 150:firmwares/fixedwing/nav.c ****             y + sinf(alpha_carrot)*radius_carrot);
 2204              		.loc 1 150 0
 2205 01fa 1AEE900A 		fmrs	r0, s21
 2206 01fe FFF7FEFF 		bl	cosf
 2207              	.LVL252:
 2208 0202 08EE100A 		fmsr	s16, r0
 2209              	.LVL253:
 151:firmwares/fixedwing/nav.c ****   nav_in_circle = TRUE;
 2210              		.loc 1 151 0
 2211 0206 1AEE900A 		fmrs	r0, s21
 2212 020a FFF7FEFF 		bl	sinf
 2213              	.LVL254:
 150:firmwares/fixedwing/nav.c ****             y + sinf(alpha_carrot)*radius_carrot);
 2214              		.loc 1 150 0
 2215 020e 07EE100A 		fmsr	s14, r0
 2216 0212 F0EE697A 		fcpys	s15, s19
 2217 0216 E7EE287A 		vfma.f32	s15, s14, s17
 2218 021a B0EE4A7A 		fcpys	s14, s20
 2219 021e A8EE287A 		vfma.f32	s14, s16, s17
 2220 0222 17EE901A 		fmrs	r1, s15
 2221 0226 17EE100A 		fmrs	r0, s14
 2222 022a FFF7FEFF 		bl	fly_to_xy
 2223              	.LVL255:
 152:firmwares/fixedwing/nav.c ****   nav_circle_x = x;
 2224              		.loc 1 152 0
 2225 022e 0123     		movs	r3, #1
 2226 0230 3370     		strb	r3, [r6]
 153:firmwares/fixedwing/nav.c ****   nav_circle_y = y;
 2227              		.loc 1 153 0
 2228 0232 1E4B     		ldr	r3, .L136+92
 2229 0234 83ED00AA 		fsts	s20, [r3]
 154:firmwares/fixedwing/nav.c ****   nav_circle_radius = radius;
 2230              		.loc 1 154 0
 2231 0238 1D4B     		ldr	r3, .L136+96
 2232 023a C3ED009A 		fsts	s19, [r3]
 155:firmwares/fixedwing/nav.c **** }
 2233              		.loc 1 155 0
 2234 023e 1D4B     		ldr	r3, .L136+100
 2235 0240 83ED009A 		fsts	s18, [r3]
 156:firmwares/fixedwing/nav.c **** 
 2236              		.loc 1 156 0
 2237 0244 BDEC088B 		fldmfdd	sp!, {d8-d11}
 2238              		.cfi_restore 86
 2239              		.cfi_restore 87
 2240              		.cfi_restore 84
 2241              		.cfi_restore 85
 2242              		.cfi_restore 82
 2243              		.cfi_restore 83
 2244              		.cfi_restore 80
 2245              		.cfi_restore 81
 2246              		.cfi_def_cfa_offset 24
 2247              	.LVL256:
 2248 0248 BDE87083 		pop	{r4, r5, r6, r8, r9, pc}
 2249              	.LVL257:
 2250              	.L137:
 2251 024c AFF30080 		.align	3
 2252              	.L136:
 2253 0250 182D4454 		.word	1413754136
 2254 0254 FB210940 		.word	1074340347
 2255 0258 182D4454 		.word	1413754136
 2256 025c FB211940 		.word	1075388923
 2257 0260 182D4454 		.word	1413754136
 2258 0264 FB2109C0 		.word	-1073143301
 2259 0268 E9263108 		.word	137438953
 2260 026c AC9C2340 		.word	1076075692
 2261 0270 182D4454 		.word	1413754136
 2262 0274 FB21E93F 		.word	1072243195
 2263 0278 182D4454 		.word	1413754136
 2264 027c FB21C93F 		.word	1070146043
 2265 0280 00000000 		.word	.LANCHOR34
 2266 0284 00000000 		.word	.LANCHOR23
 2267 0288 00000000 		.word	.LANCHOR8
 2268 028c 00000000 		.word	.LANCHOR29
 2269 0290 00000000 		.word	.LANCHOR30
 2270 0294 00003442 		.word	1110704128
 2271 0298 00000000 		.word	.LANCHOR35
 2272 029c DB0F493F 		.word	1061752795
 2273 02a0 00000000 		.word	.LANCHOR36
 2274 02a4 DB0F493E 		.word	1044975579
 2275 02a8 00000000 		.word	.LANCHOR33
 2276 02ac 00000000 		.word	.LANCHOR24
 2277 02b0 00000000 		.word	.LANCHOR25
 2278 02b4 00000000 		.word	.LANCHOR26
 2279              		.cfi_endproc
 2280              	.LFE171:
 2282              		.section	.text.nav_route_xy,"ax",%progbits
 2283              		.align	1
 2284              		.global	nav_route_xy
 2285              		.thumb
 2286              		.thumb_func
 2288              	nav_route_xy:
 2289              	.LFB219:
 392:firmwares/fixedwing/nav.c ****   float leg_x = wp_x - last_wp_x;
 2290              		.loc 1 392 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
 2294              	.LVL258:
 2295 0000 38B5     		push	{r3, r4, r5, lr}
 2296              		.cfi_def_cfa_offset 16
 2297              		.cfi_offset 3, -16
 2298              		.cfi_offset 4, -12
 2299              		.cfi_offset 5, -8
 2300              		.cfi_offset 14, -4
 2301 0002 2DED0A8B 		fstmfdd	sp!, {d8, d9, d10, d11, d12}
 2302              		.cfi_def_cfa_offset 56
 2303              		.cfi_offset 80, -56
 2304              		.cfi_offset 81, -52
 2305              		.cfi_offset 82, -48
 2306              		.cfi_offset 83, -44
 2307              		.cfi_offset 84, -40
 2308              		.cfi_offset 85, -36
 2309              		.cfi_offset 86, -32
 2310              		.cfi_offset 87, -28
 2311              		.cfi_offset 88, -24
 2312              		.cfi_offset 89, -20
 392:firmwares/fixedwing/nav.c ****   float leg_x = wp_x - last_wp_x;
 2313              		.loc 1 392 0
 2314 0006 09EE101A 		fmsr	s18, r1
 2315 000a 0BEE103A 		fmsr	s22, r3
 2316 000e 0BEE902A 		fmsr	s23, r2
 2317 0012 09EE900A 		fmsr	s19, r0
 394:firmwares/fixedwing/nav.c ****   float leg2 = Max(leg_x * leg_x + leg_y * leg_y, 1.);
 2318              		.loc 1 394 0
 2319 0016 7BEE49AA 		fsubs	s21, s22, s18
 393:firmwares/fixedwing/nav.c ****   float leg_y = wp_y - last_wp_y;
 2320              		.loc 1 393 0
 2321 001a 3BEEE9AA 		fsubs	s20, s23, s19
 2322              	.LVL259:
 395:firmwares/fixedwing/nav.c ****   nav_leg_progress = ((stateGetPositionEnu_f()->x - last_wp_x) * leg_x + (stateGetPositionEnu_f()->
 2323              		.loc 1 395 0
 2324 001e 6AEEAA8A 		fmuls	s17, s21, s21
 2325 0022 F7EE007A 		fconsts	s15, #112
 2326 0026 EAEE0A8A 		vfma.f32	s17, s20, s20
 2327 002a F4EEE78A 		fcmpes	s17, s15
 2328 002e F1EE10FA 		fmstat
 2329 0032 D8BF     		it	le
 2330 0034 F0EE678A 		fcpysle	s17, s15
 2331              	.LVL260:
 396:firmwares/fixedwing/nav.c ****                       leg_y) / leg2;
 2332              		.loc 1 396 0
 2333 0038 FFF7FEFF 		bl	stateGetPositionEnu_f
 2334              	.LVL261:
 2335 003c 90ED00CA 		flds	s24, [r0]
 2336 0040 FFF7FEFF 		bl	stateGetPositionEnu_f
 2337              	.LVL262:
 2338 0044 90ED018A 		flds	s16, [r0, #4]
 2339 0048 324B     		ldr	r3, .L147
 2340 004a 38EE498A 		fsubs	s16, s16, s18
 2341 004e 3CEE69CA 		fsubs	s24, s24, s19
 2342 0052 28EE2A8A 		fmuls	s16, s16, s21
 398:firmwares/fixedwing/nav.c **** 
 2343              		.loc 1 398 0
 2344 0056 18EE900A 		fmrs	r0, s17
 396:firmwares/fixedwing/nav.c ****                       leg_y) / leg2;
 2345              		.loc 1 396 0
 2346 005a ACEE0A8A 		vfma.f32	s16, s24, s20
 397:firmwares/fixedwing/nav.c ****   nav_leg_length = sqrtf(leg2);
 2347              		.loc 1 397 0
 2348 005e 88EE288A 		fdivs	s16, s16, s17
 396:firmwares/fixedwing/nav.c ****                       leg_y) / leg2;
 2349              		.loc 1 396 0
 2350 0062 83ED008A 		fsts	s16, [r3]
 398:firmwares/fixedwing/nav.c **** 
 2351              		.loc 1 398 0
 2352 0066 FFF7FEFF 		bl	sqrtf
 2353              	.LVL263:
 2354 006a 2B4B     		ldr	r3, .L147+4
 2355 006c 08EE900A 		fmsr	s17, r0
 2356              	.LVL264:
 2357 0070 1860     		str	r0, [r3]	@ float
 2358              	.LVL265:
 403:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 2359              		.loc 1 403 0
 2360 0072 18EE100A 		fmrs	r0, s16
 2361 0076 FFF7FEFF 		bl	__aeabi_f2d
 2362              	.LVL266:
 2363 007a DFED287A 		flds	s15, .L147+8
 2364 007e C7EEA87A 		fdivs	s15, s15, s17
 2365 0082 0446     		mov	r4, r0
 2366 0084 0D46     		mov	r5, r1
 2367 0086 F5EEC07A 		fcmpezs	s15
 2368 008a F1EE10FA 		fmstat
 2369 008e 06DD     		ble	.L146
 403:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 2370              		.loc 1 403 0 is_stmt 0 discriminator 1
 2371 0090 17EE900A 		fmrs	r0, s15
 2372 0094 FFF7FEFF 		bl	__aeabi_f2d
 2373              	.LVL267:
 2374 0098 0246     		mov	r2, r0
 2375 009a 0B46     		mov	r3, r1
 2376 009c 01E0     		b	.L141
 2377              	.L146:
 403:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 2378              		.loc 1 403 0
 2379 009e 0022     		movs	r2, #0
 2380 00a0 0023     		movs	r3, #0
 2381              	.L141:
 403:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 2382              		.loc 1 403 0 discriminator 4
 2383 00a2 2046     		mov	r0, r4
 2384 00a4 2946     		mov	r1, r5
 2385 00a6 FFF7FEFF 		bl	__aeabi_dadd
 2386              	.LVL268:
 2387 00aa FFF7FEFF 		bl	__aeabi_d2f
 2388              	.LVL269:
 2389 00ae 1C4B     		ldr	r3, .L147+12
 404:firmwares/fixedwing/nav.c ****   nav_segment_x_1 = last_wp_x;
 2390              		.loc 1 404 0 is_stmt 1 discriminator 4
 2391 00b0 1C4A     		ldr	r2, .L147+16
 403:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 2392              		.loc 1 403 0 discriminator 4
 2393 00b2 1860     		str	r0, [r3]	@ float
 404:firmwares/fixedwing/nav.c ****   nav_segment_x_1 = last_wp_x;
 2394              		.loc 1 404 0 discriminator 4
 2395 00b4 0123     		movs	r3, #1
 2396 00b6 1370     		strb	r3, [r2]
 405:firmwares/fixedwing/nav.c ****   nav_segment_y_1 = last_wp_y;
 2397              		.loc 1 405 0 discriminator 4
 2398 00b8 1B4A     		ldr	r2, .L147+20
 2399 00ba C2ED009A 		fsts	s19, [r2]
 406:firmwares/fixedwing/nav.c ****   nav_segment_x_2 = wp_x;
 2400              		.loc 1 406 0 discriminator 4
 2401 00be 1B4A     		ldr	r2, .L147+24
 2402 00c0 82ED009A 		fsts	s18, [r2]
 407:firmwares/fixedwing/nav.c ****   nav_segment_y_2 = wp_y;
 2403              		.loc 1 407 0 discriminator 4
 2404 00c4 1A4A     		ldr	r2, .L147+28
 2405 00c6 C2ED00BA 		fsts	s23, [r2]
 408:firmwares/fixedwing/nav.c ****   horizontal_mode = HORIZONTAL_MODE_ROUTE;
 2406              		.loc 1 408 0 discriminator 4
 2407 00ca 1A4A     		ldr	r2, .L147+32
 2408 00cc 82ED00BA 		fsts	s22, [r2]
 409:firmwares/fixedwing/nav.c **** 
 2409              		.loc 1 409 0 discriminator 4
 2410 00d0 194A     		ldr	r2, .L147+36
 2411 00d2 1370     		strb	r3, [r2]
 411:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 2412              		.loc 1 411 0 discriminator 4
 2413 00d4 194B     		ldr	r3, .L147+40
 2414 00d6 D3ED007A 		flds	s15, [r3]
 2415 00da 27EEAA7A 		fmuls	s14, s15, s21
 412:firmwares/fixedwing/nav.c **** }
 2416              		.loc 1 412 0 discriminator 4
 2417 00de 67EE8A7A 		fmuls	s15, s15, s20
 411:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 2418              		.loc 1 411 0 discriminator 4
 2419 00e2 87EE287A 		fdivs	s14, s14, s17
 412:firmwares/fixedwing/nav.c **** }
 2420              		.loc 1 412 0 discriminator 4
 2421 00e6 C7EEA87A 		fdivs	s15, s15, s17
 403:firmwares/fixedwing/nav.c ****   nav_in_segment = TRUE;
 2422              		.loc 1 403 0 discriminator 4
 2423 00ea 06EE900A 		fmsr	s13, r0
 411:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 2424              		.loc 1 411 0 discriminator 4
 2425 00ee E6EE8A9A 		vfma.f32	s19, s13, s20
 2426              	.LVL270:
 412:firmwares/fixedwing/nav.c **** }
 2427              		.loc 1 412 0 discriminator 4
 2428 00f2 A6EEAA9A 		vfma.f32	s18, s13, s21
 2429              	.LVL271:
 411:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 2430              		.loc 1 411 0 discriminator 4
 2431 00f6 39EE877A 		fadds	s14, s19, s14
 2432 00fa 79EE677A 		fsubs	s15, s18, s15
 413:firmwares/fixedwing/nav.c **** 
 2433              		.loc 1 413 0 discriminator 4
 2434 00fe BDEC0A8B 		fldmfdd	sp!, {d8-d12}
 2435              		.cfi_restore 88
 2436              		.cfi_restore 89
 2437              		.cfi_restore 86
 2438              		.cfi_restore 87
 2439              		.cfi_restore 84
 2440              		.cfi_restore 85
 2441              		.cfi_restore 82
 2442              		.cfi_restore 83
 2443              		.cfi_restore 80
 2444              		.cfi_restore 81
 2445              		.cfi_def_cfa_offset 16
 2446              	.LVL272:
 411:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 2447              		.loc 1 411 0 discriminator 4
 2448 0102 17EE100A 		fmrs	r0, s14
 2449 0106 17EE901A 		fmrs	r1, s15
 413:firmwares/fixedwing/nav.c **** 
 2450              		.loc 1 413 0 discriminator 4
 2451 010a BDE83840 		pop	{r3, r4, r5, lr}
 2452              		.cfi_restore 14
 2453              		.cfi_restore 5
 2454              		.cfi_restore 4
 2455              		.cfi_restore 3
 2456              		.cfi_def_cfa_offset 0
 411:firmwares/fixedwing/nav.c ****             last_wp_y + nav_carrot_leg_progress * leg_y - nav_shift * leg_x / nav_leg_length);
 2457              		.loc 1 411 0 discriminator 4
 2458 010e FFF7FEBF 		b	fly_to_xy
 2459              	.LVL273:
 2460              	.L148:
 2461 0112 00BF     		.align	2
 2462              	.L147:
 2463 0114 00000000 		.word	.LANCHOR37
 2464 0118 00000000 		.word	.LANCHOR38
 2465 011c 00003442 		.word	1110704128
 2466 0120 00000000 		.word	.LANCHOR39
 2467 0124 00000000 		.word	.LANCHOR18
 2468 0128 00000000 		.word	.LANCHOR19
 2469 012c 00000000 		.word	.LANCHOR20
 2470 0130 00000000 		.word	.LANCHOR21
 2471 0134 00000000 		.word	.LANCHOR22
 2472 0138 00000000 		.word	.LANCHOR36
 2473 013c 00000000 		.word	.LANCHOR30
 2474              		.cfi_endproc
 2475              	.LFE219:
 2477              		.section	.text.compute_dist2_to_home,"ax",%progbits
 2478              		.align	1
 2479              		.global	compute_dist2_to_home
 2480              		.thumb
 2481              		.thumb_func
 2483              	compute_dist2_to_home:
 2484              	.LFB220:
 2485              		.file 4 "./subsystems/navigation/common_nav.c"
   1:./subsystems/navigation/common_nav.c **** /*
   2:./subsystems/navigation/common_nav.c ****  * Copyright (C) 2007-2009  ENAC, Pascal Brisset, Antoine Drouin
   3:./subsystems/navigation/common_nav.c ****  *
   4:./subsystems/navigation/common_nav.c ****  * This file is part of paparazzi.
   5:./subsystems/navigation/common_nav.c ****  *
   6:./subsystems/navigation/common_nav.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:./subsystems/navigation/common_nav.c ****  * it under the terms of the GNU General Public License as published by
   8:./subsystems/navigation/common_nav.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:./subsystems/navigation/common_nav.c ****  * any later version.
  10:./subsystems/navigation/common_nav.c ****  *
  11:./subsystems/navigation/common_nav.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:./subsystems/navigation/common_nav.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:./subsystems/navigation/common_nav.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:./subsystems/navigation/common_nav.c ****  * GNU General Public License for more details.
  15:./subsystems/navigation/common_nav.c ****  *
  16:./subsystems/navigation/common_nav.c ****  * You should have received a copy of the GNU General Public License
  17:./subsystems/navigation/common_nav.c ****  * along with paparazzi; see the file COPYING.  If not, write to
  18:./subsystems/navigation/common_nav.c ****  * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:./subsystems/navigation/common_nav.c ****  * Boston, MA 02111-1307, USA.
  20:./subsystems/navigation/common_nav.c ****  */
  21:./subsystems/navigation/common_nav.c **** 
  22:./subsystems/navigation/common_nav.c **** /**
  23:./subsystems/navigation/common_nav.c ****  * @file subsystems/navigation/common_nav.c
  24:./subsystems/navigation/common_nav.c ****  *
  25:./subsystems/navigation/common_nav.c ****  */
  26:./subsystems/navigation/common_nav.c **** 
  27:./subsystems/navigation/common_nav.c **** #include "subsystems/navigation/common_nav.h"
  28:./subsystems/navigation/common_nav.c **** #include "generated/flight_plan.h"
  29:./subsystems/navigation/common_nav.c **** #include "subsystems/ins.h"
  30:./subsystems/navigation/common_nav.c **** #include "math/pprz_geodetic_float.h"
  31:./subsystems/navigation/common_nav.c **** 
  32:./subsystems/navigation/common_nav.c **** float dist2_to_home;
  33:./subsystems/navigation/common_nav.c **** float dist2_to_wp;
  34:./subsystems/navigation/common_nav.c **** 
  35:./subsystems/navigation/common_nav.c **** bool_t too_far_from_home;
  36:./subsystems/navigation/common_nav.c **** 
  37:./subsystems/navigation/common_nav.c **** const uint8_t nb_waypoint = NB_WAYPOINT;
  38:./subsystems/navigation/common_nav.c **** struct point waypoints[NB_WAYPOINT] = WAYPOINTS;
  39:./subsystems/navigation/common_nav.c **** 
  40:./subsystems/navigation/common_nav.c **** float ground_alt;
  41:./subsystems/navigation/common_nav.c **** 
  42:./subsystems/navigation/common_nav.c **** int32_t nav_utm_east0 = NAV_UTM_EAST0;
  43:./subsystems/navigation/common_nav.c **** int32_t nav_utm_north0 = NAV_UTM_NORTH0;
  44:./subsystems/navigation/common_nav.c **** uint8_t nav_utm_zone0 = NAV_UTM_ZONE0;
  45:./subsystems/navigation/common_nav.c **** float max_dist_from_home = MAX_DIST_FROM_HOME;
  46:./subsystems/navigation/common_nav.c **** 
  47:./subsystems/navigation/common_nav.c **** /** Computes squared distance to the HOME waypoint.
  48:./subsystems/navigation/common_nav.c ****  * Updates #dist2_to_home and potentially sets #too_far_from_home
  49:./subsystems/navigation/common_nav.c ****  */
  50:./subsystems/navigation/common_nav.c **** void compute_dist2_to_home(void)
  51:./subsystems/navigation/common_nav.c **** {
 2486              		.loc 4 51 0
 2487              		.cfi_startproc
 2488              		@ args = 0, pretend = 0, frame = 0
 2489              		@ frame_needed = 0, uses_anonymous_args = 0
 2490 0000 08B5     		push	{r3, lr}
 2491              		.cfi_def_cfa_offset 8
 2492              		.cfi_offset 3, -8
 2493              		.cfi_offset 14, -4
  52:./subsystems/navigation/common_nav.c ****   struct EnuCoor_f *pos = stateGetPositionEnu_f();
 2494              		.loc 4 52 0
 2495 0002 FFF7FEFF 		bl	stateGetPositionEnu_f
 2496              	.LVL274:
  53:./subsystems/navigation/common_nav.c ****   float ph_x = waypoints[WP_HOME].x - pos->x;
 2497              		.loc 4 53 0
 2498 0006 104B     		ldr	r3, .L150
 2499 0008 90ED007A 		flds	s14, [r0]
 2500 000c D3ED037A 		flds	s15, [r3, #12]
  54:./subsystems/navigation/common_nav.c ****   float ph_y = waypoints[WP_HOME].y - pos->y;
 2501              		.loc 4 54 0
 2502 0010 D0ED016A 		flds	s13, [r0, #4]
  53:./subsystems/navigation/common_nav.c ****   float ph_x = waypoints[WP_HOME].x - pos->x;
 2503              		.loc 4 53 0
 2504 0014 37EEC77A 		fsubs	s14, s15, s14
 2505              	.LVL275:
 2506              		.loc 4 54 0
 2507 0018 D3ED047A 		flds	s15, [r3, #16]
  55:./subsystems/navigation/common_nav.c ****   dist2_to_home = ph_x * ph_x + ph_y * ph_y;
 2508              		.loc 4 55 0
 2509 001c 0B4B     		ldr	r3, .L150+4
  54:./subsystems/navigation/common_nav.c ****   float ph_y = waypoints[WP_HOME].y - pos->y;
 2510              		.loc 4 54 0
 2511 001e 77EEE67A 		fsubs	s15, s15, s13
 2512              	.LVL276:
 2513              		.loc 4 55 0
 2514 0022 67EEA77A 		fmuls	s15, s15, s15
 2515              	.LVL277:
 2516 0026 E7EE077A 		vfma.f32	s15, s14, s14
  56:./subsystems/navigation/common_nav.c ****   too_far_from_home = dist2_to_home > (MAX_DIST_FROM_HOME * MAX_DIST_FROM_HOME);
 2517              		.loc 4 56 0
 2518 002a 9FED097A 		flds	s14, .L150+8
 2519              	.LVL278:
  55:./subsystems/navigation/common_nav.c ****   dist2_to_home = ph_x * ph_x + ph_y * ph_y;
 2520              		.loc 4 55 0
 2521 002e C3ED007A 		fsts	s15, [r3]
 2522              		.loc 4 56 0
 2523 0032 F4EEC77A 		fcmpes	s15, s14
 2524 0036 F1EE10FA 		fmstat
 2525 003a 064B     		ldr	r3, .L150+12
 2526 003c CCBF     		ite	gt
 2527 003e 0122     		movgt	r2, #1
 2528 0040 0022     		movle	r2, #0
 2529 0042 1A70     		strb	r2, [r3]
 2530              	.LVL279:
 2531 0044 08BD     		pop	{r3, pc}
 2532              	.L151:
 2533 0046 00BF     		.align	2
 2534              	.L150:
 2535 0048 00000000 		.word	.LANCHOR6
 2536 004c 00000000 		.word	.LANCHOR10
 2537 0050 00C8AF47 		.word	1202702336
 2538 0054 00000000 		.word	.LANCHOR40
 2539              		.cfi_endproc
 2540              	.LFE220:
 2542              		.section	.text.nav_reset_utm_zone,"ax",%progbits
 2543              		.align	1
 2544              		.global	nav_reset_utm_zone
 2545              		.thumb
 2546              		.thumb_func
 2548              	nav_reset_utm_zone:
 2549              	.LFB221:
  57:./subsystems/navigation/common_nav.c **** #if defined InAirspace
  58:./subsystems/navigation/common_nav.c ****   too_far_from_home = too_far_from_home || !(InAirspace(pos_x, pos_y));
  59:./subsystems/navigation/common_nav.c **** #endif
  60:./subsystems/navigation/common_nav.c **** }
  61:./subsystems/navigation/common_nav.c **** 
  62:./subsystems/navigation/common_nav.c **** 
  63:./subsystems/navigation/common_nav.c **** static float previous_ground_alt;
  64:./subsystems/navigation/common_nav.c **** 
  65:./subsystems/navigation/common_nav.c **** /** Reset the UTM zone to current GPS fix */
  66:./subsystems/navigation/common_nav.c **** unit_t nav_reset_utm_zone(void)
  67:./subsystems/navigation/common_nav.c **** {
 2550              		.loc 4 67 0
 2551              		.cfi_startproc
 2552              		@ args = 0, pretend = 0, frame = 16
 2553              		@ frame_needed = 0, uses_anonymous_args = 0
 2554 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 2555              		.cfi_def_cfa_offset 32
 2556              		.cfi_offset 4, -16
 2557              		.cfi_offset 5, -12
 2558              		.cfi_offset 6, -8
 2559              		.cfi_offset 14, -4
  68:./subsystems/navigation/common_nav.c **** 
  69:./subsystems/navigation/common_nav.c ****   struct UtmCoor_f utm0;
  70:./subsystems/navigation/common_nav.c ****   utm0.zone = nav_utm_zone0;
  71:./subsystems/navigation/common_nav.c ****   utm0.north = nav_utm_north0;
 2560              		.loc 4 71 0
 2561 0002 154C     		ldr	r4, .L153
  70:./subsystems/navigation/common_nav.c ****   utm0.north = nav_utm_north0;
 2562              		.loc 4 70 0
 2563 0004 154E     		ldr	r6, .L153+4
 2564              		.loc 4 71 0
 2565 0006 D4ED007A 		flds	s15, [r4]	@ int
  72:./subsystems/navigation/common_nav.c ****   utm0.east = nav_utm_east0;
 2566              		.loc 4 72 0
 2567 000a 154D     		ldr	r5, .L153+8
  70:./subsystems/navigation/common_nav.c ****   utm0.north = nav_utm_north0;
 2568              		.loc 4 70 0
 2569 000c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 2570 000e 8DF80C30 		strb	r3, [sp, #12]
  71:./subsystems/navigation/common_nav.c ****   utm0.east = nav_utm_east0;
 2571              		.loc 4 71 0
 2572 0012 F8EEE77A 		fsitos	s15, s15
  73:./subsystems/navigation/common_nav.c ****   utm0.alt = ground_alt;
 2573              		.loc 4 73 0
 2574 0016 134B     		ldr	r3, .L153+12
  71:./subsystems/navigation/common_nav.c ****   utm0.east = nav_utm_east0;
 2575              		.loc 4 71 0
 2576 0018 CDED007A 		fsts	s15, [sp]
  72:./subsystems/navigation/common_nav.c ****   utm0.east = nav_utm_east0;
 2577              		.loc 4 72 0
 2578 001c D5ED007A 		flds	s15, [r5]	@ int
 2579              		.loc 4 73 0
 2580 0020 1B68     		ldr	r3, [r3]	@ float
 2581 0022 0293     		str	r3, [sp, #8]	@ float
  72:./subsystems/navigation/common_nav.c ****   utm0.east = nav_utm_east0;
 2582              		.loc 4 72 0
 2583 0024 F8EEE77A 		fsitos	s15, s15
  74:./subsystems/navigation/common_nav.c ****   ins_reset_utm_zone(&utm0);
 2584              		.loc 4 74 0
 2585 0028 6846     		mov	r0, sp
  72:./subsystems/navigation/common_nav.c ****   utm0.alt = ground_alt;
 2586              		.loc 4 72 0
 2587 002a CDED017A 		fsts	s15, [sp, #4]
 2588              		.loc 4 74 0
 2589 002e FFF7FEFF 		bl	ins_reset_utm_zone
 2590              	.LVL280:
  75:./subsystems/navigation/common_nav.c **** 
  76:./subsystems/navigation/common_nav.c ****   /* Set the real UTM ref */
  77:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = utm0.zone;
  78:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = utm0.east;
 2591              		.loc 4 78 0
 2592 0032 DDED017A 		flds	s15, [sp, #4]
  77:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = utm0.east;
 2593              		.loc 4 77 0
 2594 0036 9DF80C30 		ldrb	r3, [sp, #12]	@ zero_extendqisi2
 2595 003a 3370     		strb	r3, [r6]
 2596              		.loc 4 78 0
 2597 003c FDEEE77A 		ftosizs	s15, s15
  79:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = utm0.north;
  80:./subsystems/navigation/common_nav.c **** 
  81:./subsystems/navigation/common_nav.c ****   return 0;
  82:./subsystems/navigation/common_nav.c **** }
 2598              		.loc 4 82 0
 2599 0040 0020     		movs	r0, #0
  78:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = utm0.north;
 2600              		.loc 4 78 0
 2601 0042 C5ED007A 		fsts	s15, [r5]	@ int
  79:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = utm0.north;
 2602              		.loc 4 79 0
 2603 0046 DDED007A 		flds	s15, [sp]
 2604 004a FDEEE77A 		ftosizs	s15, s15
 2605 004e C4ED007A 		fsts	s15, [r4]	@ int
 2606              		.loc 4 82 0
 2607 0052 04B0     		add	sp, sp, #16
 2608              		.cfi_def_cfa_offset 16
 2609              		@ sp needed
 2610 0054 70BD     		pop	{r4, r5, r6, pc}
 2611              	.L154:
 2612 0056 00BF     		.align	2
 2613              	.L153:
 2614 0058 00000000 		.word	.LANCHOR7
 2615 005c 00000000 		.word	.LANCHOR3
 2616 0060 00000000 		.word	.LANCHOR5
 2617 0064 00000000 		.word	.LANCHOR12
 2618              		.cfi_endproc
 2619              	.LFE221:
 2621              		.section	.text.nav_reset_reference,"ax",%progbits
 2622              		.align	1
 2623              		.global	nav_reset_reference
 2624              		.thumb
 2625              		.thumb_func
 2627              	nav_reset_reference:
 2628              	.LFB222:
  83:./subsystems/navigation/common_nav.c **** 
  84:./subsystems/navigation/common_nav.c **** /** Reset the geographic reference to the current GPS fix */
  85:./subsystems/navigation/common_nav.c **** unit_t nav_reset_reference(void)
  86:./subsystems/navigation/common_nav.c **** {
 2629              		.loc 4 86 0
 2630              		.cfi_startproc
 2631              		@ args = 0, pretend = 0, frame = 0
 2632              		@ frame_needed = 0, uses_anonymous_args = 0
 2633 0000 08B5     		push	{r3, lr}
 2634              		.cfi_def_cfa_offset 8
 2635              		.cfi_offset 3, -8
 2636              		.cfi_offset 14, -4
  87:./subsystems/navigation/common_nav.c ****   /* realign INS */
  88:./subsystems/navigation/common_nav.c ****   ins_reset_local_origin();
 2637              		.loc 4 88 0
 2638 0002 FFF7FEFF 		bl	ins_reset_local_origin
 2639              	.LVL281:
  89:./subsystems/navigation/common_nav.c **** 
  90:./subsystems/navigation/common_nav.c ****   /* Set nav UTM ref */
  91:./subsystems/navigation/common_nav.c ****   nav_utm_east0 = state.utm_origin_f.east;
 2640              		.loc 4 91 0
 2641 0006 0E4B     		ldr	r3, .L156
 2642 0008 0E4A     		ldr	r2, .L156+4
 2643 000a D3ED3B7A 		flds	s15, [r3, #236]
  92:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = state.utm_origin_f.north;
  93:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = state.utm_origin_f.zone;
 2644              		.loc 4 93 0
 2645 000e 93F8F410 		ldrb	r1, [r3, #244]	@ zero_extendqisi2
  91:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = state.utm_origin_f.north;
 2646              		.loc 4 91 0
 2647 0012 FDEEE77A 		ftosizs	s15, s15
 2648 0016 C2ED007A 		fsts	s15, [r2]	@ int
  92:./subsystems/navigation/common_nav.c ****   nav_utm_north0 = state.utm_origin_f.north;
 2649              		.loc 4 92 0
 2650 001a D3ED3A7A 		flds	s15, [r3, #232]
 2651 001e 0A4A     		ldr	r2, .L156+8
  94:./subsystems/navigation/common_nav.c **** 
  95:./subsystems/navigation/common_nav.c ****   /* Ground alt */
  96:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
  97:./subsystems/navigation/common_nav.c ****   ground_alt = state.utm_origin_f.alt;
 2652              		.loc 4 97 0
 2653 0020 D3F8F030 		ldr	r3, [r3, #240]	@ float
  92:./subsystems/navigation/common_nav.c ****   nav_utm_zone0 = state.utm_origin_f.zone;
 2654              		.loc 4 92 0
 2655 0024 FDEEE77A 		ftosizs	s15, s15
 2656 0028 C2ED007A 		fsts	s15, [r2]	@ int
  93:./subsystems/navigation/common_nav.c **** 
 2657              		.loc 4 93 0
 2658 002c 074A     		ldr	r2, .L156+12
 2659 002e 1170     		strb	r1, [r2]
  96:./subsystems/navigation/common_nav.c ****   ground_alt = state.utm_origin_f.alt;
 2660              		.loc 4 96 0
 2661 0030 074A     		ldr	r2, .L156+16
 2662 0032 0849     		ldr	r1, .L156+20
 2663 0034 1068     		ldr	r0, [r2]	@ float
 2664 0036 0860     		str	r0, [r1]	@ float
 2665              		.loc 4 97 0
 2666 0038 1360     		str	r3, [r2]	@ float
  98:./subsystems/navigation/common_nav.c **** 
  99:./subsystems/navigation/common_nav.c ****   return 0;
 100:./subsystems/navigation/common_nav.c **** }
 2667              		.loc 4 100 0
 2668 003a 0020     		movs	r0, #0
 2669 003c 08BD     		pop	{r3, pc}
 2670              	.L157:
 2671 003e 00BF     		.align	2
 2672              	.L156:
 2673 0040 00000000 		.word	state
 2674 0044 00000000 		.word	.LANCHOR5
 2675 0048 00000000 		.word	.LANCHOR7
 2676 004c 00000000 		.word	.LANCHOR3
 2677 0050 00000000 		.word	.LANCHOR12
 2678 0054 00000000 		.word	.LANCHOR41
 2679              		.cfi_endproc
 2680              	.LFE222:
 2682              		.section	.text.nav_reset_alt,"ax",%progbits
 2683              		.align	1
 2684              		.global	nav_reset_alt
 2685              		.thumb
 2686              		.thumb_func
 2688              	nav_reset_alt:
 2689              	.LFB223:
 101:./subsystems/navigation/common_nav.c **** 
 102:./subsystems/navigation/common_nav.c **** /** Reset the altitude reference to the current GPS alt */
 103:./subsystems/navigation/common_nav.c **** unit_t nav_reset_alt(void)
 104:./subsystems/navigation/common_nav.c **** {
 2690              		.loc 4 104 0
 2691              		.cfi_startproc
 2692              		@ args = 0, pretend = 0, frame = 0
 2693              		@ frame_needed = 0, uses_anonymous_args = 0
 2694 0000 08B5     		push	{r3, lr}
 2695              		.cfi_def_cfa_offset 8
 2696              		.cfi_offset 3, -8
 2697              		.cfi_offset 14, -4
 105:./subsystems/navigation/common_nav.c ****   ins_reset_altitude_ref();
 2698              		.loc 4 105 0
 2699 0002 FFF7FEFF 		bl	ins_reset_altitude_ref
 2700              	.LVL282:
 106:./subsystems/navigation/common_nav.c **** 
 107:./subsystems/navigation/common_nav.c ****   /* Ground alt */
 108:./subsystems/navigation/common_nav.c ****   previous_ground_alt = ground_alt;
 2701              		.loc 4 108 0
 2702 0006 054B     		ldr	r3, .L159
 2703 0008 054A     		ldr	r2, .L159+4
 2704 000a 1968     		ldr	r1, [r3]	@ float
 2705 000c 1160     		str	r1, [r2]	@ float
 109:./subsystems/navigation/common_nav.c ****   ground_alt = state.utm_origin_f.alt;
 2706              		.loc 4 109 0
 2707 000e 054A     		ldr	r2, .L159+8
 2708 0010 D2F8F020 		ldr	r2, [r2, #240]	@ float
 2709 0014 1A60     		str	r2, [r3]	@ float
 110:./subsystems/navigation/common_nav.c **** 
 111:./subsystems/navigation/common_nav.c ****   return 0;
 112:./subsystems/navigation/common_nav.c **** }
 2710              		.loc 4 112 0
 2711 0016 0020     		movs	r0, #0
 2712 0018 08BD     		pop	{r3, pc}
 2713              	.L160:
 2714 001a 00BF     		.align	2
 2715              	.L159:
 2716 001c 00000000 		.word	.LANCHOR12
 2717 0020 00000000 		.word	.LANCHOR41
 2718 0024 00000000 		.word	state
 2719              		.cfi_endproc
 2720              	.LFE223:
 2722              		.section	.text.nav_update_waypoints_alt,"ax",%progbits
 2723              		.align	1
 2724              		.global	nav_update_waypoints_alt
 2725              		.thumb
 2726              		.thumb_func
 2728              	nav_update_waypoints_alt:
 2729              	.LFB224:
 113:./subsystems/navigation/common_nav.c **** 
 114:./subsystems/navigation/common_nav.c **** /** Shift altitude of the waypoint according to a new ground altitude */
 115:./subsystems/navigation/common_nav.c **** unit_t nav_update_waypoints_alt(void)
 116:./subsystems/navigation/common_nav.c **** {
 2730              		.loc 4 116 0
 2731              		.cfi_startproc
 2732              		@ args = 0, pretend = 0, frame = 0
 2733              		@ frame_needed = 0, uses_anonymous_args = 0
 2734              		@ link register save eliminated.
 2735              	.LVL283:
 117:./subsystems/navigation/common_nav.c ****   uint8_t i;
 118:./subsystems/navigation/common_nav.c ****   for (i = 0; i < NB_WAYPOINT; i++) {
 119:./subsystems/navigation/common_nav.c ****     waypoints[i].a += ground_alt - previous_ground_alt;
 2736              		.loc 4 119 0
 2737 0000 0A4B     		ldr	r3, .L164
 2738 0002 D3ED007A 		flds	s15, [r3]
 2739 0006 0A4B     		ldr	r3, .L164+4
 2740 0008 93ED007A 		flds	s14, [r3]
 2741 000c 094B     		ldr	r3, .L164+8
 2742 000e 37EEC77A 		fsubs	s14, s15, s14
 2743 0012 03F19002 		add	r2, r3, #144
 2744              	.LVL284:
 2745              	.L162:
 2746              		.loc 4 119 0 is_stmt 0 discriminator 3
 2747 0016 D3ED027A 		flds	s15, [r3, #8]
 2748 001a 77EE877A 		fadds	s15, s15, s14
 2749 001e 0C33     		adds	r3, r3, #12
 2750 0020 43ED017A 		fsts	s15, [r3, #-4]
 118:./subsystems/navigation/common_nav.c ****     waypoints[i].a += ground_alt - previous_ground_alt;
 2751              		.loc 4 118 0 is_stmt 1 discriminator 3
 2752 0024 9342     		cmp	r3, r2
 2753 0026 F6D1     		bne	.L162
 120:./subsystems/navigation/common_nav.c ****   }
 121:./subsystems/navigation/common_nav.c ****   return 0;
 122:./subsystems/navigation/common_nav.c **** }
 2754              		.loc 4 122 0
 2755 0028 0020     		movs	r0, #0
 2756 002a 7047     		bx	lr
 2757              	.L165:
 2758              		.align	2
 2759              	.L164:
 2760 002c 00000000 		.word	.LANCHOR12
 2761 0030 00000000 		.word	.LANCHOR41
 2762 0034 00000000 		.word	.LANCHOR6
 2763              		.cfi_endproc
 2764              	.LFE224:
 2766              		.section	.text.common_nav_periodic_task_4Hz,"ax",%progbits
 2767              		.align	1
 2768              		.global	common_nav_periodic_task_4Hz
 2769              		.thumb
 2770              		.thumb_func
 2772              	common_nav_periodic_task_4Hz:
 2773              	.LFB225:
 123:./subsystems/navigation/common_nav.c **** 
 124:./subsystems/navigation/common_nav.c **** void common_nav_periodic_task_4Hz()
 125:./subsystems/navigation/common_nav.c **** {
 2774              		.loc 4 125 0
 2775              		.cfi_startproc
 2776              		@ args = 0, pretend = 0, frame = 0
 2777              		@ frame_needed = 0, uses_anonymous_args = 0
 2778              		@ link register save eliminated.
 2779              	.LBB69:
 126:./subsystems/navigation/common_nav.c ****   RunOnceEvery(4, { stage_time++;  block_time++; });
 2780              		.loc 4 126 0
 2781 0000 094A     		ldr	r2, .L170
 2782 0002 1388     		ldrh	r3, [r2]
 2783 0004 0133     		adds	r3, r3, #1
 2784 0006 9BB2     		uxth	r3, r3
 2785 0008 032B     		cmp	r3, #3
 2786 000a 81BF     		itttt	hi
 2787 000c 0023     		movhi	r3, #0
 2788 000e 1380     		strhhi	r3, [r2]	@ movhi
 2789 0010 064A     		ldrhi	r2, .L170+4
 2790 0012 1388     		ldrhhi	r3, [r2]
 2791 0014 81BF     		itttt	hi
 2792 0016 0133     		addhi	r3, r3, #1
 2793 0018 1380     		strhhi	r3, [r2]	@ movhi
 2794 001a 054A     		ldrhi	r2, .L170+8
 2795 001c 1388     		ldrhhi	r3, [r2]
 2796 001e 88BF     		it	hi
 2797 0020 0133     		addhi	r3, r3, #1
 2798 0022 1380     		strh	r3, [r2]	@ movhi
 2799 0024 7047     		bx	lr
 2800              	.L171:
 2801 0026 00BF     		.align	2
 2802              	.L170:
 2803 0028 00000000 		.word	.LANCHOR42
 2804 002c 00000000 		.word	stage_time
 2805 0030 00000000 		.word	block_time
 2806              	.LBE69:
 2807              		.cfi_endproc
 2808              	.LFE225:
 2810              		.section	.text.nav_move_waypoint,"ax",%progbits
 2811              		.align	1
 2812              		.global	nav_move_waypoint
 2813              		.thumb
 2814              		.thumb_func
 2816              	nav_move_waypoint:
 2817              	.LFB226:
 127:./subsystems/navigation/common_nav.c **** }
 128:./subsystems/navigation/common_nav.c **** 
 129:./subsystems/navigation/common_nav.c **** /** Move a waypoint to given UTM coordinates.
 130:./subsystems/navigation/common_nav.c ****  * @param[in] wp_id Waypoint ID
 131:./subsystems/navigation/common_nav.c ****  * @param[in] ux    UTM x (east) coordinate
 132:./subsystems/navigation/common_nav.c ****  * @param[in] uy    UTM y (north) coordinate
 133:./subsystems/navigation/common_nav.c ****  * @param[in] alt   Altitude above MSL.
 134:./subsystems/navigation/common_nav.c ****  */
 135:./subsystems/navigation/common_nav.c **** void nav_move_waypoint(uint8_t wp_id, float ux, float uy, float alt)
 136:./subsystems/navigation/common_nav.c **** {
 2818              		.loc 4 136 0
 2819              		.cfi_startproc
 2820              		@ args = 0, pretend = 0, frame = 0
 2821              		@ frame_needed = 0, uses_anonymous_args = 0
 2822              		@ link register save eliminated.
 2823              	.LVL285:
 137:./subsystems/navigation/common_nav.c ****   if (wp_id < nb_waypoint) {
 2824              		.loc 4 137 0
 2825 0000 0B28     		cmp	r0, #11
 136:./subsystems/navigation/common_nav.c ****   if (wp_id < nb_waypoint) {
 2826              		.loc 4 136 0
 2827 0002 07EE901A 		fmsr	s15, r1
 2828 0006 07EE102A 		fmsr	s14, r2
 2829              		.loc 4 137 0
 2830 000a 47D8     		bhi	.L172
 2831              	.LBB70:
 138:./subsystems/navigation/common_nav.c ****     float dx, dy;
 139:./subsystems/navigation/common_nav.c ****     dx = ux - nav_utm_east0 - waypoints[WP_HOME].x;
 2832              		.loc 4 139 0
 2833 000c 2449     		ldr	r1, .L182
 2834              	.LVL286:
 2835 000e 254A     		ldr	r2, .L182+4
 2836              	.LVL287:
 2837 0010 D1ED006A 		flds	s13, [r1]	@ int
 140:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2838              		.loc 4 140 0
 2839 0014 2449     		ldr	r1, .L182+8
 139:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2840              		.loc 4 139 0
 2841 0016 D2ED035A 		flds	s11, [r2, #12]
 2842              		.loc 4 140 0
 2843 001a 92ED046A 		flds	s12, [r2, #16]
 139:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2844              		.loc 4 139 0
 2845 001e F8EEE66A 		fsitos	s13, s13
 2846 0022 77EEE66A 		fsubs	s13, s15, s13
 2847              		.loc 4 140 0
 2848 0026 D1ED007A 		flds	s15, [r1]	@ int
 2849              	.LVL288:
 141:./subsystems/navigation/common_nav.c ****     BoundAbs(dx, max_dist_from_home);
 2850              		.loc 4 141 0
 2851 002a 2049     		ldr	r1, .L182+12
 140:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2852              		.loc 4 140 0
 2853 002c F8EEE77A 		fsitos	s15, s15
 139:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2854              		.loc 4 139 0
 2855 0030 76EEE56A 		fsubs	s13, s13, s11
 2856              	.LVL289:
 140:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2857              		.loc 4 140 0
 2858 0034 77EE677A 		fsubs	s15, s14, s15
 2859              		.loc 4 141 0
 2860 0038 91ED007A 		flds	s14, [r1]
 2861              	.LVL290:
 2862 003c F4EEC76A 		fcmpes	s13, s14
 2863 0040 F1EE10FA 		fmstat
 140:./subsystems/navigation/common_nav.c ****     dy = uy - nav_utm_north0 - waypoints[WP_HOME].y;
 2864              		.loc 4 140 0
 2865 0044 77EEC67A 		fsubs	s15, s15, s12
 2866              	.LVL291:
 2867              		.loc 4 141 0
 2868 0048 09DC     		bgt	.L178
 2869              		.loc 4 141 0 is_stmt 0 discriminator 2
 2870 004a B1EE475A 		fnegs	s10, s14
 2871 004e F4EE456A 		fcmps	s13, s10
 2872 0052 F1EE10FA 		fmstat
 2873 0056 48BF     		it	mi
 2874 0058 F0EE456A 		fcpysmi	s13, s10
 2875              	.LVL292:
 2876 005c 01E0     		b	.L174
 2877              	.LVL293:
 2878              	.L178:
 2879              		.loc 4 141 0
 2880 005e F0EE476A 		fcpys	s13, s14
 2881              	.LVL294:
 2882              	.L174:
 142:./subsystems/navigation/common_nav.c ****     BoundAbs(dy, max_dist_from_home);
 2883              		.loc 4 142 0 is_stmt 1
 2884 0062 F4EEC77A 		fcmpes	s15, s14
 2885 0066 F1EE10FA 		fmstat
 2886 006a 09DC     		bgt	.L179
 2887              		.loc 4 142 0 is_stmt 0 discriminator 2
 2888 006c B1EE477A 		fnegs	s14, s14
 2889 0070 F4EE477A 		fcmps	s15, s14
 2890 0074 F1EE10FA 		fmstat
 2891 0078 48BF     		it	mi
 2892 007a F0EE477A 		fcpysmi	s15, s14
 2893              	.LVL295:
 2894 007e 01E0     		b	.L176
 2895              	.LVL296:
 2896              	.L179:
 2897              		.loc 4 142 0
 2898 0080 F0EE477A 		fcpys	s15, s14
 2899              	.LVL297:
 2900              	.L176:
 143:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].x = waypoints[WP_HOME].x + dx;
 2901              		.loc 4 143 0 is_stmt 1
 2902 0084 0C21     		movs	r1, #12
 2903 0086 01FB0020 		mla	r0, r1, r0, r2
 2904              	.LVL298:
 2905 008a 75EEA66A 		fadds	s13, s11, s13
 2906              	.LVL299:
 144:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].y = waypoints[WP_HOME].y + dy;
 2907              		.loc 4 144 0
 2908 008e 76EE277A 		fadds	s15, s12, s15
 2909              	.LVL300:
 143:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].x = waypoints[WP_HOME].x + dx;
 2910              		.loc 4 143 0
 2911 0092 C0ED006A 		fsts	s13, [r0]
 2912              		.loc 4 144 0
 2913 0096 C0ED017A 		fsts	s15, [r0, #4]
 145:./subsystems/navigation/common_nav.c ****     waypoints[wp_id].a = alt;
 2914              		.loc 4 145 0
 2915 009a 8360     		str	r3, [r0, #8]	@ float
 2916              	.L172:
 2917 009c 7047     		bx	lr
 2918              	.L183:
 2919 009e 00BF     		.align	2
 2920              	.L182:
 2921 00a0 00000000 		.word	.LANCHOR5
 2922 00a4 00000000 		.word	.LANCHOR6
 2923 00a8 00000000 		.word	.LANCHOR7
 2924 00ac 00000000 		.word	.LANCHOR43
 2925              	.LBE70:
 2926              		.cfi_endproc
 2927              	.LFE226:
 2929              		.section	.text.nav_home,"ax",%progbits
 2930              		.align	1
 2931              		.global	nav_home
 2932              		.thumb
 2933              		.thumb_func
 2935              	nav_home:
 2936              	.LFB228:
 433:firmwares/fixedwing/nav.c ****   NavCircleWaypoint(WP_HOME, FAILSAFE_HOME_RADIUS);
 2937              		.loc 1 433 0
 2938              		.cfi_startproc
 2939              		@ args = 0, pretend = 0, frame = 0
 2940              		@ frame_needed = 0, uses_anonymous_args = 0
 2941 0000 08B5     		push	{r3, lr}
 2942              		.cfi_def_cfa_offset 8
 2943              		.cfi_offset 3, -8
 2944              		.cfi_offset 14, -4
 434:firmwares/fixedwing/nav.c ****   /** Nominal speed */
 2945              		.loc 1 434 0
 2946 0002 104B     		ldr	r3, .L185
 2947 0004 104A     		ldr	r2, .L185+4
 2948 0006 D868     		ldr	r0, [r3, #12]	@ float
 2949 0008 1969     		ldr	r1, [r3, #16]	@ float
 2950 000a FFF7FEFF 		bl	nav_circle_XY
 2951              	.LVL301:
 436:firmwares/fixedwing/nav.c ****   v_ctl_mode = V_CTL_MODE_AUTO_ALT;
 2952              		.loc 1 436 0
 2953 000e 0F4B     		ldr	r3, .L185+8
 2954 0010 0022     		movs	r2, #0
 2955 0012 1A60     		str	r2, [r3]	@ float
 437:firmwares/fixedwing/nav.c ****   nav_altitude = ground_alt + HOME_MODE_HEIGHT;
 2956              		.loc 1 437 0
 2957 0014 0E4B     		ldr	r3, .L185+12
 2958 0016 0322     		movs	r2, #3
 2959 0018 1A70     		strb	r2, [r3]
 438:firmwares/fixedwing/nav.c ****   compute_dist2_to_home();
 2960              		.loc 1 438 0
 2961 001a 0E4B     		ldr	r3, .L185+16
 2962 001c D3ED007A 		flds	s15, [r3]
 2963 0020 0D4B     		ldr	r3, .L185+20
 2964 0022 B3EE097A 		fconsts	s14, #57
 2965 0026 77EE877A 		fadds	s15, s15, s14
 2966 002a C3ED007A 		fsts	s15, [r3]
 439:firmwares/fixedwing/nav.c ****   dist2_to_wp = dist2_to_home;
 2967              		.loc 1 439 0
 2968 002e FFF7FEFF 		bl	compute_dist2_to_home
 2969              	.LVL302:
 440:firmwares/fixedwing/nav.c ****   nav_set_altitude();
 2970              		.loc 1 440 0
 2971 0032 0A4B     		ldr	r3, .L185+24
 2972 0034 1A68     		ldr	r2, [r3]	@ float
 2973 0036 0A4B     		ldr	r3, .L185+28
 2974 0038 1A60     		str	r2, [r3]	@ float
 442:firmwares/fixedwing/nav.c **** 
 2975              		.loc 1 442 0
 2976 003a BDE80840 		pop	{r3, lr}
 2977              		.cfi_restore 14
 2978              		.cfi_restore 3
 2979              		.cfi_def_cfa_offset 0
 441:firmwares/fixedwing/nav.c **** }
 2980              		.loc 1 441 0
 2981 003e FFF7FEBF 		b	nav_set_altitude
 2982              	.LVL303:
 2983              	.L186:
 2984 0042 00BF     		.align	2
 2985              	.L185:
 2986 0044 00000000 		.word	.LANCHOR6
 2987 0048 0000C842 		.word	1120403456
 2988 004c 00000000 		.word	.LANCHOR44
 2989 0050 00000000 		.word	v_ctl_mode
 2990 0054 00000000 		.word	.LANCHOR12
 2991 0058 00000000 		.word	.LANCHOR0
 2992 005c 00000000 		.word	.LANCHOR10
 2993 0060 00000000 		.word	.LANCHOR9
 2994              		.cfi_endproc
 2995              	.LFE228:
 2997              		.section	.text.DownlinkSendWpNr,"ax",%progbits
 2998              		.align	1
 2999              		.global	DownlinkSendWpNr
 3000              		.thumb
 3001              		.thumb_func
 3003              	DownlinkSendWpNr:
 3004              	.LFB483:
 494:firmwares/fixedwing/nav.c ****   DownlinkSendWp(&(DefaultChannel).trans_tx, &(DefaultDevice).device, _wp);
 3005              		.loc 1 494 0
 3006              		.cfi_startproc
 3007              		@ args = 0, pretend = 0, frame = 16
 3008              		@ frame_needed = 0, uses_anonymous_args = 0
 3009              	.LVL304:
 3010 0000 7FB5     		push	{r0, r1, r2, r3, r4, r5, r6, lr}
 3011              		.cfi_def_cfa_offset 32
 3012              		.cfi_offset 14, -4
 3013              	.LBB71:
 495:firmwares/fixedwing/nav.c ****   return FALSE;
 3014              		.loc 1 495 0
 3015 0002 164B     		ldr	r3, .L188
 3016 0004 164A     		ldr	r2, .L188+4
 3017 0006 D3ED007A 		flds	s15, [r3]	@ int
 3018              	.LBE71:
 494:firmwares/fixedwing/nav.c ****   DownlinkSendWp(&(DefaultChannel).trans_tx, &(DefaultDevice).device, _wp);
 3019              		.loc 1 494 0
 3020 000a 8DF80F00 		strb	r0, [sp, #15]
 3021              	.LBB72:
 495:firmwares/fixedwing/nav.c ****   return FALSE;
 3022              		.loc 1 495 0
 3023 000e 0C23     		movs	r3, #12
 3024 0010 5843     		muls	r0, r3, r0
 3025              	.LVL305:
 3026 0012 1318     		adds	r3, r2, r0
 3027 0014 93ED007A 		flds	s14, [r3]
 3028 0018 1249     		ldr	r1, .L188+8
 3029 001a F8EEE77A 		fsitos	s15, s15
 3030 001e 0830     		adds	r0, r0, #8
 3031 0020 77EE877A 		fadds	s15, s15, s14
 3032 0024 93ED017A 		flds	s14, [r3, #4]
 3033 0028 CDED047A 		fsts	s15, [sp, #16]
 3034 002c D1ED007A 		flds	s15, [r1]	@ int
 3035 0030 0D49     		ldr	r1, .L188+12
 3036 0032 F8EEE77A 		fsitos	s15, s15
 3037 0036 05AB     		add	r3, sp, #20
 3038 0038 77EE877A 		fadds	s15, s15, s14
 3039 003c 1044     		add	r0, r0, r2
 3040 003e 0093     		str	r3, [sp]
 3041 0040 0190     		str	r0, [sp, #4]
 3042 0042 0DF10F02 		add	r2, sp, #15
 3043              	.LVL306:
 3044 0046 0948     		ldr	r0, .L188+16
 3045 0048 CDED057A 		fsts	s15, [sp, #20]
 3046 004c 04AB     		add	r3, sp, #16
 3047 004e FFF7FEFF 		bl	pprz_msg_send_WP_MOVED.constprop.4
 3048              	.LVL307:
 3049              	.LBE72:
 497:firmwares/fixedwing/nav.c **** 
 3050              		.loc 1 497 0
 3051 0052 0020     		movs	r0, #0
 3052 0054 07B0     		add	sp, sp, #28
 3053              		.cfi_def_cfa_offset 4
 3054              		@ sp needed
 3055 0056 5DF804FB 		ldr	pc, [sp], #4
 3056              	.LVL308:
 3057              	.L189:
 3058 005a 00BF     		.align	2
 3059              	.L188:
 3060 005c 00000000 		.word	.LANCHOR5
 3061 0060 00000000 		.word	.LANCHOR6
 3062 0064 00000000 		.word	.LANCHOR7
 3063 0068 2C010000 		.word	uart1+300
 3064 006c 08010000 		.word	pprz_tp+264
 3065              		.cfi_endproc
 3066              	.LFE483:
 3068              		.section	.text.nav_init,"ax",%progbits
 3069              		.align	1
 3070              		.global	nav_init
 3071              		.thumb
 3072              		.thumb_func
 3074              	nav_init:
 3075              	.LFB487:
 523:firmwares/fixedwing/nav.c **** #endif
 524:firmwares/fixedwing/nav.c **** 
 525:firmwares/fixedwing/nav.c **** /**
 526:firmwares/fixedwing/nav.c ****  *  \brief Navigation Initialisation
 527:firmwares/fixedwing/nav.c ****  */
 528:firmwares/fixedwing/nav.c **** void nav_init(void)
 529:firmwares/fixedwing/nav.c **** {
 3076              		.loc 1 529 0
 3077              		.cfi_startproc
 3078              		@ args = 0, pretend = 0, frame = 0
 3079              		@ frame_needed = 0, uses_anonymous_args = 0
 530:firmwares/fixedwing/nav.c ****   nav_block = 0;
 3080              		.loc 1 530 0
 3081 0000 1A4A     		ldr	r2, .L191
 531:firmwares/fixedwing/nav.c ****   nav_stage = 0;
 532:firmwares/fixedwing/nav.c ****   ground_alt = GROUND_ALT;
 533:firmwares/fixedwing/nav.c ****   nav_glide_pitch_trim = NAV_GLIDE_PITCH_TRIM;
 534:firmwares/fixedwing/nav.c ****   nav_radius = DEFAULT_CIRCLE_RADIUS;
 535:firmwares/fixedwing/nav.c ****   nav_survey_shift = 2 * DEFAULT_CIRCLE_RADIUS;
 536:firmwares/fixedwing/nav.c ****   nav_mode = NAV_MODE_COURSE;
 537:firmwares/fixedwing/nav.c **** 
 538:firmwares/fixedwing/nav.c **** #ifdef NAV_GROUND_SPEED_PGAIN
 539:firmwares/fixedwing/nav.c ****   nav_ground_speed_pgain = ABS(NAV_GROUND_SPEED_PGAIN);
 540:firmwares/fixedwing/nav.c ****   nav_ground_speed_setpoint = NOMINAL_AIRSPEED;
 541:firmwares/fixedwing/nav.c **** #endif
 542:firmwares/fixedwing/nav.c **** 
 543:firmwares/fixedwing/nav.c **** #if PERIODIC_TELEMETRY
 544:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "NAVIGATION_REF", send_nav_ref);
 3082              		.loc 1 544 0
 3083 0002 1B49     		ldr	r1, .L191+4
 530:firmwares/fixedwing/nav.c ****   nav_block = 0;
 3084              		.loc 1 530 0
 3085 0004 0023     		movs	r3, #0
 529:firmwares/fixedwing/nav.c ****   nav_block = 0;
 3086              		.loc 1 529 0
 3087 0006 10B5     		push	{r4, lr}
 3088              		.cfi_def_cfa_offset 8
 3089              		.cfi_offset 4, -8
 3090              		.cfi_offset 14, -4
 530:firmwares/fixedwing/nav.c ****   nav_block = 0;
 3091              		.loc 1 530 0
 3092 0008 1370     		strb	r3, [r2]
 531:firmwares/fixedwing/nav.c ****   nav_stage = 0;
 3093              		.loc 1 531 0
 3094 000a 1A4A     		ldr	r2, .L191+8
 3095              		.loc 1 544 0
 3096 000c 1A4C     		ldr	r4, .L191+12
 531:firmwares/fixedwing/nav.c ****   nav_stage = 0;
 3097              		.loc 1 531 0
 3098 000e 1370     		strb	r3, [r2]
 532:firmwares/fixedwing/nav.c ****   nav_glide_pitch_trim = NAV_GLIDE_PITCH_TRIM;
 3099              		.loc 1 532 0
 3100 0010 1A4B     		ldr	r3, .L191+16
 3101 0012 1B4A     		ldr	r2, .L191+20
 3102 0014 1A60     		str	r2, [r3]	@ float
 533:firmwares/fixedwing/nav.c ****   nav_radius = DEFAULT_CIRCLE_RADIUS;
 3103              		.loc 1 533 0
 3104 0016 1B4B     		ldr	r3, .L191+24
 3105 0018 0022     		movs	r2, #0
 3106 001a 1A60     		str	r2, [r3]	@ float
 534:firmwares/fixedwing/nav.c ****   nav_survey_shift = 2 * DEFAULT_CIRCLE_RADIUS;
 3107              		.loc 1 534 0
 3108 001c 1A4B     		ldr	r3, .L191+28
 3109 001e 1B4A     		ldr	r2, .L191+32
 3110 0020 1A60     		str	r2, [r3]	@ float
 535:firmwares/fixedwing/nav.c ****   nav_mode = NAV_MODE_COURSE;
 3111              		.loc 1 535 0
 3112 0022 1B4B     		ldr	r3, .L191+36
 3113 0024 1B4A     		ldr	r2, .L191+40
 3114 0026 1A60     		str	r2, [r3]	@ float
 536:firmwares/fixedwing/nav.c **** 
 3115              		.loc 1 536 0
 3116 0028 1B4B     		ldr	r3, .L191+44
 3117 002a 0222     		movs	r2, #2
 3118 002c 1A60     		str	r2, [r3]
 3119              		.loc 1 544 0
 3120 002e 2046     		mov	r0, r4
 3121 0030 1A4A     		ldr	r2, .L191+48
 3122 0032 FFF7FEFF 		bl	register_periodic_telemetry
 3123              	.LVL309:
 545:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "NAVIGATION", send_nav);
 3124              		.loc 1 545 0
 3125 0036 2046     		mov	r0, r4
 3126 0038 1949     		ldr	r1, .L191+52
 3127 003a 1A4A     		ldr	r2, .L191+56
 3128 003c FFF7FEFF 		bl	register_periodic_telemetry
 3129              	.LVL310:
 546:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "WP_MOVED", send_wp_moved);
 3130              		.loc 1 546 0
 3131 0040 2046     		mov	r0, r4
 3132 0042 1949     		ldr	r1, .L191+60
 3133 0044 194A     		ldr	r2, .L191+64
 3134 0046 FFF7FEFF 		bl	register_periodic_telemetry
 3135              	.LVL311:
 547:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "CIRCLE", send_circle);
 3136              		.loc 1 547 0
 3137 004a 2046     		mov	r0, r4
 3138 004c 1849     		ldr	r1, .L191+68
 3139 004e 194A     		ldr	r2, .L191+72
 3140 0050 FFF7FEFF 		bl	register_periodic_telemetry
 3141              	.LVL312:
 548:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "SEGMENT", send_segment);
 3142              		.loc 1 548 0
 3143 0054 2046     		mov	r0, r4
 3144 0056 1849     		ldr	r1, .L191+76
 3145 0058 184A     		ldr	r2, .L191+80
 3146 005a FFF7FEFF 		bl	register_periodic_telemetry
 3147              	.LVL313:
 549:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "SURVEY", send_survey);
 3148              		.loc 1 549 0
 3149 005e 2046     		mov	r0, r4
 3150 0060 1749     		ldr	r1, .L191+84
 3151 0062 184A     		ldr	r2, .L191+88
 550:firmwares/fixedwing/nav.c **** #endif
 551:firmwares/fixedwing/nav.c **** }
 3152              		.loc 1 551 0
 3153 0064 BDE81040 		pop	{r4, lr}
 3154              		.cfi_restore 14
 3155              		.cfi_restore 4
 3156              		.cfi_def_cfa_offset 0
 549:firmwares/fixedwing/nav.c ****   register_periodic_telemetry(DefaultPeriodic, "SURVEY", send_survey);
 3157              		.loc 1 549 0
 3158 0068 FFF7FEBF 		b	register_periodic_telemetry
 3159              	.LVL314:
 3160              	.L192:
 3161              		.align	2
 3162              	.L191:
 3163 006c 00000000 		.word	nav_block
 3164 0070 14000000 		.word	.LC2
 3165 0074 00000000 		.word	nav_stage
 3166 0078 00000000 		.word	pprz_telemetry
 3167 007c 00000000 		.word	.LANCHOR12
 3168 0080 00004842 		.word	1112014848
 3169 0084 00000000 		.word	.LANCHOR45
 3170 0088 00000000 		.word	.LANCHOR46
 3171 008c 00008C42 		.word	1116471296
 3172 0090 00000000 		.word	.LANCHOR47
 3173 0094 00000C43 		.word	1124859904
 3174 0098 00000000 		.word	.LANCHOR33
 3175 009c 00000000 		.word	send_nav_ref
 3176 00a0 09000000 		.word	.LC1
 3177 00a4 00000000 		.word	send_nav
 3178 00a8 00000000 		.word	.LC0
 3179 00ac 00000000 		.word	send_wp_moved
 3180 00b0 32000000 		.word	.LC5
 3181 00b4 00000000 		.word	send_circle
 3182 00b8 2A000000 		.word	.LC4
 3183 00bc 00000000 		.word	send_segment
 3184 00c0 23000000 		.word	.LC3
 3185 00c4 00000000 		.word	send_survey
 3186              		.cfi_endproc
 3187              	.LFE487:
 3189              		.section	.text.nav_without_gps,"ax",%progbits
 3190              		.align	1
 3191              		.global	nav_without_gps
 3192              		.thumb
 3193              		.thumb_func
 3195              	nav_without_gps:
 3196              	.LFB488:
 552:firmwares/fixedwing/nav.c **** 
 553:firmwares/fixedwing/nav.c **** /**
 554:firmwares/fixedwing/nav.c ****  *  \brief Failsafe navigation without position estimation
 555:firmwares/fixedwing/nav.c ****  *
 556:firmwares/fixedwing/nav.c ****  * Just set attitude and throttle to FAILSAFE values
 557:firmwares/fixedwing/nav.c ****  * to prevent the plane from crashing.
 558:firmwares/fixedwing/nav.c ****  */
 559:firmwares/fixedwing/nav.c **** void nav_without_gps(void)
 560:firmwares/fixedwing/nav.c **** {
 3197              		.loc 1 560 0
 3198              		.cfi_startproc
 3199              		@ args = 0, pretend = 0, frame = 0
 3200              		@ frame_needed = 0, uses_anonymous_args = 0
 3201              		@ link register save eliminated.
 561:firmwares/fixedwing/nav.c ****   lateral_mode = LATERAL_MODE_ROLL;
 3202              		.loc 1 561 0
 3203 0000 084B     		ldr	r3, .L194
 3204 0002 0222     		movs	r2, #2
 3205 0004 1A70     		strb	r2, [r3]
 562:firmwares/fixedwing/nav.c ****   v_ctl_mode = V_CTL_MODE_AUTO_THROTTLE;
 3206              		.loc 1 562 0
 3207 0006 084B     		ldr	r3, .L194+4
 3208 0008 0122     		movs	r2, #1
 3209 000a 1A70     		strb	r2, [r3]
 563:firmwares/fixedwing/nav.c **** 
 564:firmwares/fixedwing/nav.c **** #ifdef SECTION_FAILSAFE
 565:firmwares/fixedwing/nav.c ****   h_ctl_roll_setpoint = FAILSAFE_DEFAULT_ROLL;
 3210              		.loc 1 565 0
 3211 000c 074B     		ldr	r3, .L194+8
 3212 000e 084A     		ldr	r2, .L194+12
 3213 0010 1A60     		str	r2, [r3]	@ float
 566:firmwares/fixedwing/nav.c ****   nav_pitch = FAILSAFE_DEFAULT_PITCH;
 3214              		.loc 1 566 0
 3215 0012 084B     		ldr	r3, .L194+16
 3216 0014 4FF07C52 		mov	r2, #1056964608
 3217 0018 1A60     		str	r2, [r3]	@ float
 567:firmwares/fixedwing/nav.c ****   nav_throttle_setpoint = TRIM_UPPRZ((FAILSAFE_DEFAULT_THROTTLE) * MAX_PPRZ);
 3218              		.loc 1 567 0
 3219 001a 074B     		ldr	r3, .L194+20
 3220 001c 4FF43462 		mov	r2, #2880
 3221 0020 1A80     		strh	r2, [r3]	@ movhi
 3222 0022 7047     		bx	lr
 3223              	.L195:
 3224              		.align	2
 3225              	.L194:
 3226 0024 00000000 		.word	lateral_mode
 3227 0028 00000000 		.word	v_ctl_mode
 3228 002c 00000000 		.word	h_ctl_roll_setpoint
 3229 0030 9A99993E 		.word	1050253722
 3230 0034 00000000 		.word	.LANCHOR44
 3231 0038 00000000 		.word	.LANCHOR48
 3232              		.cfi_endproc
 3233              	.LFE488:
 3235              		.section	.text.nav_eight_init,"ax",%progbits
 3236              		.align	1
 3237              		.global	nav_eight_init
 3238              		.thumb
 3239              		.thumb_func
 3241              	nav_eight_init:
 3242              	.LFB489:
 568:firmwares/fixedwing/nav.c **** #else
 569:firmwares/fixedwing/nav.c ****   h_ctl_roll_setpoint = 0;
 570:firmwares/fixedwing/nav.c ****   nav_pitch = 0;
 571:firmwares/fixedwing/nav.c ****   nav_throttle_setpoint = TRIM_UPPRZ((V_CTL_AUTO_THROTTLE_NOMINAL_CRUISE_THROTTLE) * MAX_PPRZ);
 572:firmwares/fixedwing/nav.c **** #endif
 573:firmwares/fixedwing/nav.c **** }
 574:firmwares/fixedwing/nav.c **** 
 575:firmwares/fixedwing/nav.c **** 
 576:firmwares/fixedwing/nav.c **** /**************** 8 Navigation **********************************************/
 577:firmwares/fixedwing/nav.c **** 
 578:firmwares/fixedwing/nav.c **** 
 579:firmwares/fixedwing/nav.c **** enum eight_status { R1T, RT2, C2, R2T, RT1, C1 };
 580:firmwares/fixedwing/nav.c **** 
 581:firmwares/fixedwing/nav.c **** static enum eight_status eight_status;
 582:firmwares/fixedwing/nav.c **** void nav_eight_init(void)
 583:firmwares/fixedwing/nav.c **** {
 3243              		.loc 1 583 0
 3244              		.cfi_startproc
 3245              		@ args = 0, pretend = 0, frame = 0
 3246              		@ frame_needed = 0, uses_anonymous_args = 0
 3247              		@ link register save eliminated.
 584:firmwares/fixedwing/nav.c ****   eight_status = C1;
 3248              		.loc 1 584 0
 3249 0000 014B     		ldr	r3, .L197
 3250 0002 0522     		movs	r2, #5
 3251 0004 1A70     		strb	r2, [r3]
 3252 0006 7047     		bx	lr
 3253              	.L198:
 3254              		.align	2
 3255              	.L197:
 3256 0008 00000000 		.word	.LANCHOR49
 3257              		.cfi_endproc
 3258              	.LFE489:
 3260              		.section	.text.nav_eight,"ax",%progbits
 3261              		.align	1
 3262              		.global	nav_eight
 3263              		.thumb
 3264              		.thumb_func
 3266              	nav_eight:
 3267              	.LFB490:
 585:firmwares/fixedwing/nav.c **** }
 586:firmwares/fixedwing/nav.c **** 
 587:firmwares/fixedwing/nav.c **** /** Navigation along a figure 8. The cross center is defined by the waypoint
 588:firmwares/fixedwing/nav.c ****     [target], the center of one of the circles is defined by [c1]. Altitude is
 589:firmwares/fixedwing/nav.c ****     given by [target].
 590:firmwares/fixedwing/nav.c ****     The navigation goes through 6 states: C1 (circle around [c1]), R1T, RT2
 591:firmwares/fixedwing/nav.c ****     (route from circle 1 to circle 2 over [target]), C2 and R2T, RT1.
 592:firmwares/fixedwing/nav.c ****     If necessary, the [c1] waypoint is moved in the direction of [target]
 593:firmwares/fixedwing/nav.c ****     to be not far than [2*radius].
 594:firmwares/fixedwing/nav.c **** */
 595:firmwares/fixedwing/nav.c **** void nav_eight(uint8_t target, uint8_t c1, float radius)
 596:firmwares/fixedwing/nav.c **** {
 3268              		.loc 1 596 0
 3269              		.cfi_startproc
 3270              		@ args = 0, pretend = 0, frame = 0
 3271              		@ frame_needed = 0, uses_anonymous_args = 0
 3272              	.LVL315:
 3273 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3274              		.cfi_def_cfa_offset 24
 3275              		.cfi_offset 4, -24
 3276              		.cfi_offset 5, -20
 3277              		.cfi_offset 6, -16
 3278              		.cfi_offset 7, -12
 3279              		.cfi_offset 8, -8
 3280              		.cfi_offset 14, -4
 597:firmwares/fixedwing/nav.c ****   float aradius = fabs(radius);
 598:firmwares/fixedwing/nav.c ****   float alt = waypoints[target].a;
 3281              		.loc 1 598 0
 3282 0004 D84D     		ldr	r5, .L275+24
 3283 0006 0C24     		movs	r4, #12
 3284 0008 04FB0058 		mla	r8, r4, r0, r5
 599:firmwares/fixedwing/nav.c ****   waypoints[c1].a = alt;
 3285              		.loc 1 599 0
 3286 000c 04FB0154 		mla	r4, r4, r1, r5
 596:firmwares/fixedwing/nav.c ****   float aradius = fabs(radius);
 3287              		.loc 1 596 0
 3288 0010 2DED0C8B 		fstmfdd	sp!, {d8, d9, d10, d11, d12, d13}
 3289              		.cfi_def_cfa_offset 72
 3290              		.cfi_offset 80, -72
 3291              		.cfi_offset 81, -68
 3292              		.cfi_offset 82, -64
 3293              		.cfi_offset 83, -60
 3294              		.cfi_offset 84, -56
 3295              		.cfi_offset 85, -52
 3296              		.cfi_offset 86, -48
 3297              		.cfi_offset 87, -44
 3298              		.cfi_offset 88, -40
 3299              		.cfi_offset 89, -36
 3300              		.cfi_offset 90, -32
 3301              		.cfi_offset 91, -28
 600:firmwares/fixedwing/nav.c **** 
 601:firmwares/fixedwing/nav.c ****   float target_c1_x = waypoints[c1].x - waypoints[target].x;
 3302              		.loc 1 601 0
 3303 0014 D4ED007A 		flds	s15, [r4]
 3304 0018 98ED008A 		flds	s16, [r8]
 602:firmwares/fixedwing/nav.c ****   float target_c1_y = waypoints[c1].y - waypoints[target].y;
 3305              		.loc 1 602 0
 3306 001c 98ED017A 		flds	s14, [r8, #4]
 598:firmwares/fixedwing/nav.c ****   waypoints[c1].a = alt;
 3307              		.loc 1 598 0
 3308 0020 D8F80830 		ldr	r3, [r8, #8]	@ float
 599:firmwares/fixedwing/nav.c **** 
 3309              		.loc 1 599 0
 3310 0024 A360     		str	r3, [r4, #8]	@ float
 601:firmwares/fixedwing/nav.c ****   float target_c1_y = waypoints[c1].y - waypoints[target].y;
 3311              		.loc 1 601 0
 3312 0026 37EEC88A 		fsubs	s16, s15, s16
 3313              		.loc 1 602 0
 3314 002a D4ED017A 		flds	s15, [r4, #4]
 3315 002e 77EEC78A 		fsubs	s17, s15, s14
 596:firmwares/fixedwing/nav.c ****   float aradius = fabs(radius);
 3316              		.loc 1 596 0
 3317 0032 82B0     		sub	sp, sp, #8
 3318              		.cfi_def_cfa_offset 80
 603:firmwares/fixedwing/nav.c ****   float d = sqrtf(target_c1_x * target_c1_x + target_c1_y * target_c1_y);
 3319              		.loc 1 603 0
 3320 0034 68EEA87A 		fmuls	s15, s17, s17
 596:firmwares/fixedwing/nav.c ****   float aradius = fabs(radius);
 3321              		.loc 1 596 0
 3322 0038 0646     		mov	r6, r0
 3323              		.loc 1 603 0
 3324 003a E8EE087A 		vfma.f32	s15, s16, s16
 596:firmwares/fixedwing/nav.c ****   float aradius = fabs(radius);
 3325              		.loc 1 596 0
 3326 003e 0F46     		mov	r7, r1
 3327 0040 09EE102A 		fmsr	s18, r2
 3328              		.loc 1 603 0
 3329 0044 17EE900A 		fmrs	r0, s15
 3330              	.LVL316:
 3331 0048 FFF7FEFF 		bl	sqrtf
 3332              	.LVL317:
 3333 004c 06EE900A 		fmsr	s13, r0
 604:firmwares/fixedwing/nav.c ****   d = Max(d, 1.); /* To prevent a division by zero */
 3334              		.loc 1 604 0
 3335 0050 F7EE007A 		fconsts	s15, #112
 3336 0054 F4EEE76A 		fcmpes	s13, s15
 597:firmwares/fixedwing/nav.c ****   float alt = waypoints[target].a;
 3337              		.loc 1 597 0
 3338 0058 F0EEC99A 		fabss	s19, s18
 3339              	.LVL318:
 3340              		.loc 1 604 0
 3341 005c F1EE10FA 		fmstat
 605:firmwares/fixedwing/nav.c **** 
 606:firmwares/fixedwing/nav.c ****   /* Unit vector from target to c1 */
 607:firmwares/fixedwing/nav.c ****   float u_x = target_c1_x / d;
 608:firmwares/fixedwing/nav.c ****   float u_y = target_c1_y / d;
 609:firmwares/fixedwing/nav.c **** 
 610:firmwares/fixedwing/nav.c ****   /* Move [c1] closer if needed */
 611:firmwares/fixedwing/nav.c ****   if (d > 2 * aradius) {
 3342              		.loc 1 611 0
 3343 0060 39EEA96A 		fadds	s12, s19, s19
 604:firmwares/fixedwing/nav.c **** 
 3344              		.loc 1 604 0
 3345 0064 D8BF     		it	le
 3346 0066 F0EE676A 		fcpysle	s13, s15
 3347              	.LVL319:
 3348              		.loc 1 611 0
 3349 006a F4EEC66A 		fcmpes	s13, s12
 3350 006e F1EE10FA 		fmstat
 607:firmwares/fixedwing/nav.c ****   float u_y = target_c1_y / d;
 3351              		.loc 1 607 0
 3352 0072 C8EE267A 		fdivs	s15, s16, s13
 3353              	.LVL320:
 608:firmwares/fixedwing/nav.c **** 
 3354              		.loc 1 608 0
 3355 0076 88EEA67A 		fdivs	s14, s17, s13
 3356              	.LVL321:
 3357              		.loc 1 611 0
 3358 007a 0DDD     		ble	.L202
 3359              	.LVL322:
 612:firmwares/fixedwing/nav.c ****     d = 2 * aradius;
 613:firmwares/fixedwing/nav.c ****     waypoints[c1].x = waypoints[target].x + d * u_x;
 3360              		.loc 1 613 0
 3361 007c D8ED006A 		flds	s13, [r8]
 3362 0080 E6EE276A 		vfma.f32	s13, s12, s15
 3363 0084 C4ED006A 		fsts	s13, [r4]
 614:firmwares/fixedwing/nav.c ****     waypoints[c1].y = waypoints[target].y + d * u_y;
 3364              		.loc 1 614 0
 3365 0088 D8ED016A 		flds	s13, [r8, #4]
 3366 008c E6EE076A 		vfma.f32	s13, s12, s14
 3367 0090 C4ED016A 		fsts	s13, [r4, #4]
 612:firmwares/fixedwing/nav.c ****     d = 2 * aradius;
 3368              		.loc 1 612 0
 3369 0094 F0EE466A 		fcpys	s13, s12
 3370              	.LVL323:
 3371              	.L202:
 615:firmwares/fixedwing/nav.c ****   }
 616:firmwares/fixedwing/nav.c **** 
 617:firmwares/fixedwing/nav.c ****   /* The other center */
 618:firmwares/fixedwing/nav.c ****   struct point c2 = {
 619:firmwares/fixedwing/nav.c ****     waypoints[target].x - d * u_x,
 3372              		.loc 1 619 0
 3373 0098 0C23     		movs	r3, #12
 3374 009a 03FB0652 		mla	r2, r3, r6, r5
 3375 009e D2ED00CA 		flds	s25, [r2]
 620:firmwares/fixedwing/nav.c ****     waypoints[target].y - d * u_y,
 3376              		.loc 1 620 0
 3377 00a2 92ED01CA 		flds	s24, [r2, #4]
 3378 00a6 F1EE666A 		fnegs	s13, s13
 3379              	.LVL324:
 619:firmwares/fixedwing/nav.c ****     waypoints[target].y - d * u_y,
 3380              		.loc 1 619 0
 3381 00aa E6EEA7CA 		vfma.f32	s25, s13, s15
 3382              	.LVL325:
 621:firmwares/fixedwing/nav.c ****     alt
 622:firmwares/fixedwing/nav.c ****   };
 623:firmwares/fixedwing/nav.c **** 
 624:firmwares/fixedwing/nav.c ****   struct point c1_in = {
 625:firmwares/fixedwing/nav.c ****     waypoints[c1].x + radius * -u_y,
 3383              		.loc 1 625 0
 3384 00ae 03FB0753 		mla	r3, r3, r7, r5
 620:firmwares/fixedwing/nav.c ****     alt
 3385              		.loc 1 620 0
 3386 00b2 A6EE87CA 		vfma.f32	s24, s13, s14
 3387              	.LVL326:
 3388              		.loc 1 625 0
 3389 00b6 D3ED00BA 		flds	s23, [r3]
 626:firmwares/fixedwing/nav.c ****     waypoints[c1].y + radius * u_x,
 3390              		.loc 1 626 0
 3391 00ba 93ED018A 		flds	s16, [r3, #4]
 3392              	.LVL327:
 625:firmwares/fixedwing/nav.c ****     waypoints[c1].y + radius * u_x,
 3393              		.loc 1 625 0
 3394 00be F1EE476A 		fnegs	s13, s14
 627:firmwares/fixedwing/nav.c ****     alt
 628:firmwares/fixedwing/nav.c ****   };
 629:firmwares/fixedwing/nav.c ****   struct point c1_out = {
 630:firmwares/fixedwing/nav.c ****     waypoints[c1].x - radius * -u_y,
 631:firmwares/fixedwing/nav.c ****     waypoints[c1].y - radius * u_x,
 632:firmwares/fixedwing/nav.c ****     alt
 633:firmwares/fixedwing/nav.c ****   };
 634:firmwares/fixedwing/nav.c **** 
 635:firmwares/fixedwing/nav.c ****   struct point c2_in = {
 636:firmwares/fixedwing/nav.c ****     c2.x + radius * -u_y,
 637:firmwares/fixedwing/nav.c ****     c2.y + radius * u_x,
 638:firmwares/fixedwing/nav.c ****     alt
 639:firmwares/fixedwing/nav.c ****   };
 640:firmwares/fixedwing/nav.c ****   struct point c2_out = {
 641:firmwares/fixedwing/nav.c ****     c2.x - radius * -u_y,
 642:firmwares/fixedwing/nav.c ****     c2.y - radius * u_x,
 643:firmwares/fixedwing/nav.c ****     alt
 644:firmwares/fixedwing/nav.c ****   };
 645:firmwares/fixedwing/nav.c **** 
 646:firmwares/fixedwing/nav.c ****   float qdr_out = M_PI - atan2f(u_y, u_x);
 3395              		.loc 1 646 0
 3396 00c2 17EE100A 		fmrs	r0, s14
 3397 00c6 17EE901A 		fmrs	r1, s15
 625:firmwares/fixedwing/nav.c ****     waypoints[c1].y + radius * u_x,
 3398              		.loc 1 625 0
 3399 00ca F0EE6BDA 		fcpys	s27, s23
 626:firmwares/fixedwing/nav.c ****     alt
 3400              		.loc 1 626 0
 3401 00ce B0EE48DA 		fcpys	s26, s16
 3402 00d2 B1EE49AA 		fnegs	s20, s18
 636:firmwares/fixedwing/nav.c ****     c2.y + radius * u_x,
 3403              		.loc 1 636 0
 3404 00d6 B0EE6CBA 		fcpys	s22, s25
 637:firmwares/fixedwing/nav.c ****     alt
 3405              		.loc 1 637 0
 3406 00da F0EE4CAA 		fcpys	s21, s24
 641:firmwares/fixedwing/nav.c ****     c2.y - radius * u_x,
 3407              		.loc 1 641 0
 3408 00de F0EE6C9A 		fcpys	s19, s25
 3409              	.LVL328:
 642:firmwares/fixedwing/nav.c ****     alt
 3410              		.loc 1 642 0
 3411 00e2 F0EE4C8A 		fcpys	s17, s24
 3412              	.LVL329:
 625:firmwares/fixedwing/nav.c ****     waypoints[c1].y + radius * u_x,
 3413              		.loc 1 625 0
 3414 00e6 E9EE26DA 		vfma.f32	s27, s18, s13
 3415              	.LVL330:
 626:firmwares/fixedwing/nav.c ****     alt
 3416              		.loc 1 626 0
 3417 00ea A9EE27DA 		vfma.f32	s26, s18, s15
 3418              	.LVL331:
 630:firmwares/fixedwing/nav.c ****     waypoints[c1].y - radius * u_x,
 3419              		.loc 1 630 0
 3420 00ee E9EE07BA 		vfma.f32	s23, s18, s14
 3421              	.LVL332:
 631:firmwares/fixedwing/nav.c ****     alt
 3422              		.loc 1 631 0
 3423 00f2 AAEE278A 		vfma.f32	s16, s20, s15
 3424              	.LVL333:
 636:firmwares/fixedwing/nav.c ****     c2.y + radius * u_x,
 3425              		.loc 1 636 0
 3426 00f6 A9EE26BA 		vfma.f32	s22, s18, s13
 3427              	.LVL334:
 637:firmwares/fixedwing/nav.c ****     alt
 3428              		.loc 1 637 0
 3429 00fa E9EE27AA 		vfma.f32	s21, s18, s15
 3430              	.LVL335:
 641:firmwares/fixedwing/nav.c ****     c2.y - radius * u_x,
 3431              		.loc 1 641 0
 3432 00fe E9EE079A 		vfma.f32	s19, s18, s14
 3433              	.LVL336:
 642:firmwares/fixedwing/nav.c ****     alt
 3434              		.loc 1 642 0
 3435 0102 EAEE278A 		vfma.f32	s17, s20, s15
 3436              	.LVL337:
 3437              		.loc 1 646 0
 3438 0106 FFF7FEFF 		bl	atan2f
 3439              	.LVL338:
 3440 010a FFF7FEFF 		bl	__aeabi_f2d
 3441              	.LVL339:
 3442 010e 0246     		mov	r2, r0
 3443 0110 0B46     		mov	r3, r1
 3444 0112 8FA1     		adr	r1, .L275
 3445 0114 D1E90001 		ldrd	r0, [r1]
 3446 0118 FFF7FEFF 		bl	__aeabi_dsub
 3447              	.LVL340:
 3448 011c FFF7FEFF 		bl	__aeabi_d2f
 3449              	.LVL341:
 647:firmwares/fixedwing/nav.c ****   if (radius < 0) {
 3450              		.loc 1 647 0
 3451 0120 B5EEC09A 		fcmpezs	s18
 3452 0124 F1EE10FA 		fmstat
 646:firmwares/fixedwing/nav.c ****   if (radius < 0) {
 3453              		.loc 1 646 0
 3454 0128 8046     		mov	r8, r0	@ float
 3455              	.LVL342:
 3456              		.loc 1 647 0
 3457 012a 09D5     		bpl	.L204
 648:firmwares/fixedwing/nav.c ****     qdr_out += M_PI;
 3458              		.loc 1 648 0
 3459 012c FFF7FEFF 		bl	__aeabi_f2d
 3460              	.LVL343:
 3461 0130 87A3     		adr	r3, .L275
 3462 0132 D3E90023 		ldrd	r2, [r3]
 3463 0136 FFF7FEFF 		bl	__aeabi_dadd
 3464              	.LVL344:
 3465 013a FFF7FEFF 		bl	__aeabi_d2f
 3466              	.LVL345:
 3467 013e 8046     		mov	r8, r0	@ float
 3468              	.LVL346:
 3469              	.L204:
 649:firmwares/fixedwing/nav.c ****   }
 650:firmwares/fixedwing/nav.c **** 
 651:firmwares/fixedwing/nav.c ****   switch (eight_status) {
 3470              		.loc 1 651 0
 3471 0140 8A4C     		ldr	r4, .L275+28
 3472 0142 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 3473 0144 052B     		cmp	r3, #5
 3474 0146 00F2A381 		bhi	.L199
 3475 014a DFE813F0 		tbh	[pc, r3, lsl #1]
 3476              	.L208:
 3477 014e 8D00     		.2byte	(.L207-.L208)/2
 3478 0150 A900     		.2byte	(.L209-.L208)/2
 3479 0152 C400     		.2byte	(.L210-.L208)/2
 3480 0154 6301     		.2byte	(.L211-.L208)/2
 3481 0156 7D01     		.2byte	(.L212-.L208)/2
 3482 0158 0600     		.2byte	(.L213-.L208)/2
 3483              		.p2align 1
 3484              	.L213:
 652:firmwares/fixedwing/nav.c ****     case C1 :
 653:firmwares/fixedwing/nav.c ****       NavCircleWaypoint(c1, radius);
 3485              		.loc 1 653 0
 3486 015a 0C23     		movs	r3, #12
 3487 015c 03FB0755 		mla	r5, r3, r7, r5
 3488 0160 19EE102A 		fmrs	r2, s18
 3489 0164 2868     		ldr	r0, [r5]	@ float
 3490              	.LVL347:
 3491 0166 6968     		ldr	r1, [r5, #4]	@ float
 3492 0168 FFF7FEFF 		bl	nav_circle_XY
 3493              	.LVL348:
 3494              	.LBB73:
 654:firmwares/fixedwing/nav.c ****       if (NavQdrCloseTo(DegOfRad(qdr_out) - 10)) {
 3495              		.loc 1 654 0
 3496 016c 4046     		mov	r0, r8	@ float
 3497 016e FFF7FEFF 		bl	__aeabi_f2d
 3498              	.LVL349:
 3499 0172 79A3     		adr	r3, .L275+8
 3500 0174 D3E90023 		ldrd	r2, [r3]
 3501 0178 FFF7FEFF 		bl	__aeabi_dmul
 3502              	.LVL350:
 3503 017c 0022     		movs	r2, #0
 3504 017e 7C4B     		ldr	r3, .L275+32
 3505 0180 FFF7FEFF 		bl	__aeabi_dsub
 3506              	.LVL351:
 3507              	.LBB74:
 3508 0184 7B4B     		ldr	r3, .L275+36
 3509              	.LBE74:
 3510 0186 0646     		mov	r6, r0
 3511              	.LBB76:
 3512 0188 1868     		ldr	r0, [r3]	@ float
 3513              	.LBE76:
 3514 018a 0F46     		mov	r7, r1
 3515              	.LBB77:
 3516 018c FFF7FEFF 		bl	__aeabi_f2d
 3517              	.LVL352:
 3518 0190 0246     		mov	r2, r0
 3519 0192 0B46     		mov	r3, r1
 3520 0194 72A1     		adr	r1, .L275+16
 3521 0196 D1E90001 		ldrd	r0, [r1]
 3522 019a FFF7FEFF 		bl	__aeabi_dsub
 3523              	.LVL353:
 3524 019e 6EA3     		adr	r3, .L275+8
 3525 01a0 D3E90023 		ldrd	r2, [r3]
 3526 01a4 FFF7FEFF 		bl	__aeabi_dmul
 3527              	.LVL354:
 3528 01a8 FFF7FEFF 		bl	__aeabi_d2f
 3529              	.LVL355:
 3530 01ac 07EE900A 		fmsr	s15, r0
 3531              	.LVL356:
 3532              	.LBB75:
 3533 01b0 0022     		movs	r2, #0
 3534              	.LVL357:
 3535              	.L214:
 3536              		.loc 1 654 0 is_stmt 0 discriminator 1
 3537 01b2 F5EEC07A 		fcmpezs	s15
 3538 01b6 F1EE10FA 		fmstat
 3539 01ba D3B2     		uxtb	r3, r2
 3540              	.LVL358:
 3541 01bc 9FED6F8A 		flds	s16, .L275+44
 3542 01c0 10D5     		bpl	.L216
 3543              	.LVL359:
 3544 01c2 0132     		adds	r2, r2, #1
 3545              	.LVL360:
 3546              		.loc 1 654 0 discriminator 3
 3547 01c4 B2F5807F 		cmp	r2, #256
 3548 01c8 02D0     		beq	.L269
 3549              	.LVL361:
 3550              		.loc 1 654 0 discriminator 4
 3551 01ca 77EE887A 		fadds	s15, s15, s16
 3552              	.LVL362:
 3553 01ce F0E7     		b	.L214
 3554              	.LVL363:
 3555              	.L269:
 3556 01d0 0023     		movs	r3, #0
 3557              	.LVL364:
 3558 01d2 07E0     		b	.L216
 3559              	.LVL365:
 3560              	.L219:
 3561              		.loc 1 654 0 discriminator 6
 3562 01d4 0133     		adds	r3, r3, #1
 3563              	.LVL366:
 3564 01d6 13F0FF03 		ands	r3, r3, #255
 3565              	.LVL367:
 3566 01da 08D0     		beq	.L222
 3567              		.loc 1 654 0 discriminator 8
 3568 01dc 9FED677A 		flds	s14, .L275+44
 3569 01e0 77EEC77A 		fsubs	s15, s15, s14
 3570              	.LVL368:
 3571              	.L216:
 3572              		.loc 1 654 0 discriminator 5
 3573 01e4 F4EEC87A 		fcmpes	s15, s16
 3574 01e8 F1EE10FA 		fmstat
 3575 01ec F2DA     		bge	.L219
 3576              	.LVL369:
 3577              	.L222:
 3578              	.LBE75:
 3579              	.LBE77:
 3580              		.loc 1 654 0
 3581 01ee 17EE900A 		fmrs	r0, s15
 3582 01f2 FFF7FEFF 		bl	__aeabi_f2d
 3583              	.LVL370:
 3584 01f6 0246     		mov	r2, r0
 3585 01f8 0B46     		mov	r3, r1
 3586 01fa 3046     		mov	r0, r6
 3587 01fc 3946     		mov	r1, r7
 3588 01fe FFF7FEFF 		bl	__aeabi_dsub
 3589              	.LVL371:
 3590 0202 FFF7FEFF 		bl	__aeabi_d2f
 3591              	.LVL372:
 3592              	.LBB78:
 3593 0206 0022     		movs	r2, #0
 3594              	.LBE78:
 3595 0208 07EE900A 		fmsr	s15, r0
 3596              	.LVL373:
 3597              	.LBB79:
 3598 020c 05E0     		b	.L220
 3599              	.LVL374:
 3600              	.L271:
 3601 020e 0132     		adds	r2, r2, #1
 3602              	.LVL375:
 3603              		.loc 1 654 0 discriminator 12
 3604 0210 B2F5807F 		cmp	r2, #256
 3605 0214 08D0     		beq	.L270
 3606              	.LVL376:
 3607              		.loc 1 654 0 discriminator 13
 3608 0216 77EE887A 		fadds	s15, s15, s16
 3609              	.LVL377:
 3610              	.L220:
 3611              		.loc 1 654 0 discriminator 10
 3612 021a F5EEC07A 		fcmpezs	s15
 3613 021e F1EE10FA 		fmstat
 3614 0222 D3B2     		uxtb	r3, r2
 3615              	.LVL378:
 3616 0224 F3D4     		bmi	.L271
 3617 0226 09E0     		b	.L224
 3618              	.LVL379:
 3619              	.L270:
 3620 0228 0023     		movs	r3, #0
 3621              	.LVL380:
 3622 022a 07E0     		b	.L224
 3623              	.LVL381:
 3624              	.L227:
 3625              		.loc 1 654 0 discriminator 15
 3626 022c 0133     		adds	r3, r3, #1
 3627              	.LVL382:
 3628 022e 13F0FF03 		ands	r3, r3, #255
 3629              	.LVL383:
 3630 0232 08D0     		beq	.L231
 3631              		.loc 1 654 0 discriminator 17
 3632 0234 9FED517A 		flds	s14, .L275+44
 3633 0238 77EEC77A 		fsubs	s15, s15, s14
 3634              	.LVL384:
 3635              	.L224:
 3636              		.loc 1 654 0 discriminator 14
 3637 023c F4EEC87A 		fcmpes	s15, s16
 3638 0240 F1EE10FA 		fmstat
 3639 0244 F2DA     		bge	.L227
 3640              	.LVL385:
 3641              	.L231:
 3642              	.LBE79:
 3643              		.loc 1 654 0
 3644 0246 9FED4E7A 		flds	s14, .L275+48
 3645 024a F4EEC77A 		fcmpes	s15, s14
 3646 024e F1EE10FA 		fmstat
 3647 0252 00F31281 		bgt	.L228
 3648              		.loc 1 654 0 discriminator 20
 3649 0256 B2EE047A 		fconsts	s14, #36
 3650 025a F4EEC77A 		fcmpes	s15, s14
 3651 025e F1EE10FA 		fmstat
 3652 0262 00F10A81 		bmi	.L228
 3653 0266 13E1     		b	.L199
 3654              	.LVL386:
 3655              	.L207:
 3656              	.LBE73:
 655:firmwares/fixedwing/nav.c ****         eight_status = R1T;
 656:firmwares/fixedwing/nav.c ****         InitStage();
 657:firmwares/fixedwing/nav.c ****       }
 658:firmwares/fixedwing/nav.c ****       return;
 659:firmwares/fixedwing/nav.c **** 
 660:firmwares/fixedwing/nav.c ****     case R1T:
 661:firmwares/fixedwing/nav.c ****       nav_route_xy(c1_out.x, c1_out.y, c2_in.x, c2_in.y);
 3657              		.loc 1 661 0 is_stmt 1
 3658 0268 1BEE900A 		fmrs	r0, s23
 3659              	.LVL387:
 3660 026c 18EE101A 		fmrs	r1, s16
 3661 0270 1BEE102A 		fmrs	r2, s22
 3662 0274 1AEE903A 		fmrs	r3, s21
 3663 0278 FFF7FEFF 		bl	nav_route_xy
 3664              	.LVL388:
 662:firmwares/fixedwing/nav.c ****       if (nav_approaching_xy(waypoints[target].x, waypoints[target].y, c1_out.x, c1_out.y, 0)) {
 3665              		.loc 1 662 0
 3666 027c 0C23     		movs	r3, #12
 3667 027e 03FB0655 		mla	r5, r3, r6, r5
 3668 0282 0023     		movs	r3, #0
 3669 0284 0093     		str	r3, [sp]	@ float
 3670 0286 2868     		ldr	r0, [r5]	@ float
 3671 0288 6968     		ldr	r1, [r5, #4]	@ float
 3672 028a 1BEE902A 		fmrs	r2, s23
 3673 028e 18EE103A 		fmrs	r3, s16
 3674 0292 FFF7FEFF 		bl	nav_approaching_xy
 3675              	.LVL389:
 3676 0296 0028     		cmp	r0, #0
 3677 0298 00F0FA80 		beq	.L199
 663:firmwares/fixedwing/nav.c ****         eight_status = RT2;
 3678              		.loc 1 663 0
 3679 029c 0123     		movs	r3, #1
 3680 029e EFE0     		b	.L268
 3681              	.LVL390:
 3682              	.L209:
 664:firmwares/fixedwing/nav.c ****         InitStage();
 665:firmwares/fixedwing/nav.c ****       }
 666:firmwares/fixedwing/nav.c ****       return;
 667:firmwares/fixedwing/nav.c **** 
 668:firmwares/fixedwing/nav.c ****     case RT2:
 669:firmwares/fixedwing/nav.c ****       nav_route_xy(c1_out.x, c1_out.y, c2_in.x, c2_in.y);
 3683              		.loc 1 669 0
 3684 02a0 1BEE900A 		fmrs	r0, s23
 3685              	.LVL391:
 3686 02a4 18EE101A 		fmrs	r1, s16
 3687 02a8 1BEE102A 		fmrs	r2, s22
 3688 02ac 1AEE903A 		fmrs	r3, s21
 3689 02b0 FFF7FEFF 		bl	nav_route_xy
 3690              	.LVL392:
 670:firmwares/fixedwing/nav.c ****       if (nav_approaching_xy(c2_in.x, c2_in.y, c1_out.x, c1_out.y, CARROT)) {
 3691              		.loc 1 670 0
 3692 02b4 304B     		ldr	r3, .L275+40
 3693 02b6 0093     		str	r3, [sp]	@ float
 3694 02b8 1BEE100A 		fmrs	r0, s22
 3695 02bc 1AEE901A 		fmrs	r1, s21
 3696 02c0 1BEE902A 		fmrs	r2, s23
 3697 02c4 18EE103A 		fmrs	r3, s16
 3698 02c8 FFF7FEFF 		bl	nav_approaching_xy
 3699              	.LVL393:
 3700 02cc 0028     		cmp	r0, #0
 3701 02ce 00F0DF80 		beq	.L199
 671:firmwares/fixedwing/nav.c ****         eight_status = C2;
 3702              		.loc 1 671 0
 3703 02d2 0223     		movs	r3, #2
 3704 02d4 D4E0     		b	.L268
 3705              	.LVL394:
 3706              	.L210:
 672:firmwares/fixedwing/nav.c ****         InitStage();
 673:firmwares/fixedwing/nav.c ****       }
 674:firmwares/fixedwing/nav.c ****       return;
 675:firmwares/fixedwing/nav.c **** 
 676:firmwares/fixedwing/nav.c ****     case C2 :
 677:firmwares/fixedwing/nav.c ****       nav_circle_XY(c2.x, c2.y, -radius);
 3707              		.loc 1 677 0
 3708 02d6 1AEE102A 		fmrs	r2, s20
 3709 02da 1CEE900A 		fmrs	r0, s25
 3710              	.LVL395:
 3711 02de 1CEE101A 		fmrs	r1, s24
 3712 02e2 FFF7FEFF 		bl	nav_circle_XY
 3713              	.LVL396:
 3714              	.LBB80:
 678:firmwares/fixedwing/nav.c ****       if (NavQdrCloseTo(DegOfRad(qdr_out) + 10)) {
 3715              		.loc 1 678 0
 3716 02e6 4046     		mov	r0, r8	@ float
 3717 02e8 FFF7FEFF 		bl	__aeabi_f2d
 3718              	.LVL397:
 3719 02ec 1AA3     		adr	r3, .L275+8
 3720 02ee D3E90023 		ldrd	r2, [r3]
 3721 02f2 FFF7FEFF 		bl	__aeabi_dmul
 3722              	.LVL398:
 3723 02f6 0022     		movs	r2, #0
 3724 02f8 1D4B     		ldr	r3, .L275+32
 3725 02fa FFF7FEFF 		bl	__aeabi_dadd
 3726              	.LVL399:
 3727              	.LBB81:
 3728 02fe 1D4B     		ldr	r3, .L275+36
 3729              	.LBE81:
 3730 0300 0646     		mov	r6, r0
 3731              	.LBB83:
 3732 0302 1868     		ldr	r0, [r3]	@ float
 3733              	.LBE83:
 3734 0304 0F46     		mov	r7, r1
 3735              	.LBB84:
 3736 0306 FFF7FEFF 		bl	__aeabi_f2d
 3737              	.LVL400:
 3738 030a 0246     		mov	r2, r0
 3739 030c 0B46     		mov	r3, r1
 3740 030e 14A1     		adr	r1, .L275+16
 3741 0310 D1E90001 		ldrd	r0, [r1]
 3742 0314 FFF7FEFF 		bl	__aeabi_dsub
 3743              	.LVL401:
 3744 0318 0FA3     		adr	r3, .L275+8
 3745 031a D3E90023 		ldrd	r2, [r3]
 3746 031e FFF7FEFF 		bl	__aeabi_dmul
 3747              	.LVL402:
 3748 0322 FFF7FEFF 		bl	__aeabi_d2f
 3749              	.LVL403:
 3750 0326 07EE900A 		fmsr	s15, r0
 3751              	.LVL404:
 3752              	.LBB82:
 3753 032a 0022     		movs	r2, #0
 3754              	.LVL405:
 3755              	.L233:
 3756              		.loc 1 678 0 is_stmt 0 discriminator 1
 3757 032c F5EEC07A 		fcmpezs	s15
 3758 0330 F1EE10FA 		fmstat
 3759 0334 D3B2     		uxtb	r3, r2
 3760              	.LVL406:
 3761 0336 9FED118A 		flds	s16, .L275+44
 3762 033a 2BD5     		bpl	.L235
 3763              	.LVL407:
 3764 033c 0132     		adds	r2, r2, #1
 3765              	.LVL408:
 3766              		.loc 1 678 0 discriminator 3
 3767 033e B2F5807F 		cmp	r2, #256
 3768 0342 02D0     		beq	.L272
 3769              	.LVL409:
 3770              		.loc 1 678 0 discriminator 4
 3771 0344 77EE887A 		fadds	s15, s15, s16
 3772              	.LVL410:
 3773 0348 F0E7     		b	.L233
 3774              	.LVL411:
 3775              	.L272:
 3776 034a 0023     		movs	r3, #0
 3777              	.LVL412:
 3778 034c 22E0     		b	.L235
 3779              	.L276:
 3780 034e 00BF     		.align	3
 3781              	.L275:
 3782 0350 182D4454 		.word	1413754136
 3783 0354 FB210940 		.word	1074340347
 3784 0358 F8C1631A 		.word	442745336
 3785 035c DCA54C40 		.word	1078765020
 3786 0360 182D4454 		.word	1413754136
 3787 0364 FB21F93F 		.word	1073291771
 3788 0368 00000000 		.word	.LANCHOR6
 3789 036c 00000000 		.word	.LANCHOR49
 3790 0370 00002440 		.word	1076101120
 3791 0374 00000000 		.word	.LANCHOR34
 3792 0378 00004040 		.word	1077936128
 3793 037c 0000B443 		.word	1135869952
 3794 0380 0000AF43 		.word	1135542272
 3795              	.LVL413:
 3796              	.L238:
 3797              		.loc 1 678 0 discriminator 6
 3798 0384 0133     		adds	r3, r3, #1
 3799              	.LVL414:
 3800 0386 13F0FF03 		ands	r3, r3, #255
 3801              	.LVL415:
 3802 038a 08D0     		beq	.L241
 3803              		.loc 1 678 0 discriminator 8
 3804 038c 1FED057A 		flds	s14, .L275+44
 3805 0390 77EEC77A 		fsubs	s15, s15, s14
 3806              	.LVL416:
 3807              	.L235:
 3808              		.loc 1 678 0 discriminator 5
 3809 0394 F4EEC87A 		fcmpes	s15, s16
 3810 0398 F1EE10FA 		fmstat
 3811 039c F2DA     		bge	.L238
 3812              	.LVL417:
 3813              	.L241:
 3814              	.LBE82:
 3815              	.LBE84:
 3816              		.loc 1 678 0
 3817 039e 17EE900A 		fmrs	r0, s15
 3818 03a2 FFF7FEFF 		bl	__aeabi_f2d
 3819              	.LVL418:
 3820 03a6 0246     		mov	r2, r0
 3821 03a8 0B46     		mov	r3, r1
 3822 03aa 3046     		mov	r0, r6
 3823 03ac 3946     		mov	r1, r7
 3824 03ae FFF7FEFF 		bl	__aeabi_dsub
 3825              	.LVL419:
 3826 03b2 FFF7FEFF 		bl	__aeabi_d2f
 3827              	.LVL420:
 3828              	.LBB85:
 3829 03b6 0022     		movs	r2, #0
 3830              	.LBE85:
 3831 03b8 07EE900A 		fmsr	s15, r0
 3832              	.LVL421:
 3833              	.LBB86:
 3834 03bc 05E0     		b	.L239
 3835              	.LVL422:
 3836              	.L274:
 3837 03be 0132     		adds	r2, r2, #1
 3838              	.LVL423:
 3839              		.loc 1 678 0 discriminator 12
 3840 03c0 B2F5807F 		cmp	r2, #256
 3841 03c4 08D0     		beq	.L273
 3842              	.LVL424:
 3843              		.loc 1 678 0 discriminator 13
 3844 03c6 77EE887A 		fadds	s15, s15, s16
 3845              	.LVL425:
 3846              	.L239:
 3847              		.loc 1 678 0 discriminator 10
 3848 03ca F5EEC07A 		fcmpezs	s15
 3849 03ce F1EE10FA 		fmstat
 3850 03d2 D3B2     		uxtb	r3, r2
 3851              	.LVL426:
 3852 03d4 F3D4     		bmi	.L274
 3853 03d6 09E0     		b	.L243
 3854              	.LVL427:
 3855              	.L273:
 3856 03d8 0023     		movs	r3, #0
 3857              	.LVL428:
 3858 03da 07E0     		b	.L243
 3859              	.LVL429:
 3860              	.L246:
 3861              		.loc 1 678 0 discriminator 15
 3862 03dc 0133     		adds	r3, r3, #1
 3863              	.LVL430:
 3864 03de 13F0FF03 		ands	r3, r3, #255
 3865              	.LVL431:
 3866 03e2 08D0     		beq	.L250
 3867              		.loc 1 678 0 discriminator 17
 3868 03e4 1FED1B7A 		flds	s14, .L275+44
 3869 03e8 77EEC77A 		fsubs	s15, s15, s14
 3870              	.LVL432:
 3871              	.L243:
 3872              		.loc 1 678 0 discriminator 14
 3873 03ec F4EEC87A 		fcmpes	s15, s16
 3874 03f0 F1EE10FA 		fmstat
 3875 03f4 F2DA     		bge	.L246
 3876              	.LVL433:
 3877              	.L250:
 3878              	.LBE86:
 3879              		.loc 1 678 0
 3880 03f6 1FED1E7A 		flds	s14, .L275+48
 3881 03fa F4EEC77A 		fcmpes	s15, s14
 3882 03fe F1EE10FA 		fmstat
 3883 0402 3CDC     		bgt	.L247
 3884              		.loc 1 678 0 discriminator 20
 3885 0404 B2EE047A 		fconsts	s14, #36
 3886 0408 F4EEC77A 		fcmpes	s15, s14
 3887 040c F1EE10FA 		fmstat
 3888 0410 35D4     		bmi	.L247
 3889 0412 3DE0     		b	.L199
 3890              	.LVL434:
 3891              	.L211:
 3892              	.LBE80:
 679:firmwares/fixedwing/nav.c ****         eight_status = R2T;
 680:firmwares/fixedwing/nav.c ****         InitStage();
 681:firmwares/fixedwing/nav.c ****       }
 682:firmwares/fixedwing/nav.c ****       return;
 683:firmwares/fixedwing/nav.c **** 
 684:firmwares/fixedwing/nav.c ****     case R2T:
 685:firmwares/fixedwing/nav.c ****       nav_route_xy(c2_out.x, c2_out.y, c1_in.x, c1_in.y);
 3893              		.loc 1 685 0 is_stmt 1
 3894 0414 19EE900A 		fmrs	r0, s19
 3895              	.LVL435:
 3896 0418 18EE901A 		fmrs	r1, s17
 3897 041c 1DEE902A 		fmrs	r2, s27
 3898 0420 1DEE103A 		fmrs	r3, s26
 3899 0424 FFF7FEFF 		bl	nav_route_xy
 3900              	.LVL436:
 686:firmwares/fixedwing/nav.c ****       if (nav_approaching_xy(waypoints[target].x, waypoints[target].y, c2_out.x, c2_out.y, 0)) {
 3901              		.loc 1 686 0
 3902 0428 0C23     		movs	r3, #12
 3903 042a 03FB0655 		mla	r5, r3, r6, r5
 3904 042e 0023     		movs	r3, #0
 3905 0430 0093     		str	r3, [sp]	@ float
 3906 0432 2868     		ldr	r0, [r5]	@ float
 3907 0434 6968     		ldr	r1, [r5, #4]	@ float
 3908 0436 19EE902A 		fmrs	r2, s19
 3909 043a 18EE903A 		fmrs	r3, s17
 3910 043e FFF7FEFF 		bl	nav_approaching_xy
 3911              	.LVL437:
 3912 0442 28B3     		cbz	r0, .L199
 687:firmwares/fixedwing/nav.c ****         eight_status = RT1;
 3913              		.loc 1 687 0
 3914 0444 0423     		movs	r3, #4
 3915 0446 1BE0     		b	.L268
 3916              	.LVL438:
 3917              	.L212:
 688:firmwares/fixedwing/nav.c ****         InitStage();
 689:firmwares/fixedwing/nav.c ****       }
 690:firmwares/fixedwing/nav.c ****       return;
 691:firmwares/fixedwing/nav.c **** 
 692:firmwares/fixedwing/nav.c ****     case RT1:
 693:firmwares/fixedwing/nav.c ****       nav_route_xy(c2_out.x, c2_out.y, c1_in.x, c1_in.y);
 3918              		.loc 1 693 0
 3919 0448 19EE900A 		fmrs	r0, s19
 3920              	.LVL439:
 3921 044c 18EE901A 		fmrs	r1, s17
 3922 0450 1DEE902A 		fmrs	r2, s27
 3923 0454 1DEE103A 		fmrs	r3, s26
 3924 0458 FFF7FEFF 		bl	nav_route_xy
 3925              	.LVL440:
 694:firmwares/fixedwing/nav.c ****       if (nav_approaching_xy(c1_in.x, c1_in.y, c2_out.x, c2_out.y, CARROT)) {
 3926              		.loc 1 694 0
 3927 045c 0F4B     		ldr	r3, .L277
 3928 045e 0093     		str	r3, [sp]	@ float
 3929 0460 1DEE900A 		fmrs	r0, s27
 3930 0464 1DEE101A 		fmrs	r1, s26
 3931 0468 19EE902A 		fmrs	r2, s19
 3932 046c 18EE903A 		fmrs	r3, s17
 3933 0470 FFF7FEFF 		bl	nav_approaching_xy
 3934              	.LVL441:
 3935 0474 60B1     		cbz	r0, .L199
 695:firmwares/fixedwing/nav.c ****         eight_status = C1;
 3936              		.loc 1 695 0
 3937 0476 0523     		movs	r3, #5
 3938 0478 02E0     		b	.L268
 3939              	.LVL442:
 3940              	.L228:
 655:firmwares/fixedwing/nav.c ****         InitStage();
 3941              		.loc 1 655 0
 3942 047a 0023     		movs	r3, #0
 3943 047c 00E0     		b	.L268
 3944              	.LVL443:
 3945              	.L247:
 679:firmwares/fixedwing/nav.c ****         InitStage();
 3946              		.loc 1 679 0
 3947 047e 0323     		movs	r3, #3
 3948              	.LVL444:
 3949              	.L268:
 3950 0480 2370     		strb	r3, [r4]
 696:firmwares/fixedwing/nav.c ****         InitStage();
 697:firmwares/fixedwing/nav.c ****       }
 698:firmwares/fixedwing/nav.c ****       return;
 699:firmwares/fixedwing/nav.c **** 
 700:firmwares/fixedwing/nav.c ****     default:/* Should not occur !!! Doing nothing */
 701:firmwares/fixedwing/nav.c ****       return;
 702:firmwares/fixedwing/nav.c ****   } /* switch */
 703:firmwares/fixedwing/nav.c **** }
 3951              		.loc 1 703 0
 3952 0482 02B0     		add	sp, sp, #8
 3953              		.cfi_remember_state
 3954              		.cfi_def_cfa_offset 72
 3955              		@ sp needed
 3956 0484 BDEC0C8B 		fldmfdd	sp!, {d8-d13}
 3957              		.cfi_restore 90
 3958              		.cfi_restore 91
 3959              		.cfi_restore 88
 3960              		.cfi_restore 89
 3961              		.cfi_restore 86
 3962              		.cfi_restore 87
 3963              		.cfi_restore 84
 3964              		.cfi_restore 85
 3965              		.cfi_restore 82
 3966              		.cfi_restore 83
 3967              		.cfi_restore 80
 3968              		.cfi_restore 81
 3969              		.cfi_def_cfa_offset 24
 3970              	.LVL445:
 3971 0488 BDE8F041 		pop	{r4, r5, r6, r7, r8, lr}
 3972              		.cfi_restore 14
 3973              		.cfi_restore 8
 3974              		.cfi_restore 7
 3975              		.cfi_restore 6
 3976              		.cfi_restore 5
 3977              		.cfi_restore 4
 3978              		.cfi_def_cfa_offset 0
 3979              	.LVL446:
 680:firmwares/fixedwing/nav.c ****       }
 3980              		.loc 1 680 0
 3981 048c FFF7FEBF 		b	nav_init_stage
 3982              	.LVL447:
 3983              	.L199:
 3984              		.cfi_restore_state
 3985              		.loc 1 703 0
 3986 0490 02B0     		add	sp, sp, #8
 3987              		.cfi_def_cfa_offset 72
 3988              		@ sp needed
 3989 0492 BDEC0C8B 		fldmfdd	sp!, {d8-d13}
 3990              		.cfi_restore 90
 3991              		.cfi_restore 91
 3992              		.cfi_restore 88
 3993              		.cfi_restore 89
 3994              		.cfi_restore 86
 3995              		.cfi_restore 87
 3996              		.cfi_restore 84
 3997              		.cfi_restore 85
 3998              		.cfi_restore 82
 3999              		.cfi_restore 83
 4000              		.cfi_restore 80
 4001              		.cfi_restore 81
 4002              		.cfi_def_cfa_offset 24
 4003              	.LVL448:
 4004 0496 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4005              	.LVL449:
 4006              	.L278:
 4007 049a 00BF     		.align	2
 4008              	.L277:
 4009 049c 00004040 		.word	1077936128
 4010              		.cfi_endproc
 4011              	.LFE490:
 4013              		.section	.text.nav_oval_init,"ax",%progbits
 4014              		.align	1
 4015              		.global	nav_oval_init
 4016              		.thumb
 4017              		.thumb_func
 4019              	nav_oval_init:
 4020              	.LFB491:
 704:firmwares/fixedwing/nav.c **** 
 705:firmwares/fixedwing/nav.c **** /************** Oval Navigation **********************************************/
 706:firmwares/fixedwing/nav.c **** 
 707:firmwares/fixedwing/nav.c **** /** Navigation along a figure O. One side leg is defined by waypoints [p1] and
 708:firmwares/fixedwing/nav.c ****     [p2].
 709:firmwares/fixedwing/nav.c ****     The navigation goes through 4 states: OC1 (half circle next to [p1]),
 710:firmwares/fixedwing/nav.c ****     OR21 (route [p2] to [p1], OC2 (half circle next to [p2]) and OR12
 711:firmwares/fixedwing/nav.c ****     (opposite leg).
 712:firmwares/fixedwing/nav.c **** 
 713:firmwares/fixedwing/nav.c ****     Initial state is the route along the desired segment (OC2).
 714:firmwares/fixedwing/nav.c **** */
 715:firmwares/fixedwing/nav.c **** 
 716:firmwares/fixedwing/nav.c **** uint8_t nav_oval_count;
 717:firmwares/fixedwing/nav.c **** 
 718:firmwares/fixedwing/nav.c **** void nav_oval_init(void)
 719:firmwares/fixedwing/nav.c **** {
 4021              		.loc 1 719 0
 4022              		.cfi_startproc
 4023              		@ args = 0, pretend = 0, frame = 0
 4024              		@ frame_needed = 0, uses_anonymous_args = 0
 4025              		@ link register save eliminated.
 720:firmwares/fixedwing/nav.c ****   oval_status = OC2;
 4026              		.loc 1 720 0
 4027 0000 034B     		ldr	r3, .L280
 4028 0002 0122     		movs	r2, #1
 4029 0004 1A70     		strb	r2, [r3]
 721:firmwares/fixedwing/nav.c ****   nav_oval_count = 0;
 4030              		.loc 1 721 0
 4031 0006 034B     		ldr	r3, .L280+4
 4032 0008 0022     		movs	r2, #0
 4033 000a 1A70     		strb	r2, [r3]
 4034 000c 7047     		bx	lr
 4035              	.L281:
 4036 000e 00BF     		.align	2
 4037              	.L280:
 4038 0010 00000000 		.word	.LANCHOR50
 4039 0014 00000000 		.word	.LANCHOR11
 4040              		.cfi_endproc
 4041              	.LFE491:
 4043              		.section	.text.nav_oval,"ax",%progbits
 4044              		.align	1
 4045              		.global	nav_oval
 4046              		.thumb
 4047              		.thumb_func
 4049              	nav_oval:
 4050              	.LFB492:
 722:firmwares/fixedwing/nav.c **** }
 723:firmwares/fixedwing/nav.c **** 
 724:firmwares/fixedwing/nav.c **** void nav_oval(uint8_t p1, uint8_t p2, float radius)
 725:firmwares/fixedwing/nav.c **** {
 4051              		.loc 1 725 0
 4052              		.cfi_startproc
 4053              		@ args = 0, pretend = 0, frame = 0
 4054              		@ frame_needed = 0, uses_anonymous_args = 0
 4055              	.LVL450:
 4056 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4057              		.cfi_def_cfa_offset 36
 4058              		.cfi_offset 4, -36
 4059              		.cfi_offset 5, -32
 4060              		.cfi_offset 6, -28
 4061              		.cfi_offset 7, -24
 4062              		.cfi_offset 8, -20
 4063              		.cfi_offset 9, -16
 4064              		.cfi_offset 10, -12
 4065              		.cfi_offset 11, -8
 4066              		.cfi_offset 14, -4
 726:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 727:firmwares/fixedwing/nav.c **** 
 728:firmwares/fixedwing/nav.c ****   float alt = waypoints[p1].a;
 4067              		.loc 1 728 0
 4068 0004 D44E     		ldr	r6, .L347+24
 726:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 4069              		.loc 1 726 0
 4070 0006 07EE902A 		fmsr	s15, r2
 4071              		.loc 1 728 0
 4072 000a 0C24     		movs	r4, #12
 4073 000c 04FB0067 		mla	r7, r4, r0, r6
 729:firmwares/fixedwing/nav.c ****   waypoints[p2].a = alt;
 4074              		.loc 1 729 0
 4075 0010 04FB0164 		mla	r4, r4, r1, r6
 725:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 4076              		.loc 1 725 0
 4077 0014 2DED0A8B 		fstmfdd	sp!, {d8, d9, d10, d11, d12}
 4078              		.cfi_def_cfa_offset 76
 4079              		.cfi_offset 80, -76
 4080              		.cfi_offset 81, -72
 4081              		.cfi_offset 82, -68
 4082              		.cfi_offset 83, -64
 4083              		.cfi_offset 84, -60
 4084              		.cfi_offset 85, -56
 4085              		.cfi_offset 86, -52
 4086              		.cfi_offset 87, -48
 4087              		.cfi_offset 88, -44
 4088              		.cfi_offset 89, -40
 726:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 4089              		.loc 1 726 0
 4090 0018 B1EE678A 		fnegs	s16, s15
 4091              	.LVL451:
 730:firmwares/fixedwing/nav.c **** 
 731:firmwares/fixedwing/nav.c ****   float p2_p1_x = waypoints[p1].x - waypoints[p2].x;
 4092              		.loc 1 731 0
 4093 001c D4ED008A 		flds	s17, [r4]
 4094 0020 D7ED007A 		flds	s15, [r7]
 732:firmwares/fixedwing/nav.c ****   float p2_p1_y = waypoints[p1].y - waypoints[p2].y;
 4095              		.loc 1 732 0
 4096 0024 94ED019A 		flds	s18, [r4, #4]
 728:firmwares/fixedwing/nav.c ****   waypoints[p2].a = alt;
 4097              		.loc 1 728 0
 4098 0028 BB68     		ldr	r3, [r7, #8]	@ float
 4099              	.LVL452:
 729:firmwares/fixedwing/nav.c **** 
 4100              		.loc 1 729 0
 4101 002a A360     		str	r3, [r4, #8]	@ float
 731:firmwares/fixedwing/nav.c ****   float p2_p1_y = waypoints[p1].y - waypoints[p2].y;
 4102              		.loc 1 731 0
 4103 002c 77EEE88A 		fsubs	s17, s15, s17
 4104              	.LVL453:
 4105              		.loc 1 732 0
 4106 0030 D7ED017A 		flds	s15, [r7, #4]
 4107 0034 37EEC99A 		fsubs	s18, s15, s18
 4108              	.LVL454:
 725:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 4109              		.loc 1 725 0
 4110 0038 83B0     		sub	sp, sp, #12
 4111              		.cfi_def_cfa_offset 88
 733:firmwares/fixedwing/nav.c ****   float d = sqrtf(p2_p1_x * p2_p1_x + p2_p1_y * p2_p1_y);
 4112              		.loc 1 733 0
 4113 003a 69EE097A 		fmuls	s15, s18, s18
 725:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 4114              		.loc 1 725 0
 4115 003e 8046     		mov	r8, r0
 4116              		.loc 1 733 0
 4117 0040 E8EEA87A 		vfma.f32	s15, s17, s17
 725:firmwares/fixedwing/nav.c ****   radius = - radius; /* Historical error ? */
 4118              		.loc 1 725 0
 4119 0044 9146     		mov	r9, r2	@ float
 4120 0046 0D46     		mov	r5, r1
 4121              		.loc 1 733 0
 4122 0048 17EE900A 		fmrs	r0, s15
 4123              	.LVL455:
 4124 004c FFF7FEFF 		bl	sqrtf
 4125              	.LVL456:
 4126 0050 07EE900A 		fmsr	s15, r0
 4127              	.LVL457:
 734:firmwares/fixedwing/nav.c **** 
 735:firmwares/fixedwing/nav.c ****   /* Unit vector from p1 to p2 */
 736:firmwares/fixedwing/nav.c ****   float u_x = p2_p1_x / d;
 4128              		.loc 1 736 0
 4129 0054 C8EEA78A 		fdivs	s17, s17, s15
 4130              	.LVL458:
 737:firmwares/fixedwing/nav.c ****   float u_y = p2_p1_y / d;
 4131              		.loc 1 737 0
 4132 0058 89EE279A 		fdivs	s18, s18, s15
 4133              	.LVL459:
 738:firmwares/fixedwing/nav.c **** 
 739:firmwares/fixedwing/nav.c ****   /* The half circle centers and the other leg */
 740:firmwares/fixedwing/nav.c ****   struct point p1_center = { waypoints[p1].x + radius * -u_y,
 741:firmwares/fixedwing/nav.c ****            waypoints[p1].y + radius * u_x,
 742:firmwares/fixedwing/nav.c ****            alt
 743:firmwares/fixedwing/nav.c ****   };
 744:firmwares/fixedwing/nav.c ****   struct point p1_out = { waypoints[p1].x + 2 * radius * -u_y,
 745:firmwares/fixedwing/nav.c ****            waypoints[p1].y + 2 * radius * u_x,
 746:firmwares/fixedwing/nav.c ****            alt
 747:firmwares/fixedwing/nav.c ****   };
 748:firmwares/fixedwing/nav.c **** 
 749:firmwares/fixedwing/nav.c ****   struct point p2_in = { waypoints[p2].x + 2 * radius * -u_y,
 750:firmwares/fixedwing/nav.c ****            waypoints[p2].y + 2 * radius * u_x,
 751:firmwares/fixedwing/nav.c ****            alt
 752:firmwares/fixedwing/nav.c ****   };
 753:firmwares/fixedwing/nav.c ****   struct point p2_center = { waypoints[p2].x + radius * -u_y,
 754:firmwares/fixedwing/nav.c ****            waypoints[p2].y + radius * u_x,
 755:firmwares/fixedwing/nav.c ****            alt
 756:firmwares/fixedwing/nav.c ****   };
 757:firmwares/fixedwing/nav.c **** 
 758:firmwares/fixedwing/nav.c ****   float qdr_out_2 = M_PI - atan2f(u_y, u_x);
 4134              		.loc 1 758 0
 4135 005c 18EE901A 		fmrs	r1, s17
 4136 0060 19EE100A 		fmrs	r0, s18
 4137              	.LVL460:
 740:firmwares/fixedwing/nav.c ****            waypoints[p1].y + radius * u_x,
 4138              		.loc 1 740 0
 4139 0064 97ED00BA 		flds	s22, [r7]
 741:firmwares/fixedwing/nav.c ****            alt
 4140              		.loc 1 741 0
 4141 0068 D7ED01AA 		flds	s21, [r7, #4]
 749:firmwares/fixedwing/nav.c ****            waypoints[p2].y + 2 * radius * u_x,
 4142              		.loc 1 749 0
 4143 006c 94ED00AA 		flds	s20, [r4]
 750:firmwares/fixedwing/nav.c ****            alt
 4144              		.loc 1 750 0
 4145 0070 D4ED019A 		flds	s19, [r4, #4]
 4146              		.loc 1 758 0
 4147 0074 FFF7FEFF 		bl	atan2f
 4148              	.LVL461:
 4149 0078 FFF7FEFF 		bl	__aeabi_f2d
 4150              	.LVL462:
 4151 007c 0246     		mov	r2, r0
 4152 007e 0B46     		mov	r3, r1
 4153 0080 AFA1     		adr	r1, .L347
 4154 0082 D1E90001 		ldrd	r0, [r1]
 4155 0086 FFF7FEFF 		bl	__aeabi_dsub
 4156              	.LVL463:
 4157 008a FFF7FEFF 		bl	__aeabi_d2f
 4158              	.LVL464:
 4159 008e 8346     		mov	fp, r0	@ float
 759:firmwares/fixedwing/nav.c ****   float qdr_out_1 = qdr_out_2 + M_PI;
 4160              		.loc 1 759 0
 4161 0090 FFF7FEFF 		bl	__aeabi_f2d
 4162              	.LVL465:
 4163 0094 AAA3     		adr	r3, .L347
 4164 0096 D3E90023 		ldrd	r2, [r3]
 4165 009a FFF7FEFF 		bl	__aeabi_dadd
 4166              	.LVL466:
 4167 009e FFF7FEFF 		bl	__aeabi_d2f
 4168              	.LVL467:
 760:firmwares/fixedwing/nav.c ****   if (radius < 0) {
 4169              		.loc 1 760 0
 4170 00a2 B5EEC08A 		fcmpezs	s16
 740:firmwares/fixedwing/nav.c ****            waypoints[p1].y + radius * u_x,
 4171              		.loc 1 740 0
 4172 00a6 F1EE49BA 		fnegs	s23, s18
 4173              		.loc 1 760 0
 4174 00aa F1EE10FA 		fmstat
 740:firmwares/fixedwing/nav.c ****            waypoints[p1].y + radius * u_x,
 4175              		.loc 1 740 0
 4176 00ae 68EE2BCA 		fmuls	s25, s16, s23
 4177              	.LVL468:
 741:firmwares/fixedwing/nav.c ****            alt
 4178              		.loc 1 741 0
 4179 00b2 28EE28CA 		fmuls	s24, s16, s17
 4180              	.LVL469:
 759:firmwares/fixedwing/nav.c ****   if (radius < 0) {
 4181              		.loc 1 759 0
 4182 00b6 8246     		mov	r10, r0	@ float
 4183              	.LVL470:
 4184              		.loc 1 760 0
 4185 00b8 0AD5     		bpl	.L283
 4186              	.LVL471:
 761:firmwares/fixedwing/nav.c ****     qdr_out_2 += M_PI;
 762:firmwares/fixedwing/nav.c ****     qdr_out_1 += M_PI;
 4187              		.loc 1 762 0
 4188 00ba FFF7FEFF 		bl	__aeabi_f2d
 4189              	.LVL472:
 4190 00be A0A3     		adr	r3, .L347
 4191 00c0 D3E90023 		ldrd	r2, [r3]
 4192 00c4 FFF7FEFF 		bl	__aeabi_dadd
 4193              	.LVL473:
 4194 00c8 FFF7FEFF 		bl	__aeabi_d2f
 4195              	.LVL474:
 761:firmwares/fixedwing/nav.c ****     qdr_out_2 += M_PI;
 4196              		.loc 1 761 0
 4197 00cc D346     		mov	fp, r10	@ float
 4198              		.loc 1 762 0
 4199 00ce 8246     		mov	r10, r0	@ float
 4200              	.LVL475:
 4201              	.L283:
 763:firmwares/fixedwing/nav.c ****   }
 764:firmwares/fixedwing/nav.c ****   float qdr_anticipation = (radius > 0 ? -15 : 15);
 765:firmwares/fixedwing/nav.c **** 
 766:firmwares/fixedwing/nav.c ****   switch (oval_status) {
 4202              		.loc 1 766 0
 4203 00d0 A24C     		ldr	r4, .L347+28
 764:firmwares/fixedwing/nav.c **** 
 4204              		.loc 1 764 0
 4205 00d2 B5EEC08A 		fcmpezs	s16
 4206              		.loc 1 766 0
 4207 00d6 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 764:firmwares/fixedwing/nav.c **** 
 4208              		.loc 1 764 0
 4209 00d8 F1EE10FA 		fmstat
 4210 00dc F2EE0E7A 		fconsts	s15, #46
 4211 00e0 BAEE0E7A 		fconsts	s14, #174
 4212 00e4 D4BF     		ite	le
 4213 00e6 17EE907A 		fmrsle	r7, s15
 4214 00ea 17EE107A 		fmrsgt	r7, s14
 4215              	.LVL476:
 4216              		.loc 1 766 0
 4217 00ee 032B     		cmp	r3, #3
 4218 00f0 00F28C81 		bhi	.L282
 4219 00f4 DFE813F0 		tbh	[pc, r3, lsl #1]
 4220              	.L288:
 4221 00f8 9400     		.2byte	(.L287-.L288)/2
 4222 00fa C000     		.2byte	(.L289-.L288)/2
 4223 00fc 6901     		.2byte	(.L290-.L288)/2
 4224 00fe 0400     		.2byte	(.L291-.L288)/2
 4225              		.p2align 1
 4226              	.L291:
 767:firmwares/fixedwing/nav.c ****     case OC1 :
 768:firmwares/fixedwing/nav.c ****       nav_circle_XY(p1_center.x, p1_center.y, -radius);
 4227              		.loc 1 768 0
 4228 0100 7BEE2C7A 		fadds	s15, s22, s25
 4229 0104 4A46     		mov	r2, r9	@ float
 4230 0106 17EE900A 		fmrs	r0, s15
 4231              	.LVL477:
 4232 010a 7AEE8C7A 		fadds	s15, s21, s24
 4233 010e 17EE901A 		fmrs	r1, s15
 4234 0112 FFF7FEFF 		bl	nav_circle_XY
 4235              	.LVL478:
 4236              	.LBB87:
 769:firmwares/fixedwing/nav.c ****       if (NavQdrCloseTo(DegOfRad(qdr_out_1) - qdr_anticipation)) {
 4237              		.loc 1 769 0
 4238 0116 5046     		mov	r0, r10	@ float
 4239 0118 FFF7FEFF 		bl	__aeabi_f2d
 4240              	.LVL479:
 4241 011c 8AA3     		adr	r3, .L347+8
 4242 011e D3E90023 		ldrd	r2, [r3]
 4243 0122 FFF7FEFF 		bl	__aeabi_dmul
 4244              	.LVL480:
 4245 0126 8046     		mov	r8, r0
 4246 0128 3846     		mov	r0, r7	@ float
 4247 012a 8946     		mov	r9, r1
 4248 012c FFF7FEFF 		bl	__aeabi_f2d
 4249              	.LVL481:
 4250 0130 0246     		mov	r2, r0
 4251 0132 0B46     		mov	r3, r1
 4252 0134 4046     		mov	r0, r8
 4253 0136 4946     		mov	r1, r9
 4254 0138 FFF7FEFF 		bl	__aeabi_dsub
 4255              	.LVL482:
 4256              	.LBB88:
 4257 013c 884B     		ldr	r3, .L347+32
 4258              	.LBE88:
 4259 013e 0646     		mov	r6, r0
 4260              	.LBB90:
 4261 0140 1868     		ldr	r0, [r3]	@ float
 4262              	.LBE90:
 4263 0142 0F46     		mov	r7, r1
 4264              	.LVL483:
 4265              	.LBB91:
 4266 0144 FFF7FEFF 		bl	__aeabi_f2d
 4267              	.LVL484:
 4268 0148 0246     		mov	r2, r0
 4269 014a 0B46     		mov	r3, r1
 4270 014c 80A1     		adr	r1, .L347+16
 4271 014e D1E90001 		ldrd	r0, [r1]
 4272 0152 FFF7FEFF 		bl	__aeabi_dsub
 4273              	.LVL485:
 4274 0156 7CA3     		adr	r3, .L347+8
 4275 0158 D3E90023 		ldrd	r2, [r3]
 4276 015c FFF7FEFF 		bl	__aeabi_dmul
 4277              	.LVL486:
 4278 0160 FFF7FEFF 		bl	__aeabi_d2f
 4279              	.LVL487:
 4280 0164 07EE900A 		fmsr	s15, r0
 4281              	.LVL488:
 4282              	.LBB89:
 4283 0168 0022     		movs	r2, #0
 4284              	.LVL489:
 4285              	.L292:
 4286              		.loc 1 769 0 is_stmt 0 discriminator 1
 4287 016a F5EEC07A 		fcmpezs	s15
 4288 016e F1EE10FA 		fmstat
 4289 0172 D3B2     		uxtb	r3, r2
 4290              	.LVL490:
 4291 0174 9FED7D8A 		flds	s16, .L347+44
 4292 0178 10D5     		bpl	.L294
 4293              	.LVL491:
 4294 017a 0132     		adds	r2, r2, #1
 4295              	.LVL492:
 4296              		.loc 1 769 0 discriminator 3
 4297 017c B2F5807F 		cmp	r2, #256
 4298 0180 02D0     		beq	.L341
 4299              	.LVL493:
 4300              		.loc 1 769 0 discriminator 4
 4301 0182 77EE887A 		fadds	s15, s15, s16
 4302              	.LVL494:
 4303 0186 F0E7     		b	.L292
 4304              	.LVL495:
 4305              	.L341:
 4306 0188 0023     		movs	r3, #0
 4307              	.LVL496:
 4308 018a 07E0     		b	.L294
 4309              	.LVL497:
 4310              	.L297:
 4311              		.loc 1 769 0 discriminator 6
 4312 018c 0133     		adds	r3, r3, #1
 4313              	.LVL498:
 4314 018e 13F0FF03 		ands	r3, r3, #255
 4315              	.LVL499:
 4316 0192 08D0     		beq	.L300
 4317              		.loc 1 769 0 discriminator 8
 4318 0194 9FED757A 		flds	s14, .L347+44
 4319 0198 77EEC77A 		fsubs	s15, s15, s14
 4320              	.LVL500:
 4321              	.L294:
 4322              		.loc 1 769 0 discriminator 5
 4323 019c F4EEC87A 		fcmpes	s15, s16
 4324 01a0 F1EE10FA 		fmstat
 4325 01a4 F2DA     		bge	.L297
 4326              	.LVL501:
 4327              	.L300:
 4328              	.LBE89:
 4329              	.LBE91:
 4330              		.loc 1 769 0
 4331 01a6 17EE900A 		fmrs	r0, s15
 4332 01aa FFF7FEFF 		bl	__aeabi_f2d
 4333              	.LVL502:
 4334 01ae 0246     		mov	r2, r0
 4335 01b0 0B46     		mov	r3, r1
 4336 01b2 3046     		mov	r0, r6
 4337 01b4 3946     		mov	r1, r7
 4338 01b6 FFF7FEFF 		bl	__aeabi_dsub
 4339              	.LVL503:
 4340 01ba FFF7FEFF 		bl	__aeabi_d2f
 4341              	.LVL504:
 4342              	.LBB92:
 4343 01be 0022     		movs	r2, #0
 4344              	.LBE92:
 4345 01c0 07EE900A 		fmsr	s15, r0
 4346              	.LVL505:
 4347              	.LBB93:
 4348 01c4 05E0     		b	.L298
 4349              	.LVL506:
 4350              	.L343:
 4351 01c6 0132     		adds	r2, r2, #1
 4352              	.LVL507:
 4353              		.loc 1 769 0 discriminator 12
 4354 01c8 B2F5807F 		cmp	r2, #256
 4355 01cc 08D0     		beq	.L342
 4356              	.LVL508:
 4357              		.loc 1 769 0 discriminator 13
 4358 01ce 77EE887A 		fadds	s15, s15, s16
 4359              	.LVL509:
 4360              	.L298:
 4361              		.loc 1 769 0 discriminator 10
 4362 01d2 F5EEC07A 		fcmpezs	s15
 4363 01d6 F1EE10FA 		fmstat
 4364 01da D3B2     		uxtb	r3, r2
 4365              	.LVL510:
 4366 01dc F3D4     		bmi	.L343
 4367 01de 09E0     		b	.L302
 4368              	.LVL511:
 4369              	.L342:
 4370 01e0 0023     		movs	r3, #0
 4371              	.LVL512:
 4372 01e2 07E0     		b	.L302
 4373              	.LVL513:
 4374              	.L305:
 4375              		.loc 1 769 0 discriminator 15
 4376 01e4 0133     		adds	r3, r3, #1
 4377              	.LVL514:
 4378 01e6 13F0FF03 		ands	r3, r3, #255
 4379              	.LVL515:
 4380 01ea 08D0     		beq	.L309
 4381              		.loc 1 769 0 discriminator 17
 4382 01ec 9FED5F7A 		flds	s14, .L347+44
 4383 01f0 77EEC77A 		fsubs	s15, s15, s14
 4384              	.LVL516:
 4385              	.L302:
 4386              		.loc 1 769 0 discriminator 14
 4387 01f4 F4EEC87A 		fcmpes	s15, s16
 4388 01f8 F1EE10FA 		fmstat
 4389 01fc F2DA     		bge	.L305
 4390              	.LVL517:
 4391              	.L309:
 4392              	.LBE93:
 4393              		.loc 1 769 0
 4394 01fe 9FED5C7A 		flds	s14, .L347+48
 4395 0202 F4EEC77A 		fcmpes	s15, s14
 4396 0206 F1EE10FA 		fmstat
 4397 020a 00F3F480 		bgt	.L306
 4398              		.loc 1 769 0 discriminator 20
 4399 020e B2EE047A 		fconsts	s14, #36
 4400 0212 F4EEC77A 		fcmpes	s15, s14
 4401 0216 F1EE10FA 		fmstat
 4402 021a 00F1EC80 		bmi	.L306
 4403 021e F5E0     		b	.L282
 4404              	.LVL518:
 4405              	.L287:
 4406              	.LBE87:
 744:firmwares/fixedwing/nav.c ****            waypoints[p1].y + 2 * radius * u_x,
 4407              		.loc 1 744 0 is_stmt 1
 4408 0220 38EE088A 		fadds	s16, s16, s16
 4409              	.LVL519:
 745:firmwares/fixedwing/nav.c ****            alt
 4410              		.loc 1 745 0
 4411 0224 B0EE6A9A 		fcpys	s18, s21
 4412              	.LVL520:
 744:firmwares/fixedwing/nav.c ****            waypoints[p1].y + 2 * radius * u_x,
 4413              		.loc 1 744 0
 4414 0228 A8EE2BBA 		vfma.f32	s22, s16, s23
 4415              	.LVL521:
 745:firmwares/fixedwing/nav.c ****            alt
 4416              		.loc 1 745 0
 4417 022c A8EE289A 		vfma.f32	s18, s16, s17
 749:firmwares/fixedwing/nav.c ****            waypoints[p2].y + 2 * radius * u_x,
 4418              		.loc 1 749 0
 4419 0230 A8EE2BAA 		vfma.f32	s20, s16, s23
 4420              	.LVL522:
 750:firmwares/fixedwing/nav.c ****            alt
 4421              		.loc 1 750 0
 4422 0234 E8EE289A 		vfma.f32	s19, s16, s17
 4423              	.LVL523:
 770:firmwares/fixedwing/nav.c ****         oval_status = OR12;
 771:firmwares/fixedwing/nav.c ****         InitStage();
 772:firmwares/fixedwing/nav.c ****         LINE_START_FUNCTION;
 773:firmwares/fixedwing/nav.c ****       }
 774:firmwares/fixedwing/nav.c ****       return;
 775:firmwares/fixedwing/nav.c **** 
 776:firmwares/fixedwing/nav.c ****     case OR12:
 777:firmwares/fixedwing/nav.c ****       nav_route_xy(p1_out.x, p1_out.y, p2_in.x, p2_in.y);
 4424              		.loc 1 777 0
 4425 0238 1BEE100A 		fmrs	r0, s22
 4426              	.LVL524:
 4427 023c 19EE101A 		fmrs	r1, s18
 4428 0240 1AEE102A 		fmrs	r2, s20
 4429 0244 19EE903A 		fmrs	r3, s19
 4430 0248 FFF7FEFF 		bl	nav_route_xy
 4431              	.LVL525:
 778:firmwares/fixedwing/nav.c ****       if (nav_approaching_xy(p2_in.x, p2_in.y, p1_out.x, p1_out.y, CARROT)) {
 4432              		.loc 1 778 0
 4433 024c 454B     		ldr	r3, .L347+36
 4434 024e 0093     		str	r3, [sp]	@ float
 4435 0250 1AEE100A 		fmrs	r0, s20
 4436 0254 19EE901A 		fmrs	r1, s19
 4437 0258 1BEE102A 		fmrs	r2, s22
 4438 025c 19EE103A 		fmrs	r3, s18
 4439 0260 FFF7FEFF 		bl	nav_approaching_xy
 4440              	.LVL526:
 4441 0264 0028     		cmp	r0, #0
 4442 0266 00F0D180 		beq	.L282
 779:firmwares/fixedwing/nav.c ****         oval_status = OC2;
 780:firmwares/fixedwing/nav.c ****         nav_oval_count++;
 4443              		.loc 1 780 0
 4444 026a 3F4A     		ldr	r2, .L347+40
 779:firmwares/fixedwing/nav.c ****         oval_status = OC2;
 4445              		.loc 1 779 0
 4446 026c 0123     		movs	r3, #1
 4447 026e 2370     		strb	r3, [r4]
 4448              		.loc 1 780 0
 4449 0270 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 4450 0272 0133     		adds	r3, r3, #1
 4451 0274 1370     		strb	r3, [r2]
 4452 0276 C2E0     		b	.L339
 4453              	.LVL527:
 4454              	.L289:
 781:firmwares/fixedwing/nav.c ****         InitStage();
 782:firmwares/fixedwing/nav.c ****         LINE_STOP_FUNCTION;
 783:firmwares/fixedwing/nav.c ****       }
 784:firmwares/fixedwing/nav.c ****       return;
 785:firmwares/fixedwing/nav.c **** 
 786:firmwares/fixedwing/nav.c ****     case OC2 :
 787:firmwares/fixedwing/nav.c ****       nav_circle_XY(p2_center.x, p2_center.y, -radius);
 4455              		.loc 1 787 0
 4456 0278 7AEE2C7A 		fadds	s15, s20, s25
 4457 027c 4A46     		mov	r2, r9	@ float
 4458 027e 17EE900A 		fmrs	r0, s15
 4459              	.LVL528:
 4460 0282 79EE8C7A 		fadds	s15, s19, s24
 4461 0286 17EE901A 		fmrs	r1, s15
 4462 028a FFF7FEFF 		bl	nav_circle_XY
 4463              	.LVL529:
 4464              	.LBB94:
 788:firmwares/fixedwing/nav.c ****       if (NavQdrCloseTo(DegOfRad(qdr_out_2) - qdr_anticipation)) {
 4465              		.loc 1 788 0
 4466 028e 5846     		mov	r0, fp	@ float
 4467 0290 FFF7FEFF 		bl	__aeabi_f2d
 4468              	.LVL530:
 4469 0294 2CA3     		adr	r3, .L347+8
 4470 0296 D3E90023 		ldrd	r2, [r3]
 4471 029a FFF7FEFF 		bl	__aeabi_dmul
 4472              	.LVL531:
 4473 029e 8046     		mov	r8, r0
 4474 02a0 3846     		mov	r0, r7	@ float
 4475 02a2 8946     		mov	r9, r1
 4476 02a4 FFF7FEFF 		bl	__aeabi_f2d
 4477              	.LVL532:
 4478 02a8 0246     		mov	r2, r0
 4479 02aa 0B46     		mov	r3, r1
 4480 02ac 4046     		mov	r0, r8
 4481 02ae 4946     		mov	r1, r9
 4482 02b0 FFF7FEFF 		bl	__aeabi_dsub
 4483              	.LVL533:
 4484              	.LBB95:
 4485 02b4 2A4B     		ldr	r3, .L347+32
 4486              	.LBE95:
 4487 02b6 0646     		mov	r6, r0
 4488              	.LBB97:
 4489 02b8 1868     		ldr	r0, [r3]	@ float
 4490              	.LBE97:
 4491 02ba 0F46     		mov	r7, r1
 4492              	.LVL534:
 4493              	.LBB98:
 4494 02bc FFF7FEFF 		bl	__aeabi_f2d
 4495              	.LVL535:
 4496 02c0 0246     		mov	r2, r0
 4497 02c2 0B46     		mov	r3, r1
 4498 02c4 22A1     		adr	r1, .L347+16
 4499 02c6 D1E90001 		ldrd	r0, [r1]
 4500 02ca FFF7FEFF 		bl	__aeabi_dsub
 4501              	.LVL536:
 4502 02ce 1EA3     		adr	r3, .L347+8
 4503 02d0 D3E90023 		ldrd	r2, [r3]
 4504 02d4 FFF7FEFF 		bl	__aeabi_dmul
 4505              	.LVL537:
 4506 02d8 FFF7FEFF 		bl	__aeabi_d2f
 4507              	.LVL538:
 4508 02dc 07EE900A 		fmsr	s15, r0
 4509              	.LVL539:
 4510              	.LBB96:
 4511 02e0 0022     		movs	r2, #0
 4512              	.LVL540:
 4513              	.L311:
 4514              		.loc 1 788 0 is_stmt 0 discriminator 1
 4515 02e2 F5EEC07A 		fcmpezs	s15
 4516 02e6 F1EE10FA 		fmstat
 4517 02ea D3B2     		uxtb	r3, r2
 4518              	.LVL541:
 4519 02ec 9FED1F8A 		flds	s16, .L347+44
 4520 02f0 10D5     		bpl	.L313
 4521              	.LVL542:
 4522 02f2 0132     		adds	r2, r2, #1
 4523              	.LVL543:
 4524              		.loc 1 788 0 discriminator 3
 4525 02f4 B2F5807F 		cmp	r2, #256
 4526 02f8 02D0     		beq	.L344
 4527              	.LVL544:
 4528              		.loc 1 788 0 discriminator 4
 4529 02fa 77EE887A 		fadds	s15, s15, s16
 4530              	.LVL545:
 4531 02fe F0E7     		b	.L311
 4532              	.LVL546:
 4533              	.L344:
 4534 0300 0023     		movs	r3, #0
 4535              	.LVL547:
 4536 0302 07E0     		b	.L313
 4537              	.LVL548:
 4538              	.L316:
 4539              		.loc 1 788 0 discriminator 6
 4540 0304 0133     		adds	r3, r3, #1
 4541              	.LVL549:
 4542 0306 13F0FF03 		ands	r3, r3, #255
 4543              	.LVL550:
 4544 030a 08D0     		beq	.L319
 4545              		.loc 1 788 0 discriminator 8
 4546 030c 9FED177A 		flds	s14, .L347+44
 4547 0310 77EEC77A 		fsubs	s15, s15, s14
 4548              	.LVL551:
 4549              	.L313:
 4550              		.loc 1 788 0 discriminator 5
 4551 0314 F4EEC87A 		fcmpes	s15, s16
 4552 0318 F1EE10FA 		fmstat
 4553 031c F2DA     		bge	.L316
 4554              	.LVL552:
 4555              	.L319:
 4556              	.LBE96:
 4557              	.LBE98:
 4558              		.loc 1 788 0
 4559 031e 17EE900A 		fmrs	r0, s15
 4560 0322 FFF7FEFF 		bl	__aeabi_f2d
 4561              	.LVL553:
 4562 0326 0246     		mov	r2, r0
 4563 0328 0B46     		mov	r3, r1
 4564 032a 3046     		mov	r0, r6
 4565 032c 3946     		mov	r1, r7
 4566 032e FFF7FEFF 		bl	__aeabi_dsub
 4567              	.LVL554:
 4568 0332 FFF7FEFF 		bl	__aeabi_d2f
 4569              	.LVL555:
 4570              	.LBB99:
 4571 0336 0022     		movs	r2, #0
 4572              	.LBE99:
 4573 0338 07EE900A 		fmsr	s15, r0
 4574              	.LVL556:
 4575              	.LBB100:
 4576 033c 20E0     		b	.L317
 4577              	.L348:
 4578 033e 00BF     		.align	3
 4579              	.L347:
 4580 0340 182D4454 		.word	1413754136
 4581 0344 FB210940 		.word	1074340347
 4582 0348 F8C1631A 		.word	442745336
 4583 034c DCA54C40 		.word	1078765020
 4584 0350 182D4454 		.word	1413754136
 4585 0354 FB21F93F 		.word	1073291771
 4586 0358 00000000 		.word	.LANCHOR6
 4587 035c 00000000 		.word	.LANCHOR50
 4588 0360 00000000 		.word	.LANCHOR34
 4589 0364 00004040 		.word	1077936128
 4590 0368 00000000 		.word	.LANCHOR11
 4591 036c 0000B443 		.word	1135869952
 4592 0370 0000AF43 		.word	1135542272
 4593              	.LVL557:
 4594              	.L346:
 4595 0374 0132     		adds	r2, r2, #1
 4596              	.LVL558:
 4597              		.loc 1 788 0 discriminator 12
 4598 0376 B2F5807F 		cmp	r2, #256
 4599 037a 08D0     		beq	.L345
 4600              	.LVL559:
 4601              		.loc 1 788 0 discriminator 13
 4602 037c 77EE887A 		fadds	s15, s15, s16
 4603              	.LVL560:
 4604              	.L317:
 4605              		.loc 1 788 0 discriminator 10
 4606 0380 F5EEC07A 		fcmpezs	s15
 4607 0384 F1EE10FA 		fmstat
 4608 0388 D3B2     		uxtb	r3, r2
 4609              	.LVL561:
 4610 038a F3D4     		bmi	.L346
 4611 038c 09E0     		b	.L321
 4612              	.LVL562:
 4613              	.L345:
 4614 038e 0023     		movs	r3, #0
 4615              	.LVL563:
 4616 0390 07E0     		b	.L321
 4617              	.LVL564:
 4618              	.L324:
 4619              		.loc 1 788 0 discriminator 15
 4620 0392 0133     		adds	r3, r3, #1
 4621              	.LVL565:
 4622 0394 13F0FF03 		ands	r3, r3, #255
 4623              	.LVL566:
 4624 0398 08D0     		beq	.L328
 4625              		.loc 1 788 0 discriminator 17
 4626 039a 1FED0C7A 		flds	s14, .L347+44
 4627 039e 77EEC77A 		fsubs	s15, s15, s14
 4628              	.LVL567:
 4629              	.L321:
 4630              		.loc 1 788 0 discriminator 14
 4631 03a2 F4EEC87A 		fcmpes	s15, s16
 4632 03a6 F1EE10FA 		fmstat
 4633 03aa F2DA     		bge	.L324
 4634              	.LVL568:
 4635              	.L328:
 4636              	.LBE100:
 4637              		.loc 1 788 0
 4638 03ac 1FED107A 		flds	s14, .L347+48
 4639 03b0 F4EEC77A 		fcmpes	s15, s14
 4640 03b4 F1EE10FA 		fmstat
 4641 03b8 1FDC     		bgt	.L325
 4642              		.loc 1 788 0 discriminator 20
 4643 03ba B2EE047A 		fconsts	s14, #36
 4644 03be F4EEC77A 		fcmpes	s15, s14
 4645 03c2 F1EE10FA 		fmstat
 4646 03c6 18D4     		bmi	.L325
 4647 03c8 20E0     		b	.L282
 4648              	.LVL569:
 4649              	.L290:
 4650              	.LBE94:
 789:firmwares/fixedwing/nav.c ****         oval_status = OR21;
 790:firmwares/fixedwing/nav.c ****         InitStage();
 791:firmwares/fixedwing/nav.c ****         LINE_START_FUNCTION;
 792:firmwares/fixedwing/nav.c ****       }
 793:firmwares/fixedwing/nav.c ****       return;
 794:firmwares/fixedwing/nav.c **** 
 795:firmwares/fixedwing/nav.c ****     case OR21:
 796:firmwares/fixedwing/nav.c ****       nav_route_xy(waypoints[p2].x, waypoints[p2].y, waypoints[p1].x, waypoints[p1].y);
 4651              		.loc 1 796 0 is_stmt 1
 4652 03ca 0C23     		movs	r3, #12
 4653 03cc 03FB0565 		mla	r5, r3, r5, r6
 4654 03d0 03FB0866 		mla	r6, r3, r8, r6
 4655 03d4 2868     		ldr	r0, [r5]	@ float
 4656              	.LVL570:
 4657 03d6 6968     		ldr	r1, [r5, #4]	@ float
 4658 03d8 3268     		ldr	r2, [r6]	@ float
 4659 03da 7368     		ldr	r3, [r6, #4]	@ float
 4660 03dc FFF7FEFF 		bl	nav_route_xy
 4661              	.LVL571:
 797:firmwares/fixedwing/nav.c ****       if (nav_approaching_xy(waypoints[p1].x, waypoints[p1].y, waypoints[p2].x, waypoints[p2].y, CA
 4662              		.loc 1 797 0
 4663 03e0 0D4B     		ldr	r3, .L349
 4664 03e2 0093     		str	r3, [sp]	@ float
 4665 03e4 3068     		ldr	r0, [r6]	@ float
 4666 03e6 7168     		ldr	r1, [r6, #4]	@ float
 4667 03e8 2A68     		ldr	r2, [r5]	@ float
 4668 03ea 6B68     		ldr	r3, [r5, #4]	@ float
 4669 03ec FFF7FEFF 		bl	nav_approaching_xy
 4670              	.LVL572:
 4671 03f0 60B1     		cbz	r0, .L282
 798:firmwares/fixedwing/nav.c ****         oval_status = OC1;
 4672              		.loc 1 798 0
 4673 03f2 0323     		movs	r3, #3
 4674 03f4 02E0     		b	.L340
 4675              	.LVL573:
 4676              	.L306:
 770:firmwares/fixedwing/nav.c ****         InitStage();
 4677              		.loc 1 770 0
 4678 03f6 0023     		movs	r3, #0
 4679 03f8 00E0     		b	.L340
 4680              	.LVL574:
 4681              	.L325:
 789:firmwares/fixedwing/nav.c ****         InitStage();
 4682              		.loc 1 789 0
 4683 03fa 0223     		movs	r3, #2
 4684              	.LVL575:
 4685              	.L340:
 4686 03fc 2370     		strb	r3, [r4]
 4687              	.LVL576:
 4688              	.L339:
 799:firmwares/fixedwing/nav.c ****         InitStage();
 800:firmwares/fixedwing/nav.c ****         LINE_STOP_FUNCTION;
 801:firmwares/fixedwing/nav.c ****       }
 802:firmwares/fixedwing/nav.c ****       return;
 803:firmwares/fixedwing/nav.c **** 
 804:firmwares/fixedwing/nav.c ****     default: /* Should not occur !!! Doing nothing */
 805:firmwares/fixedwing/nav.c ****       return;
 806:firmwares/fixedwing/nav.c ****   }
 807:firmwares/fixedwing/nav.c **** }
 4689              		.loc 1 807 0
 4690 03fe 03B0     		add	sp, sp, #12
 4691              		.cfi_remember_state
 4692              		.cfi_def_cfa_offset 76
 4693              		@ sp needed
 4694 0400 BDEC0A8B 		fldmfdd	sp!, {d8-d12}
 4695              		.cfi_restore 88
 4696              		.cfi_restore 89
 4697              		.cfi_restore 86
 4698              		.cfi_restore 87
 4699              		.cfi_restore 84
 4700              		.cfi_restore 85
 4701              		.cfi_restore 82
 4702              		.cfi_restore 83
 4703              		.cfi_restore 80
 4704              		.cfi_restore 81
 4705              		.cfi_def_cfa_offset 36
 4706              	.LVL577:
 4707 0404 BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4708              		.cfi_restore 14
 4709              		.cfi_restore 11
 4710              		.cfi_restore 10
 4711              		.cfi_restore 9
 4712              		.cfi_restore 8
 4713              		.cfi_restore 7
 4714              		.cfi_restore 6
 4715              		.cfi_restore 5
 4716              		.cfi_restore 4
 4717              		.cfi_def_cfa_offset 0
 4718              	.LVL578:
 790:firmwares/fixedwing/nav.c ****         LINE_START_FUNCTION;
 4719              		.loc 1 790 0
 4720 0408 FFF7FEBF 		b	nav_init_stage
 4721              	.LVL579:
 4722              	.L282:
 4723              		.cfi_restore_state
 4724              		.loc 1 807 0
 4725 040c 03B0     		add	sp, sp, #12
 4726              		.cfi_def_cfa_offset 76
 4727              		@ sp needed
 4728 040e BDEC0A8B 		fldmfdd	sp!, {d8-d12}
 4729              		.cfi_restore 88
 4730              		.cfi_restore 89
 4731              		.cfi_restore 86
 4732              		.cfi_restore 87
 4733              		.cfi_restore 84
 4734              		.cfi_restore 85
 4735              		.cfi_restore 82
 4736              		.cfi_restore 83
 4737              		.cfi_restore 80
 4738              		.cfi_restore 81
 4739              		.cfi_def_cfa_offset 36
 4740              	.LVL580:
 4741 0412 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4742              	.LVL581:
 4743              	.L350:
 4744 0416 00BF     		.align	2
 4745              	.L349:
 4746 0418 00004040 		.word	1077936128
 4747              		.cfi_endproc
 4748              	.LFE492:
 4750              		.section	.text.nav_periodic_task,"ax",%progbits
 4751              		.align	1
 4752              		.global	nav_periodic_task
 4753              		.thumb
 4754              		.thumb_func
 4756              	nav_periodic_task:
 4757              	.LFB229:
 449:firmwares/fixedwing/nav.c ****   nav_survey_active = FALSE;
 4758              		.loc 1 449 0
 4759              		.cfi_startproc
 4760              		@ args = 0, pretend = 0, frame = 0
 4761              		@ frame_needed = 0, uses_anonymous_args = 0
 4762 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 4763              		.cfi_def_cfa_offset 36
 4764              		.cfi_offset 4, -36
 4765              		.cfi_offset 5, -32
 4766              		.cfi_offset 6, -28
 4767              		.cfi_offset 7, -24
 4768              		.cfi_offset 8, -20
 4769              		.cfi_offset 9, -16
 4770              		.cfi_offset 10, -12
 4771              		.cfi_offset 11, -8
 4772              		.cfi_offset 14, -4
 4773 0004 2DED028B 		fstmfdd	sp!, {d8}
 4774              		.cfi_def_cfa_offset 44
 4775              		.cfi_offset 80, -44
 4776              		.cfi_offset 81, -40
 450:firmwares/fixedwing/nav.c **** 
 4777              		.loc 1 450 0
 4778 0008 A04B     		ldr	r3, .L540
 4779              	.LBB114:
 4780              	.LBB115:
 4781              		.file 5 "/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h"
   1:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** /* This file has been generated by gen_flight_plan from /home/dino/paparazzi/conf/flight_plans/MY_f
   2:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** /* Please DO NOT EDIT */
   3:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
   4:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #ifndef FLIGHT_PLAN_H
   5:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define FLIGHT_PLAN_H
   6:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
   7:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #include "std.h"
   8:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #include "generated/modules.h"
   9:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #include "subsystems/datalink/datalink.h"
  10:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define FLIGHT_PLAN_NAME "Basic"
  11:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_UTM_EAST0 440259
  12:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_UTM_NORTH0 4439214
  13:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_UTM_ZONE0 50
  14:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_LAT0 401010990 /* 1e7deg */
  15:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_LON0 1162990961 /* 1e7deg */
  16:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_ALT0 50000 /* mm above msl */
  17:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NAV_MSL0 -10050 /* mm, EGM96 geoid-height (msl) over ellipsoid */
  18:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define QFU 0.0
  19:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_dummy 0
  20:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_HOME 1
  21:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_STDBY 2
  22:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_1 3
  23:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_2 4
  24:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_MOB 5
  25:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_S1 6
  26:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_S2 7
  27:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_AF 8
  28:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_TD 9
  29:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP__BASELEG 10
  30:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WP_CLIMB 11
  31:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WAYPOINTS { \
  32:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {42.0, 42.0, 100},\
  33:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-0.2, -0.5, 100},\
  34:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-36.1, 28.8, 100},\
  35:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-44.1, 68.6, 100},\
  36:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-42.7, -19.2, 100},\
  37:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-54.1, 10.0, 100},\
  38:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-103.3, 99.2, 100},\
  39:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-8.2, -52.7, 100},\
  40:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-4.2, 120.8, 35},\
  41:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-4.2, 100.8, 5},\
  42:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-65.6, 134.2, 100},\
  43:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-37.8, 4.2, 100},\
  44:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** };
  45:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WAYPOINTS_ENU { \
  46:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {41.68, 42.35, 50.00}, /* ENU in meters  */ \
  47:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-0.20, -0.50, 50.00}, /* ENU in meters  */ \
  48:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-36.34, 28.53, 50.00}, /* ENU in meters  */ \
  49:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-44.66, 68.28, 50.00}, /* ENU in meters  */ \
  50:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-42.56, -19.54, 50.00}, /* ENU in meters  */ \
  51:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-54.20, 9.58, 50.00}, /* ENU in meters  */ \
  52:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-104.12, 98.42, 50.00}, /* ENU in meters  */ \
  53:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-7.79, -52.78, 50.00}, /* ENU in meters  */ \
  54:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-5.15, 120.81, -15.00}, /* ENU in meters  */ \
  55:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-5.00, 100.80, -45.00}, /* ENU in meters  */ \
  56:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-66.68, 133.73, 50.00}, /* ENU in meters  */ \
  57:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {-37.85, 3.90, 50.00}, /* ENU in meters  */ \
  58:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** };
  59:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WAYPOINTS_LLA { \
  60:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401014803, .lon=1162995849, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  61:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401010944, .lon=1162990937, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  62:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401013558, .lon=1162986699, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  63:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401017138, .lon=1162985723, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  64:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401009229, .lon=1162985969, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  65:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401011852, .lon=1162984604, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  66:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401019853, .lon=1162978750, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  67:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401006236, .lon=1162990047, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  68:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401021869, .lon=1162990356, .alt=35000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-1
  69:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401020068, .lon=1162990375, .alt=5000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-10
  70:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401023033, .lon=1162983140, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  71:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401011341, .lon=1162986522, .alt=100000}, /* 1e7deg, 1e7deg, mm (above NAV_MSL0, local msl=-
  72:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** };
  73:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WAYPOINTS_LLA_WGS84 { \
  74:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401014803, .lon=1162995849, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  75:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401010944, .lon=1162990937, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  76:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401013558, .lon=1162986699, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  77:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401017138, .lon=1162985723, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  78:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401009229, .lon=1162985969, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  79:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401011852, .lon=1162984604, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  80:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401019853, .lon=1162978750, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  81:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401006236, .lon=1162990047, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  82:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401021869, .lon=1162990356, .alt=24950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  83:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401020068, .lon=1162990375, .alt=-5050}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  84:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401023033, .lon=1162983140, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  85:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  {.lat=401011341, .lon=1162986522, .alt=89950}, /* 1e7deg, 1e7deg, mm (above WGS84 ref ellipsoid) *
  86:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** };
  87:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define WAYPOINTS_GLOBAL { \
  88:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  89:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  90:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  91:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  92:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  93:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  94:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  95:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  96:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  97:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  98:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
  99:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  FALSE, \
 100:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** };
 101:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NB_WAYPOINT 12
 102:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define FP_BLOCKS { \
 103:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Wait GPS" }, \
 104:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Geo init" }, \
 105:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Holding point" }, \
 106:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Takeoff" }, \
 107:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Standby" }, \
 108:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Figure 8 around wp 1" }, \
 109:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Oval 1-2" }, \
 110:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "MOB" }, \
 111:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Survey S1-S2" }, \
 112:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Path 1,2,S1,S2,STDBY" }, \
 113:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Land Right AF-TD" }, \
 114:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "Land Left AF-TD" }, \
 115:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "land" }, \
 116:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "final" }, \
 117:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "flare" }, \
 118:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****  { "HOME" }, \
 119:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** };
 120:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define NB_BLOCK 16
 121:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define GROUND_ALT 50.
 122:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define GROUND_ALT_CM 5000
 123:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define SECURITY_HEIGHT 25.
 124:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define SECURITY_ALT 75.
 125:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define HOME_MODE_HEIGHT 25.
 126:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #define MAX_DIST_FROM_HOME 300.
 127:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 128:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** #ifdef NAV_C
 129:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 130:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 131:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** static inline void auto_nav(void) {
 132:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****   switch (nav_block) {
 4782              		.loc 5 132 0
 4783 000a A14D     		ldr	r5, .L540+4
 4784              	.LBE115:
 4785              	.LBE114:
 450:firmwares/fixedwing/nav.c **** 
 4786              		.loc 1 450 0
 4787 000c 0024     		movs	r4, #0
 449:firmwares/fixedwing/nav.c ****   nav_survey_active = FALSE;
 4788              		.loc 1 449 0
 4789 000e 83B0     		sub	sp, sp, #12
 4790              		.cfi_def_cfa_offset 56
 450:firmwares/fixedwing/nav.c **** 
 4791              		.loc 1 450 0
 4792 0010 1C70     		strb	r4, [r3]
 452:firmwares/fixedwing/nav.c ****   dist2_to_wp = 0.;
 4793              		.loc 1 452 0
 4794 0012 FFF7FEFF 		bl	compute_dist2_to_home
 4795              	.LVL582:
 453:firmwares/fixedwing/nav.c **** 
 4796              		.loc 1 453 0
 4797 0016 9F4B     		ldr	r3, .L540+8
 4798              	.LBB139:
 4799              	.LBB137:
 4800              		.loc 5 132 0
 4801 0018 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 4802              	.LBE137:
 4803              	.LBE139:
 453:firmwares/fixedwing/nav.c **** 
 4804              		.loc 1 453 0
 4805 001a 0026     		movs	r6, #0
 4806 001c 1E60     		str	r6, [r3]	@ float
 4807 001e 2346     		mov	r3, r4
 4808 0020 9D4C     		ldr	r4, .L540+12
 4809              	.LBB140:
 4810              	.LBB138:
 4811              		.loc 5 132 0
 4812 0022 0F2A     		cmp	r2, #15
 4813 0024 00F2C184 		bhi	.L352
 4814 0028 DFE812F0 		tbh	[pc, r2, lsl #1]
 4815              	.L354:
 4816 002c 1000     		.2byte	(.L353-.L354)/2
 4817 002e 2500     		.2byte	(.L355-.L354)/2
 4818 0030 4400     		.2byte	(.L356-.L354)/2
 4819 0032 6D00     		.2byte	(.L357-.L354)/2
 4820 0034 C400     		.2byte	(.L358-.L354)/2
 4821 0036 DD00     		.2byte	(.L359-.L354)/2
 4822 0038 0101     		.2byte	(.L360-.L354)/2
 4823 003a 2401     		.2byte	(.L361-.L354)/2
 4824 003c 9101     		.2byte	(.L362-.L354)/2
 4825 003e A901     		.2byte	(.L363-.L354)/2
 4826 0040 4102     		.2byte	(.L364-.L354)/2
 4827 0042 4F02     		.2byte	(.L365-.L354)/2
 4828 0044 8002     		.2byte	(.L366-.L354)/2
 4829 0046 E303     		.2byte	(.L367-.L354)/2
 4830 0048 7C04     		.2byte	(.L368-.L354)/2
 4831 004a AF04     		.2byte	(.L369-.L354)/2
 4832              		.p2align 1
 4833              	.L353:
 133:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(0) // Wait GPS
 134:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 135:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 4834              		.loc 5 135 0
 4835 004c 934E     		ldr	r6, .L540+16
 133:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(0) // Wait GPS
 4836              		.loc 5 133 0
 4837 004e 2B70     		strb	r3, [r5]
 4838              		.loc 5 135 0
 4839 0050 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4840 0052 13B1     		cbz	r3, .L371
 4841 0054 022B     		cmp	r3, #2
 4842 0056 06D9     		bls	.L372
 4843 0058 27E0     		b	.L373
 4844              	.L371:
 136:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 137:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         kill_throttle = 1;
 4845              		.loc 5 137 0
 4846 005a 914A     		ldr	r2, .L540+20
 4847 005c 0123     		movs	r3, #1
 4848 005e 1370     		strb	r3, [r2]
 138:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 4849              		.loc 5 138 0
 4850 0060 3370     		strb	r3, [r6]
 4851 0062 FFF7FEFF 		bl	nav_init_stage
 4852              	.LVL583:
 4853              	.L372:
 139:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Label(while_1)
 140:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 141:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (!(GpsFixValid()))) Goto(endwhile_2) else NextStageAndBreak();
 4854              		.loc 5 141 0
 4855 0066 8F4B     		ldr	r3, .L540+24
 4856 0068 93F85B30 		ldrb	r3, [r3, #91]	@ zero_extendqisi2
 4857 006c 032B     		cmp	r3, #3
 4858 006e 1CD0     		beq	.L373
 4859 0070 0222     		movs	r2, #2
 4860 0072 8A4B     		ldr	r3, .L540+16
 4861 0074 D5E0     		b	.L521
 4862              	.L370:
 4863              	.L355:
 142:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         Stage(2)
 143:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           Goto(while_1)
 144:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         Label(endwhile_2)
 145:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 146:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(3)
 147:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 148:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 149:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 150:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 151:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 152:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 153:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(1) // Geo init
 154:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 155:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 4864              		.loc 5 155 0
 4865 0076 894B     		ldr	r3, .L540+16
 4866 0078 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 153:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 4867              		.loc 5 153 0
 4868 007a 0122     		movs	r2, #1
 4869              		.loc 5 155 0
 4870 007c 9142     		cmp	r1, r2
 153:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 4871              		.loc 5 153 0
 4872 007e 2A70     		strb	r2, [r5]
 4873 0080 1E46     		mov	r6, r3
 4874              		.loc 5 155 0
 4875 0082 02D9     		bls	.L374
 4876 0084 0229     		cmp	r1, #2
 4877 0086 05D0     		beq	.L375
 4878 0088 0FE0     		b	.L373
 4879              	.L374:
 156:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Label(while_3)
 157:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 158:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (LessThan(NavBlockTime(),10))) Goto(endwhile_4) else NextStageAndBreak();
 4880              		.loc 5 158 0
 4881 008a 8749     		ldr	r1, .L540+28
 4882 008c 0988     		ldrh	r1, [r1]
 4883 008e 0929     		cmp	r1, #9
 4884 0090 40F2C780 		bls	.L521
 4885              	.L375:
 159:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         Stage(1)
 160:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           Goto(while_3)
 161:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         Label(endwhile_4)
 162:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 4886              		.loc 5 162 0
 4887 0094 0223     		movs	r3, #2
 4888 0096 3370     		strb	r3, [r6]
 4889              	.LBB116:
 163:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (NavSetGroundReferenceHere())) {
 4890              		.loc 5 163 0
 4891 0098 FFF7FEFF 		bl	nav_reset_reference
 4892              	.LVL584:
 4893 009c FFF7FEFF 		bl	nav_update_waypoints_alt
 4894              	.LVL585:
 4895              	.LBE116:
 164:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NextStage();
 4896              		.loc 5 164 0
 4897 00a0 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 4898 00a2 0133     		adds	r3, r3, #1
 4899 00a4 3370     		strb	r3, [r6]
 4900 00a6 FFF7FEFF 		bl	nav_init_stage
 4901              	.LVL586:
 4902              	.L373:
 165:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         } else {
 166:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           break;
 167:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 168:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 169:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(3)
 4903              		.loc 5 169 0
 4904 00aa 0323     		movs	r3, #3
 4905 00ac 3370     		strb	r3, [r6]
 170:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 4906              		.loc 5 170 0
 4907 00ae 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 4908 00b0 0133     		adds	r3, r3, #1
 4909 00b2 1DE2     		b	.L524
 4910              	.L356:
 171:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 172:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 173:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 174:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 175:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 176:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(2) // Holding point
 177:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 178:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 4911              		.loc 5 178 0
 4912 00b4 794B     		ldr	r3, .L540+16
 4913 00b6 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 176:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 4914              		.loc 5 176 0
 4915 00b8 0222     		movs	r2, #2
 4916 00ba 2A70     		strb	r2, [r5]
 4917 00bc 1D46     		mov	r5, r3
 4918              		.loc 5 178 0
 4919 00be 11B1     		cbz	r1, .L377
 4920 00c0 0129     		cmp	r1, #1
 4921 00c2 06D0     		beq	.L378
 4922 00c4 1BE0     		b	.L527
 4923              	.L377:
 179:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 180:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         kill_throttle = 1;
 4924              		.loc 5 180 0
 4925 00c6 764A     		ldr	r2, .L540+20
 4926 00c8 0123     		movs	r3, #1
 4927 00ca 1370     		strb	r3, [r2]
 181:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 4928              		.loc 5 181 0
 4929 00cc 2B70     		strb	r3, [r5]
 4930 00ce FFF7FEFF 		bl	nav_init_stage
 4931              	.LVL587:
 4932              	.L378:
 182:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 4933              		.loc 5 182 0
 4934 00d2 0123     		movs	r3, #1
 4935 00d4 2B70     		strb	r3, [r5]
 183:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         {
 184:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavAttitude(RadOfDeg(0));
 4936              		.loc 5 184 0
 4937 00d6 0222     		movs	r2, #2
 4938              	.L513:
 4939 00d8 744B     		ldr	r3, .L540+32
 4940 00da 1A70     		strb	r2, [r3]
 4941 00dc 744B     		ldr	r3, .L540+36
 185:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 4942              		.loc 5 185 0
 4943 00de 754A     		ldr	r2, .L540+40
 184:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 4944              		.loc 5 184 0
 4945 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4946 00e2 012B     		cmp	r3, #1
 4947 00e4 1CBF     		itt	ne
 4948 00e6 744B     		ldrne	r3, .L540+44
 4949 00e8 1E60     		strne	r6, [r3]	@ float
 4950              		.loc 5 185 0
 4951 00ea 0023     		movs	r3, #0
 4952 00ec 1370     		strb	r3, [r2]
 4953 00ee 734A     		ldr	r2, .L540+48
 4954 00f0 1660     		str	r6, [r2]	@ float
 186:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0));
 4955              		.loc 5 186 0
 4956 00f2 0122     		movs	r2, #1
 4957 00f4 2270     		strb	r2, [r4]
 4958 00f6 724A     		ldr	r2, .L540+52
 4959 00f8 1380     		strh	r3, [r2]	@ movhi
 4960 00fa 00F056BC 		b	.L352
 4961              	.L527:
 187:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 188:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 189:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 190:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 4962              		.loc 5 190 0
 4963 00fe 1A70     		strb	r2, [r3]
 191:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 4964              		.loc 5 191 0
 4965 0100 0322     		movs	r2, #3
 4966 0102 00F04EBC 		b	.L514
 4967              	.L357:
 192:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 193:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 194:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 195:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 196:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 197:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(3) // Takeoff
 4968              		.loc 5 197 0
 4969 0106 0327     		movs	r7, #3
 4970 0108 2F70     		strb	r7, [r5]
 198:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 199:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     if ((nav_block != 4) && (GetPosAlt()>(GetAltRef()+25))) { GotoBlock(4); return; }
 4971              		.loc 5 199 0
 4972 010a FFF7FEFF 		bl	stateGetPositionUtm_f
 4973              	.LVL588:
 4974 010e 6D4B     		ldr	r3, .L540+56
 197:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 4975              		.loc 5 197 0
 4976 0110 5F4E     		ldr	r6, .L540+4
 4977              		.loc 5 199 0
 4978 0112 D3ED007A 		flds	s15, [r3]
 4979 0116 B3EE097A 		fconsts	s14, #57
 4980 011a 77EE877A 		fadds	s15, s15, s14
 4981 011e 90ED027A 		flds	s14, [r0, #8]
 4982 0122 B4EEE77A 		fcmpes	s14, s15
 4983 0126 F1EE10FA 		fmstat
 4984 012a 01DD     		ble	.L498
 4985 012c 0423     		movs	r3, #4
 4986 012e 3FE0     		b	.L523
 4987              	.L498:
 200:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 4988              		.loc 5 200 0
 4989 0130 5A4B     		ldr	r3, .L540+16
 4990 0132 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4991 0134 012A     		cmp	r2, #1
 4992 0136 1D46     		mov	r5, r3
 4993 0138 0AD0     		beq	.L384
 4994 013a 02D3     		bcc	.L385
 4995 013c 022A     		cmp	r2, #2
 4996 013e 0ED0     		beq	.L386
 4997 0140 33E0     		b	.L528
 4998              	.L385:
 201:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 202:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         kill_throttle = 0;
 4999              		.loc 5 202 0
 5000 0142 574B     		ldr	r3, .L540+20
 5001 0144 0022     		movs	r2, #0
 5002 0146 1A70     		strb	r2, [r3]
 203:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 5003              		.loc 5 203 0
 5004 0148 0123     		movs	r3, #1
 5005 014a 2B70     		strb	r3, [r5]
 5006 014c FFF7FEFF 		bl	nav_init_stage
 5007              	.LVL589:
 5008              	.L384:
 204:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 205:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         autopilot_flight_time = 0;
 5009              		.loc 5 205 0
 5010 0150 5D4B     		ldr	r3, .L540+60
 5011 0152 0022     		movs	r2, #0
 5012 0154 1A80     		strh	r2, [r3]	@ movhi
 206:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 5013              		.loc 5 206 0
 5014 0156 0223     		movs	r3, #2
 5015 0158 2B70     		strb	r3, [r5]
 5016 015a FFF7FEFF 		bl	nav_init_stage
 5017              	.LVL590:
 5018              	.L386:
 207:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5019              		.loc 5 207 0
 5020 015e 0223     		movs	r3, #2
 5021 0160 2B70     		strb	r3, [r5]
 208:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(11,1,CARROT)) NextStageAndBreakFrom(11) else {
 5022              		.loc 5 208 0
 5023 0162 5A4D     		ldr	r5, .L540+64
 5024 0164 5A4B     		ldr	r3, .L540+68
 5025 0166 0093     		str	r3, [sp]	@ float
 5026 0168 D5F88400 		ldr	r0, [r5, #132]	@ float
 5027 016c D5F88810 		ldr	r1, [r5, #136]	@ float
 5028 0170 EA68     		ldr	r2, [r5, #12]	@ float
 5029 0172 2B69     		ldr	r3, [r5, #16]	@ float
 207:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5030              		.loc 5 207 0
 5031 0174 494F     		ldr	r7, .L540+16
 5032              		.loc 5 208 0
 5033 0176 FFF7FEFF 		bl	nav_approaching_xy
 5034              	.LVL591:
 5035 017a 0646     		mov	r6, r0
 5036 017c 08B1     		cbz	r0, .L387
 5037 017e 0B22     		movs	r2, #11
 5038 0180 E8E3     		b	.L517
 5039              	.L387:
 209:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavGotoWaypoint(11);
 5040              		.loc 5 209 0
 5041 0182 544B     		ldr	r3, .L540+72
 5042 0184 D5F88810 		ldr	r1, [r5, #136]	@ float
 5043 0188 1870     		strb	r0, [r3]
 5044 018a D5F88400 		ldr	r0, [r5, #132]	@ float
 5045 018e FFF7FEFF 		bl	fly_to_xy
 5046              	.LVL592:
 210:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(15));
 5047              		.loc 5 210 0
 5048 0192 484B     		ldr	r3, .L540+40
 5049 0194 504A     		ldr	r2, .L540+76
 5050 0196 1E70     		strb	r6, [r3]
 5051 0198 484B     		ldr	r3, .L540+48
 5052 019a 1A60     		str	r2, [r3]	@ float
 211:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(1.000000));
 5053              		.loc 5 211 0
 5054 019c 0123     		movs	r3, #1
 5055 019e 2370     		strb	r3, [r4]
 5056 01a0 474B     		ldr	r3, .L540+52
 5057 01a2 4FF41652 		mov	r2, #9600
 5058 01a6 1A80     		strh	r2, [r3]	@ movhi
 5059 01a8 FFE3     		b	.L352
 5060              	.L528:
 212:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 213:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 214:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 215:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(3)
 5061              		.loc 5 215 0
 5062 01aa 1F70     		strb	r7, [r3]
 216:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5063              		.loc 5 216 0
 5064 01ac 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 5065 01ae 0133     		adds	r3, r3, #1
 5066              	.L523:
 5067 01b0 3370     		strb	r3, [r6]
 5068 01b2 F8E3     		b	.L515
 5069              	.L358:
 217:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 218:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 219:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 220:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 221:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 222:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(4) // Standby
 5070              		.loc 5 222 0
 5071 01b4 0423     		movs	r3, #4
 5072 01b6 2B70     		strb	r3, [r5]
 223:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 224:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5073              		.loc 5 224 0
 5074 01b8 384B     		ldr	r3, .L540+16
 5075 01ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5076 01bc 7AB9     		cbnz	r2, .L500
 225:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 5077              		.loc 5 225 0
 5078 01be 1A70     		strb	r2, [r3]
 226:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5079              		.loc 5 226 0
 5080 01c0 3C4B     		ldr	r3, .L540+40
 5081 01c2 1A70     		strb	r2, [r3]
 5082 01c4 3D4B     		ldr	r3, .L540+48
 227:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(2), 0.);
 5083              		.loc 5 227 0
 5084 01c6 454A     		ldr	r2, .L540+80
 226:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5085              		.loc 5 226 0
 5086 01c8 1E60     		str	r6, [r3]	@ float
 5087              		.loc 5 227 0
 5088 01ca 0323     		movs	r3, #3
 5089 01cc 2370     		strb	r3, [r4]
 5090 01ce 3F4B     		ldr	r3, .L540+64
 5091 01d0 196A     		ldr	r1, [r3, #32]	@ float
 5092 01d2 1160     		str	r1, [r2]	@ float
 5093 01d4 424A     		ldr	r2, .L540+84
 228:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(2, nav_radius);
 5094              		.loc 5 228 0
 5095 01d6 9869     		ldr	r0, [r3, #24]	@ float
 227:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(2), 0.);
 5096              		.loc 5 227 0
 5097 01d8 1660     		str	r6, [r2]	@ float
 5098              		.loc 5 228 0
 5099 01da D969     		ldr	r1, [r3, #28]	@ float
 5100 01dc AEE0     		b	.L519
 5101              	.L500:
 229:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 230:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 231:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 5102              		.loc 5 231 0
 5103 01de 0122     		movs	r2, #1
 5104 01e0 1A70     		strb	r2, [r3]
 232:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5105              		.loc 5 232 0
 5106 01e2 0522     		movs	r2, #5
 5107 01e4 DDE3     		b	.L514
 5108              	.L359:
 233:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 234:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 235:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 236:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 237:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 238:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(5) // Figure 8 around wp 1
 239:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 240:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5109              		.loc 5 240 0
 5110 01e6 2D4B     		ldr	r3, .L540+16
 5111 01e8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 238:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 5112              		.loc 5 238 0
 5113 01ea 0521     		movs	r1, #5
 5114 01ec 2970     		strb	r1, [r5]
 5115              		.loc 5 240 0
 5116 01ee AAB1     		cbz	r2, .L391
 5117 01f0 012A     		cmp	r2, #1
 5118 01f2 18D1     		bne	.L529
 241:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 242:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_eight_init();
 243:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStageAndBreak();
 244:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 5119              		.loc 5 244 0
 5120 01f4 1A70     		strb	r2, [r3]
 245:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5121              		.loc 5 245 0
 5122 01f6 2F4B     		ldr	r3, .L540+40
 5123 01f8 0022     		movs	r2, #0
 5124 01fa 1A70     		strb	r2, [r3]
 5125 01fc 2F4B     		ldr	r3, .L540+48
 5126 01fe 1E60     		str	r6, [r3]	@ float
 246:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 5127              		.loc 5 246 0
 5128 0200 324B     		ldr	r3, .L540+64
 5129 0202 DA6A     		ldr	r2, [r3, #44]	@ float
 5130 0204 354B     		ldr	r3, .L540+80
 5131 0206 1A60     		str	r2, [r3]	@ float
 5132 0208 354B     		ldr	r3, .L540+84
 5133 020a 1E60     		str	r6, [r3]	@ float
 247:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         Eight(3, 4, nav_radius);
 5134              		.loc 5 247 0
 5135 020c 354B     		ldr	r3, .L540+88
 246:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 5136              		.loc 5 246 0
 5137 020e 0320     		movs	r0, #3
 5138              		.loc 5 247 0
 5139 0210 0421     		movs	r1, #4
 5140 0212 1A68     		ldr	r2, [r3]	@ float
 246:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 5141              		.loc 5 246 0
 5142 0214 2070     		strb	r0, [r4]
 5143              		.loc 5 247 0
 5144 0216 FFF7FEFF 		bl	nav_eight
 5145              	.LVL593:
 5146 021a C6E3     		b	.L352
 5147              	.L391:
 5148              	.LBB117:
 5149              	.LBB118:
 584:firmwares/fixedwing/nav.c **** }
 5150              		.loc 1 584 0
 5151 021c 324A     		ldr	r2, .L540+92
 5152 021e 1170     		strb	r1, [r2]
 5153              	.LBE118:
 5154              	.LBE117:
 243:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 5155              		.loc 5 243 0
 5156 0220 0122     		movs	r2, #1
 5157              	.L521:
 5158 0222 1A70     		strb	r2, [r3]
 5159 0224 9BE3     		b	.L518
 5160              	.L529:
 248:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 249:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 250:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5161              		.loc 5 250 0
 5162 0226 0222     		movs	r2, #2
 5163 0228 1A70     		strb	r2, [r3]
 251:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5164              		.loc 5 251 0
 5165 022a 0622     		movs	r2, #6
 5166 022c B9E3     		b	.L514
 5167              	.L360:
 252:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 253:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 254:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 255:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 256:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 257:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(6) // Oval 1-2
 5168              		.loc 5 257 0
 5169 022e 0623     		movs	r3, #6
 5170 0230 2B70     		strb	r3, [r5]
 258:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 259:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5171              		.loc 5 259 0
 5172 0232 1A4D     		ldr	r5, .L540+16
 5173 0234 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5174 0236 ABB1     		cbz	r3, .L394
 5175 0238 012B     		cmp	r3, #1
 5176 023a 17D1     		bne	.L530
 260:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 261:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_oval_init();
 262:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStageAndBreak();
 263:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 5177              		.loc 5 263 0
 5178 023c 2B70     		strb	r3, [r5]
 264:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5179              		.loc 5 264 0
 5180 023e 1D4B     		ldr	r3, .L540+40
 5181 0240 0022     		movs	r2, #0
 5182 0242 1A70     		strb	r2, [r3]
 5183 0244 1D4B     		ldr	r3, .L540+48
 5184 0246 1E60     		str	r6, [r3]	@ float
 265:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 5185              		.loc 5 265 0
 5186 0248 204B     		ldr	r3, .L540+64
 5187 024a DA6A     		ldr	r2, [r3, #44]	@ float
 5188 024c 234B     		ldr	r3, .L540+80
 5189 024e 1A60     		str	r2, [r3]	@ float
 5190 0250 234B     		ldr	r3, .L540+84
 5191 0252 1E60     		str	r6, [r3]	@ float
 266:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         Oval(3, 4, nav_radius);
 5192              		.loc 5 266 0
 5193 0254 234B     		ldr	r3, .L540+88
 265:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 5194              		.loc 5 265 0
 5195 0256 0321     		movs	r1, #3
 5196              		.loc 5 266 0
 5197 0258 0420     		movs	r0, #4
 5198 025a 1A68     		ldr	r2, [r3]	@ float
 265:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(3), 0.);
 5199              		.loc 5 265 0
 5200 025c 2170     		strb	r1, [r4]
 5201              		.loc 5 266 0
 5202 025e FFF7FEFF 		bl	nav_oval
 5203              	.LVL594:
 5204 0262 A2E3     		b	.L352
 5205              	.L394:
 260:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_oval_init();
 5206              		.loc 5 260 0
 5207 0264 2B70     		strb	r3, [r5]
 261:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStageAndBreak();
 5208              		.loc 5 261 0
 5209 0266 FFF7FEFF 		bl	nav_oval_init
 5210              	.LVL595:
 5211 026a BAE2     		b	.L460
 5212              	.L530:
 267:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 268:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 269:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5213              		.loc 5 269 0
 5214 026c 0223     		movs	r3, #2
 5215 026e 2B70     		strb	r3, [r5]
 270:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5216              		.loc 5 270 0
 5217 0270 0722     		movs	r2, #7
 5218 0272 96E3     		b	.L514
 5219              	.L361:
 271:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 272:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 273:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 274:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 275:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 276:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(7) // MOB
 5220              		.loc 5 276 0
 5221 0274 0723     		movs	r3, #7
 5222 0276 2B70     		strb	r3, [r5]
 277:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 278:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5223              		.loc 5 278 0
 5224 0278 084B     		ldr	r3, .L540+16
 5225 027a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5226 027c 012A     		cmp	r2, #1
 5227 027e 1D46     		mov	r5, r3
 5228 0280 44D0     		beq	.L397
 5229 0282 33D3     		bcc	.L398
 5230 0284 022A     		cmp	r2, #2
 5231 0286 48D0     		beq	.L399
 5232 0288 5DE0     		b	.L531
 5233              	.L541:
 5234 028a 00BF     		.align	2
 5235              	.L540:
 5236 028c 00000000 		.word	.LANCHOR13
 5237 0290 00000000 		.word	nav_block
 5238 0294 00000000 		.word	.LANCHOR9
 5239 0298 00000000 		.word	v_ctl_mode
 5240 029c 00000000 		.word	nav_stage
 5241 02a0 00000000 		.word	kill_throttle
 5242 02a4 00000000 		.word	gps
 5243 02a8 00000000 		.word	block_time
 5244 02ac 00000000 		.word	lateral_mode
 5245 02b0 00000000 		.word	pprz_mode
 5246 02b4 00000000 		.word	v_ctl_climb_mode
 5247 02b8 00000000 		.word	h_ctl_roll_setpoint
 5248 02bc 00000000 		.word	.LANCHOR44
 5249 02c0 00000000 		.word	.LANCHOR48
 5250 02c4 00000000 		.word	.LANCHOR12
 5251 02c8 00000000 		.word	autopilot_flight_time
 5252 02cc 00000000 		.word	.LANCHOR6
 5253 02d0 00004040 		.word	1077936128
 5254 02d4 00000000 		.word	.LANCHOR36
 5255 02d8 920A863E 		.word	1048971922
 5256 02dc 00000000 		.word	.LANCHOR0
 5257 02e0 00000000 		.word	v_ctl_altitude_pre_climb
 5258 02e4 00000000 		.word	.LANCHOR46
 5259 02e8 00000000 		.word	.LANCHOR49
 5260              	.L398:
 279:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 5261              		.loc 5 279 0
 5262 02ec 0023     		movs	r3, #0
 5263 02ee 2B70     		strb	r3, [r5]
 5264              	.LBB119:
 280:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (NavSetWaypointHere(WP_MOB))) {
 5265              		.loc 5 280 0
 5266 02f0 FFF7FEFF 		bl	stateGetPositionEnu_f
 5267              	.LVL596:
 5268 02f4 814F     		ldr	r7, .L542
 5269 02f6 0368     		ldr	r3, [r0]	@ float
 5270 02f8 FB63     		str	r3, [r7, #60]	@ float
 5271 02fa FFF7FEFF 		bl	stateGetPositionEnu_f
 5272              	.LVL597:
 5273 02fe 4368     		ldr	r3, [r0, #4]	@ float
 5274 0300 3B64     		str	r3, [r7, #64]	@ float
 5275              	.LBE119:
 281:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NextStage();
 5276              		.loc 5 281 0
 5277 0302 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5278 0304 0133     		adds	r3, r3, #1
 5279 0306 2B70     		strb	r3, [r5]
 5280 0308 FFF7FEFF 		bl	nav_init_stage
 5281              	.LVL598:
 5282              	.L397:
 282:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         } else {
 283:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           break;
 284:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 285:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 286:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_radius = DEFAULT_CIRCLE_RADIUS;
 5283              		.loc 5 286 0
 5284 030c 7C4B     		ldr	r3, .L542+4
 5285 030e 7D4A     		ldr	r2, .L542+8
 5286 0310 1A60     		str	r2, [r3]	@ float
 287:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 5287              		.loc 5 287 0
 5288 0312 0223     		movs	r3, #2
 5289 0314 2B70     		strb	r3, [r5]
 5290 0316 FFF7FEFF 		bl	nav_init_stage
 5291              	.LVL599:
 5292              	.L399:
 288:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5293              		.loc 5 288 0
 5294 031a 0223     		movs	r3, #2
 5295 031c 2B70     		strb	r3, [r5]
 289:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5296              		.loc 5 289 0
 5297 031e 7A4B     		ldr	r3, .L542+12
 5298 0320 0022     		movs	r2, #0
 5299 0322 1A70     		strb	r2, [r3]
 5300 0324 794B     		ldr	r3, .L542+16
 290:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(5), 0.);
 5301              		.loc 5 290 0
 5302 0326 7A4A     		ldr	r2, .L542+20
 289:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5303              		.loc 5 289 0
 5304 0328 1E60     		str	r6, [r3]	@ float
 5305              		.loc 5 290 0
 5306 032a 0323     		movs	r3, #3
 5307 032c 2370     		strb	r3, [r4]
 5308 032e 734B     		ldr	r3, .L542
 5309 0330 596C     		ldr	r1, [r3, #68]	@ float
 5310 0332 1160     		str	r1, [r2]	@ float
 5311 0334 774A     		ldr	r2, .L542+24
 291:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(5, nav_radius);
 5312              		.loc 5 291 0
 5313 0336 D86B     		ldr	r0, [r3, #60]	@ float
 5314 0338 196C     		ldr	r1, [r3, #64]	@ float
 290:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(5), 0.);
 5315              		.loc 5 290 0
 5316 033a 1660     		str	r6, [r2]	@ float
 5317              	.L519:
 5318              		.loc 5 291 0
 5319 033c 704B     		ldr	r3, .L542+4
 5320 033e 1A68     		ldr	r2, [r3]	@ float
 5321 0340 FFF7FEFF 		bl	nav_circle_XY
 5322              	.LVL600:
 5323 0344 31E3     		b	.L352
 5324              	.L531:
 292:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 293:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 294:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(3)
 5325              		.loc 5 294 0
 5326 0346 0322     		movs	r2, #3
 5327 0348 1A70     		strb	r2, [r3]
 295:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5328              		.loc 5 295 0
 5329 034a 0822     		movs	r2, #8
 5330 034c 29E3     		b	.L514
 5331              	.L362:
 296:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 297:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 298:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 299:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 300:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 301:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(8) // Survey S1-S2
 5332              		.loc 5 301 0
 5333 034e 0823     		movs	r3, #8
 5334 0350 2B70     		strb	r3, [r5]
 302:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 303:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5335              		.loc 5 303 0
 5336 0352 714D     		ldr	r5, .L542+28
 5337 0354 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5338 0356 3BB1     		cbz	r3, .L401
 5339 0358 012B     		cmp	r3, #1
 5340 035a 0CD1     		bne	.L532
 304:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 305:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavSurveyRectangleInit(6, 7, 150, NS);
 306:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStageAndBreak();
 307:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 308:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavSurveyRectangle(6, 7);
 5341              		.loc 5 308 0
 5342 035c 0620     		movs	r0, #6
 5343 035e 0721     		movs	r1, #7
 307:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavSurveyRectangle(6, 7);
 5344              		.loc 5 307 0
 5345 0360 2B70     		strb	r3, [r5]
 5346              		.loc 5 308 0
 5347 0362 FFF7FEFF 		bl	nav_survey_rectangle
 5348              	.LVL601:
 5349 0366 20E3     		b	.L352
 5350              	.L401:
 305:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStageAndBreak();
 5351              		.loc 5 305 0
 5352 0368 0620     		movs	r0, #6
 5353 036a 0721     		movs	r1, #7
 5354 036c 6B4A     		ldr	r2, .L542+32
 304:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 5355              		.loc 5 304 0
 5356 036e 2B70     		strb	r3, [r5]
 305:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStageAndBreak();
 5357              		.loc 5 305 0
 5358 0370 FFF7FEFF 		bl	nav_survey_rectangle_init
 5359              	.LVL602:
 5360 0374 35E2     		b	.L460
 5361              	.L532:
 309:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 310:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 311:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5362              		.loc 5 311 0
 5363 0376 0223     		movs	r3, #2
 5364 0378 2B70     		strb	r3, [r5]
 312:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5365              		.loc 5 312 0
 5366 037a 0922     		movs	r2, #9
 5367 037c 11E3     		b	.L514
 5368              	.L363:
 313:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 314:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 315:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 316:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 317:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 318:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(9) // Path 1,2,S1,S2,STDBY
 5369              		.loc 5 318 0
 5370 037e 0923     		movs	r3, #9
 5371 0380 2B70     		strb	r3, [r5]
 319:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 320:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5372              		.loc 5 320 0
 5373 0382 654B     		ldr	r3, .L542+28
 5374 0384 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5375 0386 042A     		cmp	r2, #4
 5376 0388 00F28D80 		bhi	.L403
 5377 038c DFE802F0 		tbb	[pc, r2]
 5378              	.L405:
 5379 0390 03       		.byte	(.L404-.L405)/2
 5380 0391 22       		.byte	(.L406-.L405)/2
 5381 0392 41       		.byte	(.L407-.L405)/2
 5382 0393 62       		.byte	(.L408-.L405)/2
 5383 0394 87       		.byte	(.L409-.L405)/2
 5384 0395 00       		.p2align 1
 5385              	.L404:
 321:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 5386              		.loc 5 321 0
 5387 0396 0022     		movs	r2, #0
 5388 0398 1A70     		strb	r2, [r3]
 322:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(4,3,CARROT)) NextStageAndBreakFrom(4) else {
 5389              		.loc 5 322 0
 5390 039a 584D     		ldr	r5, .L542
 5391 039c 604B     		ldr	r3, .L542+36
 5392 039e 0093     		str	r3, [sp]	@ float
 5393 03a0 286B     		ldr	r0, [r5, #48]	@ float
 5394 03a2 696B     		ldr	r1, [r5, #52]	@ float
 5395 03a4 6A6A     		ldr	r2, [r5, #36]	@ float
 5396 03a6 AB6A     		ldr	r3, [r5, #40]	@ float
 321:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 5397              		.loc 5 321 0
 5398 03a8 DFF86C81 		ldr	r8, .L542+28
 5399              		.loc 5 322 0
 5400 03ac FFF7FEFF 		bl	nav_approaching_xy
 5401              	.LVL603:
 5402 03b0 0746     		mov	r7, r0
 5403 03b2 08B1     		cbz	r0, .L410
 5404 03b4 0422     		movs	r2, #4
 5405 03b6 46E2     		b	.L522
 5406              	.L410:
 323:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(3, 4);
 5407              		.loc 5 323 0
 5408 03b8 2A6B     		ldr	r2, [r5, #48]	@ float
 5409 03ba 6B6B     		ldr	r3, [r5, #52]	@ float
 5410 03bc 686A     		ldr	r0, [r5, #36]	@ float
 5411 03be A96A     		ldr	r1, [r5, #40]	@ float
 5412 03c0 FFF7FEFF 		bl	nav_route_xy
 5413              	.LVL604:
 324:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5414              		.loc 5 324 0
 5415 03c4 504B     		ldr	r3, .L542+12
 325:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(4), 0.);
 5416              		.loc 5 325 0
 5417 03c6 AA6B     		ldr	r2, [r5, #56]	@ float
 324:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5418              		.loc 5 324 0
 5419 03c8 1F70     		strb	r7, [r3]
 5420 03ca 504B     		ldr	r3, .L542+16
 5421 03cc 1E60     		str	r6, [r3]	@ float
 5422              		.loc 5 325 0
 5423 03ce 0323     		movs	r3, #3
 5424 03d0 2370     		strb	r3, [r4]
 5425 03d2 5FE0     		b	.L520
 5426              	.L406:
 326:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 327:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 328:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 5427              		.loc 5 328 0
 5428 03d4 0122     		movs	r2, #1
 5429 03d6 1A70     		strb	r2, [r3]
 329:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(6,4,CARROT)) NextStageAndBreakFrom(6) else {
 5430              		.loc 5 329 0
 5431 03d8 484D     		ldr	r5, .L542
 5432 03da 514B     		ldr	r3, .L542+36
 5433 03dc 0093     		str	r3, [sp]	@ float
 5434 03de A86C     		ldr	r0, [r5, #72]	@ float
 5435 03e0 E96C     		ldr	r1, [r5, #76]	@ float
 5436 03e2 2A6B     		ldr	r2, [r5, #48]	@ float
 5437 03e4 6B6B     		ldr	r3, [r5, #52]	@ float
 328:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(6,4,CARROT)) NextStageAndBreakFrom(6) else {
 5438              		.loc 5 328 0
 5439 03e6 DFF83081 		ldr	r8, .L542+28
 5440              		.loc 5 329 0
 5441 03ea FFF7FEFF 		bl	nav_approaching_xy
 5442              	.LVL605:
 5443 03ee 0746     		mov	r7, r0
 5444 03f0 08B1     		cbz	r0, .L411
 5445 03f2 0622     		movs	r2, #6
 5446 03f4 27E2     		b	.L522
 5447              	.L411:
 330:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(4, 6);
 5448              		.loc 5 330 0
 5449 03f6 AA6C     		ldr	r2, [r5, #72]	@ float
 5450 03f8 EB6C     		ldr	r3, [r5, #76]	@ float
 5451 03fa 286B     		ldr	r0, [r5, #48]	@ float
 5452 03fc 696B     		ldr	r1, [r5, #52]	@ float
 5453 03fe FFF7FEFF 		bl	nav_route_xy
 5454              	.LVL606:
 331:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5455              		.loc 5 331 0
 5456 0402 414B     		ldr	r3, .L542+12
 332:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(6), 0.);
 5457              		.loc 5 332 0
 5458 0404 2A6D     		ldr	r2, [r5, #80]	@ float
 331:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5459              		.loc 5 331 0
 5460 0406 1F70     		strb	r7, [r3]
 5461 0408 404B     		ldr	r3, .L542+16
 5462 040a 1E60     		str	r6, [r3]	@ float
 5463              		.loc 5 332 0
 5464 040c 0323     		movs	r3, #3
 5465 040e 2370     		strb	r3, [r4]
 5466 0410 40E0     		b	.L520
 5467              	.L407:
 333:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 334:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 335:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5468              		.loc 5 335 0
 5469 0412 0222     		movs	r2, #2
 336:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(7,6,1)) NextStageAndBreakFrom(7) else {
 5470              		.loc 5 336 0
 5471 0414 394D     		ldr	r5, .L542
 335:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(7,6,1)) NextStageAndBreakFrom(7) else {
 5472              		.loc 5 335 0
 5473 0416 1A70     		strb	r2, [r3]
 5474              		.loc 5 336 0
 5475 0418 4FF07E53 		mov	r3, #1065353216
 5476 041c 0093     		str	r3, [sp]	@ float
 5477 041e 686D     		ldr	r0, [r5, #84]	@ float
 5478 0420 A96D     		ldr	r1, [r5, #88]	@ float
 5479 0422 AA6C     		ldr	r2, [r5, #72]	@ float
 5480 0424 EB6C     		ldr	r3, [r5, #76]	@ float
 335:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(7,6,1)) NextStageAndBreakFrom(7) else {
 5481              		.loc 5 335 0
 5482 0426 3C4F     		ldr	r7, .L542+28
 5483              		.loc 5 336 0
 5484 0428 FFF7FEFF 		bl	nav_approaching_xy
 5485              	.LVL607:
 5486 042c 08B1     		cbz	r0, .L412
 5487 042e 0722     		movs	r2, #7
 5488 0430 90E2     		b	.L517
 5489              	.L412:
 337:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(6, 7);
 5490              		.loc 5 337 0
 5491 0432 6A6D     		ldr	r2, [r5, #84]	@ float
 5492 0434 AB6D     		ldr	r3, [r5, #88]	@ float
 5493 0436 A86C     		ldr	r0, [r5, #72]	@ float
 5494 0438 E96C     		ldr	r1, [r5, #76]	@ float
 5495 043a FFF7FEFF 		bl	nav_route_xy
 5496              	.LVL608:
 338:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoPitchMode(9600*(0.400000));
 5497              		.loc 5 338 0
 5498 043e 324B     		ldr	r3, .L542+12
 5499 0440 0122     		movs	r2, #1
 5500 0442 1A70     		strb	r2, [r3]
 5501 0444 374B     		ldr	r3, .L542+40
 5502 0446 4FF47062 		mov	r2, #3840
 5503 044a 1A80     		strh	r2, [r3]	@ movhi
 339:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(7), 0.);
 5504              		.loc 5 339 0
 5505 044c 0323     		movs	r3, #3
 5506 044e 2370     		strb	r3, [r4]
 5507 0450 EA6D     		ldr	r2, [r5, #92]	@ float
 5508 0452 1FE0     		b	.L520
 5509              	.L408:
 340:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 341:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 342:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(3)
 5510              		.loc 5 342 0
 5511 0454 0327     		movs	r7, #3
 343:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(2,7,1)) NextStageAndBreakFrom(2) else {
 5512              		.loc 5 343 0
 5513 0456 294D     		ldr	r5, .L542
 342:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(2,7,1)) NextStageAndBreakFrom(2) else {
 5514              		.loc 5 342 0
 5515 0458 1F70     		strb	r7, [r3]
 5516              		.loc 5 343 0
 5517 045a 4FF07E53 		mov	r3, #1065353216
 5518 045e 0093     		str	r3, [sp]	@ float
 5519 0460 A869     		ldr	r0, [r5, #24]	@ float
 5520 0462 E969     		ldr	r1, [r5, #28]	@ float
 5521 0464 6A6D     		ldr	r2, [r5, #84]	@ float
 5522 0466 AB6D     		ldr	r3, [r5, #88]	@ float
 342:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(2,7,1)) NextStageAndBreakFrom(2) else {
 5523              		.loc 5 342 0
 5524 0468 DFF8AC80 		ldr	r8, .L542+28
 5525              		.loc 5 343 0
 5526 046c FFF7FEFF 		bl	nav_approaching_xy
 5527              	.LVL609:
 5528 0470 08B1     		cbz	r0, .L413
 5529 0472 0222     		movs	r2, #2
 5530 0474 E7E1     		b	.L522
 5531              	.L413:
 344:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(7, 2);
 5532              		.loc 5 344 0
 5533 0476 AA69     		ldr	r2, [r5, #24]	@ float
 5534 0478 EB69     		ldr	r3, [r5, #28]	@ float
 5535 047a 686D     		ldr	r0, [r5, #84]	@ float
 5536 047c A96D     		ldr	r1, [r5, #88]	@ float
 5537 047e FFF7FEFF 		bl	nav_route_xy
 5538              	.LVL610:
 345:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoPitchMode(9600*(0.400000));
 5539              		.loc 5 345 0
 5540 0482 214B     		ldr	r3, .L542+12
 346:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAltitudeMode(WaypointAlt(2), 0.);
 5541              		.loc 5 346 0
 5542 0484 2770     		strb	r7, [r4]
 345:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoPitchMode(9600*(0.400000));
 5543              		.loc 5 345 0
 5544 0486 0122     		movs	r2, #1
 5545 0488 1A70     		strb	r2, [r3]
 5546 048a 264B     		ldr	r3, .L542+40
 5547 048c 4FF47062 		mov	r2, #3840
 5548 0490 1A80     		strh	r2, [r3]	@ movhi
 5549              		.loc 5 346 0
 5550 0492 2A6A     		ldr	r2, [r5, #32]	@ float
 5551              	.L520:
 5552 0494 1E4B     		ldr	r3, .L542+20
 5553 0496 1A60     		str	r2, [r3]	@ float
 5554 0498 1E4B     		ldr	r3, .L542+24
 5555 049a 1E60     		str	r6, [r3]	@ float
 5556 049c 85E2     		b	.L352
 5557              	.L409:
 347:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 348:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 349:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(4)
 5558              		.loc 5 349 0
 5559 049e 0422     		movs	r2, #4
 5560 04a0 1A70     		strb	r2, [r3]
 350:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         GotoBlock(4);
 5561              		.loc 5 350 0
 5562 04a2 2A70     		strb	r2, [r5]
 5563 04a4 7FE2     		b	.L515
 5564              	.L403:
 351:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 352:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 353:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(5)
 5565              		.loc 5 353 0
 5566 04a6 0522     		movs	r2, #5
 5567 04a8 1A70     		strb	r2, [r3]
 354:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5568              		.loc 5 354 0
 5569 04aa 0A23     		movs	r3, #10
 5570 04ac 20E0     		b	.L524
 5571              	.L364:
 355:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 356:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 357:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 358:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 359:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 360:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(10) // Land Right AF-TD
 5572              		.loc 5 360 0
 5573 04ae 0A23     		movs	r3, #10
 5574 04b0 2B70     		strb	r3, [r5]
 361:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 362:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5575              		.loc 5 362 0
 5576 04b2 194B     		ldr	r3, .L542+28
 5577 04b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5578 04b6 1E46     		mov	r6, r3
 5579 04b8 2AB1     		cbz	r2, .L415
 5580 04ba 012A     		cmp	r2, #1
 5581 04bc 15D0     		beq	.L419
 363:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 364:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_radius = DEFAULT_CIRCLE_RADIUS;
 365:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 366:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 367:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         GotoBlock(12);
 368:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 369:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 370:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5582              		.loc 5 370 0
 5583 04be 0222     		movs	r2, #2
 5584 04c0 1A70     		strb	r2, [r3]
 371:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5585              		.loc 5 371 0
 5586 04c2 0B22     		movs	r2, #11
 5587 04c4 6DE2     		b	.L514
 5588              	.L415:
 364:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 5589              		.loc 5 364 0
 5590 04c6 0F4A     		ldr	r2, .L542+8
 5591 04c8 09E0     		b	.L526
 5592              	.L365:
 372:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 373:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 374:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 375:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 376:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 377:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(11) // Land Left AF-TD
 5593              		.loc 5 377 0
 5594 04ca 0B23     		movs	r3, #11
 5595 04cc 2B70     		strb	r3, [r5]
 378:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 379:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5596              		.loc 5 379 0
 5597 04ce 124B     		ldr	r3, .L542+28
 5598 04d0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5599 04d2 1E46     		mov	r6, r3
 5600 04d4 12B1     		cbz	r2, .L418
 5601 04d6 012A     		cmp	r2, #1
 5602 04d8 07D0     		beq	.L419
 5603 04da 0BE0     		b	.L533
 5604              	.L418:
 380:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 381:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_radius = -(DEFAULT_CIRCLE_RADIUS);
 5605              		.loc 5 381 0
 5606 04dc 124A     		ldr	r2, .L542+44
 5607              	.L526:
 5608 04de 084B     		ldr	r3, .L542+4
 5609 04e0 1A60     		str	r2, [r3]	@ float
 382:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextStage();
 5610              		.loc 5 382 0
 5611 04e2 0123     		movs	r3, #1
 5612 04e4 3370     		strb	r3, [r6]
 5613 04e6 FFF7FEFF 		bl	nav_init_stage
 5614              	.LVL611:
 5615              	.L419:
 383:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 5616              		.loc 5 383 0
 5617 04ea 0123     		movs	r3, #1
 5618 04ec 3370     		strb	r3, [r6]
 384:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         GotoBlock(12);
 5619              		.loc 5 384 0
 5620 04ee 0C23     		movs	r3, #12
 5621              	.L524:
 5622 04f0 2B70     		strb	r3, [r5]
 5623 04f2 58E2     		b	.L515
 5624              	.L533:
 385:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 386:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 387:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5625              		.loc 5 387 0
 5626 04f4 0222     		movs	r2, #2
 5627 04f6 1A70     		strb	r2, [r3]
 388:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 5628              		.loc 5 388 0
 5629 04f8 0C22     		movs	r2, #12
 5630 04fa 52E2     		b	.L514
 5631              	.L543:
 5632              		.align	2
 5633              	.L542:
 5634 04fc 00000000 		.word	.LANCHOR6
 5635 0500 00000000 		.word	.LANCHOR46
 5636 0504 00008C42 		.word	1116471296
 5637 0508 00000000 		.word	v_ctl_climb_mode
 5638 050c 00000000 		.word	.LANCHOR44
 5639 0510 00000000 		.word	.LANCHOR0
 5640 0514 00000000 		.word	v_ctl_altitude_pre_climb
 5641 0518 00000000 		.word	nav_stage
 5642 051c 00001643 		.word	1125515264
 5643 0520 00004040 		.word	1077936128
 5644 0524 00000000 		.word	.LANCHOR48
 5645 0528 00008CC2 		.word	-1031012352
 5646              	.L366:
 389:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 390:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 391:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 392:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 393:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 394:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(12) // land
 5647              		.loc 5 394 0
 5648 052c 0C23     		movs	r3, #12
 5649 052e 2B70     		strb	r3, [r5]
 395:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 396:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 5650              		.loc 5 396 0
 5651 0530 D14B     		ldr	r3, .L544+32
 5652 0532 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5653 0534 012A     		cmp	r2, #1
 5654 0536 1D46     		mov	r5, r3
 5655 0538 00F0BB80 		beq	.L421
 5656 053c 5CD3     		bcc	.L422
 5657 053e 022A     		cmp	r2, #2
 5658 0540 40F05381 		bne	.L534
 397:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 398:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius))) {
 399:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NextStage();
 400:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         } else {
 401:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           break;
 402:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 403:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 404:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 405:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 406:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(10, nav_radius);
 407:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if ((NavCircleCount()>0.500000)) NextStageAndBreak();
 408:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 409:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 5659              		.loc 5 409 0
 5660 0544 1A70     		strb	r2, [r3]
 410:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5661              		.loc 5 410 0
 5662 0546 CD4B     		ldr	r3, .L544+36
 411:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 5663              		.loc 5 411 0
 5664 0548 DFF850B3 		ldr	fp, .L544+68
 410:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5665              		.loc 5 410 0
 5666 054c 4FF0000A 		mov	r10, #0
 5667 0550 83F800A0 		strb	r10, [r3]
 5668 0554 CA4B     		ldr	r3, .L544+40
 5669              		.loc 5 411 0
 5670 0556 DBF88020 		ldr	r2, [fp, #128]	@ float
 410:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5671              		.loc 5 410 0
 5672 055a 1E60     		str	r6, [r3]	@ float
 5673              		.loc 5 411 0
 5674 055c 0323     		movs	r3, #3
 5675 055e 2370     		strb	r3, [r4]
 5676 0560 C84B     		ldr	r3, .L544+44
 412:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(10, nav_radius);
 5677              		.loc 5 412 0
 5678 0562 DBF87800 		ldr	r0, [fp, #120]	@ float
 411:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 5679              		.loc 5 411 0
 5680 0566 1A60     		str	r2, [r3]	@ float
 5681 0568 C74B     		ldr	r3, .L544+48
 5682              		.loc 5 412 0
 5683 056a DBF87C10 		ldr	r1, [fp, #124]	@ float
 411:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 5684              		.loc 5 411 0
 5685 056e 1E60     		str	r6, [r3]	@ float
 5686              		.loc 5 412 0
 5687 0570 C64E     		ldr	r6, .L544+52
 5688 0572 3268     		ldr	r2, [r6]	@ float
 5689 0574 FFF7FEFF 		bl	nav_circle_XY
 5690              	.LVL612:
 5691              	.LBB120:
 413:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (And(NavQdrCloseTo((DegOfRad(baseleg_out_qdr)-((nav_radius/fabs(nav_radius))*10))),(10>f
 5692              		.loc 5 413 0
 5693 0578 C54B     		ldr	r3, .L544+56
 5694 057a 96ED008A 		flds	s16, [r6]
 5695 057e 1868     		ldr	r0, [r3]	@ float
 5696 0580 FFF7FEFF 		bl	__aeabi_f2d
 5697              	.LVL613:
 5698 0584 B4A3     		adr	r3, .L544
 5699 0586 D3E90023 		ldrd	r2, [r3]
 5700 058a FFF7FEFF 		bl	__aeabi_dmul
 5701              	.LVL614:
 5702 058e 0646     		mov	r6, r0
 5703 0590 18EE100A 		fmrs	r0, s16
 5704 0594 0F46     		mov	r7, r1
 5705 0596 FFF7FEFF 		bl	__aeabi_f2d
 5706              	.LVL615:
 5707 059a F0EEC87A 		fabss	s15, s16
 5708 059e 8046     		mov	r8, r0
 5709 05a0 17EE900A 		fmrs	r0, s15
 5710 05a4 8946     		mov	r9, r1
 5711 05a6 FFF7FEFF 		bl	__aeabi_f2d
 5712              	.LVL616:
 5713 05aa 0246     		mov	r2, r0
 5714 05ac 0B46     		mov	r3, r1
 5715 05ae 4046     		mov	r0, r8
 5716 05b0 4946     		mov	r1, r9
 5717 05b2 FFF7FEFF 		bl	__aeabi_ddiv
 5718              	.LVL617:
 5719 05b6 0022     		movs	r2, #0
 5720 05b8 B64B     		ldr	r3, .L544+60
 5721 05ba FFF7FEFF 		bl	__aeabi_dmul
 5722              	.LVL618:
 5723 05be 0246     		mov	r2, r0
 5724 05c0 0B46     		mov	r3, r1
 5725 05c2 3046     		mov	r0, r6
 5726 05c4 3946     		mov	r1, r7
 5727 05c6 FFF7FEFF 		bl	__aeabi_dsub
 5728              	.LVL619:
 5729              	.LBB121:
 5730 05ca B34B     		ldr	r3, .L544+64
 5731              	.LBE121:
 5732 05cc 0646     		mov	r6, r0
 5733              	.LBB123:
 5734 05ce 1868     		ldr	r0, [r3]	@ float
 5735              	.LBE123:
 5736 05d0 0F46     		mov	r7, r1
 5737              	.LBB124:
 5738 05d2 FFF7FEFF 		bl	__aeabi_f2d
 5739              	.LVL620:
 5740 05d6 0246     		mov	r2, r0
 5741 05d8 0B46     		mov	r3, r1
 5742 05da A1A1     		adr	r1, .L544+8
 5743 05dc D1E90001 		ldrd	r0, [r1]
 5744 05e0 FFF7FEFF 		bl	__aeabi_dsub
 5745              	.LVL621:
 5746 05e4 9CA3     		adr	r3, .L544
 5747 05e6 D3E90023 		ldrd	r2, [r3]
 5748 05ea FFF7FEFF 		bl	__aeabi_dmul
 5749              	.LVL622:
 5750 05ee FFF7FEFF 		bl	__aeabi_d2f
 5751              	.LVL623:
 5752 05f2 07EE900A 		fmsr	s15, r0
 5753              	.LVL624:
 5754 05f6 90E0     		b	.L427
 5755              	.LVL625:
 5756              	.L422:
 5757              	.LBE124:
 5758              	.LBE120:
 5759              	.LBB127:
 5760              	.LBB128:
 231:firmwares/fixedwing/nav.c ****   float y_0 = waypoints[wp_td].y - waypoints[wp_af].y;
 5761              		.loc 1 231 0
 5762 05f8 A84F     		ldr	r7, .L544+68
 239:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].y = waypoints[wp_af].y - x_1 * nav_radius;
 5763              		.loc 1 239 0
 5764 05fa DFF89082 		ldr	r8, .L544+52
 231:firmwares/fixedwing/nav.c ****   float y_0 = waypoints[wp_td].y - waypoints[wp_af].y;
 5765              		.loc 1 231 0
 5766 05fe D7ED1B7A 		flds	s15, [r7, #108]
 5767 0602 97ED188A 		flds	s16, [r7, #96]
 232:firmwares/fixedwing/nav.c **** 
 5768              		.loc 1 232 0
 5769 0606 D7ED198A 		flds	s17, [r7, #100]
 231:firmwares/fixedwing/nav.c ****   float y_0 = waypoints[wp_td].y - waypoints[wp_af].y;
 5770              		.loc 1 231 0
 5771 060a 37EEC88A 		fsubs	s16, s15, s16
 232:firmwares/fixedwing/nav.c **** 
 5772              		.loc 1 232 0
 5773 060e D7ED1C7A 		flds	s15, [r7, #112]
 5774 0612 77EEE88A 		fsubs	s17, s15, s17
 5775              	.LBE128:
 5776              	.LBE127:
 397:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius))) {
 5777              		.loc 5 397 0
 5778 0616 0023     		movs	r3, #0
 5779              	.LBB131:
 5780              	.LBB129:
 235:firmwares/fixedwing/nav.c ****   float x_1 = x_0 / d;
 5781              		.loc 1 235 0
 5782 0618 68EEA87A 		fmuls	s15, s17, s17
 5783              	.LBE129:
 5784              	.LBE131:
 397:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (! (nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius))) {
 5785              		.loc 5 397 0
 5786 061c 2B70     		strb	r3, [r5]
 5787              	.LVL626:
 5788              	.LBB132:
 5789              	.LBB130:
 235:firmwares/fixedwing/nav.c ****   float x_1 = x_0 / d;
 5790              		.loc 1 235 0
 5791 061e E8EE087A 		vfma.f32	s15, s16, s16
 5792 0622 17EE900A 		fmrs	r0, s15
 5793 0626 FFF7FEFF 		bl	sqrtf
 5794              	.LVL627:
 5795 062a 07EE900A 		fmsr	s15, r0
 5796              	.LVL628:
 237:firmwares/fixedwing/nav.c **** 
 5797              		.loc 1 237 0
 5798 062e C8EEA78A 		fdivs	s17, s17, s15
 5799              	.LVL629:
 241:firmwares/fixedwing/nav.c ****   baseleg_out_qdr = M_PI - atan2f(-y_1, -x_1);
 5800              		.loc 1 241 0
 5801 0632 BB6E     		ldr	r3, [r7, #104]	@ float
 5802 0634 C7F88030 		str	r3, [r7, #128]	@ float
 236:firmwares/fixedwing/nav.c ****   float y_1 = y_0 / d;
 5803              		.loc 1 236 0
 5804 0638 88EE278A 		fdivs	s16, s16, s15
 5805              	.LVL630:
 239:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].y = waypoints[wp_af].y - x_1 * nav_radius;
 5806              		.loc 1 239 0
 5807 063c 98ED007A 		flds	s14, [r8]
 5808 0640 D7ED187A 		flds	s15, [r7, #96]
 5809 0644 E8EE877A 		vfma.f32	s15, s17, s14
 5810 0648 B1EE488A 		fnegs	s16, s16
 5811              	.LVL631:
 5812 064c C7ED1E7A 		fsts	s15, [r7, #120]
 240:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].a = waypoints[wp_af].a;
 5813              		.loc 1 240 0
 5814 0650 D7ED197A 		flds	s15, [r7, #100]
 5815 0654 E8EE077A 		vfma.f32	s15, s16, s14
 242:firmwares/fixedwing/nav.c ****   if (nav_radius < 0) {
 5816              		.loc 1 242 0
 5817 0658 18EE101A 		fmrs	r1, s16
 240:firmwares/fixedwing/nav.c ****   waypoints[wp_baseleg].a = waypoints[wp_af].a;
 5818              		.loc 1 240 0
 5819 065c C7ED1F7A 		fsts	s15, [r7, #124]
 242:firmwares/fixedwing/nav.c ****   if (nav_radius < 0) {
 5820              		.loc 1 242 0
 5821 0660 F1EE687A 		fnegs	s15, s17
 5822 0664 17EE900A 		fmrs	r0, s15
 5823              	.LVL632:
 5824 0668 FFF7FEFF 		bl	atan2f
 5825              	.LVL633:
 5826 066c FFF7FEFF 		bl	__aeabi_f2d
 5827              	.LVL634:
 5828 0670 0246     		mov	r2, r0
 5829 0672 0B46     		mov	r3, r1
 5830 0674 7CA1     		adr	r1, .L544+16
 5831 0676 D1E90001 		ldrd	r0, [r1]
 5832 067a FFF7FEFF 		bl	__aeabi_dsub
 5833              	.LVL635:
 5834 067e FFF7FEFF 		bl	__aeabi_d2f
 5835              	.LVL636:
 243:firmwares/fixedwing/nav.c ****     baseleg_out_qdr += M_PI;
 5836              		.loc 1 243 0
 5837 0682 D8ED007A 		flds	s15, [r8]
 242:firmwares/fixedwing/nav.c ****   if (nav_radius < 0) {
 5838              		.loc 1 242 0
 5839 0686 824F     		ldr	r7, .L544+56
 243:firmwares/fixedwing/nav.c ****     baseleg_out_qdr += M_PI;
 5840              		.loc 1 243 0
 5841 0688 F5EEC07A 		fcmpezs	s15
 5842 068c F1EE10FA 		fmstat
 242:firmwares/fixedwing/nav.c ****   if (nav_radius < 0) {
 5843              		.loc 1 242 0
 5844 0690 3860     		str	r0, [r7]	@ float
 243:firmwares/fixedwing/nav.c ****     baseleg_out_qdr += M_PI;
 5845              		.loc 1 243 0
 5846 0692 09D5     		bpl	.L424
 244:firmwares/fixedwing/nav.c ****   }
 5847              		.loc 1 244 0
 5848 0694 FFF7FEFF 		bl	__aeabi_f2d
 5849              	.LVL637:
 5850 0698 73A3     		adr	r3, .L544+16
 5851 069a D3E90023 		ldrd	r2, [r3]
 5852 069e FFF7FEFF 		bl	__aeabi_dadd
 5853              	.LVL638:
 5854 06a2 FFF7FEFF 		bl	__aeabi_d2f
 5855              	.LVL639:
 5856 06a6 3860     		str	r0, [r7]	@ float
 5857              	.L424:
 5858              	.LBE130:
 5859              	.LBE132:
 399:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         } else {
 5860              		.loc 5 399 0
 5861 06a8 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 5862 06aa 0133     		adds	r3, r3, #1
 5863 06ac 2B70     		strb	r3, [r5]
 5864 06ae FFF7FEFF 		bl	nav_init_stage
 5865              	.LVL640:
 5866              	.L421:
 403:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5867              		.loc 5 403 0
 5868 06b2 0123     		movs	r3, #1
 5869 06b4 2B70     		strb	r3, [r5]
 404:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 5870              		.loc 5 404 0
 5871 06b6 714B     		ldr	r3, .L544+36
 403:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 5872              		.loc 5 403 0
 5873 06b8 6F4F     		ldr	r7, .L544+32
 404:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 5874              		.loc 5 404 0
 5875 06ba 0022     		movs	r2, #0
 5876 06bc 1A70     		strb	r2, [r3]
 5877 06be 704B     		ldr	r3, .L544+40
 405:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(10, nav_radius);
 5878              		.loc 5 405 0
 5879 06c0 704A     		ldr	r2, .L544+44
 404:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavVerticalAltitudeMode(WaypointAlt(10), 0.);
 5880              		.loc 5 404 0
 5881 06c2 1E60     		str	r6, [r3]	@ float
 405:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(10, nav_radius);
 5882              		.loc 5 405 0
 5883 06c4 0323     		movs	r3, #3
 5884 06c6 2370     		strb	r3, [r4]
 5885 06c8 744B     		ldr	r3, .L544+68
 5886 06ca D3F88010 		ldr	r1, [r3, #128]	@ float
 5887 06ce 1160     		str	r1, [r2]	@ float
 406:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if ((NavCircleCount()>0.500000)) NextStageAndBreak();
 5888              		.loc 5 406 0
 5889 06d0 986F     		ldr	r0, [r3, #120]	@ float
 5890 06d2 D96F     		ldr	r1, [r3, #124]	@ float
 405:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(10, nav_radius);
 5891              		.loc 5 405 0
 5892 06d4 6C4A     		ldr	r2, .L544+48
 406:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if ((NavCircleCount()>0.500000)) NextStageAndBreak();
 5893              		.loc 5 406 0
 5894 06d6 6D4B     		ldr	r3, .L544+52
 405:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NavCircleWaypoint(10, nav_radius);
 5895              		.loc 5 405 0
 5896 06d8 1660     		str	r6, [r2]	@ float
 406:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if ((NavCircleCount()>0.500000)) NextStageAndBreak();
 5897              		.loc 5 406 0
 5898 06da 1A68     		ldr	r2, [r3]	@ float
 5899 06dc FFF7FEFF 		bl	nav_circle_XY
 5900              	.LVL641:
 407:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 5901              		.loc 5 407 0
 5902 06e0 6F4B     		ldr	r3, .L544+72
 5903 06e2 D3ED007A 		flds	s15, [r3]
 5904 06e6 F0EEE77A 		fabss	s15, s15
 5905 06ea 17EE900A 		fmrs	r0, s15
 5906 06ee FFF7FEFF 		bl	__aeabi_f2d
 5907              	.LVL642:
 5908 06f2 5FA3     		adr	r3, .L544+24
 5909 06f4 D3E90023 		ldrd	r2, [r3]
 5910 06f8 FFF7FEFF 		bl	__aeabi_ddiv
 5911              	.LVL643:
 5912 06fc 0022     		movs	r2, #0
 5913 06fe 694B     		ldr	r3, .L544+76
 5914 0700 FFF7FEFF 		bl	__aeabi_dcmpgt
 5915              	.LVL644:
 5916 0704 0028     		cmp	r0, #0
 5917 0706 00F05081 		beq	.L352
 5918 070a 25E1     		b	.L516
 5919              	.LVL645:
 5920              	.L536:
 5921 070c 0AF1010A 		add	r10, r10, #1
 5922              	.LVL646:
 5923              	.LBB133:
 5924              	.LBB125:
 5925              	.LBB122:
 5926              		.loc 5 413 0
 5927 0710 BAF5807F 		cmp	r10, #256
 5928 0714 0BD0     		beq	.L535
 5929              	.LVL647:
 5930 0716 77EE887A 		fadds	s15, s15, s16
 5931              	.LVL648:
 5932              	.L427:
 5933 071a F5EEC07A 		fcmpezs	s15
 5934 071e F1EE10FA 		fmstat
 5935 0722 5FFA8AF3 		uxtb	r3, r10
 5936              	.LVL649:
 5937 0726 9FED608A 		flds	s16, .L544+80
 5938 072a EFD4     		bmi	.L536
 5939 072c 09E0     		b	.L431
 5940              	.LVL650:
 5941              	.L535:
 5942 072e 0023     		movs	r3, #0
 5943              	.LVL651:
 5944 0730 07E0     		b	.L431
 5945              	.LVL652:
 5946              	.L432:
 5947 0732 0133     		adds	r3, r3, #1
 5948              	.LVL653:
 5949 0734 13F0FF03 		ands	r3, r3, #255
 5950              	.LVL654:
 5951 0738 08D0     		beq	.L435
 5952 073a 9FED5B7A 		flds	s14, .L544+80
 5953 073e 77EEC77A 		fsubs	s15, s15, s14
 5954              	.LVL655:
 5955              	.L431:
 5956 0742 F4EEC87A 		fcmpes	s15, s16
 5957 0746 F1EE10FA 		fmstat
 5958 074a F2DA     		bge	.L432
 5959              	.LVL656:
 5960              	.L435:
 5961              	.LBE122:
 5962              	.LBE125:
 5963 074c 17EE900A 		fmrs	r0, s15
 5964 0750 FFF7FEFF 		bl	__aeabi_f2d
 5965              	.LVL657:
 5966 0754 0246     		mov	r2, r0
 5967 0756 0B46     		mov	r3, r1
 5968 0758 3046     		mov	r0, r6
 5969 075a 3946     		mov	r1, r7
 5970 075c FFF7FEFF 		bl	__aeabi_dsub
 5971              	.LVL658:
 5972 0760 FFF7FEFF 		bl	__aeabi_d2f
 5973              	.LVL659:
 5974 0764 0022     		movs	r2, #0
 5975 0766 07EE900A 		fmsr	s15, r0
 5976              	.LVL660:
 5977 076a 05E0     		b	.L433
 5978              	.LVL661:
 5979              	.L538:
 5980 076c 0132     		adds	r2, r2, #1
 5981              	.LVL662:
 5982              	.LBB126:
 5983 076e B2F5807F 		cmp	r2, #256
 5984 0772 08D0     		beq	.L537
 5985              	.LVL663:
 5986 0774 77EE887A 		fadds	s15, s15, s16
 5987              	.LVL664:
 5988              	.L433:
 5989 0778 F5EEC07A 		fcmpezs	s15
 5990 077c F1EE10FA 		fmstat
 5991 0780 D3B2     		uxtb	r3, r2
 5992              	.LVL665:
 5993 0782 F3D4     		bmi	.L538
 5994 0784 09E0     		b	.L439
 5995              	.LVL666:
 5996              	.L537:
 5997 0786 0023     		movs	r3, #0
 5998              	.LVL667:
 5999 0788 07E0     		b	.L439
 6000              	.LVL668:
 6001              	.L440:
 6002 078a 0133     		adds	r3, r3, #1
 6003              	.LVL669:
 6004 078c 13F0FF03 		ands	r3, r3, #255
 6005              	.LVL670:
 6006 0790 08D0     		beq	.L444
 6007 0792 9FED457A 		flds	s14, .L544+80
 6008 0796 77EEC77A 		fsubs	s15, s15, s14
 6009              	.LVL671:
 6010              	.L439:
 6011 079a F4EEC87A 		fcmpes	s15, s16
 6012 079e F1EE10FA 		fmstat
 6013 07a2 F2DA     		bge	.L440
 6014              	.LVL672:
 6015              	.L444:
 6016              	.LBE126:
 6017 07a4 9FED417A 		flds	s14, .L544+84
 6018 07a8 F4EEC77A 		fcmpes	s15, s14
 6019 07ac F1EE10FA 		fmstat
 6020 07b0 B2EE048A 		fconsts	s16, #36
 6021 07b4 05DC     		bgt	.L441
 6022 07b6 F4EEC87A 		fcmpes	s15, s16
 6023 07ba F1EE10FA 		fmstat
 6024 07be 40F1F480 		bpl	.L352
 6025              	.L441:
 6026              	.LBE133:
 6027 07c2 FFF7FEFF 		bl	stateGetPositionUtm_f
 6028              	.LVL673:
 6029 07c6 9BED207A 		flds	s14, [fp, #128]
 6030 07ca D0ED027A 		flds	s15, [r0, #8]
 6031 07ce 77EEC77A 		fsubs	s15, s15, s14
 6032 07d2 F0EEE77A 		fabss	s15, s15
 6033 07d6 F4EEC87A 		fcmpes	s15, s16
 6034 07da F1EE10FA 		fmstat
 6035 07de 40F1E480 		bpl	.L352
 6036              	.L460:
 6037 07e2 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 6038 07e4 0133     		adds	r3, r3, #1
 6039 07e6 2B70     		strb	r3, [r5]
 6040 07e8 B9E0     		b	.L518
 6041              	.L534:
 414:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 415:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 416:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(3)
 6042              		.loc 5 416 0
 6043 07ea 0322     		movs	r2, #3
 6044 07ec 1A70     		strb	r2, [r3]
 417:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 6045              		.loc 5 417 0
 6046 07ee 0D22     		movs	r2, #13
 6047 07f0 D7E0     		b	.L514
 6048              	.L367:
 418:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 419:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 420:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 421:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 422:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 423:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(13) // final
 6049              		.loc 5 423 0
 6050 07f2 0D23     		movs	r3, #13
 6051 07f4 2B70     		strb	r3, [r5]
 424:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 425:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     if ((nav_block != 14) && ((GetAltRef()+10)>GetPosAlt())) { GotoBlock(14); return; }
 6052              		.loc 5 425 0
 6053 07f6 2E4B     		ldr	r3, .L544+88
 423:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 6054              		.loc 5 423 0
 6055 07f8 2E4F     		ldr	r7, .L544+92
 6056              		.loc 5 425 0
 6057 07fa D3ED007A 		flds	s15, [r3]
 6058 07fe B2EE048A 		fconsts	s16, #36
 6059 0802 37EE888A 		fadds	s16, s15, s16
 6060 0806 FFF7FEFF 		bl	stateGetPositionUtm_f
 6061              	.LVL674:
 6062 080a D0ED027A 		flds	s15, [r0, #8]
 6063 080e B4EEE78A 		fcmpes	s16, s15
 6064 0812 F1EE10FA 		fmstat
 6065 0816 01DD     		ble	.L509
 6066 0818 0E23     		movs	r3, #14
 6067 081a 81E0     		b	.L525
 6068              	.L509:
 426:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 6069              		.loc 5 426 0
 6070 081c DFF85880 		ldr	r8, .L544+32
 6071 0820 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 6072 0824 002B     		cmp	r3, #0
 6073 0826 76D1     		bne	.L510
 427:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 428:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(9,8,CARROT)) NextStageAndBreakFrom(9) else {
 6074              		.loc 5 428 0
 6075 0828 1C4D     		ldr	r5, .L544+68
 427:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 6076              		.loc 5 427 0
 6077 082a 88F80030 		strb	r3, [r8]
 6078              		.loc 5 428 0
 6079 082e 224B     		ldr	r3, .L544+96
 6080 0830 0093     		str	r3, [sp]	@ float
 6081 0832 E86E     		ldr	r0, [r5, #108]	@ float
 6082 0834 296F     		ldr	r1, [r5, #112]	@ float
 6083 0836 2A6E     		ldr	r2, [r5, #96]	@ float
 6084 0838 6B6E     		ldr	r3, [r5, #100]	@ float
 6085 083a FFF7FEFF 		bl	nav_approaching_xy
 6086              	.LVL675:
 6087 083e 0746     		mov	r7, r0
 6088 0840 0028     		cmp	r0, #0
 6089 0842 3DD0     		beq	.L450
 6090 0844 0922     		movs	r2, #9
 6091              	.L522:
 6092 0846 1D4B     		ldr	r3, .L544+100
 6093 0848 1A70     		strb	r2, [r3]
 6094 084a 98F80030 		ldrb	r3, [r8]	@ zero_extendqisi2
 6095 084e 0133     		adds	r3, r3, #1
 6096 0850 88F80030 		strb	r3, [r8]
 6097 0854 83E0     		b	.L518
 6098              	.L545:
 6099 0856 00BF     		.align	3
 6100              	.L544:
 6101 0858 F8C1631A 		.word	442745336
 6102 085c DCA54C40 		.word	1078765020
 6103 0860 182D4454 		.word	1413754136
 6104 0864 FB21F93F 		.word	1073291771
 6105 0868 182D4454 		.word	1413754136
 6106 086c FB210940 		.word	1074340347
 6107 0870 182D4454 		.word	1413754136
 6108 0874 FB211940 		.word	1075388923
 6109 0878 00000000 		.word	nav_stage
 6110 087c 00000000 		.word	v_ctl_climb_mode
 6111 0880 00000000 		.word	.LANCHOR44
 6112 0884 00000000 		.word	.LANCHOR0
 6113 0888 00000000 		.word	v_ctl_altitude_pre_climb
 6114 088c 00000000 		.word	.LANCHOR46
 6115 0890 00000000 		.word	.LANCHOR52
 6116 0894 00002440 		.word	1076101120
 6117 0898 00000000 		.word	.LANCHOR34
 6118 089c 00000000 		.word	.LANCHOR6
 6119 08a0 00000000 		.word	.LANCHOR8
 6120 08a4 0000E03F 		.word	1071644672
 6121 08a8 0000B443 		.word	1135869952
 6122 08ac 0000AF43 		.word	1135542272
 6123 08b0 00000000 		.word	.LANCHOR12
 6124 08b4 00000000 		.word	nav_block
 6125 08b8 00004040 		.word	1077936128
 6126 08bc 00000000 		.word	.LANCHOR51
 6127              	.L450:
 429:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(8, 9);
 6128              		.loc 5 429 0
 6129 08c0 286E     		ldr	r0, [r5, #96]	@ float
 6130 08c2 696E     		ldr	r1, [r5, #100]	@ float
 6131 08c4 EA6E     		ldr	r2, [r5, #108]	@ float
 6132 08c6 2B6F     		ldr	r3, [r5, #112]	@ float
 6133 08c8 FFF7FEFF 		bl	nav_route_xy
 6134              	.LVL676:
 430:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 6135              		.loc 5 430 0
 6136 08cc 424B     		ldr	r3, .L546
 6137              	.LBB134:
 431:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavGlide(8, 9);
 6138              		.loc 5 431 0
 6139 08ce D5ED1A7A 		flds	s15, [r5, #104]
 6140              	.LVL677:
 6141              	.LBE134:
 430:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 6142              		.loc 5 430 0
 6143 08d2 1F70     		strb	r7, [r3]
 6144 08d4 414B     		ldr	r3, .L546+4
 6145              	.LBB135:
 6146              		.loc 5 431 0
 6147 08d6 95ED1D8A 		flds	s16, [r5, #116]
 6148              	.LBE135:
 430:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 6149              		.loc 5 430 0
 6150 08da 1E60     		str	r6, [r3]	@ float
 6151              	.LBB136:
 6152              		.loc 5 431 0
 6153 08dc 404B     		ldr	r3, .L546+8
 6154 08de 38EE678A 		fsubs	s16, s16, s15
 6155              	.LVL678:
 6156 08e2 93ED007A 		flds	s14, [r3]
 6157 08e6 E7EE087A 		vfma.f32	s15, s14, s16
 6158              	.LVL679:
 6159 08ea F0EE678A 		fcpys	s17, s15
 6160              	.LVL680:
 6161 08ee FFF7FEFF 		bl	stateGetHorizontalSpeedNorm_f
 6162              	.LVL681:
 6163 08f2 3C4B     		ldr	r3, .L546+12
 6164 08f4 D0ED007A 		flds	s15, [r0]
 6165 08f8 28EE278A 		fmuls	s16, s16, s15
 6166              	.LVL682:
 6167 08fc D3ED007A 		flds	s15, [r3]
 6168 0900 88EE278A 		fdivs	s16, s16, s15
 6169              	.LVL683:
 6170 0904 0323     		movs	r3, #3
 6171 0906 2370     		strb	r3, [r4]
 6172 0908 374B     		ldr	r3, .L546+16
 6173 090a C3ED008A 		fsts	s17, [r3]
 6174 090e 374B     		ldr	r3, .L546+20
 6175 0910 83ED008A 		fsts	s16, [r3]
 6176 0914 49E0     		b	.L352
 6177              	.LVL684:
 6178              	.L510:
 6179              	.LBE136:
 432:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 433:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 434:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 435:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 6180              		.loc 5 435 0
 6181 0916 0123     		movs	r3, #1
 6182 0918 88F80030 		strb	r3, [r8]
 436:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 6183              		.loc 5 436 0
 6184 091c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 6185 091e 0133     		adds	r3, r3, #1
 6186              	.L525:
 6187 0920 3B70     		strb	r3, [r7]
 6188 0922 40E0     		b	.L515
 6189              	.L368:
 437:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 438:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 439:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 440:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 441:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 442:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(14) // flare
 443:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 444:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 6190              		.loc 5 444 0
 6191 0924 324F     		ldr	r7, .L546+24
 442:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 6192              		.loc 5 442 0
 6193 0926 0E23     		movs	r3, #14
 6194 0928 2B70     		strb	r3, [r5]
 6195              		.loc 5 444 0
 6196 092a 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 6197 092c 33B1     		cbz	r3, .L452
 6198 092e 012B     		cmp	r3, #1
 6199 0930 4FF00202 		mov	r2, #2
 6200 0934 26D1     		bne	.L539
 445:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 446:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (NavApproachingFrom(9,8,0)) NextStageAndBreakFrom(9) else {
 447:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(8, 9);
 448:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 449:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0.000000));
 450:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 451:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 452:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 6201              		.loc 5 452 0
 6202 0936 3B70     		strb	r3, [r7]
 6203 0938 FFF7CEBB 		b	.L513
 6204              	.L452:
 446:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(8, 9);
 6205              		.loc 5 446 0
 6206 093c 2D4D     		ldr	r5, .L546+28
 445:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 6207              		.loc 5 445 0
 6208 093e 3B70     		strb	r3, [r7]
 446:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavSegment(8, 9);
 6209              		.loc 5 446 0
 6210 0940 0096     		str	r6, [sp]	@ float
 6211 0942 E86E     		ldr	r0, [r5, #108]	@ float
 6212 0944 296F     		ldr	r1, [r5, #112]	@ float
 6213 0946 2A6E     		ldr	r2, [r5, #96]	@ float
 6214 0948 6B6E     		ldr	r3, [r5, #100]	@ float
 6215 094a FFF7FEFF 		bl	nav_approaching_xy
 6216              	.LVL685:
 6217 094e 0646     		mov	r6, r0
 6218 0950 40B1     		cbz	r0, .L454
 6219 0952 0922     		movs	r2, #9
 6220              	.L517:
 6221 0954 284B     		ldr	r3, .L546+32
 6222 0956 1A70     		strb	r2, [r3]
 6223              	.L516:
 6224 0958 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 6225 095a 0133     		adds	r3, r3, #1
 6226 095c 3B70     		strb	r3, [r7]
 6227              	.L518:
 6228 095e FFF7FEFF 		bl	nav_init_stage
 6229              	.LVL686:
 6230 0962 22E0     		b	.L352
 6231              	.L454:
 447:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 6232              		.loc 5 447 0
 6233 0964 EA6E     		ldr	r2, [r5, #108]	@ float
 6234 0966 2B6F     		ldr	r3, [r5, #112]	@ float
 6235 0968 286E     		ldr	r0, [r5, #96]	@ float
 6236 096a 696E     		ldr	r1, [r5, #100]	@ float
 6237 096c FFF7FEFF 		bl	nav_route_xy
 6238              	.LVL687:
 448:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0.000000));
 6239              		.loc 5 448 0
 6240 0970 194B     		ldr	r3, .L546
 6241 0972 1E70     		strb	r6, [r3]
 6242 0974 194B     		ldr	r3, .L546+4
 6243 0976 0022     		movs	r2, #0
 6244 0978 1A60     		str	r2, [r3]	@ float
 449:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 6245              		.loc 5 449 0
 6246 097a 0123     		movs	r3, #1
 6247 097c 2370     		strb	r3, [r4]
 6248 097e 1F4B     		ldr	r3, .L546+36
 6249 0980 1E80     		strh	r6, [r3]	@ movhi
 6250 0982 12E0     		b	.L352
 6251              	.L539:
 453:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         if (FALSE) NextStageAndBreak() else {
 454:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavAttitude(RadOfDeg(0.000000));
 455:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalAutoThrottleMode(RadOfDeg(0.000000));
 456:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****           NavVerticalThrottleMode(9600*(0.000000));
 457:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         }
 458:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 459:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 460:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(2)
 6252              		.loc 5 460 0
 6253 0984 3A70     		strb	r2, [r7]
 461:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 6254              		.loc 5 461 0
 6255 0986 0F22     		movs	r2, #15
 6256 0988 0BE0     		b	.L514
 6257              	.L369:
 462:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 463:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     }
 464:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // post_call
 465:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     break;
 466:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h **** 
 467:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     Block(15) // HOME
 6258              		.loc 5 467 0
 6259 098a 0F23     		movs	r3, #15
 6260 098c 2B70     		strb	r3, [r5]
 468:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     ; // pre_call
 469:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****     switch(nav_stage) {
 6261              		.loc 5 469 0
 6262 098e 184B     		ldr	r3, .L546+24
 6263 0990 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6264 0992 1AB9     		cbnz	r2, .L512
 470:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(0)
 6265              		.loc 5 470 0
 6266 0994 1A70     		strb	r2, [r3]
 471:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         nav_home();
 6267              		.loc 5 471 0
 6268 0996 FFF7FEFF 		bl	nav_home
 6269              	.LVL688:
 6270 099a 06E0     		b	.L352
 6271              	.L512:
 472:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         break;
 473:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       default:
 474:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****       Stage(1)
 6272              		.loc 5 474 0
 6273 099c 0122     		movs	r2, #1
 6274 099e 1A70     		strb	r2, [r3]
 475:/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/flight_plan.h ****         NextBlock();
 6275              		.loc 5 475 0
 6276 09a0 1022     		movs	r2, #16
 6277              	.L514:
 6278 09a2 174B     		ldr	r3, .L546+40
 6279 09a4 1A70     		strb	r2, [r3]
 6280              	.L515:
 6281 09a6 FFF7FEFF 		bl	nav_init_block
 6282              	.LVL689:
 6283              	.L352:
 6284              	.LBE138:
 6285              	.LBE140:
 457:firmwares/fixedwing/nav.c **** 
 6286              		.loc 1 457 0
 6287 09aa 164B     		ldr	r3, .L546+44
 6288 09ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6289 09ae 13B1     		cbz	r3, .L461
 457:firmwares/fixedwing/nav.c **** 
 6290              		.loc 1 457 0 is_stmt 0 discriminator 1
 6291 09b0 154B     		ldr	r3, .L546+48
 6292 09b2 1B68     		ldr	r3, [r3]	@ float
 6293 09b4 00E0     		b	.L458
 6294              	.L461:
 457:firmwares/fixedwing/nav.c **** 
 6295              		.loc 1 457 0
 6296 09b6 0023     		movs	r3, #0
 6297              	.L458:
 457:firmwares/fixedwing/nav.c **** 
 6298              		.loc 1 457 0 discriminator 4
 6299 09b8 144A     		ldr	r2, .L546+52
 6300 09ba 1360     		str	r3, [r2]	@ float
 460:firmwares/fixedwing/nav.c ****     v_ctl_auto_throttle_submode =  V_CTL_AUTO_THROTTLE_STANDARD;
 6301              		.loc 1 460 0 is_stmt 1 discriminator 4
 6302 09bc 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 6303 09be 022B     		cmp	r3, #2
 461:firmwares/fixedwing/nav.c ****   }
 6304              		.loc 1 461 0 discriminator 4
 6305 09c0 02BF     		ittt	eq
 6306 09c2 134B     		ldreq	r3, .L546+56
 6307 09c4 0022     		moveq	r2, #0
 6308 09c6 1A70     		strbeq	r2, [r3]
 466:firmwares/fixedwing/nav.c **** 
 6309              		.loc 1 466 0 discriminator 4
 6310 09c8 03B0     		add	sp, sp, #12
 6311              		.cfi_def_cfa_offset 44
 6312              		@ sp needed
 6313 09ca BDEC028B 		fldmfdd	sp!, {d8}
 6314              		.cfi_restore 80
 6315              		.cfi_restore 81
 6316              		.cfi_def_cfa_offset 36
 6317 09ce BDE8F04F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 6318              		.cfi_restore 14
 6319              		.cfi_restore 11
 6320              		.cfi_restore 10
 6321              		.cfi_restore 9
 6322              		.cfi_restore 8
 6323              		.cfi_restore 7
 6324              		.cfi_restore 6
 6325              		.cfi_restore 5
 6326              		.cfi_restore 4
 6327              		.cfi_def_cfa_offset 0
 465:firmwares/fixedwing/nav.c **** }
 6328              		.loc 1 465 0 discriminator 4
 6329 09d2 FFF7FEBF 		b	nav_set_altitude
 6330              	.LVL690:
 6331              	.L547:
 6332 09d6 00BF     		.align	2
 6333              	.L546:
 6334 09d8 00000000 		.word	v_ctl_climb_mode
 6335 09dc 00000000 		.word	.LANCHOR44
 6336 09e0 00000000 		.word	.LANCHOR37
 6337 09e4 00000000 		.word	.LANCHOR38
 6338 09e8 00000000 		.word	.LANCHOR0
 6339 09ec 00000000 		.word	v_ctl_altitude_pre_climb
 6340 09f0 00000000 		.word	nav_stage
 6341 09f4 00000000 		.word	.LANCHOR6
 6342 09f8 00000000 		.word	.LANCHOR51
 6343 09fc 00000000 		.word	.LANCHOR48
 6344 0a00 00000000 		.word	nav_block
 6345 0a04 00000000 		.word	.LANCHOR23
 6346 0a08 00000000 		.word	.LANCHOR35
 6347 0a0c 00000000 		.word	h_ctl_course_pre_bank
 6348 0a10 00000000 		.word	v_ctl_auto_throttle_submode
 6349              		.cfi_endproc
 6350              	.LFE229:
 6352              		.global	nav_oval_count
 6353              		.global	max_dist_from_home
 6354              		.global	nav_utm_zone0
 6355              		.global	nav_utm_north0
 6356              		.global	nav_utm_east0
 6357              		.global	ground_alt
 6358              		.global	waypoints
 6359              		.global	nb_waypoint
 6360              		.global	too_far_from_home
 6361              		.global	dist2_to_wp
 6362              		.global	dist2_to_home
 6363              		.global	fp_pitch
 6364              		.global	nav_pitch
 6365              		.global	nav_throttle_setpoint
 6366              		.global	desired_y
 6367              		.global	desired_x
 6368              		.global	nav_altitude
 6369              		.global	nav_mode
 6370              		.global	nav_survey_active
 6371              		.global	nav_survey_south
 6372              		.global	nav_survey_north
 6373              		.global	nav_survey_east
 6374              		.global	nav_survey_west
 6375              		.global	nav_survey_shift
 6376              		.global	nav_ground_speed_pgain
 6377              		.global	nav_ground_speed_setpoint
 6378              		.global	nav_glide_pitch_trim
 6379              		.global	flight_altitude
 6380              		.global	circle_bank
 6381              		.global	horizontal_mode
 6382              		.global	nav_segment_y_2
 6383              		.global	nav_segment_x_2
 6384              		.global	nav_segment_y_1
 6385              		.global	nav_segment_x_1
 6386              		.global	nav_circle_radius
 6387              		.global	nav_circle_y
 6388              		.global	nav_circle_x
 6389              		.global	nav_in_segment
 6390              		.global	nav_in_circle
 6391              		.global	nav_shift
 6392              		.global	nav_climb
 6393              		.global	nav_course
 6394              		.global	nav_radius
 6395              		.global	nav_circle_trigo_qdr
 6396              		.global	nav_circle_radians_no_rewind
 6397              		.global	nav_circle_radians
 6398              		.global	carrot_y
 6399              		.global	carrot_x
 6400              		.global	rc_pitch
 6401              		.global	last_y
 6402              		.global	last_x
 6403              		.global	oval_status
 6404              		.section	.data.max_dist_from_home,"aw",%progbits
 6405              		.align	2
 6406              		.set	.LANCHOR43,. + 0
 6409              	max_dist_from_home:
 6410 0000 00009643 		.word	1133903872
 6411              		.section	.bss.ground_alt,"aw",%nobits
 6412              		.align	2
 6413              		.set	.LANCHOR12,. + 0
 6416              	ground_alt:
 6417 0000 00000000 		.space	4
 6418              		.section	.bss.nav_survey_east,"aw",%nobits
 6419              		.align	2
 6420              		.set	.LANCHOR14,. + 0
 6423              	nav_survey_east:
 6424 0000 00000000 		.space	4
 6425              		.section	.bss.nav_mode,"aw",%nobits
 6426              		.align	2
 6427              		.set	.LANCHOR33,. + 0
 6430              	nav_mode:
 6431 0000 00000000 		.space	4
 6432              		.section	.data.nav_altitude,"aw",%progbits
 6433              		.align	2
 6434              		.set	.LANCHOR0,. + 0
 6437              	nav_altitude:
 6438 0000 0000C842 		.word	1120403456
 6439              		.section	.bss.desired_x,"aw",%nobits
 6440              		.align	2
 6441              		.set	.LANCHOR31,. + 0
 6444              	desired_x:
 6445 0000 00000000 		.space	4
 6446              		.section	.bss.desired_y,"aw",%nobits
 6447              		.align	2
 6448              		.set	.LANCHOR32,. + 0
 6451              	desired_y:
 6452 0000 00000000 		.space	4
 6453              		.section	.bss.previous_ground_alt,"aw",%nobits
 6454              		.align	2
 6455              		.set	.LANCHOR41,. + 0
 6458              	previous_ground_alt:
 6459 0000 00000000 		.space	4
 6460              		.section	.bss.carrot_x,"aw",%nobits
 6461              		.align	2
 6464              	carrot_x:
 6465 0000 00000000 		.space	4
 6466              		.section	.bss.carrot_y,"aw",%nobits
 6467              		.align	2
 6470              	carrot_y:
 6471 0000 00000000 		.space	4
 6472              		.section	.bss.fp_pitch,"aw",%nobits
 6473              		.align	2
 6476              	fp_pitch:
 6477 0000 00000000 		.space	4
 6478              		.section	.bss.nav_shift,"aw",%nobits
 6479              		.align	2
 6480              		.set	.LANCHOR30,. + 0
 6483              	nav_shift:
 6484 0000 00000000 		.space	4
 6485              		.section	.bss.nav_survey_shift,"aw",%nobits
 6486              		.align	2
 6487              		.set	.LANCHOR47,. + 0
 6490              	nav_survey_shift:
 6491 0000 00000000 		.space	4
 6492              		.section	.bss.nav_throttle_setpoint,"aw",%nobits
 6493              		.align	1
 6494              		.set	.LANCHOR48,. + 0
 6497              	nav_throttle_setpoint:
 6498 0000 0000     		.space	2
 6499              		.section	.data.nav_utm_zone0,"aw",%progbits
 6500              		.set	.LANCHOR3,. + 0
 6503              	nav_utm_zone0:
 6504 0000 32       		.byte	50
 6505              		.section	.rodata.nb_waypoint,"a",%progbits
 6508              	nb_waypoint:
 6509 0000 0C       		.byte	12
 6510              		.section	.bss.flight_altitude,"aw",%nobits
 6511              		.align	2
 6512              		.set	.LANCHOR2,. + 0
 6515              	flight_altitude:
 6516 0000 00000000 		.space	4
 6517              		.section	.bss.nav_survey_active,"aw",%nobits
 6518              		.set	.LANCHOR13,. + 0
 6521              	nav_survey_active:
 6522 0000 00       		.space	1
 6523              		.section	.bss.nav_survey_west,"aw",%nobits
 6524              		.align	2
 6525              		.set	.LANCHOR16,. + 0
 6528              	nav_survey_west:
 6529 0000 00000000 		.space	4
 6530              		.section	.bss.nav_climb,"aw",%nobits
 6531              		.align	2
 6534              	nav_climb:
 6535 0000 00000000 		.space	4
 6536              		.section	.bss.nav_radius,"aw",%nobits
 6537              		.align	2
 6538              		.set	.LANCHOR46,. + 0
 6541              	nav_radius:
 6542 0000 00000000 		.space	4
 6543              		.section	.bss.oval_status,"aw",%nobits
 6544              		.set	.LANCHOR50,. + 0
 6547              	oval_status:
 6548 0000 00       		.space	1
 6549              		.section	.bss.nav_segment_y_1,"aw",%nobits
 6550              		.align	2
 6551              		.set	.LANCHOR20,. + 0
 6554              	nav_segment_y_1:
 6555 0000 00000000 		.space	4
 6556              		.section	.bss.nav_segment_y_2,"aw",%nobits
 6557              		.align	2
 6558              		.set	.LANCHOR22,. + 0
 6561              	nav_segment_y_2:
 6562 0000 00000000 		.space	4
 6563              		.section	.bss.i.11441,"aw",%nobits
 6564              		.set	.LANCHOR4,. + 0
 6567              	i.11441:
 6568 0000 00       		.space	1
 6569              		.section	.bss.nav_in_segment,"aw",%nobits
 6570              		.set	.LANCHOR18,. + 0
 6573              	nav_in_segment:
 6574 0000 00       		.space	1
 6575              		.section	.bss.nav_circle_radians,"aw",%nobits
 6576              		.align	2
 6577              		.set	.LANCHOR8,. + 0
 6580              	nav_circle_radians:
 6581 0000 00000000 		.space	4
 6582              		.section	.bss.nav_glide_pitch_trim,"aw",%nobits
 6583              		.align	2
 6584              		.set	.LANCHOR45,. + 0
 6587              	nav_glide_pitch_trim:
 6588 0000 00000000 		.space	4
 6589              		.section	.bss.nav_ground_speed_setpoint,"aw",%nobits
 6590              		.align	2
 6593              	nav_ground_speed_setpoint:
 6594 0000 00000000 		.space	4
 6595              		.section	.bss.nav_leg_progress,"aw",%nobits
 6596              		.align	2
 6597              		.set	.LANCHOR37,. + 0
 6600              	nav_leg_progress:
 6601 0000 00000000 		.space	4
 6602              		.section	.data.nav_utm_north0,"aw",%progbits
 6603              		.align	2
 6604              		.set	.LANCHOR7,. + 0
 6607              	nav_utm_north0:
 6608 0000 AEBC4300 		.word	4439214
 6609              		.section	.bss.last_nav_altitude.8556,"aw",%nobits
 6610              		.align	2
 6611              		.set	.LANCHOR1,. + 0
 6614              	last_nav_altitude.8556:
 6615 0000 00000000 		.space	4
 6616              		.section	.bss.dist2_to_wp,"aw",%nobits
 6617              		.align	2
 6618              		.set	.LANCHOR9,. + 0
 6621              	dist2_to_wp:
 6622 0000 00000000 		.space	4
 6623              		.section	.bss.nav_circle_radius,"aw",%nobits
 6624              		.align	2
 6625              		.set	.LANCHOR26,. + 0
 6628              	nav_circle_radius:
 6629 0000 00000000 		.space	4
 6630              		.section	.bss.nav_in_circle,"aw",%nobits
 6631              		.set	.LANCHOR23,. + 0
 6634              	nav_in_circle:
 6635 0000 00       		.space	1
 6636              		.section	.bss.nav_course,"aw",%nobits
 6637              		.align	2
 6640              	nav_course:
 6641 0000 00000000 		.space	4
 6642              		.section	.bss.nav_survey_north,"aw",%nobits
 6643              		.align	2
 6644              		.set	.LANCHOR15,. + 0
 6647              	nav_survey_north:
 6648 0000 00000000 		.space	4
 6649              		.section	.bss.circle_bank,"aw",%nobits
 6650              		.align	2
 6651              		.set	.LANCHOR35,. + 0
 6654              	circle_bank:
 6655 0000 00000000 		.space	4
 6656              		.section	.bss.prescaler.8544,"aw",%nobits
 6657              		.align	1
 6658              		.set	.LANCHOR42,. + 0
 6661              	prescaler.8544:
 6662 0000 0000     		.space	2
 6663              		.section	.data.waypoints,"aw",%progbits
 6664              		.align	2
 6665              		.set	.LANCHOR6,. + 0
 6668              	waypoints:
 6669 0000 00002842 		.word	1109917696
 6670 0004 00002842 		.word	1109917696
 6671 0008 0000C842 		.word	1120403456
 6672 000c CDCC4CBE 		.word	-1102263091
 6673 0010 000000BF 		.word	-1090519040
 6674 0014 0000C842 		.word	1120403456
 6675 0018 666610C2 		.word	-1039112602
 6676 001c 6666E641 		.word	1105618534
 6677 0020 0000C842 		.word	1120403456
 6678 0024 666630C2 		.word	-1037015450
 6679 0028 33338942 		.word	1116287795
 6680 002c 0000C842 		.word	1120403456
 6681 0030 CDCC2AC2 		.word	-1037382451
 6682 0034 9A9999C1 		.word	-1046898278
 6683 0038 0000C842 		.word	1120403456
 6684 003c 666658C2 		.word	-1034394010
 6685 0040 00002041 		.word	1092616192
 6686 0044 0000C842 		.word	1120403456
 6687 0048 9A99CEC2 		.word	-1026647654
 6688 004c 6666C642 		.word	1120298598
 6689 0050 0000C842 		.word	1120403456
 6690 0054 333303C1 		.word	-1056754893
 6691 0058 CDCC52C2 		.word	-1034761011
 6692 005c 0000C842 		.word	1120403456
 6693 0060 666686C0 		.word	-1064933786
 6694 0064 9A99F142 		.word	1123129754
 6695 0068 00000C42 		.word	1108082688
 6696 006c 666686C0 		.word	-1064933786
 6697 0070 9A99C942 		.word	1120508314
 6698 0074 0000A040 		.word	1084227584
 6699 0078 333383C2 		.word	-1031589069
 6700 007c 33330643 		.word	1124479795
 6701 0080 0000C842 		.word	1120403456
 6702 0084 333317C2 		.word	-1038666957
 6703 0088 66668640 		.word	1082549862
 6704 008c 0000C842 		.word	1120403456
 6705              		.section	.bss.dist2_to_home,"aw",%nobits
 6706              		.align	2
 6707              		.set	.LANCHOR10,. + 0
 6710              	dist2_to_home:
 6711 0000 00000000 		.space	4
 6712              		.section	.bss.last_wp,"aw",%nobits
 6713              		.set	.LANCHOR51,. + 0
 6716              	last_wp:
 6717 0000 00       		.space	1
 6718              		.section	.bss.nav_oval_count,"aw",%nobits
 6719              		.set	.LANCHOR11,. + 0
 6722              	nav_oval_count:
 6723 0000 00       		.space	1
 6724              		.section	.bss.rc_pitch,"aw",%nobits
 6725              		.align	2
 6728              	rc_pitch:
 6729 0000 00000000 		.space	4
 6730              		.section	.bss.nav_ground_speed_pgain,"aw",%nobits
 6731              		.align	2
 6734              	nav_ground_speed_pgain:
 6735 0000 00000000 		.space	4
 6736              		.section	.bss.too_far_from_home,"aw",%nobits
 6737              		.set	.LANCHOR40,. + 0
 6740              	too_far_from_home:
 6741 0000 00       		.space	1
 6742              		.section	.bss.nav_pitch,"aw",%nobits
 6743              		.align	2
 6744              		.set	.LANCHOR44,. + 0
 6747              	nav_pitch:
 6748 0000 00000000 		.space	4
 6749              		.section	.data.nav_utm_east0,"aw",%progbits
 6750              		.align	2
 6751              		.set	.LANCHOR5,. + 0
 6754              	nav_utm_east0:
 6755 0000 C3B70600 		.word	440259
 6756              		.section	.bss.horizontal_mode,"aw",%nobits
 6757              		.set	.LANCHOR36,. + 0
 6760              	horizontal_mode:
 6761 0000 00       		.space	1
 6762              		.section	.bss.nav_circle_trigo_qdr,"aw",%nobits
 6763              		.align	2
 6764              		.set	.LANCHOR34,. + 0
 6767              	nav_circle_trigo_qdr:
 6768 0000 00000000 		.space	4
 6769              		.section	.bss.nav_survey_south,"aw",%nobits
 6770              		.align	2
 6771              		.set	.LANCHOR17,. + 0
 6774              	nav_survey_south:
 6775 0000 00000000 		.space	4
 6776              		.section	.bss.eight_status,"aw",%nobits
 6777              		.set	.LANCHOR49,. + 0
 6780              	eight_status:
 6781 0000 00       		.space	1
 6782              		.section	.bss.last_x,"aw",%nobits
 6783              		.align	2
 6784              		.set	.LANCHOR27,. + 0
 6787              	last_x:
 6788 0000 00000000 		.space	4
 6789              		.section	.bss.nav_circle_x,"aw",%nobits
 6790              		.align	2
 6791              		.set	.LANCHOR24,. + 0
 6794              	nav_circle_x:
 6795 0000 00000000 		.space	4
 6796              		.section	.bss.nav_circle_y,"aw",%nobits
 6797              		.align	2
 6798              		.set	.LANCHOR25,. + 0
 6801              	nav_circle_y:
 6802 0000 00000000 		.space	4
 6803              		.section	.bss.nav_carrot_leg_progress,"aw",%nobits
 6804              		.align	2
 6805              		.set	.LANCHOR39,. + 0
 6808              	nav_carrot_leg_progress:
 6809 0000 00000000 		.space	4
 6810              		.section	.bss.nav_leg_length,"aw",%nobits
 6811              		.align	2
 6812              		.set	.LANCHOR38,. + 0
 6815              	nav_leg_length:
 6816 0000 00000000 		.space	4
 6817              		.section	.bss.last_y,"aw",%nobits
 6818              		.align	2
 6819              		.set	.LANCHOR28,. + 0
 6822              	last_y:
 6823 0000 00000000 		.space	4
 6824              		.section	.bss.baseleg_out_qdr,"aw",%nobits
 6825              		.align	2
 6826              		.set	.LANCHOR52,. + 0
 6829              	baseleg_out_qdr:
 6830 0000 00000000 		.space	4
 6831              		.section	.rodata.str1.1,"aMS",%progbits,1
 6832              	.LC0:
 6833 0000 57505F4D 		.ascii	"WP_MOVED\000"
 6833      4F564544 
 6833      00
 6834              	.LC1:
 6835 0009 4E415649 		.ascii	"NAVIGATION\000"
 6835      47415449 
 6835      4F4E00
 6836              	.LC2:
 6837 0014 4E415649 		.ascii	"NAVIGATION_REF\000"
 6837      47415449 
 6837      4F4E5F52 
 6837      454600
 6838              	.LC3:
 6839 0023 53555256 		.ascii	"SURVEY\000"
 6839      455900
 6840              	.LC4:
 6841 002a 5345474D 		.ascii	"SEGMENT\000"
 6841      454E5400 
 6842              	.LC5:
 6843 0032 43495243 		.ascii	"CIRCLE\000"
 6843      4C4500
 6844              		.section	.bss.nav_circle_radians_no_rewind,"aw",%nobits
 6845              		.align	2
 6846              		.set	.LANCHOR29,. + 0
 6849              	nav_circle_radians_no_rewind:
 6850 0000 00000000 		.space	4
 6851              		.section	.bss.nav_segment_x_1,"aw",%nobits
 6852              		.align	2
 6853              		.set	.LANCHOR19,. + 0
 6856              	nav_segment_x_1:
 6857 0000 00000000 		.space	4
 6858              		.section	.bss.nav_segment_x_2,"aw",%nobits
 6859              		.align	2
 6860              		.set	.LANCHOR21,. + 0
 6863              	nav_segment_x_2:
 6864 0000 00000000 		.space	4
 6865              		.text
 6866              	.Letext0:
 6867              		.file 6 "/usr/arm-none-eabi/include/machine/_default_types.h"
 6868              		.file 7 "/usr/arm-none-eabi/include/sys/_stdint.h"
 6869              		.file 8 "/home/dino/paparazzi/sw/include/std.h"
 6870              		.file 9 "./paparazzi.h"
 6871              		.file 10 "./math/pprz_algebra_int.h"
 6872              		.file 11 "./math/pprz_algebra_float.h"
 6873              		.file 12 "./math/pprz_geodetic_int.h"
 6874              		.file 13 "./math/pprz_geodetic_float.h"
 6875              		.file 14 "./math/pprz_orientation_conversion.h"
 6876              		.file 15 "./subsystems/navigation/nav_survey_rectangle.h"
 6877              		.file 16 "./subsystems/navigation/common_nav.h"
 6878              		.file 17 "./mcu_periph/sys_time.h"
 6879              		.file 18 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
 6880              		.file 19 "./mcu_periph/link_device.h"
 6881              		.file 20 "./mcu_periph/uart.h"
 6882              		.file 21 "./subsystems/gps/gps_ubx.h"
 6883              		.file 22 "./subsystems/gps.h"
 6884              		.file 23 "./subsystems/datalink/transport.h"
 6885              		.file 24 "./firmwares/fixedwing/nav.h"
 6886              		.file 25 "./subsystems/radio_control.h"
 6887              		.file 26 "./subsystems/electrical.h"
 6888              		.file 27 "./inter_mcu.h"
 6889              		.file 28 "./subsystems/datalink/pprz_transport.h"
 6890              		.file 29 "./subsystems/datalink/xbee.h"
 6891              		.file 30 "./subsystems/datalink/telemetry_common.h"
 6892              		.file 31 "./firmwares/fixedwing/guidance/guidance_common.h"
 6893              		.file 32 "./firmwares/fixedwing/guidance/guidance_v.h"
 6894              		.file 33 "./subsystems/navigation/common_flight_plan.h"
 6895              		.file 34 "./firmwares/fixedwing/stabilization/stabilization_attitude.h"
 6896              		.file 35 "./firmwares/fixedwing/autopilot.h"
 6897              		.file 36 "./subsystems/settings.h"
 6898              		.file 37 "./firmwares/fixedwing/main_fbw.h"
 6899              		.file 38 "./subsystems/datalink/datalink.h"
 6900              		.file 39 "./subsystems/datalink/w5100.h"
 6901              		.file 40 "/home/dino/paparazzi/var/aircrafts/MY_apogee/ap/generated/periodic_telemetry.h"
 6902              		.file 41 "./subsystems/datalink/telemetry.h"
 6903              		.file 42 "/usr/arm-none-eabi/include/math.h"
 6904              		.file 43 "./subsystems/ins.h"
DEFINED SYMBOLS
                            *ABS*:00000000 nav.c
     /tmp/ccWw8Fd5.s:20     .text.nav_set_altitude:00000000 $t
     /tmp/ccWw8Fd5.s:24     .text.nav_set_altitude:00000000 nav_set_altitude
     /tmp/ccWw8Fd5.s:56     .text.nav_set_altitude:00000034 $d
     /tmp/ccWw8Fd5.s:64     .text.stateGetPositionEnu_f:00000000 $t
     /tmp/ccWw8Fd5.s:68     .text.stateGetPositionEnu_f:00000000 stateGetPositionEnu_f
     /tmp/ccWw8Fd5.s:94     .text.stateGetPositionEnu_f:00000014 $d
     /tmp/ccWw8Fd5.s:100    .text.stateGetHorizontalSpeedNorm_f:00000000 $t
     /tmp/ccWw8Fd5.s:104    .text.stateGetHorizontalSpeedNorm_f:00000000 stateGetHorizontalSpeedNorm_f
     /tmp/ccWw8Fd5.s:129    .text.stateGetHorizontalSpeedNorm_f:00000014 $d
     /tmp/ccWw8Fd5.s:135    .text.stateGetPositionUtm_f:00000000 $t
     /tmp/ccWw8Fd5.s:139    .text.stateGetPositionUtm_f:00000000 stateGetPositionUtm_f
     /tmp/ccWw8Fd5.s:164    .text.stateGetPositionUtm_f:00000014 $d
     /tmp/ccWw8Fd5.s:170    .text.pprz_msg_send_WP_MOVED.constprop.4:00000000 $t
     /tmp/ccWw8Fd5.s:174    .text.pprz_msg_send_WP_MOVED.constprop.4:00000000 pprz_msg_send_WP_MOVED.constprop.4
     /tmp/ccWw8Fd5.s:348    .text.pprz_msg_send_WP_MOVED.constprop.4:000000e4 $d
     /tmp/ccWw8Fd5.s:354    .text.send_wp_moved:00000000 $t
     /tmp/ccWw8Fd5.s:358    .text.send_wp_moved:00000000 send_wp_moved
     /tmp/ccWw8Fd5.s:431    .text.send_wp_moved:00000060 $d
     /tmp/ccWw8Fd5.s:442    .text.send_nav:00000000 $t
     /tmp/ccWw8Fd5.s:446    .text.send_nav:00000000 send_nav
     /tmp/ccWw8Fd5.s:704    .text.send_nav:000001a0 $d
     /tmp/ccWw8Fd5.s:717    .text.send_nav_ref:00000000 $t
     /tmp/ccWw8Fd5.s:721    .text.send_nav_ref:00000000 send_nav_ref
     /tmp/ccWw8Fd5.s:877    .text.send_nav_ref:000000d0 $d
     /tmp/ccWw8Fd5.s:886    .text.send_survey:00000000 $t
     /tmp/ccWw8Fd5.s:890    .text.send_survey:00000000 send_survey
     /tmp/ccWw8Fd5.s:1052   .text.send_survey:000000d4 $d
     /tmp/ccWw8Fd5.s:1062   .text.send_segment:00000000 $t
     /tmp/ccWw8Fd5.s:1066   .text.send_segment:00000000 send_segment
     /tmp/ccWw8Fd5.s:1228   .text.send_segment:000000d4 $d
     /tmp/ccWw8Fd5.s:1238   .text.send_circle:00000000 $t
     /tmp/ccWw8Fd5.s:1242   .text.send_circle:00000000 send_circle
     /tmp/ccWw8Fd5.s:1393   .text.send_circle:000000c4 $d
     /tmp/ccWw8Fd5.s:1402   .text.nav_init_stage:00000000 $t
     /tmp/ccWw8Fd5.s:1407   .text.nav_init_stage:00000000 nav_init_stage
     /tmp/ccWw8Fd5.s:1455   .text.nav_init_stage:00000034 $d
     /tmp/ccWw8Fd5.s:1467   .text.nav_approaching_xy:00000000 $t
     /tmp/ccWw8Fd5.s:1472   .text.nav_approaching_xy:00000000 nav_approaching_xy
     /tmp/ccWw8Fd5.s:1621   .text.nav_approaching_xy:000000dc $d
     /tmp/ccWw8Fd5.s:1631   .text.fly_to_xy:00000000 $t
     /tmp/ccWw8Fd5.s:1636   .text.fly_to_xy:00000000 fly_to_xy
     /tmp/ccWw8Fd5.s:1886   .text.fly_to_xy:000001a0 $d
     /tmp/ccWw8Fd5.s:1914   .text.nav_circle_XY:00000000 $t
     /tmp/ccWw8Fd5.s:1919   .text.nav_circle_XY:00000000 nav_circle_XY
     /tmp/ccWw8Fd5.s:2253   .text.nav_circle_XY:00000250 $d
     /tmp/ccWw8Fd5.s:2283   .text.nav_route_xy:00000000 $t
     /tmp/ccWw8Fd5.s:2288   .text.nav_route_xy:00000000 nav_route_xy
     /tmp/ccWw8Fd5.s:2463   .text.nav_route_xy:00000114 $d
     /tmp/ccWw8Fd5.s:2478   .text.compute_dist2_to_home:00000000 $t
     /tmp/ccWw8Fd5.s:2483   .text.compute_dist2_to_home:00000000 compute_dist2_to_home
     /tmp/ccWw8Fd5.s:2535   .text.compute_dist2_to_home:00000048 $d
     /tmp/ccWw8Fd5.s:2543   .text.nav_reset_utm_zone:00000000 $t
     /tmp/ccWw8Fd5.s:2548   .text.nav_reset_utm_zone:00000000 nav_reset_utm_zone
     /tmp/ccWw8Fd5.s:2614   .text.nav_reset_utm_zone:00000058 $d
     /tmp/ccWw8Fd5.s:2622   .text.nav_reset_reference:00000000 $t
     /tmp/ccWw8Fd5.s:2627   .text.nav_reset_reference:00000000 nav_reset_reference
     /tmp/ccWw8Fd5.s:2673   .text.nav_reset_reference:00000040 $d
     /tmp/ccWw8Fd5.s:2683   .text.nav_reset_alt:00000000 $t
     /tmp/ccWw8Fd5.s:2688   .text.nav_reset_alt:00000000 nav_reset_alt
     /tmp/ccWw8Fd5.s:2716   .text.nav_reset_alt:0000001c $d
     /tmp/ccWw8Fd5.s:2723   .text.nav_update_waypoints_alt:00000000 $t
     /tmp/ccWw8Fd5.s:2728   .text.nav_update_waypoints_alt:00000000 nav_update_waypoints_alt
     /tmp/ccWw8Fd5.s:2760   .text.nav_update_waypoints_alt:0000002c $d
     /tmp/ccWw8Fd5.s:2767   .text.common_nav_periodic_task_4Hz:00000000 $t
     /tmp/ccWw8Fd5.s:2772   .text.common_nav_periodic_task_4Hz:00000000 common_nav_periodic_task_4Hz
     /tmp/ccWw8Fd5.s:2803   .text.common_nav_periodic_task_4Hz:00000028 $d
     /tmp/ccWw8Fd5.s:2811   .text.nav_move_waypoint:00000000 $t
     /tmp/ccWw8Fd5.s:2816   .text.nav_move_waypoint:00000000 nav_move_waypoint
     /tmp/ccWw8Fd5.s:2921   .text.nav_move_waypoint:000000a0 $d
     /tmp/ccWw8Fd5.s:2930   .text.nav_home:00000000 $t
     /tmp/ccWw8Fd5.s:2935   .text.nav_home:00000000 nav_home
     /tmp/ccWw8Fd5.s:2986   .text.nav_home:00000044 $d
     /tmp/ccWw8Fd5.s:2998   .text.DownlinkSendWpNr:00000000 $t
     /tmp/ccWw8Fd5.s:3003   .text.DownlinkSendWpNr:00000000 DownlinkSendWpNr
     /tmp/ccWw8Fd5.s:3060   .text.DownlinkSendWpNr:0000005c $d
     /tmp/ccWw8Fd5.s:3069   .text.nav_init:00000000 $t
     /tmp/ccWw8Fd5.s:3074   .text.nav_init:00000000 nav_init
     /tmp/ccWw8Fd5.s:3163   .text.nav_init:0000006c $d
     /tmp/ccWw8Fd5.s:3190   .text.nav_without_gps:00000000 $t
     /tmp/ccWw8Fd5.s:3195   .text.nav_without_gps:00000000 nav_without_gps
     /tmp/ccWw8Fd5.s:3226   .text.nav_without_gps:00000024 $d
     /tmp/ccWw8Fd5.s:3236   .text.nav_eight_init:00000000 $t
     /tmp/ccWw8Fd5.s:3241   .text.nav_eight_init:00000000 nav_eight_init
     /tmp/ccWw8Fd5.s:3256   .text.nav_eight_init:00000008 $d
     /tmp/ccWw8Fd5.s:3261   .text.nav_eight:00000000 $t
     /tmp/ccWw8Fd5.s:3266   .text.nav_eight:00000000 nav_eight
     /tmp/ccWw8Fd5.s:3477   .text.nav_eight:0000014e $d
     /tmp/ccWw8Fd5.s:3483   .text.nav_eight:0000015a $t
     /tmp/ccWw8Fd5.s:3782   .text.nav_eight:00000350 $d
     /tmp/ccWw8Fd5.s:3798   .text.nav_eight:00000384 $t
     /tmp/ccWw8Fd5.s:4009   .text.nav_eight:0000049c $d
     /tmp/ccWw8Fd5.s:4014   .text.nav_oval_init:00000000 $t
     /tmp/ccWw8Fd5.s:4019   .text.nav_oval_init:00000000 nav_oval_init
     /tmp/ccWw8Fd5.s:4038   .text.nav_oval_init:00000010 $d
     /tmp/ccWw8Fd5.s:4044   .text.nav_oval:00000000 $t
     /tmp/ccWw8Fd5.s:4049   .text.nav_oval:00000000 nav_oval
     /tmp/ccWw8Fd5.s:4221   .text.nav_oval:000000f8 $d
     /tmp/ccWw8Fd5.s:4225   .text.nav_oval:00000100 $t
     /tmp/ccWw8Fd5.s:4580   .text.nav_oval:00000340 $d
     /tmp/ccWw8Fd5.s:4595   .text.nav_oval:00000374 $t
     /tmp/ccWw8Fd5.s:4746   .text.nav_oval:00000418 $d
     /tmp/ccWw8Fd5.s:4751   .text.nav_periodic_task:00000000 $t
     /tmp/ccWw8Fd5.s:4756   .text.nav_periodic_task:00000000 nav_periodic_task
     /tmp/ccWw8Fd5.s:4816   .text.nav_periodic_task:0000002c $d
     /tmp/ccWw8Fd5.s:4832   .text.nav_periodic_task:0000004c $t
     /tmp/ccWw8Fd5.s:5236   .text.nav_periodic_task:0000028c $d
     /tmp/ccWw8Fd5.s:5262   .text.nav_periodic_task:000002ec $t
     /tmp/ccWw8Fd5.s:5379   .text.nav_periodic_task:00000390 $d
     /tmp/ccWw8Fd5.s:5634   .text.nav_periodic_task:000004fc $d
     /tmp/ccWw8Fd5.s:5648   .text.nav_periodic_task:0000052c $t
     /tmp/ccWw8Fd5.s:6101   .text.nav_periodic_task:00000858 $d
     /tmp/ccWw8Fd5.s:6129   .text.nav_periodic_task:000008c0 $t
     /tmp/ccWw8Fd5.s:6334   .text.nav_periodic_task:000009d8 $d
     /tmp/ccWw8Fd5.s:6722   .bss.nav_oval_count:00000000 nav_oval_count
     /tmp/ccWw8Fd5.s:6409   .data.max_dist_from_home:00000000 max_dist_from_home
     /tmp/ccWw8Fd5.s:6503   .data.nav_utm_zone0:00000000 nav_utm_zone0
     /tmp/ccWw8Fd5.s:6607   .data.nav_utm_north0:00000000 nav_utm_north0
     /tmp/ccWw8Fd5.s:6754   .data.nav_utm_east0:00000000 nav_utm_east0
     /tmp/ccWw8Fd5.s:6416   .bss.ground_alt:00000000 ground_alt
     /tmp/ccWw8Fd5.s:6668   .data.waypoints:00000000 waypoints
     /tmp/ccWw8Fd5.s:6508   .rodata.nb_waypoint:00000000 nb_waypoint
     /tmp/ccWw8Fd5.s:6740   .bss.too_far_from_home:00000000 too_far_from_home
     /tmp/ccWw8Fd5.s:6621   .bss.dist2_to_wp:00000000 dist2_to_wp
     /tmp/ccWw8Fd5.s:6710   .bss.dist2_to_home:00000000 dist2_to_home
     /tmp/ccWw8Fd5.s:6476   .bss.fp_pitch:00000000 fp_pitch
     /tmp/ccWw8Fd5.s:6747   .bss.nav_pitch:00000000 nav_pitch
     /tmp/ccWw8Fd5.s:6497   .bss.nav_throttle_setpoint:00000000 nav_throttle_setpoint
     /tmp/ccWw8Fd5.s:6451   .bss.desired_y:00000000 desired_y
     /tmp/ccWw8Fd5.s:6444   .bss.desired_x:00000000 desired_x
     /tmp/ccWw8Fd5.s:6437   .data.nav_altitude:00000000 nav_altitude
     /tmp/ccWw8Fd5.s:6430   .bss.nav_mode:00000000 nav_mode
     /tmp/ccWw8Fd5.s:6521   .bss.nav_survey_active:00000000 nav_survey_active
     /tmp/ccWw8Fd5.s:6774   .bss.nav_survey_south:00000000 nav_survey_south
     /tmp/ccWw8Fd5.s:6647   .bss.nav_survey_north:00000000 nav_survey_north
     /tmp/ccWw8Fd5.s:6423   .bss.nav_survey_east:00000000 nav_survey_east
     /tmp/ccWw8Fd5.s:6528   .bss.nav_survey_west:00000000 nav_survey_west
     /tmp/ccWw8Fd5.s:6490   .bss.nav_survey_shift:00000000 nav_survey_shift
     /tmp/ccWw8Fd5.s:6734   .bss.nav_ground_speed_pgain:00000000 nav_ground_speed_pgain
     /tmp/ccWw8Fd5.s:6593   .bss.nav_ground_speed_setpoint:00000000 nav_ground_speed_setpoint
     /tmp/ccWw8Fd5.s:6587   .bss.nav_glide_pitch_trim:00000000 nav_glide_pitch_trim
     /tmp/ccWw8Fd5.s:6515   .bss.flight_altitude:00000000 flight_altitude
     /tmp/ccWw8Fd5.s:6654   .bss.circle_bank:00000000 circle_bank
     /tmp/ccWw8Fd5.s:6760   .bss.horizontal_mode:00000000 horizontal_mode
     /tmp/ccWw8Fd5.s:6561   .bss.nav_segment_y_2:00000000 nav_segment_y_2
     /tmp/ccWw8Fd5.s:6863   .bss.nav_segment_x_2:00000000 nav_segment_x_2
     /tmp/ccWw8Fd5.s:6554   .bss.nav_segment_y_1:00000000 nav_segment_y_1
     /tmp/ccWw8Fd5.s:6856   .bss.nav_segment_x_1:00000000 nav_segment_x_1
     /tmp/ccWw8Fd5.s:6628   .bss.nav_circle_radius:00000000 nav_circle_radius
     /tmp/ccWw8Fd5.s:6801   .bss.nav_circle_y:00000000 nav_circle_y
     /tmp/ccWw8Fd5.s:6794   .bss.nav_circle_x:00000000 nav_circle_x
     /tmp/ccWw8Fd5.s:6573   .bss.nav_in_segment:00000000 nav_in_segment
     /tmp/ccWw8Fd5.s:6634   .bss.nav_in_circle:00000000 nav_in_circle
     /tmp/ccWw8Fd5.s:6483   .bss.nav_shift:00000000 nav_shift
     /tmp/ccWw8Fd5.s:6534   .bss.nav_climb:00000000 nav_climb
     /tmp/ccWw8Fd5.s:6640   .bss.nav_course:00000000 nav_course
     /tmp/ccWw8Fd5.s:6541   .bss.nav_radius:00000000 nav_radius
     /tmp/ccWw8Fd5.s:6767   .bss.nav_circle_trigo_qdr:00000000 nav_circle_trigo_qdr
     /tmp/ccWw8Fd5.s:6849   .bss.nav_circle_radians_no_rewind:00000000 nav_circle_radians_no_rewind
     /tmp/ccWw8Fd5.s:6580   .bss.nav_circle_radians:00000000 nav_circle_radians
     /tmp/ccWw8Fd5.s:6470   .bss.carrot_y:00000000 carrot_y
     /tmp/ccWw8Fd5.s:6464   .bss.carrot_x:00000000 carrot_x
     /tmp/ccWw8Fd5.s:6728   .bss.rc_pitch:00000000 rc_pitch
     /tmp/ccWw8Fd5.s:6822   .bss.last_y:00000000 last_y
     /tmp/ccWw8Fd5.s:6787   .bss.last_x:00000000 last_x
     /tmp/ccWw8Fd5.s:6547   .bss.oval_status:00000000 oval_status
     /tmp/ccWw8Fd5.s:6405   .data.max_dist_from_home:00000000 $d
     /tmp/ccWw8Fd5.s:6412   .bss.ground_alt:00000000 $d
     /tmp/ccWw8Fd5.s:6419   .bss.nav_survey_east:00000000 $d
     /tmp/ccWw8Fd5.s:6426   .bss.nav_mode:00000000 $d
     /tmp/ccWw8Fd5.s:6433   .data.nav_altitude:00000000 $d
     /tmp/ccWw8Fd5.s:6440   .bss.desired_x:00000000 $d
     /tmp/ccWw8Fd5.s:6447   .bss.desired_y:00000000 $d
     /tmp/ccWw8Fd5.s:6454   .bss.previous_ground_alt:00000000 $d
     /tmp/ccWw8Fd5.s:6458   .bss.previous_ground_alt:00000000 previous_ground_alt
     /tmp/ccWw8Fd5.s:6461   .bss.carrot_x:00000000 $d
     /tmp/ccWw8Fd5.s:6467   .bss.carrot_y:00000000 $d
     /tmp/ccWw8Fd5.s:6473   .bss.fp_pitch:00000000 $d
     /tmp/ccWw8Fd5.s:6479   .bss.nav_shift:00000000 $d
     /tmp/ccWw8Fd5.s:6486   .bss.nav_survey_shift:00000000 $d
     /tmp/ccWw8Fd5.s:6493   .bss.nav_throttle_setpoint:00000000 $d
     /tmp/ccWw8Fd5.s:6511   .bss.flight_altitude:00000000 $d
     /tmp/ccWw8Fd5.s:6522   .bss.nav_survey_active:00000000 $d
     /tmp/ccWw8Fd5.s:6524   .bss.nav_survey_west:00000000 $d
     /tmp/ccWw8Fd5.s:6531   .bss.nav_climb:00000000 $d
     /tmp/ccWw8Fd5.s:6537   .bss.nav_radius:00000000 $d
     /tmp/ccWw8Fd5.s:6548   .bss.oval_status:00000000 $d
     /tmp/ccWw8Fd5.s:6550   .bss.nav_segment_y_1:00000000 $d
     /tmp/ccWw8Fd5.s:6557   .bss.nav_segment_y_2:00000000 $d
     /tmp/ccWw8Fd5.s:6567   .bss.i.11441:00000000 i.11441
     /tmp/ccWw8Fd5.s:6568   .bss.i.11441:00000000 $d
     /tmp/ccWw8Fd5.s:6574   .bss.nav_in_segment:00000000 $d
     /tmp/ccWw8Fd5.s:6576   .bss.nav_circle_radians:00000000 $d
     /tmp/ccWw8Fd5.s:6583   .bss.nav_glide_pitch_trim:00000000 $d
     /tmp/ccWw8Fd5.s:6590   .bss.nav_ground_speed_setpoint:00000000 $d
     /tmp/ccWw8Fd5.s:6596   .bss.nav_leg_progress:00000000 $d
     /tmp/ccWw8Fd5.s:6600   .bss.nav_leg_progress:00000000 nav_leg_progress
     /tmp/ccWw8Fd5.s:6603   .data.nav_utm_north0:00000000 $d
     /tmp/ccWw8Fd5.s:6610   .bss.last_nav_altitude.8556:00000000 $d
     /tmp/ccWw8Fd5.s:6614   .bss.last_nav_altitude.8556:00000000 last_nav_altitude.8556
     /tmp/ccWw8Fd5.s:6617   .bss.dist2_to_wp:00000000 $d
     /tmp/ccWw8Fd5.s:6624   .bss.nav_circle_radius:00000000 $d
     /tmp/ccWw8Fd5.s:6635   .bss.nav_in_circle:00000000 $d
     /tmp/ccWw8Fd5.s:6637   .bss.nav_course:00000000 $d
     /tmp/ccWw8Fd5.s:6643   .bss.nav_survey_north:00000000 $d
     /tmp/ccWw8Fd5.s:6650   .bss.circle_bank:00000000 $d
     /tmp/ccWw8Fd5.s:6657   .bss.prescaler.8544:00000000 $d
     /tmp/ccWw8Fd5.s:6661   .bss.prescaler.8544:00000000 prescaler.8544
     /tmp/ccWw8Fd5.s:6664   .data.waypoints:00000000 $d
     /tmp/ccWw8Fd5.s:6706   .bss.dist2_to_home:00000000 $d
     /tmp/ccWw8Fd5.s:6716   .bss.last_wp:00000000 last_wp
     /tmp/ccWw8Fd5.s:6717   .bss.last_wp:00000000 $d
     /tmp/ccWw8Fd5.s:6723   .bss.nav_oval_count:00000000 $d
     /tmp/ccWw8Fd5.s:6725   .bss.rc_pitch:00000000 $d
     /tmp/ccWw8Fd5.s:6731   .bss.nav_ground_speed_pgain:00000000 $d
     /tmp/ccWw8Fd5.s:6741   .bss.too_far_from_home:00000000 $d
     /tmp/ccWw8Fd5.s:6743   .bss.nav_pitch:00000000 $d
     /tmp/ccWw8Fd5.s:6750   .data.nav_utm_east0:00000000 $d
     /tmp/ccWw8Fd5.s:6761   .bss.horizontal_mode:00000000 $d
     /tmp/ccWw8Fd5.s:6763   .bss.nav_circle_trigo_qdr:00000000 $d
     /tmp/ccWw8Fd5.s:6770   .bss.nav_survey_south:00000000 $d
     /tmp/ccWw8Fd5.s:6780   .bss.eight_status:00000000 eight_status
     /tmp/ccWw8Fd5.s:6781   .bss.eight_status:00000000 $d
     /tmp/ccWw8Fd5.s:6783   .bss.last_x:00000000 $d
     /tmp/ccWw8Fd5.s:6790   .bss.nav_circle_x:00000000 $d
     /tmp/ccWw8Fd5.s:6797   .bss.nav_circle_y:00000000 $d
     /tmp/ccWw8Fd5.s:6804   .bss.nav_carrot_leg_progress:00000000 $d
     /tmp/ccWw8Fd5.s:6808   .bss.nav_carrot_leg_progress:00000000 nav_carrot_leg_progress
     /tmp/ccWw8Fd5.s:6811   .bss.nav_leg_length:00000000 $d
     /tmp/ccWw8Fd5.s:6815   .bss.nav_leg_length:00000000 nav_leg_length
     /tmp/ccWw8Fd5.s:6818   .bss.last_y:00000000 $d
     /tmp/ccWw8Fd5.s:6825   .bss.baseleg_out_qdr:00000000 $d
     /tmp/ccWw8Fd5.s:6829   .bss.baseleg_out_qdr:00000000 baseleg_out_qdr
     /tmp/ccWw8Fd5.s:6845   .bss.nav_circle_radians_no_rewind:00000000 $d
     /tmp/ccWw8Fd5.s:6852   .bss.nav_segment_x_1:00000000 $d
     /tmp/ccWw8Fd5.s:6859   .bss.nav_segment_x_2:00000000 $d
                     .debug_frame:00000010 $d
     /tmp/ccWw8Fd5.s:5384   .text.nav_periodic_task:00000395 $d
     /tmp/ccWw8Fd5.s:5384   .text.nav_periodic_task:00000396 $t
                           .group:00000000 wm4.0.7f506cdee5614e5fae524d20989ad8c8
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.ad242c9287d2217c7d2035216e5d04ca
                           .group:00000000 wm4._intsup.h.10.b2832a532eae49c14d45880be6d4ca65
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.inttypes.h.23.a096771aacee9aba4b33c2d04aacc9b1
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.paparazzi.h.2.eeb1c9dc8e5acded3c1d3014b2b23af3
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.pprz_orientation_conversion.h.69.5cce798fefad8bb761767fd414e61db5
                           .group:00000000 wm4.state.h.65.b18954aacb3801ec3e27b4e857d620d3
                           .group:00000000 wm4.guidance_common.h.29.1bf3aadf5e973d07dcbb9e181585cee6
                           .group:00000000 wm4.nav_survey_rectangle.h.40.be8d41ad6903a05cab94fc858d7a6899
                           .group:00000000 wm4.common_flight_plan.h.28.998f628cac1ef266b3e88de20c1aaea2
                           .group:00000000 wm4.common_nav.h.28.8e6fb87079f62fdfc188e60962e671bb
                           .group:00000000 wm4.nav.h.44.3eb88fcdae84be242ba32ecd12ce1b48
                           .group:00000000 wm4.apogee_1.0.h.2.34ab7bb688056eecb54e2e3ffff48ca6
                           .group:00000000 wm4.sys_time.h.40.92f532b5cea824e0ec5ea845e7275d34
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.gps_ubx.h.36.d4183b0b154441c99ce352aae50967b5
                           .group:00000000 wm4.gps.h.41.79d1c69e44dd427f855100ff8e932fbe
                           .group:00000000 wm4.airframe.h.5.55ffe79377b235d0a97162ed16ec170d
                           .group:00000000 wm4.actuators_pwm_arch.h.27.5a737f85d71223e6481c4ba4068c062a
                           .group:00000000 wm4.airframe.h.14.814d9a421a57ec2d434c7b6efc262c4b
                           .group:00000000 wm4.autopilot.h.30.340d635d311f125ac0430a6b5533bef7
                           .group:00000000 wm4.autopilot.h.122.a7c58c4b7871349616be315a4b094581
                           .group:00000000 wm4.settings.h.29.dff4b7c685fcd0dfb04f9f8de0a69e75
                           .group:00000000 wm4.transport.h.27.9215bbc09b6a8d08d228c20740408d47
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf
                           .group:00000000 wm4.ppm_arch.h.30.0c8951ed5389d834f3146640146f52ff
                           .group:00000000 wm4.radio.h.5.bef73564d5978192f7cd5fea2ca51500
                           .group:00000000 wm4.ppm.h.47.0149fce522ef0e315e524566a6409a2a
                           .group:00000000 wm4.radio_control.h.42.d43f9142844e08da852d6ed343ba2de3
                           .group:00000000 wm4.main_fbw.h.30.cd540a85a950acc45a6cf70c916a3a6b
                           .group:00000000 wm4.inter_mcu.h.70.46538c70524fe1108f4c29ffbb912cdc
                           .group:00000000 wm4.traffic_info.h.30.4e7408a0732781cb79b4a633fe717a53
                           .group:00000000 wm4.modules.h.5.3647ee45f49511088e2f33d88288be64
                           .group:00000000 wm4.gps_ubx_ucenter.h.29.30a3f1ed020dbc7085e412c29746d829
                           .group:00000000 wm4.modules.h.23.3d04ad9f740a156fcd476d18714df592
                           .group:00000000 wm4.datalink.h.28.0d234a7c203533b2ec538be3e18eddf4
                           .group:00000000 wm4.dl_protocol.h.5.a12fe27a4b4a3cbb46fbca8acf33e3dd
                           .group:00000000 wm4.datalink.h.46.36a5e0f36fb7d0784f1e7af767537c84
                           .group:00000000 wm4.flight_plan.h.10.82b243c7414d8bf1f60915facc215da5
                           .group:00000000 wm4.messages.h.5.f850659c40a03ab37f86f316388d85a9
                           .group:00000000 wm4.pprz_transport.h.42.85f722102d4f6618b3cf40ce3c652d4b
                           .group:00000000 wm4.xbee24.h.29.a6677f8bcb71d3b07e11290a2de0e179
                           .group:00000000 wm4.xbee.h.41.f36be817f95b74f883aef9324b53817b
                           .group:00000000 wm4.w5100.h.29.d3529bed8de657ab3944b343be960f10
                           .group:00000000 wm4.downlink.h.76.41034157e32fc9012166fd95ec7418fc
                           .group:00000000 wm4.periodic_telemetry.h.11.f25aadf344a171d516cf4756f716329b

UNDEFINED SYMBOLS
v_ctl_altitude_setpoint
stateCalcPositionEnu_f
state
stateCalcHorizontalSpeedNorm_f
stateCalcPositionUtm_f
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2uiz
sqrtf
nav_block
nav_stage
stage_time
__aeabi_dadd
__aeabi_d2f
__aeabi_dsub
__aeabi_dcmpgt
__aeabi_dcmplt
atan2f
stateCalcHorizontalSpeedDir_f
sinf
atanf
h_ctl_course_setpoint
h_ctl_course_pgain
h_ctl_roll_max_setpoint
h_ctl_roll_setpoint
lateral_mode
__aeabi_dmul
cosf
ins_reset_utm_zone
ins_reset_local_origin
ins_reset_altitude_ref
block_time
v_ctl_mode
uart1
pprz_tp
register_periodic_telemetry
pprz_telemetry
kill_throttle
gps
pprz_mode
v_ctl_climb_mode
autopilot_flight_time
v_ctl_altitude_pre_climb
nav_survey_rectangle
nav_survey_rectangle_init
nav_init_block
h_ctl_course_pre_bank
v_ctl_auto_throttle_submode
