   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"baro_board.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.baro_init,"ax",%progbits
  20              		.align	1
  21              		.global	baro_init
  22              		.thumb
  23              		.thumb_func
  25              	baro_init:
  26              	.LFB103:
  27              		.file 1 "boards/apogee/baro_board.c"
   1:boards/apogee/baro_board.c **** /*
   2:boards/apogee/baro_board.c **** * Copyright (C) 2013 Gautier Hattenberger (ENAC)
   3:boards/apogee/baro_board.c **** *
   4:boards/apogee/baro_board.c **** * This file is part of paparazzi.
   5:boards/apogee/baro_board.c **** *
   6:boards/apogee/baro_board.c **** * paparazzi is free software; you can redistribute it and/or modify
   7:boards/apogee/baro_board.c **** * it under the terms of the GNU General Public License as published by
   8:boards/apogee/baro_board.c **** * the Free Software Foundation; either version 2, or (at your option)
   9:boards/apogee/baro_board.c **** * any later version.
  10:boards/apogee/baro_board.c **** *
  11:boards/apogee/baro_board.c **** * paparazzi is distributed in the hope that it will be useful,
  12:boards/apogee/baro_board.c **** * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:boards/apogee/baro_board.c **** * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:boards/apogee/baro_board.c **** * GNU General Public License for more details.
  15:boards/apogee/baro_board.c **** *
  16:boards/apogee/baro_board.c **** * You should have received a copy of the GNU General Public License
  17:boards/apogee/baro_board.c **** * along with paparazzi; see the file COPYING.  If not, write to
  18:boards/apogee/baro_board.c **** * the Free Software Foundation, 59 Temple Place - Suite 330,
  19:boards/apogee/baro_board.c **** * Boston, MA 02111-1307, USA.
  20:boards/apogee/baro_board.c **** *
  21:boards/apogee/baro_board.c **** */
  22:boards/apogee/baro_board.c **** 
  23:boards/apogee/baro_board.c **** /**
  24:boards/apogee/baro_board.c ****  * @file boards/apogee/baro_board.c
  25:boards/apogee/baro_board.c ****  *
  26:boards/apogee/baro_board.c ****  * integrated barometer for Apogee boards (mpl3115)
  27:boards/apogee/baro_board.c ****  */
  28:boards/apogee/baro_board.c **** 
  29:boards/apogee/baro_board.c **** #include "std.h"
  30:boards/apogee/baro_board.c **** #include "subsystems/sensors/baro.h"
  31:boards/apogee/baro_board.c **** #include "peripherals/mpl3115.h"
  32:boards/apogee/baro_board.c **** 
  33:boards/apogee/baro_board.c **** // to get MPU status
  34:boards/apogee/baro_board.c **** #include "boards/apogee/imu_apogee.h"
  35:boards/apogee/baro_board.c **** 
  36:boards/apogee/baro_board.c **** #include "subsystems/abi.h"
  37:boards/apogee/baro_board.c **** #include "led.h"
  38:boards/apogee/baro_board.c **** 
  39:boards/apogee/baro_board.c **** /** Normal frequency with the default settings
  40:boards/apogee/baro_board.c ****  *
  41:boards/apogee/baro_board.c ****  * the baro read function should be called at 5 Hz
  42:boards/apogee/baro_board.c ****  */
  43:boards/apogee/baro_board.c **** #ifndef BARO_BOARD_APOGEE_FREQ
  44:boards/apogee/baro_board.c **** #define BARO_BOARD_APOGEE_FREQ 5
  45:boards/apogee/baro_board.c **** #endif
  46:boards/apogee/baro_board.c **** 
  47:boards/apogee/baro_board.c **** /** Baro periodic prescaler
  48:boards/apogee/baro_board.c ****  *
  49:boards/apogee/baro_board.c ****  * different for fixedwing and rotorcraft...
  50:boards/apogee/baro_board.c ****  */
  51:boards/apogee/baro_board.c **** #ifdef BARO_PERIODIC_FREQUENCY
  52:boards/apogee/baro_board.c **** #define MPL_PRESCALER ((BARO_PERIODIC_FREQUENCY)/BARO_BOARD_APOGEE_FREQ)
  53:boards/apogee/baro_board.c **** #else
  54:boards/apogee/baro_board.c **** #ifdef PERIODIC_FREQUENCY
  55:boards/apogee/baro_board.c **** #define MPL_PRESCALER ((PERIODIC_FREQUENCY)/BARO_BOARD_APOGEE_FREQ)
  56:boards/apogee/baro_board.c **** #else
  57:boards/apogee/baro_board.c **** // default: assuming 60Hz for a 5Hz baro update
  58:boards/apogee/baro_board.c **** #define MPL_PRESCALER 12
  59:boards/apogee/baro_board.c **** #endif
  60:boards/apogee/baro_board.c **** #endif
  61:boards/apogee/baro_board.c **** 
  62:boards/apogee/baro_board.c **** /** Counter to init ads1114 at startup */
  63:boards/apogee/baro_board.c **** #define BARO_STARTUP_COUNTER (200/(MPL_PRESCALER))
  64:boards/apogee/baro_board.c **** uint16_t startup_cnt;
  65:boards/apogee/baro_board.c **** 
  66:boards/apogee/baro_board.c **** struct Mpl3115 apogee_baro;
  67:boards/apogee/baro_board.c **** 
  68:boards/apogee/baro_board.c **** void baro_init(void)
  69:boards/apogee/baro_board.c **** {
  28              		.loc 1 69 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  70:boards/apogee/baro_board.c ****   mpl3115_init(&apogee_baro, &i2c1, MPL3115_I2C_ADDR);
  36              		.loc 1 70 0
  37 0002 C022     		movs	r2, #192
  38 0004 0348     		ldr	r0, .L2
  39 0006 0449     		ldr	r1, .L2+4
  40 0008 FFF7FEFF 		bl	mpl3115_init
  41              	.LVL0:
  71:boards/apogee/baro_board.c **** #ifdef BARO_LED
  72:boards/apogee/baro_board.c ****   LED_OFF(BARO_LED);
  73:boards/apogee/baro_board.c **** #endif
  74:boards/apogee/baro_board.c ****   startup_cnt = BARO_STARTUP_COUNTER;
  42              		.loc 1 74 0
  43 000c 034B     		ldr	r3, .L2+8
  44 000e 0A22     		movs	r2, #10
  45 0010 1A80     		strh	r2, [r3]	@ movhi
  46 0012 08BD     		pop	{r3, pc}
  47              	.L3:
  48              		.align	2
  49              	.L2:
  50 0014 00000000 		.word	.LANCHOR0
  51 0018 00000000 		.word	i2c1
  52 001c 00000000 		.word	.LANCHOR1
  53              		.cfi_endproc
  54              	.LFE103:
  56              		.section	.text.baro_periodic,"ax",%progbits
  57              		.align	1
  58              		.global	baro_periodic
  59              		.thumb
  60              		.thumb_func
  62              	baro_periodic:
  63              	.LFB104:
  75:boards/apogee/baro_board.c **** }
  76:boards/apogee/baro_board.c **** 
  77:boards/apogee/baro_board.c **** void baro_periodic(void)
  78:boards/apogee/baro_board.c **** {
  64              		.loc 1 78 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  79:boards/apogee/baro_board.c **** 
  80:boards/apogee/baro_board.c ****   // Baro is slave of the MPU, only start reading it after MPU is configured
  81:boards/apogee/baro_board.c ****   if (imu_apogee.mpu.config.initialized) {
  69              		.loc 1 81 0
  70 0000 0E4B     		ldr	r3, .L17
  71 0002 93F85430 		ldrb	r3, [r3, #84]	@ zero_extendqisi2
  72 0006 C3B1     		cbz	r3, .L4
  82:boards/apogee/baro_board.c **** 
  83:boards/apogee/baro_board.c ****     if (startup_cnt > 0 && apogee_baro.data_available) {
  73              		.loc 1 83 0
  74 0008 0D49     		ldr	r1, .L17+4
  75 000a 0B88     		ldrh	r3, [r1]
  76 000c 43B1     		cbz	r3, .L7
  77              		.loc 1 83 0 is_stmt 0 discriminator 1
  78 000e 0D4A     		ldr	r2, .L17+8
  79 0010 92F85200 		ldrb	r0, [r2, #82]	@ zero_extendqisi2
  80 0014 20B1     		cbz	r0, .L7
  84:boards/apogee/baro_board.c ****       // Run some loops to get correct readings from the adc
  85:boards/apogee/baro_board.c ****       --startup_cnt;
  81              		.loc 1 85 0 is_stmt 1
  82 0016 013B     		subs	r3, r3, #1
  83 0018 0B80     		strh	r3, [r1]	@ movhi
  86:boards/apogee/baro_board.c ****       apogee_baro.data_available = FALSE;
  84              		.loc 1 86 0
  85 001a 0023     		movs	r3, #0
  86 001c 82F85230 		strb	r3, [r2, #82]
  87              	.L7:
  88              	.LBB4:
  87:boards/apogee/baro_board.c **** #ifdef BARO_LED
  88:boards/apogee/baro_board.c ****       LED_TOGGLE(BARO_LED);
  89:boards/apogee/baro_board.c ****       if (startup_cnt == 0) {
  90:boards/apogee/baro_board.c ****         LED_ON(BARO_LED);
  91:boards/apogee/baro_board.c ****       }
  92:boards/apogee/baro_board.c **** #endif
  93:boards/apogee/baro_board.c ****     }
  94:boards/apogee/baro_board.c ****     // Read the sensor
  95:boards/apogee/baro_board.c ****     RunOnceEvery(MPL_PRESCALER, mpl3115_periodic(&apogee_baro));
  89              		.loc 1 95 0
  90 0020 094A     		ldr	r2, .L17+12
  91 0022 1388     		ldrh	r3, [r2]
  92 0024 0133     		adds	r3, r3, #1
  93 0026 9BB2     		uxth	r3, r3
  94 0028 132B     		cmp	r3, #19
  95 002a 01D8     		bhi	.L8
  96 002c 1380     		strh	r3, [r2]	@ movhi
  97 002e 7047     		bx	lr
  98              	.L8:
  99              		.loc 1 95 0 is_stmt 0 discriminator 1
 100 0030 0023     		movs	r3, #0
 101 0032 0448     		ldr	r0, .L17+8
 102 0034 1380     		strh	r3, [r2]	@ movhi
 103 0036 FFF7FEBF 		b	mpl3115_periodic
 104              	.LVL1:
 105              	.L4:
 106 003a 7047     		bx	lr
 107              	.L18:
 108              		.align	2
 109              	.L17:
 110 003c 00000000 		.word	imu_apogee
 111 0040 00000000 		.word	.LANCHOR1
 112 0044 00000000 		.word	.LANCHOR0
 113 0048 00000000 		.word	.LANCHOR2
 114              	.LBE4:
 115              		.cfi_endproc
 116              	.LFE104:
 118              		.section	.text.apogee_baro_event,"ax",%progbits
 119              		.align	1
 120              		.global	apogee_baro_event
 121              		.thumb
 122              		.thumb_func
 124              	apogee_baro_event:
 125              	.LFB105:
  96:boards/apogee/baro_board.c ****   }
  97:boards/apogee/baro_board.c **** }
  98:boards/apogee/baro_board.c **** 
  99:boards/apogee/baro_board.c **** void apogee_baro_event(void)
 100:boards/apogee/baro_board.c **** {
 126              		.loc 1 100 0 is_stmt 1
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130 0000 70B5     		push	{r4, r5, r6, lr}
 131              		.cfi_def_cfa_offset 16
 132              		.cfi_offset 4, -16
 133              		.cfi_offset 5, -12
 134              		.cfi_offset 6, -8
 135              		.cfi_offset 14, -4
 101:boards/apogee/baro_board.c ****   mpl3115_event(&apogee_baro);
 136              		.loc 1 101 0
 137 0002 1A4C     		ldr	r4, .L32
 100:boards/apogee/baro_board.c ****   mpl3115_event(&apogee_baro);
 138              		.loc 1 100 0
 139 0004 2DED028B 		fstmfdd	sp!, {d8}
 140              		.cfi_def_cfa_offset 24
 141              		.cfi_offset 80, -24
 142              		.cfi_offset 81, -20
 143              		.loc 1 101 0
 144 0008 2046     		mov	r0, r4
 145 000a FFF7FEFF 		bl	mpl3115_event
 146              	.LVL2:
 102:boards/apogee/baro_board.c ****   if (apogee_baro.data_available && startup_cnt == 0) {
 147              		.loc 1 102 0
 148 000e 94F85230 		ldrb	r3, [r4, #82]	@ zero_extendqisi2
 149 0012 43B3     		cbz	r3, .L19
 150              		.loc 1 102 0 is_stmt 0 discriminator 1
 151 0014 164B     		ldr	r3, .L32+4
 152 0016 1B88     		ldrh	r3, [r3]
 153 0018 2BBB     		cbnz	r3, .L19
 154              	.LBB12:
 155              	.LBB13:
 156              	.LBB14:
 157              		.file 2 "/home/dino/paparazzi/var/include/abi_messages.h"
   1:/home/dino/paparazzi/var/include/abi_messages.h **** /* Automatically generated by gen_abi from /home/dino/paparazzi/conf/abi.xml */
   2:/home/dino/paparazzi/var/include/abi_messages.h **** /* Please DO NOT EDIT */
   3:/home/dino/paparazzi/var/include/abi_messages.h **** 
   4:/home/dino/paparazzi/var/include/abi_messages.h **** /* Onboard middleware library ABI
   5:/home/dino/paparazzi/var/include/abi_messages.h ****  * send and receive messages of class airborne
   6:/home/dino/paparazzi/var/include/abi_messages.h ****  */
   7:/home/dino/paparazzi/var/include/abi_messages.h **** 
   8:/home/dino/paparazzi/var/include/abi_messages.h **** #ifndef ABI_MESSAGES_H
   9:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_MESSAGES_H
  10:/home/dino/paparazzi/var/include/abi_messages.h **** 
  11:/home/dino/paparazzi/var/include/abi_messages.h **** #include "subsystems/abi_common.h"
  12:/home/dino/paparazzi/var/include/abi_messages.h **** 
  13:/home/dino/paparazzi/var/include/abi_messages.h **** /* Messages IDs */
  14:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_BARO_ABS_ID 0
  15:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_BARO_DIFF_ID 1
  16:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_AGL_ID 2
  17:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_TEMPERATURE_ID 3
  18:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_GYRO_INT32_ID 4
  19:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_ACCEL_INT32_ID 5
  20:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_MAG_INT32_ID 6
  21:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_IMU_LOWPASSED_ID 7
  22:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_BODY_TO_IMU_QUAT_ID 8
  23:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_GEO_MAG_ID 9
  24:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_GPS_ID 10
  25:/home/dino/paparazzi/var/include/abi_messages.h **** 
  26:/home/dino/paparazzi/var/include/abi_messages.h **** /* Array and linked list structure */
  27:/home/dino/paparazzi/var/include/abi_messages.h **** #define ABI_MESSAGE_NB 11
  28:/home/dino/paparazzi/var/include/abi_messages.h **** 
  29:/home/dino/paparazzi/var/include/abi_messages.h **** ABI_EXTERN abi_event* abi_queues[ABI_MESSAGE_NB];
  30:/home/dino/paparazzi/var/include/abi_messages.h **** 
  31:/home/dino/paparazzi/var/include/abi_messages.h **** /* Callbacks */
  32:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBARO_ABS)(uint8_t sender_id, float pressure);
  33:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBARO_DIFF)(uint8_t sender_id, float pressure);
  34:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackAGL)(uint8_t sender_id, float distance);
  35:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackTEMPERATURE)(uint8_t sender_id, float temp);
  36:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_GYRO_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Rates * g
  37:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_ACCEL_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * 
  38:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_MAG_INT32)(uint8_t sender_id, uint32_t stamp, struct Int32Vect3 * ma
  39:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackIMU_LOWPASSED)(uint8_t sender_id, uint32_t stamp, struct Int32Rates * gy
  40:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackBODY_TO_IMU_QUAT)(uint8_t sender_id, struct FloatQuat * q_b2i_f);
  41:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackGEO_MAG)(uint8_t sender_id, struct FloatVect3 * h);
  42:/home/dino/paparazzi/var/include/abi_messages.h **** typedef void (*abi_callbackGPS)(uint8_t sender_id, uint32_t stamp, struct GpsState * gps_s);
  43:/home/dino/paparazzi/var/include/abi_messages.h **** 
  44:/home/dino/paparazzi/var/include/abi_messages.h **** /* Bind and Send functions */
  45:/home/dino/paparazzi/var/include/abi_messages.h **** 
  46:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBARO_ABS(uint8_t sender_id, abi_event * ev, abi_callbackBARO_ABS cb) {
  47:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  48:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  49:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BARO_ABS_ID],ev);
  50:/home/dino/paparazzi/var/include/abi_messages.h **** }
  51:/home/dino/paparazzi/var/include/abi_messages.h **** 
  52:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBARO_ABS(uint8_t sender_id, float pressure) {
  53:/home/dino/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  54:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BARO_ABS_ID],e) {
 158              		.loc 2 54 0 is_stmt 1
 159 001a 164B     		ldr	r3, .L32+8
 160              	.LBE14:
 161              	.LBE13:
 103:boards/apogee/baro_board.c ****     float pressure = ((float)apogee_baro.pressure / (1 << 2));
 162              		.loc 1 103 0
 163 001c 94ED168A 		flds	s16, [r4, #88]	@ int
 164              	.LBB18:
 165              	.LBB16:
 166              		.loc 2 54 0
 167 0020 1D68     		ldr	r5, [r3]
 168              	.LBE16:
 169              	.LBE18:
 170              		.loc 1 103 0
 171 0022 BBEECF8A 		vcvt.f32.u32	s16, s16, #2
 172              	.LVL3:
 173 0026 1E46     		mov	r6, r3
 174              	.L21:
 175              	.LBB19:
 176              	.LBB17:
 177              		.loc 2 54 0
 178 0028 4DB1     		cbz	r5, .L30
  55:/home/dino/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 179              		.loc 2 55 0
 180 002a 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 181 002c 012B     		cmp	r3, #1
 182 002e 04D8     		bhi	.L22
 183              	.LVL4:
 184              	.LBB15:
  56:/home/dino/paparazzi/var/include/abi_messages.h ****       abi_callbackBARO_ABS cb = (abi_callbackBARO_ABS)(e->cb);
  57:/home/dino/paparazzi/var/include/abi_messages.h ****       cb(sender_id, pressure);
 185              		.loc 2 57 0
 186 0030 6B68     		ldr	r3, [r5, #4]
 187 0032 0120     		movs	r0, #1
 188 0034 18EE101A 		fmrs	r1, s16
 189 0038 9847     		blx	r3
 190              	.LVL5:
 191              	.L22:
 192              	.LBE15:
  54:/home/dino/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 193              		.loc 2 54 0
 194 003a AD68     		ldr	r5, [r5, #8]
 195              	.LVL6:
 196 003c F4E7     		b	.L21
 197              	.L30:
 198              	.LBE17:
 199              	.LBE19:
 104:boards/apogee/baro_board.c ****     AbiSendMsgBARO_ABS(BARO_BOARD_SENDER_ID, pressure);
 105:boards/apogee/baro_board.c ****     float temp = apogee_baro.temperature / 16.0f;
 200              		.loc 1 105 0
 201 003e B4F95630 		ldrsh	r3, [r4, #86]
 202              	.LBB20:
 203              	.LBB21:
  58:/home/dino/paparazzi/var/include/abi_messages.h ****     }
  59:/home/dino/paparazzi/var/include/abi_messages.h ****   }
  60:/home/dino/paparazzi/var/include/abi_messages.h **** }
  61:/home/dino/paparazzi/var/include/abi_messages.h **** 
  62:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgBARO_DIFF(uint8_t sender_id, abi_event * ev, abi_callbackBARO_DIFF cb)
  63:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  64:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  65:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_BARO_DIFF_ID],ev);
  66:/home/dino/paparazzi/var/include/abi_messages.h **** }
  67:/home/dino/paparazzi/var/include/abi_messages.h **** 
  68:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgBARO_DIFF(uint8_t sender_id, float pressure) {
  69:/home/dino/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  70:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_BARO_DIFF_ID],e) {
  71:/home/dino/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  72:/home/dino/paparazzi/var/include/abi_messages.h ****       abi_callbackBARO_DIFF cb = (abi_callbackBARO_DIFF)(e->cb);
  73:/home/dino/paparazzi/var/include/abi_messages.h ****       cb(sender_id, pressure);
  74:/home/dino/paparazzi/var/include/abi_messages.h ****     }
  75:/home/dino/paparazzi/var/include/abi_messages.h ****   }
  76:/home/dino/paparazzi/var/include/abi_messages.h **** }
  77:/home/dino/paparazzi/var/include/abi_messages.h **** 
  78:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgAGL(uint8_t sender_id, abi_event * ev, abi_callbackAGL cb) {
  79:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  80:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  81:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_AGL_ID],ev);
  82:/home/dino/paparazzi/var/include/abi_messages.h **** }
  83:/home/dino/paparazzi/var/include/abi_messages.h **** 
  84:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgAGL(uint8_t sender_id, float distance) {
  85:/home/dino/paparazzi/var/include/abi_messages.h ****   abi_event* e;
  86:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_AGL_ID],e) {
  87:/home/dino/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
  88:/home/dino/paparazzi/var/include/abi_messages.h ****       abi_callbackAGL cb = (abi_callbackAGL)(e->cb);
  89:/home/dino/paparazzi/var/include/abi_messages.h ****       cb(sender_id, distance);
  90:/home/dino/paparazzi/var/include/abi_messages.h ****     }
  91:/home/dino/paparazzi/var/include/abi_messages.h ****   }
  92:/home/dino/paparazzi/var/include/abi_messages.h **** }
  93:/home/dino/paparazzi/var/include/abi_messages.h **** 
  94:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiBindMsgTEMPERATURE(uint8_t sender_id, abi_event * ev, abi_callbackTEMPERATURE
  95:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->id = sender_id;
  96:/home/dino/paparazzi/var/include/abi_messages.h ****   ev->cb = (abi_callback)cb;
  97:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_PREPEND(abi_queues[ABI_TEMPERATURE_ID],ev);
  98:/home/dino/paparazzi/var/include/abi_messages.h **** }
  99:/home/dino/paparazzi/var/include/abi_messages.h **** 
 100:/home/dino/paparazzi/var/include/abi_messages.h **** static inline void AbiSendMsgTEMPERATURE(uint8_t sender_id, float temp) {
 101:/home/dino/paparazzi/var/include/abi_messages.h ****   abi_event* e;
 102:/home/dino/paparazzi/var/include/abi_messages.h ****   ABI_FOREACH(abi_queues[ABI_TEMPERATURE_ID],e) {
 204              		.loc 2 102 0
 205 0042 F568     		ldr	r5, [r6, #12]
 206              	.LVL7:
 207              	.LBE21:
 208              	.LBE20:
 209              		.loc 1 105 0
 210 0044 08EE103A 		fmsr	s16, r3	@ int
 211              	.LVL8:
 212 0048 BAEECE8A 		vcvt.f32.s32	s16, s16, #4
 213              	.LVL9:
 214              	.L24:
 215              	.LBB24:
 216              	.LBB23:
 217              		.loc 2 102 0
 218 004c 4DB1     		cbz	r5, .L31
 103:/home/dino/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 219              		.loc 2 103 0
 220 004e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 221 0050 012B     		cmp	r3, #1
 222 0052 04D8     		bhi	.L25
 223              	.LVL10:
 224              	.LBB22:
 104:/home/dino/paparazzi/var/include/abi_messages.h ****       abi_callbackTEMPERATURE cb = (abi_callbackTEMPERATURE)(e->cb);
 105:/home/dino/paparazzi/var/include/abi_messages.h ****       cb(sender_id, temp);
 225              		.loc 2 105 0
 226 0054 6B68     		ldr	r3, [r5, #4]
 227 0056 0120     		movs	r0, #1
 228 0058 18EE101A 		fmrs	r1, s16
 229 005c 9847     		blx	r3
 230              	.LVL11:
 231              	.L25:
 232              	.LBE22:
 102:/home/dino/paparazzi/var/include/abi_messages.h ****     if (e->id == ABI_BROADCAST || e->id == sender_id) {
 233              		.loc 2 102 0
 234 005e AD68     		ldr	r5, [r5, #8]
 235              	.LVL12:
 236 0060 F4E7     		b	.L24
 237              	.L31:
 238              	.LBE23:
 239              	.LBE24:
 106:boards/apogee/baro_board.c ****     AbiSendMsgTEMPERATURE(BARO_BOARD_SENDER_ID, temp);
 107:boards/apogee/baro_board.c ****     apogee_baro.data_available = FALSE;
 240              		.loc 1 107 0
 241 0062 84F85250 		strb	r5, [r4, #82]
 242              	.LVL13:
 243              	.L19:
 244              	.LBE12:
 108:boards/apogee/baro_board.c ****   }
 109:boards/apogee/baro_board.c **** }
 245              		.loc 1 109 0
 246 0066 BDEC028B 		fldmfdd	sp!, {d8}
 247              		.cfi_restore 80
 248              		.cfi_restore 81
 249              		.cfi_def_cfa_offset 16
 250 006a 70BD     		pop	{r4, r5, r6, pc}
 251              	.L33:
 252              		.align	2
 253              	.L32:
 254 006c 00000000 		.word	.LANCHOR0
 255 0070 00000000 		.word	.LANCHOR1
 256 0074 00000000 		.word	abi_queues
 257              		.cfi_endproc
 258              	.LFE105:
 260              		.global	apogee_baro
 261              		.global	startup_cnt
 262              		.section	.bss.startup_cnt,"aw",%nobits
 263              		.align	1
 264              		.set	.LANCHOR1,. + 0
 267              	startup_cnt:
 268 0000 0000     		.space	2
 269              		.section	.bss.apogee_baro,"aw",%nobits
 270              		.align	2
 271              		.set	.LANCHOR0,. + 0
 274              	apogee_baro:
 275 0000 00000000 		.space	96
 275      00000000 
 275      00000000 
 275      00000000 
 275      00000000 
 276              		.section	.bss.prescaler.7476,"aw",%nobits
 277              		.align	1
 278              		.set	.LANCHOR2,. + 0
 281              	prescaler.7476:
 282 0000 0000     		.space	2
 283              		.text
 284              	.Letext0:
 285              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 286              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 287              		.file 5 "/home/dino/paparazzi/sw/include/std.h"
 288              		.file 6 "./math/pprz_algebra_int.h"
 289              		.file 7 "./mcu_periph/i2c.h"
 290              		.file 8 "./peripherals/mpl3115.h"
 291              		.file 9 "./peripherals/mpu60x0_regs.h"
 292              		.file 10 "./peripherals/mpu60x0.h"
 293              		.file 11 "./peripherals/mpu60x0_i2c.h"
 294              		.file 12 "./boards/apogee/imu_apogee.h"
 295              		.file 13 "./math/pprz_geodetic_int.h"
 296              		.file 14 "./mcu_periph/sys_time.h"
 297              		.file 15 "./mcu_periph/link_device.h"
 298              		.file 16 "./mcu_periph/uart.h"
 299              		.file 17 "./subsystems/gps/gps_ubx.h"
 300              		.file 18 "./subsystems/gps.h"
 301              		.file 19 "./subsystems/abi_common.h"
 302              		.file 20 "../ext/libopencm3/include/libopencm3/stm32/f4/rcc.h"
DEFINED SYMBOLS
                            *ABS*:00000000 baro_board.c
     /tmp/cc8cICe7.s:20     .text.baro_init:00000000 $t
     /tmp/cc8cICe7.s:25     .text.baro_init:00000000 baro_init
     /tmp/cc8cICe7.s:50     .text.baro_init:00000014 $d
     /tmp/cc8cICe7.s:57     .text.baro_periodic:00000000 $t
     /tmp/cc8cICe7.s:62     .text.baro_periodic:00000000 baro_periodic
     /tmp/cc8cICe7.s:110    .text.baro_periodic:0000003c $d
     /tmp/cc8cICe7.s:119    .text.apogee_baro_event:00000000 $t
     /tmp/cc8cICe7.s:124    .text.apogee_baro_event:00000000 apogee_baro_event
     /tmp/cc8cICe7.s:254    .text.apogee_baro_event:0000006c $d
     /tmp/cc8cICe7.s:274    .bss.apogee_baro:00000000 apogee_baro
     /tmp/cc8cICe7.s:267    .bss.startup_cnt:00000000 startup_cnt
     /tmp/cc8cICe7.s:263    .bss.startup_cnt:00000000 $d
     /tmp/cc8cICe7.s:270    .bss.apogee_baro:00000000 $d
     /tmp/cc8cICe7.s:277    .bss.prescaler.7476:00000000 $d
     /tmp/cc8cICe7.s:281    .bss.prescaler.7476:00000000 prescaler.7476
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.7f506cdee5614e5fae524d20989ad8c8
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._intsup.h.10.b2832a532eae49c14d45880be6d4ca65
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.stddef.h.263.49e44f5ee9cdd8820580fc4aa239e32a
                           .group:00000000 wm4.inttypes.h.23.a096771aacee9aba4b33c2d04aacc9b1
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4._ansi.h.13.1b5575dc7921a4c0cff7dbaa2f33e670
                           .group:00000000 wm4.stddef.h.39.2b75ea897b59bf67f50e970d678806e4
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.math.h.35.ad242c9287d2217c7d2035216e5d04ca
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.apogee_1.0.h.2.34ab7bb688056eecb54e2e3ffff48ca6
                           .group:00000000 wm4.baro_board.h.30.07078392ffb9d11ec31673d044f970ab
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_trig_int.h.28.b756be608c9d9f3092a41321446e5fa2
                           .group:00000000 wm4.stdlib.h.13.4ed386f5c1a80d71e72172885d946ef2
                           .group:00000000 wm4.alloca.h.8.dfc0c703c47ec3e69746825b17d9e66d
                           .group:00000000 wm4.stdlib.h.54.cd3744e0b066087ec8fbb1bdc22d1043
                           .group:00000000 wm4.pprz_algebra_int.h.68.04ac162ae1e1d94f716d0bb402062624
                           .group:00000000 wm4.common.h.21.22efaac882611267214d0a36f6f15e74
                           .group:00000000 wm4.memorymap.h.21.0c01d18fc5814f65c6ceb1822d4030fa
                           .group:00000000 wm4.memorymap.h.28.85f6f5de65b1d4294c70f79052a0b8c0
                           .group:00000000 wm4.i2c_common_all.h.33.0891c362b103dbf9b3c797a7eb8c45dd
                           .group:00000000 wm4.i2c.h.84.d7c95ef3b7385a54cace86b9fe5b1585
                           .group:00000000 wm4.mpl3115.h.35.354c4a4aaeaaf0c4eb2827b3400c4b8f
                           .group:00000000 wm4.airframe.h.5.55ffe79377b235d0a97162ed16ec170d
                           .group:00000000 wm4.actuators_pwm_arch.h.27.5a737f85d71223e6481c4ba4068c062a
                           .group:00000000 wm4.airframe.h.14.814d9a421a57ec2d434c7b6efc262c4b
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.pprz_orientation_conversion.h.57.c0c8f5187bc056807e507011653281f4
                           .group:00000000 wm4.imu.h.100.34a5d2bf3ce1ae0af989ba3f556e8a71
                           .group:00000000 wm4.mpu60x0_regs.h.29.354741a377e41e863a6f15c8045a1631
                           .group:00000000 wm4.mpu60x0.h.37.d6af4975dcfadd714415f3475e68a5c4
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.pprz_geodetic_int.h.127.8e737bed5ba4468e470311184b1fca7f
                           .group:00000000 wm4.sys_time.h.31.454ffebb4f6baf6e87ab8a60104a5808
                           .group:00000000 wm4.gpio_common_all.h.37.fedbbcb9179f773c905aa3c3e4b7dbdd
                           .group:00000000 wm4.gpio_common_f234.h.48.ee30692f386eaf6801df27cae93943b1
                           .group:00000000 wm4.gpio_common_f24.h.48.4e4be5e3ebe26aee10d604e2d0fecde8
                           .group:00000000 wm4.rcc.h.46.c4bbaa886b7ca1bd1829424ae12e70af
                           .group:00000000 wm4.systick.h.44.34e759e1f218a187b07e9a617cb1d556
                           .group:00000000 wm4.sys_time.h.213.4ee43452c5934214134db56488f53299
                           .group:00000000 wm4.uart_arch.h.30.cb8e70feae0b6afe250750f6c1439671
                           .group:00000000 wm4.uart.h.35.4345324d45fae43faace58e743d48e42
                           .group:00000000 wm4.gps_ubx.h.36.d4183b0b154441c99ce352aae50967b5
                           .group:00000000 wm4.gps.h.41.79d1c69e44dd427f855100ff8e932fbe
                           .group:00000000 wm4.abi_sender_ids.h.29.e18315036ac250e614ad78ed4bcb93da
                           .group:00000000 wm4.abi_common.h.46.0bb6611719a01752e88980049d8d5177
                           .group:00000000 wm4.abi_messages.h.14.a63139ccdcd5241f8ab897fe12fc8134
                           .group:00000000 wm4.led_hw.h.40.8014fb3594847a9d275099fc6ed94641
                           .group:00000000 wm4.led.h.99.0116146560b22524df8538874a4f60bf

UNDEFINED SYMBOLS
mpl3115_init
i2c1
mpl3115_periodic
imu_apogee
mpl3115_event
abi_queues
