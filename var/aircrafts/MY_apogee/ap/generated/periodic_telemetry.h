/* This file has been generated by gen_periodic from /home/dino/paparazzi/conf/messages.xml and /home/dino/paparazzi/conf/telemetry/MY_telemetry.xml */
/* Please DO NOT EDIT */

#ifndef _VAR_PERIODIC_H_
#define _VAR_PERIODIC_H_

#include "std.h"
#include "generated/airframe.h"
#include "subsystems/datalink/telemetry_common.h"

#define TELEMETRY_FREQUENCY 100

/* Periodic telemetry messages */
#define TELEMETRY_MSG_BARO_MS5534A_ID 0
#define TELEMETRY_MSG_IR_SENSORS_ID 1
#define TELEMETRY_MSG_ESTIMATOR_ID 2
#define TELEMETRY_MSG_PLIGHT_ID 3
#define TELEMETRY_MSG_PZG_ID 4
#define TELEMETRY_MSG_CALIBRATION_ID 5
#define TELEMETRY_MSG_PPM_ID 6
#define TELEMETRY_MSG_IMU_MAG_ID 7
#define TELEMETRY_MSG_BAT_ID 8
#define TELEMETRY_MSG_ATTITUDE_ID 9
#define TELEMETRY_MSG_pp_ID 10
#define TELEMETRY_MSG_STATE_FILTER_STATUS_ID 11
#define TELEMETRY_MSG_GPS_SOL_ID 12
#define TELEMETRY_MSG_FBW_STATUS_ID 13
#define TELEMETRY_MSG_ACTUATORS_ID 14
#define TELEMETRY_MSG_ALIVE_ID 15
#define TELEMETRY_MSG_NAVIGATION_ID 16
#define TELEMETRY_MSG_AIRSPEED_ID 17
#define TELEMETRY_MSG_SCP_STATUS_ID 18
#define TELEMETRY_MSG_RC_ID 19
#define TELEMETRY_MSG_IMU_ACCEL_RAW_ID 20
#define TELEMETRY_MSG_SEGMENT_ID 21
#define TELEMETRY_MSG_DL_VALUE_ID 22
#define TELEMETRY_MSG_IMU_GYRO_ID 23
#define TELEMETRY_MSG_GPS_ID 24
#define TELEMETRY_MSG_ATT_POL_ID 25
#define TELEMETRY_MSG_NAVIGATION_REF_ID 26
#define TELEMETRY_MSG_WP_MOVED_ID 27
#define TELEMETRY_MSG_PPRZ_MODE_ID 28
#define TELEMETRY_MSG_IMU_GYRO_RAW_ID 29
#define TELEMETRY_MSG_DESIRED_ID 30
#define TELEMETRY_MSG_SETTINGS_ID 31
#define TELEMETRY_MSG_ENERGY_ID 32
#define TELEMETRY_MSG_COMMANDS_ID 33
#define TELEMETRY_MSG_IMU_MAG_RAW_ID 34
#define TELEMETRY_MSG_BARO_RAW_ID 35
#define TELEMETRY_MSG_CIRCLE_ID 36
#define TELEMETRY_MSG_DOWNLINK_ID 37
#define TELEMETRY_MSG_IMU_ACCEL_ID 38
#define TELEMETRY_MSG_SURVEY_ID 39
#define TELEMETRY_NB_MSG 40
#define TELEMETRY_MSG_NAMES { \
  "BARO_MS5534A", \
  "IR_SENSORS", \
  "ESTIMATOR", \
  "PLIGHT", \
  "PZG", \
  "CALIBRATION", \
  "PPM", \
  "IMU_MAG", \
  "BAT", \
  "ATTITUDE", \
  "pp", \
  "STATE_FILTER_STATUS", \
  "GPS_SOL", \
  "FBW_STATUS", \
  "ACTUATORS", \
  "ALIVE", \
  "NAVIGATION", \
  "AIRSPEED", \
  "SCP_STATUS", \
  "RC", \
  "IMU_ACCEL_RAW", \
  "SEGMENT", \
  "DL_VALUE", \
  "IMU_GYRO", \
  "GPS", \
  "ATT_POL", \
  "NAVIGATION_REF", \
  "WP_MOVED", \
  "PPRZ_MODE", \
  "IMU_GYRO_RAW", \
  "DESIRED", \
  "SETTINGS", \
  "ENERGY", \
  "COMMANDS", \
  "IMU_MAG_RAW", \
  "BARO_RAW", \
  "CIRCLE", \
  "DOWNLINK", \
  "IMU_ACCEL", \
  "SURVEY", \
};

#define TELEMETRY_CBS_NULL { \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
  NULL, \
};


/* Periodic telemetry: Ap process */
#define TELEMETRY_PROCESS_Ap 0
#define TELEMETRY_MODE_Ap_default 0
#define PERIOD_ALIVE_Ap_0 (5)
#define PERIOD_SEGMENT_Ap_0 (5)
#define PERIOD_DOWNLINK_Ap_0 (5)
#define PERIOD_PPRZ_MODE_Ap_0 (5.)
#define PERIOD_SETTINGS_Ap_0 (5.)
#define PERIOD_NAVIGATION_REF_Ap_0 (9.)
#define PERIOD_ATTITUDE_Ap_0 (0.1)
#define PERIOD_IMU_ACCEL_Ap_0 (.1)
#define PERIOD_IMU_GYRO_Ap_0 (.1)
#define PERIOD_IMU_MAG_Ap_0 (.1)
#define PERIOD_PLIGHT_Ap_0 (.1)
#define TELEMETRY_MODE_Ap_default1 1
#define PERIOD_AIRSPEED_Ap_1 (1.4)
#define PERIOD_ALIVE_Ap_1 (5)
#define PERIOD_GPS_Ap_1 (0.5)
#define PERIOD_NAVIGATION_Ap_1 (1.)
#define PERIOD_ATTITUDE_Ap_1 (0.1)
#define PERIOD_ESTIMATOR_Ap_1 (0.6)
#define PERIOD_ENERGY_Ap_1 (2.5)
#define PERIOD_WP_MOVED_Ap_1 (1.1)
#define PERIOD_CIRCLE_Ap_1 (1.05)
#define PERIOD_DESIRED_Ap_1 (1.05)
#define PERIOD_BAT_Ap_1 (1.1)
#define PERIOD_BARO_MS5534A_Ap_1 (1.4)
#define PERIOD_SCP_STATUS_Ap_1 (1.3)
#define PERIOD_SEGMENT_Ap_1 (1.2)
#define PERIOD_CALIBRATION_Ap_1 (2.1)
#define PERIOD_NAVIGATION_REF_Ap_1 (9.)
#define PERIOD_PPRZ_MODE_Ap_1 (5.)
#define PERIOD_SETTINGS_Ap_1 (5.)
#define PERIOD_STATE_FILTER_STATUS_Ap_1 (2.2)
#define PERIOD_DOWNLINK_Ap_1 (5.1)
#define PERIOD_DL_VALUE_Ap_1 (1.2)
#define PERIOD_IR_SENSORS_Ap_1 (1.2)
#define PERIOD_PZG_Ap_1 (2.0)
#define PERIOD_SURVEY_Ap_1 (2.1)
#define PERIOD_GPS_SOL_Ap_1 (2.0)
#define PERIOD_IMU_ACCEL_Ap_1 (.1)
#define PERIOD_IMU_GYRO_Ap_1 (.1)
#define PERIOD_IMU_MAG_Ap_1 (.1)
#define PERIOD_PLIGHT_Ap_1 (.1)
#define PERIOD_ATT_POL_Ap_1 (.1)
#define TELEMETRY_MODE_Ap_minimal 2
#define PERIOD_ALIVE_Ap_2 (5)
#define PERIOD_ATTITUDE_Ap_2 (4)
#define PERIOD_GPS_Ap_2 (1.05)
#define PERIOD_ESTIMATOR_Ap_2 (1.3)
#define PERIOD_WP_MOVED_Ap_2 (1.4)
#define PERIOD_CIRCLE_Ap_2 (3.05)
#define PERIOD_DESIRED_Ap_2 (4.05)
#define PERIOD_BAT_Ap_2 (1.1)
#define PERIOD_SEGMENT_Ap_2 (3.2)
#define PERIOD_CALIBRATION_Ap_2 (5.1)
#define PERIOD_NAVIGATION_REF_Ap_2 (9.)
#define PERIOD_NAVIGATION_Ap_2 (3.)
#define PERIOD_PPRZ_MODE_Ap_2 (5.)
#define PERIOD_STATE_FILTER_STATUS_Ap_2 (5.)
#define PERIOD_DOWNLINK_Ap_2 (5.1)
#define PERIOD_DL_VALUE_Ap_2 (1.5)
#define PERIOD_pp_Ap_2 (1.5)
#define PERIOD_SURVEY_Ap_2 (2.1)
#define PERIOD_GPS_SOL_Ap_2 (5.0)
#define TELEMETRY_MODE_Ap_extremal 3
#define PERIOD_ALIVE_Ap_3 (5)
#define PERIOD_GPS_Ap_3 (5.1)
#define PERIOD_ESTIMATOR_Ap_3 (5.3)
#define PERIOD_BAT_Ap_3 (10.1)
#define PERIOD_DESIRED_Ap_3 (10.2)
#define PERIOD_NAVIGATION_Ap_3 (5.4)
#define PERIOD_PPRZ_MODE_Ap_3 (7.5)
#define PERIOD_STATE_FILTER_STATUS_Ap_3 (8.)
#define PERIOD_DOWNLINK_Ap_3 (5.7)
#define TELEMETRY_MODE_Ap_raw_sensors 4
#define PERIOD_DL_VALUE_Ap_4 (0.5)
#define PERIOD_ALIVE_Ap_4 (2.1)
#define PERIOD_IMU_ACCEL_RAW_Ap_4 (.05)
#define PERIOD_IMU_GYRO_RAW_Ap_4 (.05)
#define PERIOD_IMU_MAG_RAW_Ap_4 (.05)
#define PERIOD_BARO_RAW_Ap_4 (0.5)
#define TELEMETRY_MODE_Ap_scaled_sensors 5
#define PERIOD_DL_VALUE_Ap_5 (0.5)
#define PERIOD_ALIVE_Ap_5 (2.1)
#define PERIOD_IMU_GYRO_Ap_5 (.075)
#define PERIOD_IMU_ACCEL_Ap_5 (.075)
#define PERIOD_IMU_MAG_Ap_5 (.1)
#define TELEMETRY_MODE_Ap_debug_imu 6
#define PERIOD_ATTITUDE_Ap_6 (0.1)
#define PERIOD_ALIVE_Ap_6 (5)
#define PERIOD_GPS_Ap_6 (5.1)
#define PERIOD_ESTIMATOR_Ap_6 (5.3)
#define PERIOD_BAT_Ap_6 (10.1)
#define PERIOD_DESIRED_Ap_6 (10.2)
#define PERIOD_NAVIGATION_Ap_6 (5.4)
#define PERIOD_PPRZ_MODE_Ap_6 (5.5)
#define PERIOD_STATE_FILTER_STATUS_Ap_6 (5.)
#define PERIOD_DOWNLINK_Ap_6 (5.7)
#define PERIOD_IMU_ACCEL_Ap_6 (.5)
#define PERIOD_IMU_GYRO_Ap_6 (.5)
#define PERIOD_IMU_MAG_Ap_6 (.5)
#define PERIOD_IMU_ACCEL_RAW_Ap_6 (.5)
#define PERIOD_IMU_GYRO_RAW_Ap_6 (.5)
#define PERIOD_IMU_MAG_RAW_Ap_6 (.5)

/* Functions for Ap process */
#ifdef PERIODIC_C_AP
#ifndef TELEMETRY_MODE_AP
#define TELEMETRY_MODE_AP 0
#endif
uint8_t telemetry_mode_Ap = TELEMETRY_MODE_AP;
#else /* PERIODIC_C_AP not defined (general header) */
extern uint8_t telemetry_mode_Ap;
#endif /* PERIODIC_C_AP */
static inline void periodic_telemetry_send_Ap(struct periodic_telemetry *telemetry, struct transport_tx *trans, struct link_device *dev) {  /* 100Hz */
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_default) {
    static uint8_t i10 = 0; i10++; if (i10>=10) i10=0;
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    static uint16_t i900 = 0; i900++; if (i900>=900) i900=0;
    if (i900 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_REF_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_REF_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_REF_ID);
#endif
    }
    if (i500 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_SETTINGS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SETTINGS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SETTINGS_ID);
#endif
    }
    else if (i500 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PPRZ_MODE_ID);
#endif
    }
    else if (i500 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DOWNLINK_ID);
#endif
    }
    else if (i500 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_SEGMENT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SEGMENT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SEGMENT_ID);
#endif
    }
    else if (i500 == 50) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_PLIGHT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PLIGHT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PLIGHT_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_MAG_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_GYRO_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_ACCEL_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ATTITUDE_ID);
#endif
    }
  }
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_default1) {
    static uint8_t i10 = 0; i10++; if (i10>=10) i10=0;
    static uint8_t i50 = 0; i50++; if (i50>=50) i50=0;
    static uint8_t i60 = 0; i60++; if (i60>=60) i60=0;
    static uint8_t i100 = 0; i100++; if (i100>=100) i100=0;
    static uint8_t i105 = 0; i105++; if (i105>=105) i105=0;
    static uint8_t i110 = 0; i110++; if (i110>=110) i110=0;
    static uint8_t i120 = 0; i120++; if (i120>=120) i120=0;
    static uint8_t i130 = 0; i130++; if (i130>=130) i130=0;
    static uint8_t i140 = 0; i140++; if (i140>=140) i140=0;
    static uint8_t i200 = 0; i200++; if (i200>=200) i200=0;
    static uint8_t i210 = 0; i210++; if (i210>=210) i210=0;
    static uint8_t i220 = 0; i220++; if (i220>=220) i220=0;
    static uint8_t i250 = 0; i250++; if (i250>=250) i250=0;
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    static uint16_t i509 = 0; i509++; if (i509>=509) i509=0;
    static uint16_t i900 = 0; i900++; if (i900>=900) i900=0;
    if (i900 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_REF_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_REF_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_REF_ID);
#endif
    }
    if (i509 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DOWNLINK_ID);
#endif
    }
    if (i500 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_SETTINGS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SETTINGS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SETTINGS_ID);
#endif
    }
    else if (i500 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PPRZ_MODE_ID);
#endif
    }
    else if (i500 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
    if (i250 == 50) {
      if (telemetry->cbs[TELEMETRY_MSG_ENERGY_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ENERGY_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ENERGY_ID);
#endif
    }
    if (i220 == 60) {
      if (telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_STATE_FILTER_STATUS_ID);
#endif
    }
    if (i210 == 70) {
      if (telemetry->cbs[TELEMETRY_MSG_SURVEY_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SURVEY_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SURVEY_ID);
#endif
    }
    else if (i210 == 80) {
      if (telemetry->cbs[TELEMETRY_MSG_CALIBRATION_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_CALIBRATION_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_CALIBRATION_ID);
#endif
    }
    if (i200 == 90) {
      if (telemetry->cbs[TELEMETRY_MSG_GPS_SOL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_GPS_SOL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_GPS_SOL_ID);
#endif
    }
    else if (i200 == 100) {
      if (telemetry->cbs[TELEMETRY_MSG_PZG_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PZG_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PZG_ID);
#endif
    }
    if (i140 == 110) {
      if (telemetry->cbs[TELEMETRY_MSG_BARO_MS5534A_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_BARO_MS5534A_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_BARO_MS5534A_ID);
#endif
    }
    else if (i140 == 120) {
      if (telemetry->cbs[TELEMETRY_MSG_AIRSPEED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_AIRSPEED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_AIRSPEED_ID);
#endif
    }
    if (i130 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_SCP_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SCP_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SCP_STATUS_ID);
#endif
    }
    if (i120 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_IR_SENSORS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IR_SENSORS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IR_SENSORS_ID);
#endif
    }
    else if (i120 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DL_VALUE_ID);
#endif
    }
    else if (i120 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_SEGMENT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SEGMENT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SEGMENT_ID);
#endif
    }
    if (i110 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_BAT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_BAT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_BAT_ID);
#endif
    }
    else if (i110 == 50) {
      if (telemetry->cbs[TELEMETRY_MSG_WP_MOVED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_WP_MOVED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_WP_MOVED_ID);
#endif
    }
    if (i105 == 60) {
      if (telemetry->cbs[TELEMETRY_MSG_DESIRED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DESIRED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DESIRED_ID);
#endif
    }
    else if (i105 == 70) {
      if (telemetry->cbs[TELEMETRY_MSG_CIRCLE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_CIRCLE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_CIRCLE_ID);
#endif
    }
    if (i100 == 80) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_ID);
#endif
    }
    if (i60 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ESTIMATOR_ID);
#endif
    }
    if (i50 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_GPS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_GPS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_GPS_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ATT_POL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ATT_POL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ATT_POL_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_PLIGHT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PLIGHT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PLIGHT_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_MAG_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_GYRO_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_ACCEL_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ATTITUDE_ID);
#endif
    }
  }
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_minimal) {
    static uint8_t i105 = 0; i105++; if (i105>=105) i105=0;
    static uint8_t i110 = 0; i110++; if (i110>=110) i110=0;
    static uint8_t i130 = 0; i130++; if (i130>=130) i130=0;
    static uint8_t i140 = 0; i140++; if (i140>=140) i140=0;
    static uint8_t i150 = 0; i150++; if (i150>=150) i150=0;
    static uint8_t i210 = 0; i210++; if (i210>=210) i210=0;
    static uint16_t i300 = 0; i300++; if (i300>=300) i300=0;
    static uint16_t i305 = 0; i305++; if (i305>=305) i305=0;
    static uint16_t i320 = 0; i320++; if (i320>=320) i320=0;
    static uint16_t i400 = 0; i400++; if (i400>=400) i400=0;
    static uint16_t i405 = 0; i405++; if (i405>=405) i405=0;
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    static uint16_t i509 = 0; i509++; if (i509>=509) i509=0;
    static uint16_t i900 = 0; i900++; if (i900>=900) i900=0;
    if (i900 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_REF_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_REF_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_REF_ID);
#endif
    }
    if (i509 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DOWNLINK_ID);
#endif
    }
    else if (i509 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_CALIBRATION_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_CALIBRATION_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_CALIBRATION_ID);
#endif
    }
    if (i500 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_GPS_SOL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_GPS_SOL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_GPS_SOL_ID);
#endif
    }
    else if (i500 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_STATE_FILTER_STATUS_ID);
#endif
    }
    else if (i500 == 50) {
      if (telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PPRZ_MODE_ID);
#endif
    }
    else if (i500 == 60) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
    if (i405 == 70) {
      if (telemetry->cbs[TELEMETRY_MSG_DESIRED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DESIRED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DESIRED_ID);
#endif
    }
    if (i400 == 80) {
      if (telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ATTITUDE_ID);
#endif
    }
    if (i320 == 90) {
      if (telemetry->cbs[TELEMETRY_MSG_SEGMENT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SEGMENT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SEGMENT_ID);
#endif
    }
    if (i305 == 100) {
      if (telemetry->cbs[TELEMETRY_MSG_CIRCLE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_CIRCLE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_CIRCLE_ID);
#endif
    }
    if (i300 == 110) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_ID);
#endif
    }
    if (i210 == 120) {
      if (telemetry->cbs[TELEMETRY_MSG_SURVEY_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_SURVEY_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_SURVEY_ID);
#endif
    }
    if (i150 == 130) {
      if (telemetry->cbs[TELEMETRY_MSG_pp_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_pp_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_pp_ID);
#endif
    }
    else if (i150 == 140) {
      if (telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DL_VALUE_ID);
#endif
    }
    if (i140 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_WP_MOVED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_WP_MOVED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_WP_MOVED_ID);
#endif
    }
    if (i130 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ESTIMATOR_ID);
#endif
    }
    if (i110 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_BAT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_BAT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_BAT_ID);
#endif
    }
    if (i105 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_GPS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_GPS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_GPS_ID);
#endif
    }
  }
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_extremal) {
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    static uint16_t i509 = 0; i509++; if (i509>=509) i509=0;
    static uint16_t i530 = 0; i530++; if (i530>=530) i530=0;
    static uint16_t i540 = 0; i540++; if (i540>=540) i540=0;
    static uint16_t i570 = 0; i570++; if (i570>=570) i570=0;
    static uint16_t i750 = 0; i750++; if (i750>=750) i750=0;
    static uint16_t i800 = 0; i800++; if (i800>=800) i800=0;
    static uint16_t i1010 = 0; i1010++; if (i1010>=1010) i1010=0;
    static uint16_t i1019 = 0; i1019++; if (i1019>=1019) i1019=0;
    if (i1019 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_DESIRED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DESIRED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DESIRED_ID);
#endif
    }
    if (i1010 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_BAT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_BAT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_BAT_ID);
#endif
    }
    if (i800 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_STATE_FILTER_STATUS_ID);
#endif
    }
    if (i750 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PPRZ_MODE_ID);
#endif
    }
    if (i570 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DOWNLINK_ID);
#endif
    }
    if (i540 == 50) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_ID);
#endif
    }
    if (i530 == 60) {
      if (telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ESTIMATOR_ID);
#endif
    }
    if (i509 == 70) {
      if (telemetry->cbs[TELEMETRY_MSG_GPS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_GPS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_GPS_ID);
#endif
    }
    if (i500 == 80) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
  }
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_raw_sensors) {
    static uint8_t i5 = 0; i5++; if (i5>=5) i5=0;
    static uint8_t i50 = 0; i50++; if (i50>=50) i50=0;
    static uint8_t i210 = 0; i210++; if (i210>=210) i210=0;
    if (i210 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
    if (i50 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_BARO_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_BARO_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_BARO_RAW_ID);
#endif
    }
    else if (i50 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DL_VALUE_ID);
#endif
    }
    if (i5 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_MAG_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_MAG_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_MAG_RAW_ID);
#endif
    }
    if (i5 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_GYRO_RAW_ID);
#endif
    }
    if (i5 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_ACCEL_RAW_ID);
#endif
    }
  }
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_scaled_sensors) {
    static uint8_t i7 = 0; i7++; if (i7>=7) i7=0;
    static uint8_t i10 = 0; i10++; if (i10>=10) i10=0;
    static uint8_t i50 = 0; i50++; if (i50>=50) i50=0;
    static uint8_t i210 = 0; i210++; if (i210>=210) i210=0;
    if (i210 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
    if (i50 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DL_VALUE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DL_VALUE_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_MAG_ID);
#endif
    }
    if (i7 == 3) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_ACCEL_ID);
#endif
    }
    else if (i7 == 6) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_GYRO_ID);
#endif
    }
  }
  if (telemetry_mode_Ap == TELEMETRY_MODE_Ap_debug_imu) {
    static uint8_t i10 = 0; i10++; if (i10>=10) i10=0;
    static uint8_t i50 = 0; i50++; if (i50>=50) i50=0;
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    static uint16_t i509 = 0; i509++; if (i509>=509) i509=0;
    static uint16_t i530 = 0; i530++; if (i530>=530) i530=0;
    static uint16_t i540 = 0; i540++; if (i540>=540) i540=0;
    static uint16_t i550 = 0; i550++; if (i550>=550) i550=0;
    static uint16_t i570 = 0; i570++; if (i570>=570) i570=0;
    static uint16_t i1010 = 0; i1010++; if (i1010>=1010) i1010=0;
    static uint16_t i1019 = 0; i1019++; if (i1019>=1019) i1019=0;
    if (i1019 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_DESIRED_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DESIRED_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DESIRED_ID);
#endif
    }
    if (i1010 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_BAT_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_BAT_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_BAT_ID);
#endif
    }
    if (i570 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_DOWNLINK_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_DOWNLINK_ID);
#endif
    }
    if (i550 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PPRZ_MODE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_PPRZ_MODE_ID);
#endif
    }
    if (i540 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_NAVIGATION_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_NAVIGATION_ID);
#endif
    }
    if (i530 == 50) {
      if (telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ESTIMATOR_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ESTIMATOR_ID);
#endif
    }
    if (i509 == 60) {
      if (telemetry->cbs[TELEMETRY_MSG_GPS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_GPS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_GPS_ID);
#endif
    }
    if (i500 == 70) {
      if (telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_STATE_FILTER_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_STATE_FILTER_STATUS_ID);
#endif
    }
    else if (i500 == 80) {
      if (telemetry->cbs[TELEMETRY_MSG_ALIVE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ALIVE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ALIVE_ID);
#endif
    }
    if (i50 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_MAG_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_MAG_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_MAG_RAW_ID);
#endif
    }
    else if (i50 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_GYRO_RAW_ID);
#endif
    }
    else if (i50 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_RAW_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_RAW_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_ACCEL_RAW_ID);
#endif
    }
    else if (i50 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_MAG_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_MAG_ID);
#endif
    }
    else if (i50 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_GYRO_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_GYRO_ID);
#endif
    }
    if (i50 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_IMU_ACCEL_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_IMU_ACCEL_ID);
#endif
    }
    if (i10 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ATTITUDE_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Ap, telemetry_mode_Ap, TELEMETRY_MSG_ATTITUDE_ID);
#endif
    }
  }
}

/* Periodic telemetry: Fbw process */
#define TELEMETRY_PROCESS_Fbw 0
#define TELEMETRY_MODE_Fbw_default 0
#define PERIOD_COMMANDS_Fbw_0 (5)
#define PERIOD_FBW_STATUS_Fbw_0 (2)
#define PERIOD_ACTUATORS_Fbw_0 (5)
#define TELEMETRY_MODE_Fbw_debug 1
#define PERIOD_PPM_Fbw_1 (0.5)
#define PERIOD_RC_Fbw_1 (0.5)
#define PERIOD_COMMANDS_Fbw_1 (0.5)
#define PERIOD_FBW_STATUS_Fbw_1 (1)
#define PERIOD_ACTUATORS_Fbw_1 (5)

/* Functions for Fbw process */
#ifdef PERIODIC_C_FBW
#ifndef TELEMETRY_MODE_FBW
#define TELEMETRY_MODE_FBW 0
#endif
uint8_t telemetry_mode_Fbw = TELEMETRY_MODE_FBW;
#else /* PERIODIC_C_FBW not defined (general header) */
extern uint8_t telemetry_mode_Fbw;
#endif /* PERIODIC_C_FBW */
static inline void periodic_telemetry_send_Fbw(struct periodic_telemetry *telemetry, struct transport_tx *trans, struct link_device *dev) {  /* 100Hz */
  if (telemetry_mode_Fbw == TELEMETRY_MODE_Fbw_default) {
    static uint8_t i200 = 0; i200++; if (i200>=200) i200=0;
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    if (i500 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ACTUATORS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ACTUATORS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_ACTUATORS_ID);
#endif
    }
    else if (i500 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_COMMANDS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_COMMANDS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_COMMANDS_ID);
#endif
    }
    if (i200 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_FBW_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_FBW_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_FBW_STATUS_ID);
#endif
    }
  }
  if (telemetry_mode_Fbw == TELEMETRY_MODE_Fbw_debug) {
    static uint8_t i50 = 0; i50++; if (i50>=50) i50=0;
    static uint8_t i100 = 0; i100++; if (i100>=100) i100=0;
    static uint16_t i500 = 0; i500++; if (i500>=500) i500=0;
    if (i500 == 0) {
      if (telemetry->cbs[TELEMETRY_MSG_ACTUATORS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_ACTUATORS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_ACTUATORS_ID);
#endif
    }
    if (i100 == 10) {
      if (telemetry->cbs[TELEMETRY_MSG_FBW_STATUS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_FBW_STATUS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_FBW_STATUS_ID);
#endif
    }
    if (i50 == 20) {
      if (telemetry->cbs[TELEMETRY_MSG_COMMANDS_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_COMMANDS_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_COMMANDS_ID);
#endif
    }
    else if (i50 == 30) {
      if (telemetry->cbs[TELEMETRY_MSG_RC_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_RC_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_RC_ID);
#endif
    }
    else if (i50 == 40) {
      if (telemetry->cbs[TELEMETRY_MSG_PPM_ID] != NULL)
        telemetry->cbs[TELEMETRY_MSG_PPM_ID](trans, dev);
#if USE_PERIODIC_TELEMETRY_REPORT
      else periodic_telemetry_err_report(TELEMETRY_PROCESS_Fbw, telemetry_mode_Fbw, TELEMETRY_MSG_PPM_ID);
#endif
    }
  }
}
#endif // _VAR_PERIODIC_H_
