   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"pprz_geodetic_float.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_f2d
  20              		.global	__aeabi_dmul
  21              		.global	__aeabi_dadd
  22              		.global	__aeabi_d2f
  23              		.section	.text.isometric_latitude_fast_f,"ax",%progbits
  24              		.align	1
  25              		.thumb
  26              		.thumb_func
  28              	isometric_latitude_fast_f:
  29              	.LFB55:
  30              		.file 1 "math/pprz_geodetic_float.c"
   1:math/pprz_geodetic_float.c **** /*
   2:math/pprz_geodetic_float.c ****  * Copyright (C) 2008-2014 The Paparazzi Team
   3:math/pprz_geodetic_float.c ****  *
   4:math/pprz_geodetic_float.c ****  * This file is part of paparazzi.
   5:math/pprz_geodetic_float.c ****  *
   6:math/pprz_geodetic_float.c ****  * paparazzi is free software; you can redistribute it and/or modify
   7:math/pprz_geodetic_float.c ****  * it under the terms of the GNU General Public License as published by
   8:math/pprz_geodetic_float.c ****  * the Free Software Foundation; either version 2, or (at your option)
   9:math/pprz_geodetic_float.c ****  * any later version.
  10:math/pprz_geodetic_float.c ****  *
  11:math/pprz_geodetic_float.c ****  * paparazzi is distributed in the hope that it will be useful,
  12:math/pprz_geodetic_float.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:math/pprz_geodetic_float.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:math/pprz_geodetic_float.c ****  * GNU General Public License for more details.
  15:math/pprz_geodetic_float.c ****  *
  16:math/pprz_geodetic_float.c ****  * You should have received a copy of the GNU General Public License
  17:math/pprz_geodetic_float.c ****  * along with paparazzi; see the file COPYING.  If not, see
  18:math/pprz_geodetic_float.c ****  * <http://www.gnu.org/licenses/>.
  19:math/pprz_geodetic_float.c ****  */
  20:math/pprz_geodetic_float.c **** 
  21:math/pprz_geodetic_float.c **** /**
  22:math/pprz_geodetic_float.c ****  * @file pprz_geodetic_float.c
  23:math/pprz_geodetic_float.c ****  * @brief Paparazzi floating point math for geodetic calculations.
  24:math/pprz_geodetic_float.c ****  *
  25:math/pprz_geodetic_float.c ****  *
  26:math/pprz_geodetic_float.c ****  */
  27:math/pprz_geodetic_float.c **** 
  28:math/pprz_geodetic_float.c **** #include "pprz_geodetic_float.h"
  29:math/pprz_geodetic_float.c **** 
  30:math/pprz_geodetic_float.c **** #include "pprz_algebra_float.h"
  31:math/pprz_geodetic_float.c **** #include <math.h>
  32:math/pprz_geodetic_float.c **** 
  33:math/pprz_geodetic_float.c **** /* for ecef_of_XX functions the double versions are needed */
  34:math/pprz_geodetic_float.c **** #include "pprz_geodetic_double.h"
  35:math/pprz_geodetic_float.c **** 
  36:math/pprz_geodetic_float.c **** void ltp_def_from_ecef_f(struct LtpDef_f *def, struct EcefCoor_f *ecef)
  37:math/pprz_geodetic_float.c **** {
  38:math/pprz_geodetic_float.c **** 
  39:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane       */
  40:math/pprz_geodetic_float.c ****   VECT3_COPY(def->ecef, *ecef);
  41:math/pprz_geodetic_float.c ****   /* compute the lla representation of the origin */
  42:math/pprz_geodetic_float.c ****   lla_of_ecef_f(&def->lla, &def->ecef);
  43:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
  44:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
  45:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
  46:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
  47:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  49:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  50:math/pprz_geodetic_float.c ****   /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_system#From_ECEF_to_ENU */
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
  53:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
  54:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  55:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
  56:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
  57:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  58:math/pprz_geodetic_float.c **** 
  59:math/pprz_geodetic_float.c **** }
  60:math/pprz_geodetic_float.c **** 
  61:math/pprz_geodetic_float.c **** void ltp_def_from_lla_f(struct LtpDef_f *def, struct LlaCoor_f *lla)
  62:math/pprz_geodetic_float.c **** {
  63:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane */
  64:math/pprz_geodetic_float.c ****   LLA_COPY(def->lla, *lla);
  65:math/pprz_geodetic_float.c ****   /* compute the ecef representation of the origin */
  66:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&def->ecef, &def->lla);
  67:math/pprz_geodetic_float.c **** 
  68:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
  69:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(def->lla.lat);
  70:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
  71:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
  72:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
  73:math/pprz_geodetic_float.c **** 
  74:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
  75:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
  76:math/pprz_geodetic_float.c ****   /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_system#From_ECEF_to_ENU */
  77:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[2] = 0.;
  78:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
  79:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
  80:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
  81:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
  82:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
  83:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
  84:math/pprz_geodetic_float.c **** }
  85:math/pprz_geodetic_float.c **** 
  86:math/pprz_geodetic_float.c **** void enu_of_ecef_point_f(struct EnuCoor_f *enu, struct LtpDef_f *def, struct EcefCoor_f *ecef)
  87:math/pprz_geodetic_float.c **** {
  88:math/pprz_geodetic_float.c ****   struct EcefCoor_f delta;
  89:math/pprz_geodetic_float.c ****   VECT3_DIFF(delta, *ecef, def->ecef);
  90:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
  91:math/pprz_geodetic_float.c **** }
  92:math/pprz_geodetic_float.c **** 
  93:math/pprz_geodetic_float.c **** void ned_of_ecef_point_f(struct NedCoor_f *ned, struct LtpDef_f *def, struct EcefCoor_f *ecef)
  94:math/pprz_geodetic_float.c **** {
  95:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
  96:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(&enu, def, ecef);
  97:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
  98:math/pprz_geodetic_float.c **** }
  99:math/pprz_geodetic_float.c **** 
 100:math/pprz_geodetic_float.c **** 
 101:math/pprz_geodetic_float.c **** void enu_of_ecef_vect_f(struct EnuCoor_f *enu, struct LtpDef_f *def, struct EcefCoor_f *ecef)
 102:math/pprz_geodetic_float.c **** {
 103:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
 104:math/pprz_geodetic_float.c **** }
 105:math/pprz_geodetic_float.c **** 
 106:math/pprz_geodetic_float.c **** void ned_of_ecef_vect_f(struct NedCoor_f *ned, struct LtpDef_f *def, struct EcefCoor_f *ecef)
 107:math/pprz_geodetic_float.c **** {
 108:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 109:math/pprz_geodetic_float.c ****   enu_of_ecef_vect_f(&enu, def, ecef);
 110:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 111:math/pprz_geodetic_float.c **** }
 112:math/pprz_geodetic_float.c **** 
 113:math/pprz_geodetic_float.c **** void enu_of_lla_point_f(struct EnuCoor_f *enu, struct LtpDef_f *def, struct LlaCoor_f *lla)
 114:math/pprz_geodetic_float.c **** {
 115:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 116:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef, lla);
 117:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(enu, def, &ecef);
 118:math/pprz_geodetic_float.c **** }
 119:math/pprz_geodetic_float.c **** 
 120:math/pprz_geodetic_float.c **** void ned_of_lla_point_f(struct NedCoor_f *ned, struct LtpDef_f *def, struct LlaCoor_f *lla)
 121:math/pprz_geodetic_float.c **** {
 122:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 123:math/pprz_geodetic_float.c ****   ecef_of_lla_f(&ecef, lla);
 124:math/pprz_geodetic_float.c ****   ned_of_ecef_point_f(ned, def, &ecef);
 125:math/pprz_geodetic_float.c **** }
 126:math/pprz_geodetic_float.c **** 
 127:math/pprz_geodetic_float.c **** /*
 128:math/pprz_geodetic_float.c ****  * not enought precision with float - use double
 129:math/pprz_geodetic_float.c ****  */
 130:math/pprz_geodetic_float.c **** void ecef_of_enu_point_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct EnuCoor_f *enu)
 131:math/pprz_geodetic_float.c **** {
 132:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 133:math/pprz_geodetic_float.c ****   struct DoubleRMat ltp_of_ecef_d;
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 138:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 139:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 140:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 141:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 142:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 143:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 144:math/pprz_geodetic_float.c ****   enu_d.x = (double) enu->x;
 145:math/pprz_geodetic_float.c ****   enu_d.y = (double) enu->y;
 146:math/pprz_geodetic_float.c ****   enu_d.z = (double) enu->z;
 147:math/pprz_geodetic_float.c **** 
 148:math/pprz_geodetic_float.c ****   /* compute in double */
 149:math/pprz_geodetic_float.c ****   struct EcefCoor_d ecef_d;
 150:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 151:math/pprz_geodetic_float.c **** 
 152:math/pprz_geodetic_float.c ****   /* convert result back to float and add it*/
 153:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x + def->ecef.x;
 154:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 155:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 156:math/pprz_geodetic_float.c **** }
 157:math/pprz_geodetic_float.c **** 
 158:math/pprz_geodetic_float.c **** void ecef_of_ned_point_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct NedCoor_f *ned)
 159:math/pprz_geodetic_float.c **** {
 160:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 161:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 162:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 163:math/pprz_geodetic_float.c **** }
 164:math/pprz_geodetic_float.c **** 
 165:math/pprz_geodetic_float.c **** void ecef_of_enu_vect_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct EnuCoor_f *enu)
 166:math/pprz_geodetic_float.c **** {
 167:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 168:math/pprz_geodetic_float.c ****   struct DoubleRMat ltp_of_ecef_d;
 169:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[0] = (double) def->ltp_of_ecef.m[0];
 170:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 171:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 172:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 173:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 174:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 175:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 176:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 177:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 178:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 179:math/pprz_geodetic_float.c ****   enu_d.x = (double) enu->x;
 180:math/pprz_geodetic_float.c ****   enu_d.y = (double) enu->y;
 181:math/pprz_geodetic_float.c ****   enu_d.z = (double) enu->z;
 182:math/pprz_geodetic_float.c **** 
 183:math/pprz_geodetic_float.c ****   /* compute in double */
 184:math/pprz_geodetic_float.c ****   struct EcefCoor_d ecef_d;
 185:math/pprz_geodetic_float.c ****   MAT33_VECT3_TRANSP_MUL(ecef_d, ltp_of_ecef_d, enu_d);
 186:math/pprz_geodetic_float.c **** 
 187:math/pprz_geodetic_float.c ****   /* convert result back to float*/
 188:math/pprz_geodetic_float.c ****   ecef->x = (float) ecef_d.x;
 189:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 190:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 191:math/pprz_geodetic_float.c **** }
 192:math/pprz_geodetic_float.c **** 
 193:math/pprz_geodetic_float.c **** void ecef_of_ned_vect_f(struct EcefCoor_f *ecef, struct LtpDef_f *def, struct NedCoor_f *ned)
 194:math/pprz_geodetic_float.c **** {
 195:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 196:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(enu, *ned);
 197:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 198:math/pprz_geodetic_float.c **** }
 199:math/pprz_geodetic_float.c **** /* end use double versions */
 200:math/pprz_geodetic_float.c **** 
 201:math/pprz_geodetic_float.c **** 
 202:math/pprz_geodetic_float.c **** 
 203:math/pprz_geodetic_float.c **** 
 204:math/pprz_geodetic_float.c **** /* http://en.wikipedia.org/wiki/Geodetic_system */
 205:math/pprz_geodetic_float.c **** void lla_of_ecef_f(struct LlaCoor_f *out, struct EcefCoor_f *in)
 206:math/pprz_geodetic_float.c **** {
 207:math/pprz_geodetic_float.c **** 
 208:math/pprz_geodetic_float.c ****   // FIXME : make an ellipsoid struct
 209:math/pprz_geodetic_float.c ****   static const float a = 6378137.0;           /* earth semimajor axis in meters */
 210:math/pprz_geodetic_float.c ****   static const float f = 1. / 298.257223563;  /* reciprocal flattening          */
 211:math/pprz_geodetic_float.c ****   const float b = a * (1. - f);               /* semi-minor axis                */
 212:math/pprz_geodetic_float.c ****   const float b2 = b * b;
 213:math/pprz_geodetic_float.c **** 
 214:math/pprz_geodetic_float.c ****   const float e2 = 2.*f - (f * f);            /* first eccentricity squared     */
 215:math/pprz_geodetic_float.c ****   const float ep2 = f * (2. - f) / ((1. - f) * (1. - f)); /* second eccentricity squared    */
 216:math/pprz_geodetic_float.c ****   const float E2 = a * a - b2;
 217:math/pprz_geodetic_float.c **** 
 218:math/pprz_geodetic_float.c **** 
 219:math/pprz_geodetic_float.c ****   const float z2 = in->z * in->z;
 220:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 221:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 222:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 223:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 224:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 225:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 226:math/pprz_geodetic_float.c ****   const float s1 = 1 + s + 1 / s;
 227:math/pprz_geodetic_float.c ****   const float P = F / (3 * s1 * s1 * G * G);
 228:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 229:math/pprz_geodetic_float.c ****   const float ro = -(e2 * P * r) / (1 + Q) + sqrtf((a * a / 2) * (1 + 1 / Q) - ((1 - e2) * P * z2) 
 230:math/pprz_geodetic_float.c ****                    (1 + Q)) - P * r2 / 2);
 231:math/pprz_geodetic_float.c ****   const float tmp = (r - e2 * ro) * (r - e2 * ro);
 232:math/pprz_geodetic_float.c ****   const float U = sqrtf(tmp + z2);
 233:math/pprz_geodetic_float.c ****   const float V = sqrtf(tmp + (1 - e2) * z2);
 234:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 235:math/pprz_geodetic_float.c **** 
 236:math/pprz_geodetic_float.c ****   out->alt = U * (1 - b2 / (a * V));
 237:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 238:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 239:math/pprz_geodetic_float.c **** 
 240:math/pprz_geodetic_float.c **** }
 241:math/pprz_geodetic_float.c **** 
 242:math/pprz_geodetic_float.c **** void ecef_of_lla_f(struct EcefCoor_f *out, struct LlaCoor_f *in)
 243:math/pprz_geodetic_float.c **** {
 244:math/pprz_geodetic_float.c **** 
 245:math/pprz_geodetic_float.c ****   // FIXME : make an ellipsoid struct
 246:math/pprz_geodetic_float.c ****   static const float a = 6378137.0;           /* earth semimajor axis in meters */
 247:math/pprz_geodetic_float.c ****   static const float f = 1. / 298.257223563;  /* reciprocal flattening          */
 248:math/pprz_geodetic_float.c ****   const float e2 = 2.*f - (f * f);            /* first eccentricity squared     */
 249:math/pprz_geodetic_float.c **** 
 250:math/pprz_geodetic_float.c ****   const float sin_lat = sinf(in->lat);
 251:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 252:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 253:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 254:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2 * sin_lat * sin_lat);
 255:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 256:math/pprz_geodetic_float.c **** 
 257:math/pprz_geodetic_float.c ****   out->x = (a_chi + in->alt) * cos_lat * cos_lon;
 258:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 259:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 260:math/pprz_geodetic_float.c **** }
 261:math/pprz_geodetic_float.c **** 
 262:math/pprz_geodetic_float.c **** 
 263:math/pprz_geodetic_float.c **** 
 264:math/pprz_geodetic_float.c **** 
 265:math/pprz_geodetic_float.c **** #include "math/pprz_geodetic_utm.h"
 266:math/pprz_geodetic_float.c **** 
 267:math/pprz_geodetic_float.c **** struct complex { float re; float im; };
 268:math/pprz_geodetic_float.c **** #define CScal(k, z) { z.re *= k;  z.im *= k; }
 269:math/pprz_geodetic_float.c **** #define CAdd(z1, z2) { z2.re += z1.re;  z2.im += z1.im; }
 270:math/pprz_geodetic_float.c **** #define CSub(z1, z2) { z2.re -= z1.re;  z2.im -= z1.im; }
 271:math/pprz_geodetic_float.c **** #define CI(z) { float tmp = z.re; z.re = - z.im; z.im = tmp; }
 272:math/pprz_geodetic_float.c **** #define CExp(z) { float e = exp(z.re); z.re = e*cos(z.im); z.im = e*sin(z.im); }
 273:math/pprz_geodetic_float.c **** /* Expanded #define CSin(z) { CI(z); struct complex _z = {-z.re, -z.im}; CExp(z); CExp(_z); CSub(_z
 274:math/pprz_geodetic_float.c **** 
 275:math/pprz_geodetic_float.c **** #define CSin(z) { CI(z); struct complex _z = {-z.re, -z.im}; float e = exp(z.re); float cos_z_im = 
 276:math/pprz_geodetic_float.c **** 
 277:math/pprz_geodetic_float.c **** 
 278:math/pprz_geodetic_float.c **** static inline float isometric_latitude_f(float phi, float e)
 279:math/pprz_geodetic_float.c **** {
 280:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0)) - e / 2.0 * log((1.0 + e * sin(phi)) / (1.0 - e * sin(phi)));
 281:math/pprz_geodetic_float.c **** }
 282:math/pprz_geodetic_float.c **** 
 283:math/pprz_geodetic_float.c **** static inline float isometric_latitude_fast_f(float phi)
 284:math/pprz_geodetic_float.c **** {
  31              		.loc 1 284 0
  32              		.cfi_startproc
  33              		@ args = 0, pretend = 0, frame = 0
  34              		@ frame_needed = 0, uses_anonymous_args = 0
  35              	.LVL0:
  36 0000 08B5     		push	{r3, lr}
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 3, -8
  39              		.cfi_offset 14, -4
 285:math/pprz_geodetic_float.c ****   return log(tan(M_PI_4 + phi / 2.0));
  40              		.loc 1 285 0
  41 0002 10EE100A 		fmrs	r0, s0
  42 0006 FFF7FEFF 		bl	__aeabi_f2d
  43              	.LVL1:
  44 000a 0022     		movs	r2, #0
  45 000c 0A4B     		ldr	r3, .L2+8
  46 000e FFF7FEFF 		bl	__aeabi_dmul
  47              	.LVL2:
  48 0012 07A3     		adr	r3, .L2
  49 0014 D3E90023 		ldrd	r2, [r3]
  50 0018 FFF7FEFF 		bl	__aeabi_dadd
  51              	.LVL3:
  52 001c FFF7FEFF 		bl	tan
  53              	.LVL4:
  54 0020 FFF7FEFF 		bl	log
  55              	.LVL5:
  56 0024 FFF7FEFF 		bl	__aeabi_d2f
  57              	.LVL6:
 286:math/pprz_geodetic_float.c **** }
  58              		.loc 1 286 0
  59 0028 00EE100A 		fmsr	s0, r0
  60 002c 08BD     		pop	{r3, pc}
  61              	.L3:
  62 002e 00BF     		.align	3
  63              	.L2:
  64 0030 182D4454 		.word	1413754136
  65 0034 FB21E93F 		.word	1072243195
  66 0038 0000E03F 		.word	1071644672
  67              		.cfi_endproc
  68              	.LFE55:
  70              		.section	.text.enu_of_ecef_point_f,"ax",%progbits
  71              		.align	1
  72              		.global	enu_of_ecef_point_f
  73              		.thumb
  74              		.thumb_func
  76              	enu_of_ecef_point_f:
  77              	.LFB42:
  87:math/pprz_geodetic_float.c ****   struct EcefCoor_f delta;
  78              		.loc 1 87 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL7:
  89:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
  84              		.loc 1 89 0
  85 0000 D2ED007A 		flds	s15, [r2]
  86 0004 91ED006A 		flds	s12, [r1]
  87 0008 91ED017A 		flds	s14, [r1, #4]
  88 000c D1ED026A 		flds	s13, [r1, #8]
  90:math/pprz_geodetic_float.c **** }
  89              		.loc 1 90 0
  90 0010 D1ED065A 		flds	s11, [r1, #24]
  89:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, delta);
  91              		.loc 1 89 0
  92 0014 37EEC66A 		fsubs	s12, s15, s12
  93              	.LVL8:
  94 0018 D2ED017A 		flds	s15, [r2, #4]
  95 001c 77EEC77A 		fsubs	s15, s15, s14
  96              	.LVL9:
  97 0020 92ED027A 		flds	s14, [r2, #8]
  98 0024 77EE666A 		fsubs	s13, s14, s13
  99              	.LVL10:
  90:math/pprz_geodetic_float.c **** }
 100              		.loc 1 90 0
 101 0028 91ED077A 		flds	s14, [r1, #28]
 102 002c 27EE877A 		fmuls	s14, s15, s14
 103 0030 A5EE867A 		vfma.f32	s14, s11, s12
 104 0034 D1ED085A 		flds	s11, [r1, #32]
 105 0038 A5EEA67A 		vfma.f32	s14, s11, s13
 106 003c D1ED095A 		flds	s11, [r1, #36]
 107 0040 80ED007A 		fsts	s14, [r0]
 108 0044 91ED0A7A 		flds	s14, [r1, #40]
 109 0048 27EE877A 		fmuls	s14, s15, s14
 110 004c A5EE867A 		vfma.f32	s14, s11, s12
 111 0050 D1ED0B5A 		flds	s11, [r1, #44]
 112 0054 A5EEA67A 		vfma.f32	s14, s11, s13
 113 0058 80ED017A 		fsts	s14, [r0, #4]
 114 005c 91ED0D7A 		flds	s14, [r1, #52]
 115 0060 67EE877A 		fmuls	s15, s15, s14
 116              	.LVL11:
 117 0064 91ED0C7A 		flds	s14, [r1, #48]
 118 0068 E7EE067A 		vfma.f32	s15, s14, s12
 119 006c 91ED0E7A 		flds	s14, [r1, #56]
 120 0070 E7EE267A 		vfma.f32	s15, s14, s13
 121 0074 C0ED027A 		fsts	s15, [r0, #8]
 122 0078 7047     		bx	lr
 123              		.cfi_endproc
 124              	.LFE42:
 126              		.section	.text.ned_of_ecef_point_f,"ax",%progbits
 127              		.align	1
 128              		.global	ned_of_ecef_point_f
 129              		.thumb
 130              		.thumb_func
 132              	ned_of_ecef_point_f:
 133              	.LFB43:
  94:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 134              		.loc 1 94 0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 16
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              	.LVL12:
 139 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 140              		.cfi_def_cfa_offset 24
 141              		.cfi_offset 4, -8
 142              		.cfi_offset 14, -4
  94:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 143              		.loc 1 94 0
 144 0002 0446     		mov	r4, r0
  96:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 145              		.loc 1 96 0
 146 0004 01A8     		add	r0, sp, #4
 147              	.LVL13:
 148 0006 FFF7FEFF 		bl	enu_of_ecef_point_f
 149              	.LVL14:
  97:math/pprz_geodetic_float.c **** }
 150              		.loc 1 97 0
 151 000a 029B     		ldr	r3, [sp, #8]	@ float
 152 000c DDED037A 		flds	s15, [sp, #12]
 153 0010 2360     		str	r3, [r4]	@ float
 154 0012 019B     		ldr	r3, [sp, #4]	@ float
 155 0014 6360     		str	r3, [r4, #4]	@ float
 156 0016 F1EE677A 		fnegs	s15, s15
 157 001a C4ED027A 		fsts	s15, [r4, #8]
  98:math/pprz_geodetic_float.c **** 
 158              		.loc 1 98 0
 159 001e 04B0     		add	sp, sp, #16
 160              		.cfi_def_cfa_offset 8
 161              		@ sp needed
 162 0020 10BD     		pop	{r4, pc}
 163              		.cfi_endproc
 164              	.LFE43:
 166              		.section	.text.enu_of_ecef_vect_f,"ax",%progbits
 167              		.align	1
 168              		.global	enu_of_ecef_vect_f
 169              		.thumb
 170              		.thumb_func
 172              	enu_of_ecef_vect_f:
 173              	.LFB44:
 102:math/pprz_geodetic_float.c ****   MAT33_VECT3_MUL(*enu, def->ltp_of_ecef, *ecef);
 174              		.loc 1 102 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179              	.LVL15:
 103:math/pprz_geodetic_float.c **** }
 180              		.loc 1 103 0
 181 0000 D2ED017A 		flds	s15, [r2, #4]
 182 0004 91ED077A 		flds	s14, [r1, #28]
 183 0008 92ED006A 		flds	s12, [r2]
 184 000c D1ED065A 		flds	s11, [r1, #24]
 185 0010 D2ED026A 		flds	s13, [r2, #8]
 186 0014 27EE877A 		fmuls	s14, s15, s14
 187 0018 A5EE867A 		vfma.f32	s14, s11, s12
 188 001c D1ED085A 		flds	s11, [r1, #32]
 189 0020 A5EEA67A 		vfma.f32	s14, s11, s13
 190 0024 D1ED095A 		flds	s11, [r1, #36]
 191 0028 80ED007A 		fsts	s14, [r0]
 192 002c 91ED0A7A 		flds	s14, [r1, #40]
 193 0030 27EE877A 		fmuls	s14, s15, s14
 194 0034 A5EE867A 		vfma.f32	s14, s11, s12
 195 0038 D1ED0B5A 		flds	s11, [r1, #44]
 196 003c A5EEA67A 		vfma.f32	s14, s11, s13
 197 0040 80ED017A 		fsts	s14, [r0, #4]
 198 0044 91ED0D7A 		flds	s14, [r1, #52]
 199 0048 67EE877A 		fmuls	s15, s15, s14
 200 004c 91ED0C7A 		flds	s14, [r1, #48]
 201 0050 E7EE067A 		vfma.f32	s15, s14, s12
 202 0054 91ED0E7A 		flds	s14, [r1, #56]
 203 0058 E7EE267A 		vfma.f32	s15, s14, s13
 204 005c C0ED027A 		fsts	s15, [r0, #8]
 205 0060 7047     		bx	lr
 206              		.cfi_endproc
 207              	.LFE44:
 209              		.section	.text.ned_of_ecef_vect_f,"ax",%progbits
 210              		.align	1
 211              		.global	ned_of_ecef_vect_f
 212              		.thumb
 213              		.thumb_func
 215              	ned_of_ecef_vect_f:
 216              	.LFB45:
 107:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 217              		.loc 1 107 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 16
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              	.LVL16:
 222 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 223              		.cfi_def_cfa_offset 24
 224              		.cfi_offset 4, -8
 225              		.cfi_offset 14, -4
 107:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 226              		.loc 1 107 0
 227 0002 0446     		mov	r4, r0
 109:math/pprz_geodetic_float.c ****   ENU_OF_TO_NED(*ned, enu);
 228              		.loc 1 109 0
 229 0004 01A8     		add	r0, sp, #4
 230              	.LVL17:
 231 0006 FFF7FEFF 		bl	enu_of_ecef_vect_f
 232              	.LVL18:
 110:math/pprz_geodetic_float.c **** }
 233              		.loc 1 110 0
 234 000a 029B     		ldr	r3, [sp, #8]	@ float
 235 000c DDED037A 		flds	s15, [sp, #12]
 236 0010 2360     		str	r3, [r4]	@ float
 237 0012 019B     		ldr	r3, [sp, #4]	@ float
 238 0014 6360     		str	r3, [r4, #4]	@ float
 239 0016 F1EE677A 		fnegs	s15, s15
 240 001a C4ED027A 		fsts	s15, [r4, #8]
 111:math/pprz_geodetic_float.c **** 
 241              		.loc 1 111 0
 242 001e 04B0     		add	sp, sp, #16
 243              		.cfi_def_cfa_offset 8
 244              		@ sp needed
 245 0020 10BD     		pop	{r4, pc}
 246              		.cfi_endproc
 247              	.LFE45:
 249              		.section	.text.ecef_of_enu_point_f,"ax",%progbits
 250              		.align	1
 251              		.global	ecef_of_enu_point_f
 252              		.thumb
 253              		.thumb_func
 255              	ecef_of_enu_point_f:
 256              	.LFB48:
 131:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 257              		.loc 1 131 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 16
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              	.LVL19:
 262 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 263              		.cfi_def_cfa_offset 36
 264              		.cfi_offset 4, -36
 265              		.cfi_offset 5, -32
 266              		.cfi_offset 6, -28
 267              		.cfi_offset 7, -24
 268              		.cfi_offset 8, -20
 269              		.cfi_offset 9, -16
 270              		.cfi_offset 10, -12
 271              		.cfi_offset 11, -8
 272              		.cfi_offset 14, -4
 273 0004 0546     		mov	r5, r0
 274 0006 85B0     		sub	sp, sp, #20
 275              		.cfi_def_cfa_offset 56
 150:math/pprz_geodetic_float.c **** 
 276              		.loc 1 150 0
 277 0008 1068     		ldr	r0, [r2]	@ float
 278              	.LVL20:
 131:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 279              		.loc 1 131 0
 280 000a 0C46     		mov	r4, r1
 281              	.LVL21:
 282 000c 1646     		mov	r6, r2
 150:math/pprz_geodetic_float.c **** 
 283              		.loc 1 150 0
 284 000e FFF7FEFF 		bl	__aeabi_f2d
 285              	.LVL22:
 286 0012 8046     		mov	r8, r0
 287 0014 7068     		ldr	r0, [r6, #4]	@ float
 288              	.LVL23:
 289 0016 8946     		mov	r9, r1
 290 0018 FFF7FEFF 		bl	__aeabi_f2d
 291              	.LVL24:
 292 001c 8246     		mov	r10, r0
 293 001e B068     		ldr	r0, [r6, #8]	@ float
 294              	.LVL25:
 295 0020 8B46     		mov	fp, r1
 296 0022 FFF7FEFF 		bl	__aeabi_f2d
 297              	.LVL26:
 298 0026 CDE90001 		strd	r0, [sp]
 299              	.LVL27:
 135:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 300              		.loc 1 135 0
 301 002a E069     		ldr	r0, [r4, #28]	@ float
 302              	.LVL28:
 303 002c FFF7FEFF 		bl	__aeabi_f2d
 304              	.LVL29:
 150:math/pprz_geodetic_float.c **** 
 305              		.loc 1 150 0
 306 0030 4246     		mov	r2, r8
 307 0032 4B46     		mov	r3, r9
 308 0034 FFF7FEFF 		bl	__aeabi_dmul
 309              	.LVL30:
 310 0038 0646     		mov	r6, r0
 311              	.LVL31:
 138:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 312              		.loc 1 138 0
 313 003a A06A     		ldr	r0, [r4, #40]	@ float
 150:math/pprz_geodetic_float.c **** 
 314              		.loc 1 150 0
 315 003c 0F46     		mov	r7, r1
 138:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 316              		.loc 1 138 0
 317 003e FFF7FEFF 		bl	__aeabi_f2d
 318              	.LVL32:
 150:math/pprz_geodetic_float.c **** 
 319              		.loc 1 150 0
 320 0042 5246     		mov	r2, r10
 321 0044 5B46     		mov	r3, fp
 322 0046 FFF7FEFF 		bl	__aeabi_dmul
 323              	.LVL33:
 324 004a 0246     		mov	r2, r0
 325 004c 0B46     		mov	r3, r1
 326 004e 3046     		mov	r0, r6
 327 0050 3946     		mov	r1, r7
 328 0052 FFF7FEFF 		bl	__aeabi_dadd
 329              	.LVL34:
 330 0056 0646     		mov	r6, r0
 141:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 331              		.loc 1 141 0
 332 0058 606B     		ldr	r0, [r4, #52]	@ float
 150:math/pprz_geodetic_float.c **** 
 333              		.loc 1 150 0
 334 005a 0F46     		mov	r7, r1
 141:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 335              		.loc 1 141 0
 336 005c FFF7FEFF 		bl	__aeabi_f2d
 337              	.LVL35:
 150:math/pprz_geodetic_float.c **** 
 338              		.loc 1 150 0
 339 0060 DDE90023 		ldrd	r2, [sp]
 340 0064 FFF7FEFF 		bl	__aeabi_dmul
 341              	.LVL36:
 342 0068 0246     		mov	r2, r0
 343 006a 0B46     		mov	r3, r1
 344 006c 3046     		mov	r0, r6
 345 006e 3946     		mov	r1, r7
 346 0070 FFF7FEFF 		bl	__aeabi_dadd
 347              	.LVL37:
 348 0074 CDE90201 		strd	r0, [sp, #8]
 349              	.LVL38:
 136:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 350              		.loc 1 136 0
 351 0078 206A     		ldr	r0, [r4, #32]	@ float
 352              	.LVL39:
 353 007a FFF7FEFF 		bl	__aeabi_f2d
 354              	.LVL40:
 150:math/pprz_geodetic_float.c **** 
 355              		.loc 1 150 0
 356 007e 4246     		mov	r2, r8
 357 0080 4B46     		mov	r3, r9
 358 0082 FFF7FEFF 		bl	__aeabi_dmul
 359              	.LVL41:
 360 0086 0646     		mov	r6, r0
 139:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 361              		.loc 1 139 0
 362 0088 E06A     		ldr	r0, [r4, #44]	@ float
 150:math/pprz_geodetic_float.c **** 
 363              		.loc 1 150 0
 364 008a 0F46     		mov	r7, r1
 139:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 365              		.loc 1 139 0
 366 008c FFF7FEFF 		bl	__aeabi_f2d
 367              	.LVL42:
 150:math/pprz_geodetic_float.c **** 
 368              		.loc 1 150 0
 369 0090 5246     		mov	r2, r10
 370 0092 5B46     		mov	r3, fp
 371 0094 FFF7FEFF 		bl	__aeabi_dmul
 372              	.LVL43:
 373 0098 0246     		mov	r2, r0
 374 009a 0B46     		mov	r3, r1
 375 009c 3046     		mov	r0, r6
 376 009e 3946     		mov	r1, r7
 377 00a0 FFF7FEFF 		bl	__aeabi_dadd
 378              	.LVL44:
 379 00a4 0646     		mov	r6, r0
 142:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 380              		.loc 1 142 0
 381 00a6 A06B     		ldr	r0, [r4, #56]	@ float
 150:math/pprz_geodetic_float.c **** 
 382              		.loc 1 150 0
 383 00a8 0F46     		mov	r7, r1
 142:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 384              		.loc 1 142 0
 385 00aa FFF7FEFF 		bl	__aeabi_f2d
 386              	.LVL45:
 150:math/pprz_geodetic_float.c **** 
 387              		.loc 1 150 0
 388 00ae DDE90023 		ldrd	r2, [sp]
 389 00b2 FFF7FEFF 		bl	__aeabi_dmul
 390              	.LVL46:
 391 00b6 0246     		mov	r2, r0
 392 00b8 0B46     		mov	r3, r1
 393 00ba 3046     		mov	r0, r6
 394 00bc 3946     		mov	r1, r7
 395 00be FFF7FEFF 		bl	__aeabi_dadd
 396              	.LVL47:
 397 00c2 0646     		mov	r6, r0
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 398              		.loc 1 134 0
 399 00c4 A069     		ldr	r0, [r4, #24]	@ float
 400              	.LVL48:
 150:math/pprz_geodetic_float.c **** 
 401              		.loc 1 150 0
 402 00c6 0F46     		mov	r7, r1
 403              	.LVL49:
 134:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 404              		.loc 1 134 0
 405 00c8 FFF7FEFF 		bl	__aeabi_f2d
 406              	.LVL50:
 150:math/pprz_geodetic_float.c **** 
 407              		.loc 1 150 0
 408 00cc 4246     		mov	r2, r8
 409 00ce 4B46     		mov	r3, r9
 410 00d0 FFF7FEFF 		bl	__aeabi_dmul
 411              	.LVL51:
 412 00d4 8046     		mov	r8, r0
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 413              		.loc 1 137 0
 414 00d6 606A     		ldr	r0, [r4, #36]	@ float
 415              	.LVL52:
 150:math/pprz_geodetic_float.c **** 
 416              		.loc 1 150 0
 417 00d8 8946     		mov	r9, r1
 137:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 418              		.loc 1 137 0
 419 00da FFF7FEFF 		bl	__aeabi_f2d
 420              	.LVL53:
 150:math/pprz_geodetic_float.c **** 
 421              		.loc 1 150 0
 422 00de 5246     		mov	r2, r10
 423 00e0 5B46     		mov	r3, fp
 424 00e2 FFF7FEFF 		bl	__aeabi_dmul
 425              	.LVL54:
 426 00e6 0246     		mov	r2, r0
 427 00e8 0B46     		mov	r3, r1
 428 00ea 4046     		mov	r0, r8
 429 00ec 4946     		mov	r1, r9
 430 00ee FFF7FEFF 		bl	__aeabi_dadd
 431              	.LVL55:
 432 00f2 8046     		mov	r8, r0
 140:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 433              		.loc 1 140 0
 434 00f4 206B     		ldr	r0, [r4, #48]	@ float
 150:math/pprz_geodetic_float.c **** 
 435              		.loc 1 150 0
 436 00f6 8946     		mov	r9, r1
 140:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 437              		.loc 1 140 0
 438 00f8 FFF7FEFF 		bl	__aeabi_f2d
 439              	.LVL56:
 150:math/pprz_geodetic_float.c **** 
 440              		.loc 1 150 0
 441 00fc DDE90023 		ldrd	r2, [sp]
 442 0100 FFF7FEFF 		bl	__aeabi_dmul
 443              	.LVL57:
 444 0104 0246     		mov	r2, r0
 445 0106 0B46     		mov	r3, r1
 446 0108 4046     		mov	r0, r8
 447 010a 4946     		mov	r1, r9
 448 010c FFF7FEFF 		bl	__aeabi_dadd
 449              	.LVL58:
 153:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 450              		.loc 1 153 0
 451 0110 FFF7FEFF 		bl	__aeabi_d2f
 452              	.LVL59:
 453 0114 D4ED007A 		flds	s15, [r4]
 454 0118 07EE100A 		fmsr	s14, r0
 455 011c 77EE277A 		fadds	s15, s14, s15
 154:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 456              		.loc 1 154 0
 457 0120 DDE90201 		ldrd	r0, [sp, #8]
 153:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y + def->ecef.y;
 458              		.loc 1 153 0
 459 0124 C5ED007A 		fsts	s15, [r5]
 154:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 460              		.loc 1 154 0
 461 0128 FFF7FEFF 		bl	__aeabi_d2f
 462              	.LVL60:
 463 012c D4ED017A 		flds	s15, [r4, #4]
 464 0130 07EE100A 		fmsr	s14, r0
 465 0134 77EE277A 		fadds	s15, s14, s15
 155:math/pprz_geodetic_float.c **** }
 466              		.loc 1 155 0
 467 0138 3046     		mov	r0, r6
 154:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z + def->ecef.z;
 468              		.loc 1 154 0
 469 013a C5ED017A 		fsts	s15, [r5, #4]
 155:math/pprz_geodetic_float.c **** }
 470              		.loc 1 155 0
 471 013e 3946     		mov	r1, r7
 472 0140 FFF7FEFF 		bl	__aeabi_d2f
 473              	.LVL61:
 474 0144 D4ED027A 		flds	s15, [r4, #8]
 475 0148 07EE100A 		fmsr	s14, r0
 476 014c 77EE277A 		fadds	s15, s14, s15
 477 0150 C5ED027A 		fsts	s15, [r5, #8]
 156:math/pprz_geodetic_float.c **** 
 478              		.loc 1 156 0
 479 0154 05B0     		add	sp, sp, #20
 480              		.cfi_def_cfa_offset 36
 481              		@ sp needed
 482 0156 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 483              		.cfi_endproc
 484              	.LFE48:
 486              		.section	.text.ecef_of_ned_point_f,"ax",%progbits
 487              		.align	1
 488              		.global	ecef_of_ned_point_f
 489              		.thumb
 490              		.thumb_func
 492              	ecef_of_ned_point_f:
 493              	.LFB49:
 159:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 494              		.loc 1 159 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 16
 497              		@ frame_needed = 0, uses_anonymous_args = 0
 498              	.LVL62:
 499 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 500              		.cfi_def_cfa_offset 24
 501              		.cfi_offset 14, -4
 161:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 502              		.loc 1 161 0
 503 0002 D2ED027A 		flds	s15, [r2, #8]
 504 0006 5368     		ldr	r3, [r2, #4]	@ float
 505 0008 0193     		str	r3, [sp, #4]	@ float
 506 000a F1EE677A 		fnegs	s15, s15
 507 000e 1368     		ldr	r3, [r2]	@ float
 508 0010 0293     		str	r3, [sp, #8]	@ float
 162:math/pprz_geodetic_float.c **** }
 509              		.loc 1 162 0
 510 0012 01AA     		add	r2, sp, #4
 511              	.LVL63:
 161:math/pprz_geodetic_float.c ****   ecef_of_enu_point_f(ecef, def, &enu);
 512              		.loc 1 161 0
 513 0014 CDED037A 		fsts	s15, [sp, #12]
 162:math/pprz_geodetic_float.c **** }
 514              		.loc 1 162 0
 515 0018 FFF7FEFF 		bl	ecef_of_enu_point_f
 516              	.LVL64:
 163:math/pprz_geodetic_float.c **** 
 517              		.loc 1 163 0
 518 001c 05B0     		add	sp, sp, #20
 519              		.cfi_def_cfa_offset 4
 520              		@ sp needed
 521 001e 5DF804FB 		ldr	pc, [sp], #4
 522              		.cfi_endproc
 523              	.LFE49:
 525              		.section	.text.ecef_of_enu_vect_f,"ax",%progbits
 526              		.align	1
 527              		.global	ecef_of_enu_vect_f
 528              		.thumb
 529              		.thumb_func
 531              	ecef_of_enu_vect_f:
 532              	.LFB50:
 166:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 533              		.loc 1 166 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 16
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              	.LVL65:
 538 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 539              		.cfi_def_cfa_offset 36
 540              		.cfi_offset 4, -36
 541              		.cfi_offset 5, -32
 542              		.cfi_offset 6, -28
 543              		.cfi_offset 7, -24
 544              		.cfi_offset 8, -20
 545              		.cfi_offset 9, -16
 546              		.cfi_offset 10, -12
 547              		.cfi_offset 11, -8
 548              		.cfi_offset 14, -4
 549 0004 0546     		mov	r5, r0
 550 0006 85B0     		sub	sp, sp, #20
 551              		.cfi_def_cfa_offset 56
 185:math/pprz_geodetic_float.c **** 
 552              		.loc 1 185 0
 553 0008 1068     		ldr	r0, [r2]	@ float
 554              	.LVL66:
 166:math/pprz_geodetic_float.c ****   /* convert used floats to double */
 555              		.loc 1 166 0
 556 000a 0C46     		mov	r4, r1
 557              	.LVL67:
 558 000c 1646     		mov	r6, r2
 185:math/pprz_geodetic_float.c **** 
 559              		.loc 1 185 0
 560 000e FFF7FEFF 		bl	__aeabi_f2d
 561              	.LVL68:
 562 0012 8046     		mov	r8, r0
 563 0014 7068     		ldr	r0, [r6, #4]	@ float
 564              	.LVL69:
 565 0016 8946     		mov	r9, r1
 566 0018 FFF7FEFF 		bl	__aeabi_f2d
 567              	.LVL70:
 568 001c 8246     		mov	r10, r0
 569 001e B068     		ldr	r0, [r6, #8]	@ float
 570              	.LVL71:
 571 0020 8B46     		mov	fp, r1
 572 0022 FFF7FEFF 		bl	__aeabi_f2d
 573              	.LVL72:
 574 0026 CDE90001 		strd	r0, [sp]
 575              	.LVL73:
 170:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[2] = (double) def->ltp_of_ecef.m[2];
 576              		.loc 1 170 0
 577 002a E069     		ldr	r0, [r4, #28]	@ float
 578              	.LVL74:
 579 002c FFF7FEFF 		bl	__aeabi_f2d
 580              	.LVL75:
 185:math/pprz_geodetic_float.c **** 
 581              		.loc 1 185 0
 582 0030 4246     		mov	r2, r8
 583 0032 4B46     		mov	r3, r9
 584 0034 FFF7FEFF 		bl	__aeabi_dmul
 585              	.LVL76:
 586 0038 0646     		mov	r6, r0
 587              	.LVL77:
 173:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 588              		.loc 1 173 0
 589 003a A06A     		ldr	r0, [r4, #40]	@ float
 185:math/pprz_geodetic_float.c **** 
 590              		.loc 1 185 0
 591 003c 0F46     		mov	r7, r1
 173:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[5] = (double) def->ltp_of_ecef.m[5];
 592              		.loc 1 173 0
 593 003e FFF7FEFF 		bl	__aeabi_f2d
 594              	.LVL78:
 185:math/pprz_geodetic_float.c **** 
 595              		.loc 1 185 0
 596 0042 5246     		mov	r2, r10
 597 0044 5B46     		mov	r3, fp
 598 0046 FFF7FEFF 		bl	__aeabi_dmul
 599              	.LVL79:
 600 004a 0246     		mov	r2, r0
 601 004c 0B46     		mov	r3, r1
 602 004e 3046     		mov	r0, r6
 603 0050 3946     		mov	r1, r7
 604 0052 FFF7FEFF 		bl	__aeabi_dadd
 605              	.LVL80:
 606 0056 0646     		mov	r6, r0
 176:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 607              		.loc 1 176 0
 608 0058 606B     		ldr	r0, [r4, #52]	@ float
 185:math/pprz_geodetic_float.c **** 
 609              		.loc 1 185 0
 610 005a 0F46     		mov	r7, r1
 176:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[8] = (double) def->ltp_of_ecef.m[8];
 611              		.loc 1 176 0
 612 005c FFF7FEFF 		bl	__aeabi_f2d
 613              	.LVL81:
 185:math/pprz_geodetic_float.c **** 
 614              		.loc 1 185 0
 615 0060 DDE90023 		ldrd	r2, [sp]
 616 0064 FFF7FEFF 		bl	__aeabi_dmul
 617              	.LVL82:
 618 0068 0246     		mov	r2, r0
 619 006a 0B46     		mov	r3, r1
 620 006c 3046     		mov	r0, r6
 621 006e 3946     		mov	r1, r7
 622 0070 FFF7FEFF 		bl	__aeabi_dadd
 623              	.LVL83:
 624 0074 CDE90201 		strd	r0, [sp, #8]
 625              	.LVL84:
 171:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[3] = (double) def->ltp_of_ecef.m[3];
 626              		.loc 1 171 0
 627 0078 206A     		ldr	r0, [r4, #32]	@ float
 628              	.LVL85:
 629 007a FFF7FEFF 		bl	__aeabi_f2d
 630              	.LVL86:
 185:math/pprz_geodetic_float.c **** 
 631              		.loc 1 185 0
 632 007e 4246     		mov	r2, r8
 633 0080 4B46     		mov	r3, r9
 634 0082 FFF7FEFF 		bl	__aeabi_dmul
 635              	.LVL87:
 636 0086 0646     		mov	r6, r0
 174:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 637              		.loc 1 174 0
 638 0088 E06A     		ldr	r0, [r4, #44]	@ float
 185:math/pprz_geodetic_float.c **** 
 639              		.loc 1 185 0
 640 008a 0F46     		mov	r7, r1
 174:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[6] = (double) def->ltp_of_ecef.m[6];
 641              		.loc 1 174 0
 642 008c FFF7FEFF 		bl	__aeabi_f2d
 643              	.LVL88:
 185:math/pprz_geodetic_float.c **** 
 644              		.loc 1 185 0
 645 0090 5246     		mov	r2, r10
 646 0092 5B46     		mov	r3, fp
 647 0094 FFF7FEFF 		bl	__aeabi_dmul
 648              	.LVL89:
 649 0098 0246     		mov	r2, r0
 650 009a 0B46     		mov	r3, r1
 651 009c 3046     		mov	r0, r6
 652 009e 3946     		mov	r1, r7
 653 00a0 FFF7FEFF 		bl	__aeabi_dadd
 654              	.LVL90:
 655 00a4 0646     		mov	r6, r0
 177:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 656              		.loc 1 177 0
 657 00a6 A06B     		ldr	r0, [r4, #56]	@ float
 185:math/pprz_geodetic_float.c **** 
 658              		.loc 1 185 0
 659 00a8 0F46     		mov	r7, r1
 177:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu_d;
 660              		.loc 1 177 0
 661 00aa FFF7FEFF 		bl	__aeabi_f2d
 662              	.LVL91:
 185:math/pprz_geodetic_float.c **** 
 663              		.loc 1 185 0
 664 00ae DDE90023 		ldrd	r2, [sp]
 665 00b2 FFF7FEFF 		bl	__aeabi_dmul
 666              	.LVL92:
 667 00b6 0246     		mov	r2, r0
 668 00b8 0B46     		mov	r3, r1
 669 00ba 3046     		mov	r0, r6
 670 00bc 3946     		mov	r1, r7
 671 00be FFF7FEFF 		bl	__aeabi_dadd
 672              	.LVL93:
 673 00c2 0646     		mov	r6, r0
 169:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 674              		.loc 1 169 0
 675 00c4 A069     		ldr	r0, [r4, #24]	@ float
 676              	.LVL94:
 185:math/pprz_geodetic_float.c **** 
 677              		.loc 1 185 0
 678 00c6 0F46     		mov	r7, r1
 679              	.LVL95:
 169:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[1] = (double) def->ltp_of_ecef.m[1];
 680              		.loc 1 169 0
 681 00c8 FFF7FEFF 		bl	__aeabi_f2d
 682              	.LVL96:
 185:math/pprz_geodetic_float.c **** 
 683              		.loc 1 185 0
 684 00cc 4246     		mov	r2, r8
 685 00ce 4B46     		mov	r3, r9
 686 00d0 FFF7FEFF 		bl	__aeabi_dmul
 687              	.LVL97:
 688 00d4 8046     		mov	r8, r0
 172:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 689              		.loc 1 172 0
 690 00d6 606A     		ldr	r0, [r4, #36]	@ float
 691              	.LVL98:
 185:math/pprz_geodetic_float.c **** 
 692              		.loc 1 185 0
 693 00d8 8946     		mov	r9, r1
 172:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[4] = (double) def->ltp_of_ecef.m[4];
 694              		.loc 1 172 0
 695 00da FFF7FEFF 		bl	__aeabi_f2d
 696              	.LVL99:
 185:math/pprz_geodetic_float.c **** 
 697              		.loc 1 185 0
 698 00de 5246     		mov	r2, r10
 699 00e0 5B46     		mov	r3, fp
 700 00e2 FFF7FEFF 		bl	__aeabi_dmul
 701              	.LVL100:
 702 00e6 0246     		mov	r2, r0
 703 00e8 0B46     		mov	r3, r1
 704 00ea 4046     		mov	r0, r8
 705 00ec 4946     		mov	r1, r9
 706 00ee FFF7FEFF 		bl	__aeabi_dadd
 707              	.LVL101:
 708 00f2 8046     		mov	r8, r0
 175:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 709              		.loc 1 175 0
 710 00f4 206B     		ldr	r0, [r4, #48]	@ float
 185:math/pprz_geodetic_float.c **** 
 711              		.loc 1 185 0
 712 00f6 8946     		mov	r9, r1
 175:math/pprz_geodetic_float.c ****   ltp_of_ecef_d.m[7] = (double) def->ltp_of_ecef.m[7];
 713              		.loc 1 175 0
 714 00f8 FFF7FEFF 		bl	__aeabi_f2d
 715              	.LVL102:
 185:math/pprz_geodetic_float.c **** 
 716              		.loc 1 185 0
 717 00fc DDE90023 		ldrd	r2, [sp]
 718 0100 FFF7FEFF 		bl	__aeabi_dmul
 719              	.LVL103:
 720 0104 0246     		mov	r2, r0
 721 0106 0B46     		mov	r3, r1
 722 0108 4046     		mov	r0, r8
 723 010a 4946     		mov	r1, r9
 724 010c FFF7FEFF 		bl	__aeabi_dadd
 725              	.LVL104:
 188:math/pprz_geodetic_float.c ****   ecef->y = (float) ecef_d.y;
 726              		.loc 1 188 0
 727 0110 FFF7FEFF 		bl	__aeabi_d2f
 728              	.LVL105:
 729 0114 2860     		str	r0, [r5]	@ float
 189:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 730              		.loc 1 189 0
 731 0116 DDE90201 		ldrd	r0, [sp, #8]
 732 011a FFF7FEFF 		bl	__aeabi_d2f
 733              	.LVL106:
 190:math/pprz_geodetic_float.c **** }
 734              		.loc 1 190 0
 735 011e 3946     		mov	r1, r7
 189:math/pprz_geodetic_float.c ****   ecef->z = (float) ecef_d.z;
 736              		.loc 1 189 0
 737 0120 6860     		str	r0, [r5, #4]	@ float
 190:math/pprz_geodetic_float.c **** }
 738              		.loc 1 190 0
 739 0122 3046     		mov	r0, r6
 740 0124 FFF7FEFF 		bl	__aeabi_d2f
 741              	.LVL107:
 742 0128 A860     		str	r0, [r5, #8]	@ float
 191:math/pprz_geodetic_float.c **** 
 743              		.loc 1 191 0
 744 012a 05B0     		add	sp, sp, #20
 745              		.cfi_def_cfa_offset 36
 746              		@ sp needed
 747 012c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 748              		.cfi_endproc
 749              	.LFE50:
 751              		.section	.text.ecef_of_ned_vect_f,"ax",%progbits
 752              		.align	1
 753              		.global	ecef_of_ned_vect_f
 754              		.thumb
 755              		.thumb_func
 757              	ecef_of_ned_vect_f:
 758              	.LFB51:
 194:math/pprz_geodetic_float.c ****   struct EnuCoor_f enu;
 759              		.loc 1 194 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 16
 762              		@ frame_needed = 0, uses_anonymous_args = 0
 763              	.LVL108:
 764 0000 1FB5     		push	{r0, r1, r2, r3, r4, lr}
 765              		.cfi_def_cfa_offset 24
 766              		.cfi_offset 14, -4
 196:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 767              		.loc 1 196 0
 768 0002 D2ED027A 		flds	s15, [r2, #8]
 769 0006 5368     		ldr	r3, [r2, #4]	@ float
 770 0008 0193     		str	r3, [sp, #4]	@ float
 771 000a F1EE677A 		fnegs	s15, s15
 772 000e 1368     		ldr	r3, [r2]	@ float
 773 0010 0293     		str	r3, [sp, #8]	@ float
 197:math/pprz_geodetic_float.c **** }
 774              		.loc 1 197 0
 775 0012 01AA     		add	r2, sp, #4
 776              	.LVL109:
 196:math/pprz_geodetic_float.c ****   ecef_of_enu_vect_f(ecef, def, &enu);
 777              		.loc 1 196 0
 778 0014 CDED037A 		fsts	s15, [sp, #12]
 197:math/pprz_geodetic_float.c **** }
 779              		.loc 1 197 0
 780 0018 FFF7FEFF 		bl	ecef_of_enu_vect_f
 781              	.LVL110:
 198:math/pprz_geodetic_float.c **** /* end use double versions */
 782              		.loc 1 198 0
 783 001c 05B0     		add	sp, sp, #20
 784              		.cfi_def_cfa_offset 4
 785              		@ sp needed
 786 001e 5DF804FB 		ldr	pc, [sp], #4
 787              		.cfi_endproc
 788              	.LFE51:
 790              		.section	.text.lla_of_ecef_f,"ax",%progbits
 791              		.align	1
 792              		.global	lla_of_ecef_f
 793              		.thumb
 794              		.thumb_func
 796              	lla_of_ecef_f:
 797              	.LFB52:
 206:math/pprz_geodetic_float.c **** 
 798              		.loc 1 206 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              	.LVL111:
 803 0000 38B5     		push	{r3, r4, r5, lr}
 804              		.cfi_def_cfa_offset 16
 805              		.cfi_offset 3, -16
 806              		.cfi_offset 4, -12
 807              		.cfi_offset 5, -8
 808              		.cfi_offset 14, -4
 809 0002 2DED088B 		fstmfdd	sp!, {d8, d9, d10, d11}
 810              		.cfi_def_cfa_offset 48
 811              		.cfi_offset 80, -48
 812              		.cfi_offset 81, -44
 813              		.cfi_offset 82, -40
 814              		.cfi_offset 83, -36
 815              		.cfi_offset 84, -32
 816              		.cfi_offset 85, -28
 817              		.cfi_offset 86, -24
 818              		.cfi_offset 87, -20
 220:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 819              		.loc 1 220 0
 820 0006 91ED01BA 		flds	s22, [r1, #4]
 821 000a D1ED007A 		flds	s15, [r1]
 219:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 822              		.loc 1 219 0
 823 000e 91ED029A 		flds	s18, [r1, #8]
 223:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 824              		.loc 1 223 0
 825 0012 9FED67AA 		flds	s20, .L13+8
 224:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 826              		.loc 1 224 0
 827 0016 DFED678A 		flds	s17, .L13+12
 220:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 828              		.loc 1 220 0
 829 001a 2BEE0BBA 		fmuls	s22, s22, s22
 206:math/pprz_geodetic_float.c **** 
 830              		.loc 1 206 0
 831 001e 0546     		mov	r5, r0
 220:math/pprz_geodetic_float.c ****   const float r = sqrtf(r2);
 832              		.loc 1 220 0
 833 0020 A7EEA7BA 		vfma.f32	s22, s15, s15
 206:math/pprz_geodetic_float.c **** 
 834              		.loc 1 206 0
 835 0024 0C46     		mov	r4, r1
 219:math/pprz_geodetic_float.c ****   const float r2 = in->x * in->x + in->y * in->y;
 836              		.loc 1 219 0
 837 0026 29EE099A 		fmuls	s18, s18, s18
 838              	.LVL112:
 221:math/pprz_geodetic_float.c ****   const float F = 54.*b2 * z2;
 839              		.loc 1 221 0
 840 002a 1BEE100A 		fmrs	r0, s22
 841              	.LVL113:
 842 002e FFF7FEFF 		bl	sqrtf
 843              	.LVL114:
 844 0032 09EE900A 		fmsr	s19, r0
 845              	.LVL115:
 222:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 846              		.loc 1 222 0
 847 0036 19EE100A 		fmrs	r0, s18
 848              	.LVL116:
 849 003a FFF7FEFF 		bl	__aeabi_f2d
 850              	.LVL117:
 851 003e 5AA3     		adr	r3, .L13
 852 0040 D3E90023 		ldrd	r2, [r3]
 853 0044 FFF7FEFF 		bl	__aeabi_dmul
 854              	.LVL118:
 855 0048 FFF7FEFF 		bl	__aeabi_d2f
 856              	.LVL119:
 223:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 857              		.loc 1 223 0
 858 004c B0EE4B8A 		fcpys	s16, s22
 859 0050 A9EE0A8A 		vfma.f32	s16, s18, s20
 222:math/pprz_geodetic_float.c ****   const float G = r2 + (1 - e2) * z2 - e2 * E2;
 860              		.loc 1 222 0
 861 0054 0BEE900A 		fmsr	s23, r0
 862              	.LVL120:
 223:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 863              		.loc 1 223 0
 864 0058 DFED577A 		flds	s15, .L13+16
 224:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 865              		.loc 1 224 0
 866 005c 6BEEA88A 		fmuls	s17, s23, s17
 223:math/pprz_geodetic_float.c ****   const float c = (e2 * e2 * F * r2) / (G * G * G);
 867              		.loc 1 223 0
 868 0060 38EE678A 		fsubs	s16, s16, s15
 869              	.LVL121:
 224:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 870              		.loc 1 224 0
 871 0064 68EE8B7A 		fmuls	s15, s17, s22
 872 0068 68EE088A 		fmuls	s17, s16, s16
 225:math/pprz_geodetic_float.c ****   const float s1 = 1 + s + 1 / s;
 873              		.loc 1 225 0
 874 006c F7EE00AA 		fconsts	s21, #112
 224:math/pprz_geodetic_float.c ****   const float s = powf((1 + c + sqrtf(c * c + 2 * c)), 1. / 3.);
 875              		.loc 1 224 0
 876 0070 68EE888A 		fmuls	s17, s17, s16
 877 0074 C7EEA88A 		fdivs	s17, s15, s17
 878              	.LVL122:
 225:math/pprz_geodetic_float.c ****   const float s1 = 1 + s + 1 / s;
 879              		.loc 1 225 0
 880 0078 78EEA87A 		fadds	s15, s17, s17
 881 007c E8EEA87A 		vfma.f32	s15, s17, s17
 882 0080 17EE900A 		fmrs	r0, s15
 883              	.LVL123:
 884 0084 FFF7FEFF 		bl	sqrtf
 885              	.LVL124:
 886 0088 78EEAA8A 		fadds	s17, s17, s21
 887              	.LVL125:
 888 008c 07EE900A 		fmsr	s15, r0
 889 0090 78EEA77A 		fadds	s15, s17, s15
 890 0094 4949     		ldr	r1, .L13+20
 891 0096 17EE900A 		fmrs	r0, s15
 892 009a FFF7FEFF 		bl	powf
 893              	.LVL126:
 894 009e 07EE900A 		fmsr	s15, r0
 895              	.LVL127:
 226:math/pprz_geodetic_float.c ****   const float P = F / (3 * s1 * s1 * G * G);
 896              		.loc 1 226 0
 897 00a2 37EEAA7A 		fadds	s14, s15, s21
 898 00a6 CAEEA77A 		fdivs	s15, s21, s15
 899 00aa 77EE277A 		fadds	s15, s14, s15
 900              	.LVL128:
 227:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 901              		.loc 1 227 0
 902 00ae B0EE087A 		fconsts	s14, #8
 903 00b2 27EE877A 		fmuls	s14, s15, s14
 904 00b6 67EE277A 		fmuls	s15, s14, s15
 905              	.LVL129:
 228:math/pprz_geodetic_float.c ****   const float ro = -(e2 * P * r) / (1 + Q) + sqrtf((a * a / 2) * (1 + 1 / Q) - ((1 - e2) * P * z2) 
 906              		.loc 1 228 0
 907 00ba B0EE6A7A 		fcpys	s14, s21
 227:math/pprz_geodetic_float.c ****   const float Q = sqrtf(1 + 2 * e2 * e2 * P);
 908              		.loc 1 227 0
 909 00be 67EE887A 		fmuls	s15, s15, s16
 910 00c2 67EE887A 		fmuls	s15, s15, s16
 911 00c6 8BEEA78A 		fdivs	s16, s23, s15
 912              	.LVL130:
 228:math/pprz_geodetic_float.c ****   const float ro = -(e2 * P * r) / (1 + Q) + sqrtf((a * a / 2) * (1 + 1 / Q) - ((1 - e2) * P * z2) 
 913              		.loc 1 228 0
 914 00ca DFED3D7A 		flds	s15, .L13+24
 915 00ce A8EE277A 		vfma.f32	s14, s16, s15
 916 00d2 17EE100A 		fmrs	r0, s14
 917              	.LVL131:
 918 00d6 FFF7FEFF 		bl	sqrtf
 919              	.LVL132:
 920 00da 06EE900A 		fmsr	s13, r0
 921              	.LVL133:
 229:math/pprz_geodetic_float.c ****                    (1 + Q)) - P * r2 / 2);
 922              		.loc 1 229 0
 923 00de 68EE0A7A 		fmuls	s15, s16, s20
 924 00e2 76EEAA8A 		fadds	s17, s13, s21
 925 00e6 8AEEA66A 		fdivs	s12, s21, s13
 926 00ea 27EE897A 		fmuls	s14, s15, s18
 927 00ee 66EEA87A 		fmuls	s15, s13, s17
 928 00f2 36EE2A6A 		fadds	s12, s12, s21
 929 00f6 C7EE277A 		fdivs	s15, s14, s15
 930 00fa 9FED327A 		flds	s14, .L13+28
 931 00fe D6EE077A 		vfnms.f32	s15, s12, s14
 932 0102 2BEE48BA 		fnmuls	s22, s22, s16
 933              	.LVL134:
 934 0106 B6EE007A 		fconsts	s14, #96
 935 010a EBEE077A 		vfma.f32	s15, s22, s14
 936 010e 17EE900A 		fmrs	r0, s15
 937              	.LVL135:
 938 0112 FFF7FEFF 		bl	sqrtf
 939              	.LVL136:
 940 0116 DFED2C7A 		flds	s15, .L13+32
 941 011a 28EE278A 		fmuls	s16, s16, s15
 942              	.LVL137:
 943 011e 07EE100A 		fmsr	s14, r0
 944 0122 29EEC88A 		fnmuls	s16, s19, s16
 945 0126 88EE288A 		fdivs	s16, s16, s17
 946 012a 38EE078A 		fadds	s16, s16, s14
 231:math/pprz_geodetic_float.c ****   const float U = sqrtf(tmp + z2);
 947              		.loc 1 231 0
 948 012e B0EE697A 		fcpys	s14, s19
 949 0132 A8EE677A 		vfms.f32	s14, s16, s15
 950 0136 27EE078A 		fmuls	s16, s14, s14
 951              	.LVL138:
 232:math/pprz_geodetic_float.c ****   const float V = sqrtf(tmp + (1 - e2) * z2);
 952              		.loc 1 232 0
 953 013a 78EE097A 		fadds	s15, s16, s18
 954 013e 17EE900A 		fmrs	r0, s15
 955 0142 FFF7FEFF 		bl	sqrtf
 956              	.LVL139:
 233:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 957              		.loc 1 233 0
 958 0146 A9EE0A8A 		vfma.f32	s16, s18, s20
 959              	.LVL140:
 232:math/pprz_geodetic_float.c ****   const float V = sqrtf(tmp + (1 - e2) * z2);
 960              		.loc 1 232 0
 961 014a 08EE900A 		fmsr	s17, r0
 962              	.LVL141:
 233:math/pprz_geodetic_float.c ****   const float zo = (b2 * in->z) / (a * V);
 963              		.loc 1 233 0
 964 014e 18EE100A 		fmrs	r0, s16
 965              	.LVL142:
 966 0152 FFF7FEFF 		bl	sqrtf
 967              	.LVL143:
 234:math/pprz_geodetic_float.c **** 
 968              		.loc 1 234 0
 969 0156 9FED1D7A 		flds	s14, .L13+36
 970 015a D4ED026A 		flds	s13, [r4, #8]
 971 015e 07EE900A 		fmsr	s15, r0
 972 0162 27EE876A 		fmuls	s12, s15, s14
 973              	.LVL144:
 236:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 974              		.loc 1 236 0
 975 0166 9FED1A7A 		flds	s14, .L13+40
 976 016a C7EE067A 		fdivs	s15, s14, s12
 234:math/pprz_geodetic_float.c **** 
 977              		.loc 1 234 0
 978 016e 26EE877A 		fmuls	s14, s13, s14
 236:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 979              		.loc 1 236 0
 980 0172 7AEEE77A 		fsubs	s15, s21, s15
 234:math/pprz_geodetic_float.c **** 
 981              		.loc 1 234 0
 982 0176 87EE067A 		fdivs	s14, s14, s12
 983              	.LVL145:
 236:math/pprz_geodetic_float.c ****   out->lat = atanf((in->z + ep2 * zo) / r);
 984              		.loc 1 236 0
 985 017a 68EEA77A 		fmuls	s15, s17, s15
 986 017e C5ED027A 		fsts	s15, [r5, #8]
 237:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 987              		.loc 1 237 0
 988 0182 DFED147A 		flds	s15, .L13+44
 989 0186 E7EE276A 		vfma.f32	s13, s14, s15
 990 018a C6EEA97A 		fdivs	s15, s13, s19
 991 018e 17EE900A 		fmrs	r0, s15
 992              	.LVL146:
 993 0192 FFF7FEFF 		bl	atanf
 994              	.LVL147:
 238:math/pprz_geodetic_float.c **** 
 995              		.loc 1 238 0
 996 0196 2168     		ldr	r1, [r4]	@ float
 237:math/pprz_geodetic_float.c ****   out->lon = atan2f(in->y, in->x);
 997              		.loc 1 237 0
 998 0198 2860     		str	r0, [r5]	@ float
 238:math/pprz_geodetic_float.c **** 
 999              		.loc 1 238 0
 1000 019a 6068     		ldr	r0, [r4, #4]	@ float
 1001 019c FFF7FEFF 		bl	atan2f
 1002              	.LVL148:
 240:math/pprz_geodetic_float.c **** 
 1003              		.loc 1 240 0
 1004 01a0 BDEC088B 		fldmfdd	sp!, {d8-d11}
 1005              		.cfi_restore 86
 1006              		.cfi_restore 87
 1007              		.cfi_restore 84
 1008              		.cfi_restore 85
 1009              		.cfi_restore 82
 1010              		.cfi_restore 83
 1011              		.cfi_restore 80
 1012              		.cfi_restore 81
 1013              		.cfi_def_cfa_offset 16
 1014              	.LVL149:
 238:math/pprz_geodetic_float.c **** 
 1015              		.loc 1 238 0
 1016 01a4 6860     		str	r0, [r5, #4]	@ float
 240:math/pprz_geodetic_float.c **** 
 1017              		.loc 1 240 0
 1018 01a6 38BD     		pop	{r3, r4, r5, pc}
 1019              	.LVL150:
 1020              	.L14:
 1021              		.align	3
 1022              	.L13:
 1023 01a8 000000DC 		.word	-603979776
 1024 01ac 3E021F43 		.word	1126105662
 1025 01b0 47497E3F 		.word	1065240903
 1026 01b4 70F73B38 		.word	943454064
 1027 01b8 8B53D94E 		.word	1322865547
 1028 01bc ABAAAA3E 		.word	1051372203
 1029 01c0 70F7BB38 		.word	951842672
 1030 01c4 CAFE9355 		.word	1435762378
 1031 01c8 875CDB3B 		.word	1004231815
 1032 01cc 32A5C24A 		.word	1254270258
 1033 01d0 2A011356 		.word	1444086058
 1034 01d4 FFD6DC3B 		.word	1004328703
 1035              		.cfi_endproc
 1036              	.LFE52:
 1038              		.section	.text.ltp_def_from_ecef_f,"ax",%progbits
 1039              		.align	1
 1040              		.global	ltp_def_from_ecef_f
 1041              		.thumb
 1042              		.thumb_func
 1044              	ltp_def_from_ecef_f:
 1045              	.LFB40:
  37:math/pprz_geodetic_float.c **** 
 1046              		.loc 1 37 0
 1047              		.cfi_startproc
 1048              		@ args = 0, pretend = 0, frame = 0
 1049              		@ frame_needed = 0, uses_anonymous_args = 0
 1050              	.LVL151:
 1051 0000 38B5     		push	{r3, r4, r5, lr}
 1052              		.cfi_def_cfa_offset 16
 1053              		.cfi_offset 3, -16
 1054              		.cfi_offset 4, -12
 1055              		.cfi_offset 5, -8
 1056              		.cfi_offset 14, -4
  40:math/pprz_geodetic_float.c ****   /* compute the lla representation of the origin */
 1057              		.loc 1 40 0
 1058 0002 0B68     		ldr	r3, [r1]	@ float
  37:math/pprz_geodetic_float.c **** 
 1059              		.loc 1 37 0
 1060 0004 2DED048B 		fstmfdd	sp!, {d8, d9}
 1061              		.cfi_def_cfa_offset 32
 1062              		.cfi_offset 80, -32
 1063              		.cfi_offset 81, -28
 1064              		.cfi_offset 82, -24
 1065              		.cfi_offset 83, -20
  40:math/pprz_geodetic_float.c ****   /* compute the lla representation of the origin */
 1066              		.loc 1 40 0
 1067 0008 0360     		str	r3, [r0]	@ float
 1068 000a 4B68     		ldr	r3, [r1, #4]	@ float
 1069 000c 4360     		str	r3, [r0, #4]	@ float
  37:math/pprz_geodetic_float.c **** 
 1070              		.loc 1 37 0
 1071 000e 0446     		mov	r4, r0
  40:math/pprz_geodetic_float.c ****   /* compute the lla representation of the origin */
 1072              		.loc 1 40 0
 1073 0010 8B68     		ldr	r3, [r1, #8]	@ float
 1074 0012 8360     		str	r3, [r0, #8]	@ float
  42:math/pprz_geodetic_float.c ****   /* store the rotation matrix                    */
 1075              		.loc 1 42 0
 1076 0014 2146     		mov	r1, r4
 1077              	.LVL152:
 1078 0016 0C30     		adds	r0, r0, #12
 1079              	.LVL153:
 1080 0018 FFF7FEFF 		bl	lla_of_ecef_f
 1081              	.LVL154:
  44:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1082              		.loc 1 44 0
 1083 001c E568     		ldr	r5, [r4, #12]	@ float
 1084 001e 2846     		mov	r0, r5	@ float
 1085 0020 FFF7FEFF 		bl	sinf
 1086              	.LVL155:
 1087 0024 09EE100A 		fmsr	s18, r0
 1088              	.LVL156:
  45:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1089              		.loc 1 45 0
 1090 0028 2846     		mov	r0, r5	@ float
 1091              	.LVL157:
 1092 002a FFF7FEFF 		bl	cosf
 1093              	.LVL158:
  46:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1094              		.loc 1 46 0
 1095 002e 2569     		ldr	r5, [r4, #16]	@ float
  45:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1096              		.loc 1 45 0
 1097 0030 08EE100A 		fmsr	s16, r0
 1098              	.LVL159:
  46:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1099              		.loc 1 46 0
 1100 0034 2846     		mov	r0, r5	@ float
 1101              	.LVL160:
 1102 0036 FFF7FEFF 		bl	sinf
 1103              	.LVL161:
 1104 003a 08EE900A 		fmsr	s17, r0
 1105              	.LVL162:
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1106              		.loc 1 47 0
 1107 003e 2846     		mov	r0, r5	@ float
 1108              	.LVL163:
 1109 0040 FFF7FEFF 		bl	cosf
 1110              	.LVL164:
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1111              		.loc 1 48 0
 1112 0044 B1EE687A 		fnegs	s14, s17
  47:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[0] = -sin_lon;
 1113              		.loc 1 47 0
 1114 0048 07EE900A 		fmsr	s15, r0
 1115              	.LVL165:
  48:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1116              		.loc 1 48 0
 1117 004c 84ED067A 		fsts	s14, [r4, #24]
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1118              		.loc 1 52 0
 1119 0050 B1EE497A 		fnegs	s14, s18
 1120 0054 67EE276A 		fmuls	s13, s14, s15
  54:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
 1121              		.loc 1 54 0
 1122 0058 84ED0B8A 		fsts	s16, [r4, #44]
  55:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1123              		.loc 1 55 0
 1124 005c 68EE277A 		fmuls	s15, s16, s15
  56:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1125              		.loc 1 56 0
 1126 0060 28EE288A 		fmuls	s16, s16, s17
 1127              	.LVL166:
  53:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1128              		.loc 1 53 0
 1129 0064 27EE287A 		fmuls	s14, s14, s17
  56:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1130              		.loc 1 56 0
 1131 0068 84ED0D8A 		fsts	s16, [r4, #52]
  57:math/pprz_geodetic_float.c **** 
 1132              		.loc 1 57 0
 1133 006c 84ED0E9A 		fsts	s18, [r4, #56]
  59:math/pprz_geodetic_float.c **** 
 1134              		.loc 1 59 0
 1135 0070 BDEC048B 		fldmfdd	sp!, {d8-d9}
 1136              		.cfi_restore 82
 1137              		.cfi_restore 83
 1138              		.cfi_restore 80
 1139              		.cfi_restore 81
 1140              		.cfi_def_cfa_offset 16
 1141              	.LVL167:
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1142              		.loc 1 51 0
 1143 0074 0023     		movs	r3, #0
  49:math/pprz_geodetic_float.c ****   /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_system#From_ECEF_to_ENU */
 1144              		.loc 1 49 0
 1145 0076 E061     		str	r0, [r4, #28]	@ float
  51:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1146              		.loc 1 51 0
 1147 0078 2362     		str	r3, [r4, #32]	@ float
  52:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1148              		.loc 1 52 0
 1149 007a C4ED096A 		fsts	s13, [r4, #36]
  53:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1150              		.loc 1 53 0
 1151 007e 84ED0A7A 		fsts	s14, [r4, #40]
  55:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1152              		.loc 1 55 0
 1153 0082 C4ED0C7A 		fsts	s15, [r4, #48]
  59:math/pprz_geodetic_float.c **** 
 1154              		.loc 1 59 0
 1155 0086 38BD     		pop	{r3, r4, r5, pc}
 1156              		.cfi_endproc
 1157              	.LFE40:
 1159              		.section	.text.ecef_of_lla_f,"ax",%progbits
 1160              		.align	1
 1161              		.global	ecef_of_lla_f
 1162              		.thumb
 1163              		.thumb_func
 1165              	ecef_of_lla_f:
 1166              	.LFB53:
 243:math/pprz_geodetic_float.c **** 
 1167              		.loc 1 243 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              	.LVL168:
 1172 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1173              		.cfi_def_cfa_offset 24
 1174              		.cfi_offset 3, -24
 1175              		.cfi_offset 4, -20
 1176              		.cfi_offset 5, -16
 1177              		.cfi_offset 6, -12
 1178              		.cfi_offset 7, -8
 1179              		.cfi_offset 14, -4
 250:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1180              		.loc 1 250 0
 1181 0002 0E68     		ldr	r6, [r1]	@ float
 243:math/pprz_geodetic_float.c **** 
 1182              		.loc 1 243 0
 1183 0004 2DED068B 		fstmfdd	sp!, {d8, d9, d10}
 1184              		.cfi_def_cfa_offset 48
 1185              		.cfi_offset 80, -48
 1186              		.cfi_offset 81, -44
 1187              		.cfi_offset 82, -40
 1188              		.cfi_offset 83, -36
 1189              		.cfi_offset 84, -32
 1190              		.cfi_offset 85, -28
 243:math/pprz_geodetic_float.c **** 
 1191              		.loc 1 243 0
 1192 0008 0446     		mov	r4, r0
 250:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1193              		.loc 1 250 0
 1194 000a 3046     		mov	r0, r6	@ float
 1195              	.LVL169:
 243:math/pprz_geodetic_float.c **** 
 1196              		.loc 1 243 0
 1197 000c 0D46     		mov	r5, r1
 250:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(in->lat);
 1198              		.loc 1 250 0
 1199 000e FFF7FEFF 		bl	sinf
 1200              	.LVL170:
 1201 0012 08EE100A 		fmsr	s16, r0
 1202              	.LVL171:
 251:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 1203              		.loc 1 251 0
 1204 0016 3046     		mov	r0, r6	@ float
 1205              	.LVL172:
 1206 0018 FFF7FEFF 		bl	cosf
 1207              	.LVL173:
 252:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 1208              		.loc 1 252 0
 1209 001c 6E68     		ldr	r6, [r5, #4]	@ float
 251:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(in->lon);
 1210              		.loc 1 251 0
 1211 001e 0AEE100A 		fmsr	s20, r0
 1212              	.LVL174:
 252:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(in->lon);
 1213              		.loc 1 252 0
 1214 0022 3046     		mov	r0, r6	@ float
 1215              	.LVL175:
 1216 0024 FFF7FEFF 		bl	sinf
 1217              	.LVL176:
 1218 0028 09EE900A 		fmsr	s19, r0
 1219              	.LVL177:
 253:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2 * sin_lat * sin_lat);
 1220              		.loc 1 253 0
 1221 002c 3046     		mov	r0, r6	@ float
 1222              	.LVL178:
 1223 002e FFF7FEFF 		bl	cosf
 1224              	.LVL179:
 1225 0032 DFED277A 		flds	s15, .L17+8
 1226 0036 67EEC87A 		fnmuls	s15, s15, s16
 254:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 1227              		.loc 1 254 0
 1228 003a B7EE007A 		fconsts	s14, #112
 1229 003e A7EE887A 		vfma.f32	s14, s15, s16
 253:math/pprz_geodetic_float.c ****   const float chi = sqrtf(1. - e2 * sin_lat * sin_lat);
 1230              		.loc 1 253 0
 1231 0042 08EE900A 		fmsr	s17, r0
 1232              	.LVL180:
 254:math/pprz_geodetic_float.c ****   const float a_chi = a / chi;
 1233              		.loc 1 254 0
 1234 0046 17EE100A 		fmrs	r0, s14
 1235              	.LVL181:
 1236 004a FFF7FEFF 		bl	sqrtf
 1237              	.LVL182:
 255:math/pprz_geodetic_float.c **** 
 1238              		.loc 1 255 0
 1239 004e 9FED217A 		flds	s14, .L17+12
 257:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1240              		.loc 1 257 0
 1241 0052 95ED029A 		flds	s18, [r5, #8]
 255:math/pprz_geodetic_float.c **** 
 1242              		.loc 1 255 0
 1243 0056 07EE900A 		fmsr	s15, r0
 1244 005a 87EE277A 		fdivs	s14, s14, s15
 1245              	.LVL183:
 257:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1246              		.loc 1 257 0
 1247 005e 77EE097A 		fadds	s15, s14, s18
 259:math/pprz_geodetic_float.c **** }
 1248              		.loc 1 259 0
 1249 0062 17EE100A 		fmrs	r0, s14
 1250              	.LVL184:
 257:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1251              		.loc 1 257 0
 1252 0066 67EE8A7A 		fmuls	s15, s15, s20
 1253 006a 67EEA88A 		fmuls	s17, s15, s17
 1254              	.LVL185:
 258:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 1255              		.loc 1 258 0
 1256 006e 67EEA97A 		fmuls	s15, s15, s19
 257:math/pprz_geodetic_float.c ****   out->y = (a_chi + in->alt) * cos_lat * sin_lon;
 1257              		.loc 1 257 0
 1258 0072 C4ED008A 		fsts	s17, [r4]
 258:math/pprz_geodetic_float.c ****   out->z = (a_chi * (1. - e2) + in->alt) * sin_lat;
 1259              		.loc 1 258 0
 1260 0076 C4ED017A 		fsts	s15, [r4, #4]
 259:math/pprz_geodetic_float.c **** }
 1261              		.loc 1 259 0
 1262 007a FFF7FEFF 		bl	__aeabi_f2d
 1263              	.LVL186:
 1264 007e 12A3     		adr	r3, .L17
 1265 0080 D3E90023 		ldrd	r2, [r3]
 1266 0084 FFF7FEFF 		bl	__aeabi_dmul
 1267              	.LVL187:
 1268 0088 0646     		mov	r6, r0
 1269 008a 19EE100A 		fmrs	r0, s18
 1270 008e 0F46     		mov	r7, r1
 1271 0090 FFF7FEFF 		bl	__aeabi_f2d
 1272              	.LVL188:
 1273 0094 0246     		mov	r2, r0
 1274 0096 0B46     		mov	r3, r1
 1275 0098 3046     		mov	r0, r6
 1276 009a 3946     		mov	r1, r7
 1277 009c FFF7FEFF 		bl	__aeabi_dadd
 1278              	.LVL189:
 1279 00a0 0646     		mov	r6, r0
 1280 00a2 18EE100A 		fmrs	r0, s16
 1281 00a6 0F46     		mov	r7, r1
 1282 00a8 FFF7FEFF 		bl	__aeabi_f2d
 1283              	.LVL190:
 1284 00ac 0246     		mov	r2, r0
 1285 00ae 0B46     		mov	r3, r1
 1286 00b0 3046     		mov	r0, r6
 1287 00b2 3946     		mov	r1, r7
 1288 00b4 FFF7FEFF 		bl	__aeabi_dmul
 1289              	.LVL191:
 1290 00b8 FFF7FEFF 		bl	__aeabi_d2f
 1291              	.LVL192:
 260:math/pprz_geodetic_float.c **** 
 1292              		.loc 1 260 0
 1293 00bc BDEC068B 		fldmfdd	sp!, {d8-d10}
 1294              		.cfi_restore 84
 1295              		.cfi_restore 85
 1296              		.cfi_restore 82
 1297              		.cfi_restore 83
 1298              		.cfi_restore 80
 1299              		.cfi_restore 81
 1300              		.cfi_def_cfa_offset 24
 1301              	.LVL193:
 259:math/pprz_geodetic_float.c **** }
 1302              		.loc 1 259 0
 1303 00c0 A060     		str	r0, [r4, #8]	@ float
 260:math/pprz_geodetic_float.c **** 
 1304              		.loc 1 260 0
 1305 00c2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1306              	.LVL194:
 1307              	.L18:
 1308 00c4 AFF30080 		.align	3
 1309              	.L17:
 1310 00c8 000040DE 		.word	-566231040
 1311 00cc 28C9EF3F 		.word	1072679208
 1312 00d0 875CDB3B 		.word	1004231815
 1313 00d4 32A5C24A 		.word	1254270258
 1314              		.cfi_endproc
 1315              	.LFE53:
 1317              		.section	.text.ltp_def_from_lla_f,"ax",%progbits
 1318              		.align	1
 1319              		.global	ltp_def_from_lla_f
 1320              		.thumb
 1321              		.thumb_func
 1323              	ltp_def_from_lla_f:
 1324              	.LFB41:
  62:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane */
 1325              		.loc 1 62 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              	.LVL195:
 1330 0000 38B5     		push	{r3, r4, r5, lr}
 1331              		.cfi_def_cfa_offset 16
 1332              		.cfi_offset 3, -16
 1333              		.cfi_offset 4, -12
 1334              		.cfi_offset 5, -8
 1335              		.cfi_offset 14, -4
  64:math/pprz_geodetic_float.c ****   /* compute the ecef representation of the origin */
 1336              		.loc 1 64 0
 1337 0002 0B68     		ldr	r3, [r1]	@ float
  62:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane */
 1338              		.loc 1 62 0
 1339 0004 2DED048B 		fstmfdd	sp!, {d8, d9}
 1340              		.cfi_def_cfa_offset 32
 1341              		.cfi_offset 80, -32
 1342              		.cfi_offset 81, -28
 1343              		.cfi_offset 82, -24
 1344              		.cfi_offset 83, -20
  64:math/pprz_geodetic_float.c ****   /* compute the ecef representation of the origin */
 1345              		.loc 1 64 0
 1346 0008 C360     		str	r3, [r0, #12]	@ float
 1347 000a 4B68     		ldr	r3, [r1, #4]	@ float
 1348 000c 0361     		str	r3, [r0, #16]	@ float
  62:math/pprz_geodetic_float.c ****   /* store the origin of the tangeant plane */
 1349              		.loc 1 62 0
 1350 000e 0446     		mov	r4, r0
  64:math/pprz_geodetic_float.c ****   /* compute the ecef representation of the origin */
 1351              		.loc 1 64 0
 1352 0010 8B68     		ldr	r3, [r1, #8]	@ float
 1353 0012 4361     		str	r3, [r0, #20]	@ float
  66:math/pprz_geodetic_float.c **** 
 1354              		.loc 1 66 0
 1355 0014 00F10C01 		add	r1, r0, #12
 1356              	.LVL196:
 1357 0018 FFF7FEFF 		bl	ecef_of_lla_f
 1358              	.LVL197:
  69:math/pprz_geodetic_float.c ****   const float cos_lat = cosf(def->lla.lat);
 1359              		.loc 1 69 0
 1360 001c E568     		ldr	r5, [r4, #12]	@ float
 1361 001e 2846     		mov	r0, r5	@ float
 1362 0020 FFF7FEFF 		bl	sinf
 1363              	.LVL198:
 1364 0024 09EE100A 		fmsr	s18, r0
 1365              	.LVL199:
  70:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1366              		.loc 1 70 0
 1367 0028 2846     		mov	r0, r5	@ float
 1368              	.LVL200:
 1369 002a FFF7FEFF 		bl	cosf
 1370              	.LVL201:
  71:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1371              		.loc 1 71 0
 1372 002e 2569     		ldr	r5, [r4, #16]	@ float
  70:math/pprz_geodetic_float.c ****   const float sin_lon = sinf(def->lla.lon);
 1373              		.loc 1 70 0
 1374 0030 08EE100A 		fmsr	s16, r0
 1375              	.LVL202:
  71:math/pprz_geodetic_float.c ****   const float cos_lon = cosf(def->lla.lon);
 1376              		.loc 1 71 0
 1377 0034 2846     		mov	r0, r5	@ float
 1378              	.LVL203:
 1379 0036 FFF7FEFF 		bl	sinf
 1380              	.LVL204:
 1381 003a 08EE900A 		fmsr	s17, r0
 1382              	.LVL205:
  72:math/pprz_geodetic_float.c **** 
 1383              		.loc 1 72 0
 1384 003e 2846     		mov	r0, r5	@ float
 1385              	.LVL206:
 1386 0040 FFF7FEFF 		bl	cosf
 1387              	.LVL207:
  74:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1388              		.loc 1 74 0
 1389 0044 B1EE687A 		fnegs	s14, s17
  72:math/pprz_geodetic_float.c **** 
 1390              		.loc 1 72 0
 1391 0048 07EE900A 		fmsr	s15, r0
 1392              	.LVL208:
  74:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[1] =  cos_lon;
 1393              		.loc 1 74 0
 1394 004c 84ED067A 		fsts	s14, [r4, #24]
  78:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1395              		.loc 1 78 0
 1396 0050 B1EE497A 		fnegs	s14, s18
 1397 0054 67EE276A 		fmuls	s13, s14, s15
  80:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[6] =  cos_lat * cos_lon;
 1398              		.loc 1 80 0
 1399 0058 84ED0B8A 		fsts	s16, [r4, #44]
  81:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1400              		.loc 1 81 0
 1401 005c 68EE277A 		fmuls	s15, s16, s15
  82:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1402              		.loc 1 82 0
 1403 0060 28EE288A 		fmuls	s16, s16, s17
 1404              	.LVL209:
  79:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1405              		.loc 1 79 0
 1406 0064 27EE287A 		fmuls	s14, s14, s17
  82:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[8] =  sin_lat;
 1407              		.loc 1 82 0
 1408 0068 84ED0D8A 		fsts	s16, [r4, #52]
  83:math/pprz_geodetic_float.c **** }
 1409              		.loc 1 83 0
 1410 006c 84ED0E9A 		fsts	s18, [r4, #56]
  84:math/pprz_geodetic_float.c **** 
 1411              		.loc 1 84 0
 1412 0070 BDEC048B 		fldmfdd	sp!, {d8-d9}
 1413              		.cfi_restore 82
 1414              		.cfi_restore 83
 1415              		.cfi_restore 80
 1416              		.cfi_restore 81
 1417              		.cfi_def_cfa_offset 16
 1418              	.LVL210:
  77:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1419              		.loc 1 77 0
 1420 0074 0023     		movs	r3, #0
  75:math/pprz_geodetic_float.c ****   /* this element is always zero http://en.wikipedia.org/wiki/Geodetic_system#From_ECEF_to_ENU */
 1421              		.loc 1 75 0
 1422 0076 E061     		str	r0, [r4, #28]	@ float
  77:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[3] = -sin_lat * cos_lon;
 1423              		.loc 1 77 0
 1424 0078 2362     		str	r3, [r4, #32]	@ float
  78:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[4] = -sin_lat * sin_lon;
 1425              		.loc 1 78 0
 1426 007a C4ED096A 		fsts	s13, [r4, #36]
  79:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[5] =  cos_lat;
 1427              		.loc 1 79 0
 1428 007e 84ED0A7A 		fsts	s14, [r4, #40]
  81:math/pprz_geodetic_float.c ****   def->ltp_of_ecef.m[7] =  cos_lat * sin_lon;
 1429              		.loc 1 81 0
 1430 0082 C4ED0C7A 		fsts	s15, [r4, #48]
  84:math/pprz_geodetic_float.c **** 
 1431              		.loc 1 84 0
 1432 0086 38BD     		pop	{r3, r4, r5, pc}
 1433              		.cfi_endproc
 1434              	.LFE41:
 1436              		.section	.text.enu_of_lla_point_f,"ax",%progbits
 1437              		.align	1
 1438              		.global	enu_of_lla_point_f
 1439              		.thumb
 1440              		.thumb_func
 1442              	enu_of_lla_point_f:
 1443              	.LFB46:
 114:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 1444              		.loc 1 114 0
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 16
 1447              		@ frame_needed = 0, uses_anonymous_args = 0
 1448              	.LVL211:
 1449 0000 30B5     		push	{r4, r5, lr}
 1450              		.cfi_def_cfa_offset 12
 1451              		.cfi_offset 4, -12
 1452              		.cfi_offset 5, -8
 1453              		.cfi_offset 14, -4
 1454 0002 85B0     		sub	sp, sp, #20
 1455              		.cfi_def_cfa_offset 32
 114:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 1456              		.loc 1 114 0
 1457 0004 0546     		mov	r5, r0
 1458 0006 0C46     		mov	r4, r1
 116:math/pprz_geodetic_float.c ****   enu_of_ecef_point_f(enu, def, &ecef);
 1459              		.loc 1 116 0
 1460 0008 01A8     		add	r0, sp, #4
 1461              	.LVL212:
 1462 000a 1146     		mov	r1, r2
 1463              	.LVL213:
 1464 000c FFF7FEFF 		bl	ecef_of_lla_f
 1465              	.LVL214:
 117:math/pprz_geodetic_float.c **** }
 1466              		.loc 1 117 0
 1467 0010 2846     		mov	r0, r5
 1468 0012 2146     		mov	r1, r4
 1469 0014 01AA     		add	r2, sp, #4
 1470 0016 FFF7FEFF 		bl	enu_of_ecef_point_f
 1471              	.LVL215:
 118:math/pprz_geodetic_float.c **** 
 1472              		.loc 1 118 0
 1473 001a 05B0     		add	sp, sp, #20
 1474              		.cfi_def_cfa_offset 12
 1475              		@ sp needed
 1476 001c 30BD     		pop	{r4, r5, pc}
 1477              		.cfi_endproc
 1478              	.LFE46:
 1480              		.section	.text.ned_of_lla_point_f,"ax",%progbits
 1481              		.align	1
 1482              		.global	ned_of_lla_point_f
 1483              		.thumb
 1484              		.thumb_func
 1486              	ned_of_lla_point_f:
 1487              	.LFB47:
 121:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 1488              		.loc 1 121 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 16
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL216:
 1493 0000 30B5     		push	{r4, r5, lr}
 1494              		.cfi_def_cfa_offset 12
 1495              		.cfi_offset 4, -12
 1496              		.cfi_offset 5, -8
 1497              		.cfi_offset 14, -4
 1498 0002 85B0     		sub	sp, sp, #20
 1499              		.cfi_def_cfa_offset 32
 121:math/pprz_geodetic_float.c ****   struct EcefCoor_f ecef;
 1500              		.loc 1 121 0
 1501 0004 0546     		mov	r5, r0
 1502 0006 0C46     		mov	r4, r1
 123:math/pprz_geodetic_float.c ****   ned_of_ecef_point_f(ned, def, &ecef);
 1503              		.loc 1 123 0
 1504 0008 01A8     		add	r0, sp, #4
 1505              	.LVL217:
 1506 000a 1146     		mov	r1, r2
 1507              	.LVL218:
 1508 000c FFF7FEFF 		bl	ecef_of_lla_f
 1509              	.LVL219:
 124:math/pprz_geodetic_float.c **** }
 1510              		.loc 1 124 0
 1511 0010 2846     		mov	r0, r5
 1512 0012 2146     		mov	r1, r4
 1513 0014 01AA     		add	r2, sp, #4
 1514 0016 FFF7FEFF 		bl	ned_of_ecef_point_f
 1515              	.LVL220:
 125:math/pprz_geodetic_float.c **** 
 1516              		.loc 1 125 0
 1517 001a 05B0     		add	sp, sp, #20
 1518              		.cfi_def_cfa_offset 12
 1519              		@ sp needed
 1520 001c 30BD     		pop	{r4, r5, pc}
 1521              		.cfi_endproc
 1522              	.LFE47:
 1524              		.global	__aeabi_i2d
 1525              		.global	__aeabi_dsub
 1526              		.global	__aeabi_ddiv
 1527              		.section	.text.utm_of_lla_f,"ax",%progbits
 1528              		.align	1
 1529              		.global	utm_of_lla_f
 1530              		.thumb
 1531              		.thumb_func
 1533              	utm_of_lla_f:
 1534              	.LFB57:
 287:math/pprz_geodetic_float.c **** 
 288:math/pprz_geodetic_float.c **** static inline float inverse_isometric_latitude_f(float lat, float e, float epsilon)
 289:math/pprz_geodetic_float.c **** {
 290:math/pprz_geodetic_float.c ****   float exp_l = exp(lat);
 291:math/pprz_geodetic_float.c ****   float phi0 = 2 * atan(exp_l) - M_PI_2;
 292:math/pprz_geodetic_float.c ****   float phi_;
 293:math/pprz_geodetic_float.c ****   uint8_t max_iter = 3; /* To be sure to return */
 294:math/pprz_geodetic_float.c **** 
 295:math/pprz_geodetic_float.c ****   do {
 296:math/pprz_geodetic_float.c ****     phi_ = phi0;
 297:math/pprz_geodetic_float.c ****     float sin_phi = e * sin(phi_);
 298:math/pprz_geodetic_float.c ****     phi0 = 2 * atan(pow((1 + sin_phi) / (1. - sin_phi), e / 2.) * exp_l) - M_PI_2;
 299:math/pprz_geodetic_float.c ****     max_iter--;
 300:math/pprz_geodetic_float.c ****   } while (max_iter && fabs(phi_ - phi0) > epsilon);
 301:math/pprz_geodetic_float.c ****   return phi0;
 302:math/pprz_geodetic_float.c **** }
 303:math/pprz_geodetic_float.c **** 
 304:math/pprz_geodetic_float.c **** void utm_of_lla_f(struct UtmCoor_f *utm, struct LlaCoor_f *lla)
 305:math/pprz_geodetic_float.c **** {
 1535              		.loc 1 305 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 8
 1538              		@ frame_needed = 0, uses_anonymous_args = 0
 1539              	.LVL221:
 1540 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1541              		.cfi_def_cfa_offset 36
 1542              		.cfi_offset 4, -36
 1543              		.cfi_offset 5, -32
 1544              		.cfi_offset 6, -28
 1545              		.cfi_offset 7, -24
 1546              		.cfi_offset 8, -20
 1547              		.cfi_offset 9, -16
 1548              		.cfi_offset 10, -12
 1549              		.cfi_offset 11, -8
 1550              		.cfi_offset 14, -4
 1551 0004 2DED068B 		fstmfdd	sp!, {d8, d9, d10}
 1552              		.cfi_def_cfa_offset 60
 1553              		.cfi_offset 80, -60
 1554              		.cfi_offset 81, -56
 1555              		.cfi_offset 82, -52
 1556              		.cfi_offset 83, -48
 1557              		.cfi_offset 84, -44
 1558              		.cfi_offset 85, -40
 1559 0008 0446     		mov	r4, r0
 306:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1560              		.loc 1 306 0
 1561 000a 007B     		ldrb	r0, [r0, #12]	@ zero_extendqisi2
 1562              	.LVL222:
 1563 000c 0623     		movs	r3, #6
 1564 000e 0138     		subs	r0, r0, #1
 1565 0010 5843     		muls	r0, r3, r0
 305:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1566              		.loc 1 305 0
 1567 0012 83B0     		sub	sp, sp, #12
 1568              		.cfi_def_cfa_offset 72
 1569              		.loc 1 306 0
 1570 0014 B138     		subs	r0, r0, #177
 305:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 1571              		.loc 1 305 0
 1572 0016 0D46     		mov	r5, r1
 1573              		.loc 1 306 0
 1574 0018 FFF7FEFF 		bl	__aeabi_i2d
 1575              	.LVL223:
 1576 001c 8CA3     		adr	r3, .L26+56
 1577 001e D3E90023 		ldrd	r2, [r3]
 1578 0022 FFF7FEFF 		bl	__aeabi_dmul
 1579              	.LVL224:
 1580 0026 FFF7FEFF 		bl	__aeabi_d2f
 1581              	.LVL225:
 1582 002a 08EE100A 		fmsr	s16, r0
 1583              	.LVL226:
 1584              	.LBB9:
 1585              	.LBB10:
 280:math/pprz_geodetic_float.c **** }
 1586              		.loc 1 280 0
 1587 002e 2868     		ldr	r0, [r5]	@ float
 1588              	.LVL227:
 1589 0030 FFF7FEFF 		bl	__aeabi_f2d
 1590              	.LVL228:
 1591 0034 0022     		movs	r2, #0
 1592 0036 804B     		ldr	r3, .L26+32
 1593 0038 8046     		mov	r8, r0
 1594 003a 8946     		mov	r9, r1
 1595 003c FFF7FEFF 		bl	__aeabi_dmul
 1596              	.LVL229:
 1597 0040 75A3     		adr	r3, .L26
 1598 0042 D3E90023 		ldrd	r2, [r3]
 1599 0046 FFF7FEFF 		bl	__aeabi_dadd
 1600              	.LVL230:
 1601 004a FFF7FEFF 		bl	tan
 1602              	.LVL231:
 1603 004e FFF7FEFF 		bl	log
 1604              	.LVL232:
 1605 0052 0646     		mov	r6, r0
 1606 0054 0F46     		mov	r7, r1
 1607 0056 4046     		mov	r0, r8
 1608 0058 4946     		mov	r1, r9
 1609 005a FFF7FEFF 		bl	sin
 1610              	.LVL233:
 1611 005e 70A3     		adr	r3, .L26+8
 1612 0060 D3E90023 		ldrd	r2, [r3]
 1613 0064 FFF7FEFF 		bl	__aeabi_dmul
 1614              	.LVL234:
 1615 0068 0022     		movs	r2, #0
 1616 006a 744B     		ldr	r3, .L26+36
 1617 006c 8246     		mov	r10, r0
 1618 006e 8B46     		mov	fp, r1
 1619 0070 FFF7FEFF 		bl	__aeabi_dadd
 1620              	.LVL235:
 1621 0074 5246     		mov	r2, r10
 1622 0076 8046     		mov	r8, r0
 1623 0078 8946     		mov	r9, r1
 1624 007a 5B46     		mov	r3, fp
 1625 007c 0020     		movs	r0, #0
 1626 007e 6F49     		ldr	r1, .L26+36
 1627 0080 FFF7FEFF 		bl	__aeabi_dsub
 1628              	.LVL236:
 1629 0084 0246     		mov	r2, r0
 1630 0086 0B46     		mov	r3, r1
 1631 0088 4046     		mov	r0, r8
 1632 008a 4946     		mov	r1, r9
 1633 008c FFF7FEFF 		bl	__aeabi_ddiv
 1634              	.LVL237:
 1635 0090 FFF7FEFF 		bl	log
 1636              	.LVL238:
 1637              	.LBE10:
 1638              	.LBE9:
 307:math/pprz_geodetic_float.c ****   float ll = isometric_latitude_f(lla->lat , E);
 308:math/pprz_geodetic_float.c ****   float dl = lla->lon - lambda_c;
 1639              		.loc 1 308 0
 1640 0094 D5ED017A 		flds	s15, [r5, #4]
 309:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(dl) / cosh(ll));
 1641              		.loc 1 309 0
 1642 0098 77EEC87A 		fsubs	s15, s15, s16
 1643              	.LBB15:
 1644              	.LBB11:
 280:math/pprz_geodetic_float.c **** }
 1645              		.loc 1 280 0
 1646 009c 8046     		mov	r8, r0
 1647              	.LBE11:
 1648              	.LBE15:
 1649              		.loc 1 309 0
 1650 009e 17EE900A 		fmrs	r0, s15
 1651              	.LBB16:
 1652              	.LBB12:
 280:math/pprz_geodetic_float.c **** }
 1653              		.loc 1 280 0
 1654 00a2 8946     		mov	r9, r1
 1655              	.LVL239:
 1656              	.LBE12:
 1657              	.LBE16:
 1658              		.loc 1 309 0
 1659 00a4 FFF7FEFF 		bl	__aeabi_f2d
 1660              	.LVL240:
 1661 00a8 CDE90001 		strd	r0, [sp]
 1662 00ac FFF7FEFF 		bl	sin
 1663              	.LVL241:
 1664              	.LBB17:
 1665              	.LBB13:
 280:math/pprz_geodetic_float.c **** }
 1666              		.loc 1 280 0
 1667 00b0 5DA3     		adr	r3, .L26+16
 1668 00b2 D3E90023 		ldrd	r2, [r3]
 1669              	.LBE13:
 1670              	.LBE17:
 1671              		.loc 1 309 0
 1672 00b6 8246     		mov	r10, r0
 1673 00b8 8B46     		mov	fp, r1
 1674              	.LBB18:
 1675              	.LBB14:
 280:math/pprz_geodetic_float.c **** }
 1676              		.loc 1 280 0
 1677 00ba 4046     		mov	r0, r8
 1678 00bc 4946     		mov	r1, r9
 1679 00be FFF7FEFF 		bl	__aeabi_dmul
 1680              	.LVL242:
 1681 00c2 0246     		mov	r2, r0
 1682 00c4 0B46     		mov	r3, r1
 1683 00c6 3046     		mov	r0, r6
 1684 00c8 3946     		mov	r1, r7
 1685 00ca FFF7FEFF 		bl	__aeabi_dsub
 1686              	.LVL243:
 1687 00ce FFF7FEFF 		bl	__aeabi_d2f
 1688              	.LVL244:
 1689              	.LBE14:
 1690              	.LBE18:
 1691              		.loc 1 309 0
 1692 00d2 FFF7FEFF 		bl	__aeabi_f2d
 1693              	.LVL245:
 1694 00d6 0646     		mov	r6, r0
 1695 00d8 0F46     		mov	r7, r1
 1696 00da FFF7FEFF 		bl	cosh
 1697              	.LVL246:
 1698 00de 0246     		mov	r2, r0
 1699 00e0 0B46     		mov	r3, r1
 1700 00e2 5046     		mov	r0, r10
 1701 00e4 5946     		mov	r1, fp
 1702 00e6 FFF7FEFF 		bl	__aeabi_ddiv
 1703              	.LVL247:
 1704 00ea FFF7FEFF 		bl	asin
 1705              	.LVL248:
 1706 00ee FFF7FEFF 		bl	__aeabi_d2f
 1707              	.LVL249:
 310:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 1708              		.loc 1 310 0
 1709 00f2 00EE100A 		fmsr	s0, r0
 1710 00f6 FFF7FEFF 		bl	isometric_latitude_fast_f
 1711              	.LVL250:
 311:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 1712              		.loc 1 311 0
 1713 00fa 3046     		mov	r0, r6
 1714 00fc 3946     		mov	r1, r7
 310:math/pprz_geodetic_float.c ****   float ll_ = isometric_latitude_fast_f(phi_);
 1715              		.loc 1 310 0
 1716 00fe F0EE40AA 		fcpys	s21, s0
 1717              	.LVL251:
 1718              		.loc 1 311 0
 1719 0102 FFF7FEFF 		bl	sinh
 1720              	.LVL252:
 1721 0106 0646     		mov	r6, r0
 1722 0108 0F46     		mov	r7, r1
 1723 010a DDE90001 		ldrd	r0, [sp]
 1724 010e FFF7FEFF 		bl	cos
 1725              	.LVL253:
 1726 0112 0246     		mov	r2, r0
 1727 0114 0B46     		mov	r3, r1
 1728 0116 3046     		mov	r0, r6
 1729 0118 3946     		mov	r1, r7
 1730 011a FFF7FEFF 		bl	__aeabi_ddiv
 1731              	.LVL254:
 1732 011e FFF7FEFF 		bl	atan
 1733              	.LVL255:
 1734 0122 FFF7FEFF 		bl	__aeabi_d2f
 1735              	.LVL256:
 312:math/pprz_geodetic_float.c ****   struct complex z_ = { lambda_,  ll_ };
 313:math/pprz_geodetic_float.c ****   CScal(serie_coeff_proj_mercator[0], z_);
 1736              		.loc 1 313 0
 1737 0126 9FED468A 		flds	s16, .L26+40
 1738              	.LVL257:
 1739 012a 464F     		ldr	r7, .L26+44
 311:math/pprz_geodetic_float.c ****   float lambda_ = atan(sinh(ll) / cos(dl));
 1740              		.loc 1 311 0
 1741 012c 0AEE100A 		fmsr	s20, r0
 1742              	.LVL258:
 1743              		.loc 1 313 0
 1744 0130 2AEE089A 		fmuls	s18, s20, s16
 1745              	.LVL259:
 1746 0134 2AEE888A 		fmuls	s16, s21, s16
 1747              	.LVL260:
 1748 0138 0026     		movs	r6, #0
 1749              	.LVL261:
 1750              	.L23:
 1751 013a 0236     		adds	r6, r6, #2
 1752              	.LBB19:
 314:math/pprz_geodetic_float.c ****   uint8_t k;
 315:math/pprz_geodetic_float.c ****   for (k = 1; k < 3; k++) {
 316:math/pprz_geodetic_float.c ****     struct complex z = { lambda_,  ll_ };
 317:math/pprz_geodetic_float.c ****     CScal(2 * k, z);
 1753              		.loc 1 317 0 discriminator 3
 1754 013c 07EE906A 		fmsr	s15, r6	@ int
 1755 0140 F8EEE79A 		fsitos	s19, s15
 1756              	.LVL262:
 1757              	.LBB20:
 318:math/pprz_geodetic_float.c ****     CSin(z);
 1758              		.loc 1 318 0 discriminator 3
 1759 0144 69EEEA7A 		fnmuls	s15, s19, s21
 1760              	.LVL263:
 1761 0148 17EE900A 		fmrs	r0, s15
 1762 014c FFF7FEFF 		bl	__aeabi_f2d
 1763              	.LVL264:
 1764 0150 FFF7FEFF 		bl	exp
 1765              	.LVL265:
 1766 0154 FFF7FEFF 		bl	__aeabi_d2f
 1767              	.LVL266:
 1768 0158 6AEE297A 		fmuls	s15, s20, s19
 1769              	.LVL267:
 1770 015c 08EE900A 		fmsr	s17, r0
 1771              	.LVL268:
 1772 0160 17EE900A 		fmrs	r0, s15
 1773              	.LVL269:
 1774 0164 FFF7FEFF 		bl	__aeabi_f2d
 1775              	.LVL270:
 1776 0168 8046     		mov	r8, r0
 1777 016a 8946     		mov	r9, r1
 1778 016c FFF7FEFF 		bl	cos
 1779              	.LVL271:
 1780 0170 FFF7FEFF 		bl	__aeabi_d2f
 1781              	.LVL272:
 1782 0174 4946     		mov	r1, r9
 1783 0176 09EE900A 		fmsr	s19, r0
 1784              	.LVL273:
 1785 017a 4046     		mov	r0, r8
 1786              	.LVL274:
 1787 017c FFF7FEFF 		bl	sin
 1788              	.LVL275:
 1789 0180 FFF7FEFF 		bl	__aeabi_d2f
 1790              	.LVL276:
 1791 0184 06EE900A 		fmsr	s13, r0
 1792              	.LVL277:
 1793 0188 F1EE667A 		fnegs	s15, s13
 1794              	.LVL278:
 1795 018c C7EEA87A 		fdivs	s15, s15, s17
 1796              	.LVL279:
 1797              	.LBE20:
 1798              	.LBE19:
 315:math/pprz_geodetic_float.c ****     struct complex z = { lambda_,  ll_ };
 1799              		.loc 1 315 0 discriminator 3
 1800 0190 042E     		cmp	r6, #4
 1801              	.LBB24:
 319:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator[k], z);
 1802              		.loc 1 319 0 discriminator 3
 1803 0192 B7EC017A 		fldmias	r7!, {s14}
 1804              	.LVL280:
 1805              	.LBB22:
 318:math/pprz_geodetic_float.c ****     CSin(z);
 1806              		.loc 1 318 0 discriminator 3
 1807 0196 D8EEA67A 		vfnms.f32	s15, s17, s13
 1808              	.LVL281:
 1809 019a FEEE006A 		fconsts	s13, #224
 1810              	.LBB21:
 1811 019e 66EEE77A 		fnmuls	s15, s13, s15
 1812              	.LBE21:
 1813              	.LBE22:
 320:math/pprz_geodetic_float.c ****     CAdd(z, z_);
 1814              		.loc 1 320 0 discriminator 3
 1815 01a2 A7EE879A 		vfma.f32	s18, s15, s14
 1816              	.LVL282:
 1817              	.LBB23:
 318:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator[k], z);
 1818              		.loc 1 318 0 discriminator 3
 1819 01a6 C9EEA87A 		fdivs	s15, s19, s17
 1820              	.LVL283:
 1821 01aa D8EEA97A 		vfnms.f32	s15, s17, s19
 1822              	.LVL284:
 1823 01ae 67EEA67A 		fmuls	s15, s15, s13
 1824              	.LVL285:
 1825              	.LBE23:
 1826              		.loc 1 320 0 discriminator 3
 1827 01b2 A7EE878A 		vfma.f32	s16, s15, s14
 1828              	.LVL286:
 1829              	.LBE24:
 315:math/pprz_geodetic_float.c ****     struct complex z = { lambda_,  ll_ };
 1830              		.loc 1 315 0 discriminator 3
 1831 01b6 C0D1     		bne	.L23
 1832              	.LVL287:
 321:math/pprz_geodetic_float.c ****   }
 322:math/pprz_geodetic_float.c ****   CScal(N, z_);
 1833              		.loc 1 322 0
 1834 01b8 18EE100A 		fmrs	r0, s16
 1835              	.LVL288:
 1836 01bc FFF7FEFF 		bl	__aeabi_f2d
 1837              	.LVL289:
 1838 01c0 1BA3     		adr	r3, .L26+24
 1839 01c2 D3E90023 		ldrd	r2, [r3]
 1840 01c6 FFF7FEFF 		bl	__aeabi_dmul
 1841              	.LVL290:
 1842 01ca FFF7FEFF 		bl	__aeabi_d2f
 1843              	.LVL291:
 323:math/pprz_geodetic_float.c ****   utm->east = DELTA_EAST + z_.im;
 1844              		.loc 1 323 0
 1845 01ce DFED1E7A 		flds	s15, .L26+48
 1846 01d2 07EE100A 		fmsr	s14, r0
 1847 01d6 77EE277A 		fadds	s15, s14, s15
 322:math/pprz_geodetic_float.c ****   utm->east = DELTA_EAST + z_.im;
 1848              		.loc 1 322 0
 1849 01da 19EE100A 		fmrs	r0, s18
 1850              		.loc 1 323 0
 1851 01de C4ED017A 		fsts	s15, [r4, #4]
 322:math/pprz_geodetic_float.c ****   utm->east = DELTA_EAST + z_.im;
 1852              		.loc 1 322 0
 1853 01e2 FFF7FEFF 		bl	__aeabi_f2d
 1854              	.LVL292:
 1855 01e6 12A3     		adr	r3, .L26+24
 1856 01e8 D3E90023 		ldrd	r2, [r3]
 1857 01ec FFF7FEFF 		bl	__aeabi_dmul
 1858              	.LVL293:
 1859 01f0 FFF7FEFF 		bl	__aeabi_d2f
 1860              	.LVL294:
 324:math/pprz_geodetic_float.c ****   utm->north = DELTA_NORTH + z_.re;
 1861              		.loc 1 324 0
 1862 01f4 DFED157A 		flds	s15, .L26+52
 325:math/pprz_geodetic_float.c **** 
 326:math/pprz_geodetic_float.c ****   // copy alt above reference ellipsoid
 327:math/pprz_geodetic_float.c ****   utm->alt = lla->alt;
 1863              		.loc 1 327 0
 1864 01f8 AB68     		ldr	r3, [r5, #8]	@ float
 1865 01fa A360     		str	r3, [r4, #8]	@ float
 324:math/pprz_geodetic_float.c ****   utm->north = DELTA_NORTH + z_.re;
 1866              		.loc 1 324 0
 1867 01fc 07EE100A 		fmsr	s14, r0
 1868 0200 77EE277A 		fadds	s15, s14, s15
 1869 0204 C4ED007A 		fsts	s15, [r4]
 328:math/pprz_geodetic_float.c **** }
 1870              		.loc 1 328 0
 1871 0208 03B0     		add	sp, sp, #12
 1872              		.cfi_def_cfa_offset 60
 1873              		@ sp needed
 1874 020a BDEC068B 		fldmfdd	sp!, {d8-d10}
 1875              		.cfi_restore 84
 1876              		.cfi_restore 85
 1877              		.cfi_restore 82
 1878              		.cfi_restore 83
 1879              		.cfi_restore 80
 1880              		.cfi_restore 81
 1881              		.cfi_def_cfa_offset 36
 1882              	.LVL295:
 1883 020e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1884              	.LVL296:
 1885              	.L27:
 1886 0212 00BFAFF3 		.align	3
 1886      0080
 1887              	.L26:
 1888 0218 182D4454 		.word	1413754136
 1889 021c FB21E93F 		.word	1072243195
 1890 0220 00000040 		.word	1073741824
 1891 0224 1AF2B43F 		.word	1068823066
 1892 0228 00000040 		.word	1073741824
 1893 022c 1AF2A43F 		.word	1067774490
 1894 0230 585BB16F 		.word	1873894232
 1895 0234 28525841 		.word	1096307240
 1896 0238 0000E03F 		.word	1071644672
 1897 023c 0000F03F 		.word	1072693248
 1898 0240 2E927F3F 		.word	1065325102
 1899 0244 04000000 		.word	.LANCHOR0+4
 1900 0248 0024F448 		.word	1223959552
 1901 024c 00000000 		.word	0
 1902 0250 399D52A2 		.word	-1571644103
 1903 0254 46DF913F 		.word	1066524486
 1904              		.cfi_endproc
 1905              	.LFE57:
 1907              		.section	.text.lla_of_utm_f,"ax",%progbits
 1908              		.align	1
 1909              		.global	lla_of_utm_f
 1910              		.thumb
 1911              		.thumb_func
 1913              	lla_of_utm_f:
 1914              	.LFB58:
 329:math/pprz_geodetic_float.c **** 
 330:math/pprz_geodetic_float.c **** void lla_of_utm_f(struct LlaCoor_f *lla, struct UtmCoor_f *utm)
 331:math/pprz_geodetic_float.c **** {
 1915              		.loc 1 331 0
 1916              		.cfi_startproc
 1917              		@ args = 0, pretend = 0, frame = 8
 1918              		@ frame_needed = 0, uses_anonymous_args = 0
 1919              	.LVL297:
 1920 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1921              		.cfi_def_cfa_offset 36
 1922              		.cfi_offset 4, -36
 1923              		.cfi_offset 5, -32
 1924              		.cfi_offset 6, -28
 1925              		.cfi_offset 7, -24
 1926              		.cfi_offset 8, -20
 1927              		.cfi_offset 9, -16
 1928              		.cfi_offset 10, -12
 1929              		.cfi_offset 11, -8
 1930              		.cfi_offset 14, -4
 1931 0004 2DED068B 		fstmfdd	sp!, {d8, d9, d10}
 1932              		.cfi_def_cfa_offset 60
 1933              		.cfi_offset 80, -60
 1934              		.cfi_offset 81, -56
 1935              		.cfi_offset 82, -52
 1936              		.cfi_offset 83, -48
 1937              		.cfi_offset 84, -44
 1938              		.cfi_offset 85, -40
 332:math/pprz_geodetic_float.c ****   float scale = 1 / N / serie_coeff_proj_mercator[0];
 333:math/pprz_geodetic_float.c ****   float real = (utm->north - DELTA_NORTH) * scale;
 1939              		.loc 1 333 0
 1940 0008 D1ED007A 		flds	s15, [r1]
 1941 000c 9FED9A8A 		flds	s16, .L34+48
 1942              	.LBB32:
 334:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 335:math/pprz_geodetic_float.c ****   struct complex z = { real, img };
 336:math/pprz_geodetic_float.c **** 
 337:math/pprz_geodetic_float.c ****   uint8_t k;
 338:math/pprz_geodetic_float.c ****   for (k = 1; k < 2; k++) {
 339:math/pprz_geodetic_float.c ****     struct complex z_ = { real, img };
 340:math/pprz_geodetic_float.c ****     CScal(2 * k, z_);
 341:math/pprz_geodetic_float.c ****     CSin(z_);
 342:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 343:math/pprz_geodetic_float.c ****     CSub(z_, z);
 1943              		.loc 1 343 0
 1944 0010 9FED9AAA 		flds	s20, .L34+52
 1945              	.LBE32:
 331:math/pprz_geodetic_float.c ****   float scale = 1 / N / serie_coeff_proj_mercator[0];
 1946              		.loc 1 331 0
 1947 0014 83B0     		sub	sp, sp, #12
 1948              		.cfi_def_cfa_offset 72
 331:math/pprz_geodetic_float.c ****   float scale = 1 / N / serie_coeff_proj_mercator[0];
 1949              		.loc 1 331 0
 1950 0016 8346     		mov	fp, r0
 334:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 1951              		.loc 1 334 0
 1952 0018 4868     		ldr	r0, [r1, #4]	@ float
 1953              	.LVL298:
 333:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 1954              		.loc 1 333 0
 1955 001a 27EE888A 		fmuls	s16, s15, s16
 1956              	.LVL299:
 331:math/pprz_geodetic_float.c ****   float scale = 1 / N / serie_coeff_proj_mercator[0];
 1957              		.loc 1 331 0
 1958 001e 8A46     		mov	r10, r1
 334:math/pprz_geodetic_float.c ****   float img = (utm->east - DELTA_EAST) * scale;
 1959              		.loc 1 334 0
 1960 0020 FFF7FEFF 		bl	__aeabi_f2d
 1961              	.LVL300:
 1962 0024 88A3     		adr	r3, .L34
 1963 0026 D3E90023 		ldrd	r2, [r3]
 1964 002a FFF7FEFF 		bl	__aeabi_dsub
 1965              	.LVL301:
 1966 002e 88A3     		adr	r3, .L34+8
 1967 0030 D3E90023 		ldrd	r2, [r3]
 1968 0034 FFF7FEFF 		bl	__aeabi_dmul
 1969              	.LVL302:
 1970 0038 FFF7FEFF 		bl	__aeabi_d2f
 1971              	.LVL303:
 1972 003c 09EE900A 		fmsr	s19, r0
 1973              	.LVL304:
 1974              	.LBB38:
 340:math/pprz_geodetic_float.c ****     CSin(z_);
 1975              		.loc 1 340 0
 1976 0040 79EEA97A 		fadds	s15, s19, s19
 1977              	.LVL305:
 1978              	.LBB33:
 341:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 1979              		.loc 1 341 0
 1980 0044 F1EE677A 		fnegs	s15, s15
 1981              	.LVL306:
 1982 0048 17EE900A 		fmrs	r0, s15
 1983              	.LVL307:
 1984 004c FFF7FEFF 		bl	__aeabi_f2d
 1985              	.LVL308:
 1986 0050 FFF7FEFF 		bl	exp
 1987              	.LVL309:
 1988 0054 FFF7FEFF 		bl	__aeabi_d2f
 1989              	.LVL310:
 1990 0058 78EE087A 		fadds	s15, s16, s16
 1991              	.LVL311:
 1992 005c 09EE100A 		fmsr	s18, r0
 1993              	.LVL312:
 1994 0060 17EE900A 		fmrs	r0, s15
 1995              	.LVL313:
 1996 0064 FFF7FEFF 		bl	__aeabi_f2d
 1997              	.LVL314:
 1998 0068 0446     		mov	r4, r0
 1999 006a 0D46     		mov	r5, r1
 2000 006c FFF7FEFF 		bl	cos
 2001              	.LVL315:
 2002 0070 FFF7FEFF 		bl	__aeabi_d2f
 2003              	.LVL316:
 2004 0074 2946     		mov	r1, r5
 2005 0076 08EE900A 		fmsr	s17, r0
 2006              	.LVL317:
 2007 007a 2046     		mov	r0, r4
 2008              	.LVL318:
 2009 007c FFF7FEFF 		bl	sin
 2010              	.LVL319:
 2011 0080 FFF7FEFF 		bl	__aeabi_d2f
 2012              	.LVL320:
 2013 0084 0AEE900A 		fmsr	s21, r0
 2014              	.LVL321:
 2015              	.LBE33:
 2016              	.LBE38:
 344:math/pprz_geodetic_float.c ****   }
 345:math/pprz_geodetic_float.c **** 
 346:math/pprz_geodetic_float.c ****   float lambda_c = LambdaOfUtmZone(utm->zone);
 2017              		.loc 1 346 0
 2018 0088 9AF80C00 		ldrb	r0, [r10, #12]	@ zero_extendqisi2
 2019              	.LVL322:
 2020 008c 0623     		movs	r3, #6
 2021 008e 0138     		subs	r0, r0, #1
 2022 0090 5843     		muls	r0, r3, r0
 2023 0092 B138     		subs	r0, r0, #177
 2024 0094 FFF7FEFF 		bl	__aeabi_i2d
 2025              	.LVL323:
 2026 0098 6FA3     		adr	r3, .L34+16
 2027 009a D3E90023 		ldrd	r2, [r3]
 2028 009e FFF7FEFF 		bl	__aeabi_dmul
 2029              	.LVL324:
 2030 00a2 FFF7FEFF 		bl	__aeabi_d2f
 2031              	.LVL325:
 347:math/pprz_geodetic_float.c ****   lla->lon = lambda_c + atan(sinh(z.im) / cos(z.re));
 2032              		.loc 1 347 0
 2033 00a6 FFF7FEFF 		bl	__aeabi_f2d
 2034              	.LVL326:
 2035              	.LBB39:
 2036              	.LBB34:
 341:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2037              		.loc 1 341 0
 2038 00aa 88EE897A 		fdivs	s14, s17, s18
 2039              	.LVL327:
 2040              	.LBE34:
 2041              	.LBE39:
 2042              		.loc 1 347 0
 2043 00ae 0646     		mov	r6, r0
 2044 00b0 0F46     		mov	r7, r1
 2045              	.LBB40:
 2046              	.LBB35:
 341:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2047              		.loc 1 341 0
 2048 00b2 99EE287A 		vfnms.f32	s14, s18, s17
 2049              	.LVL328:
 2050 00b6 FEEE008A 		fconsts	s17, #224
 2051              	.LVL329:
 2052 00ba 28EEC77A 		fnmuls	s14, s17, s14
 2053              	.LBE35:
 2054              	.LBE40:
 2055              		.loc 1 347 0
 2056 00be E7EE0A9A 		vfma.f32	s19, s14, s20
 2057              	.LVL330:
 2058 00c2 19EE900A 		fmrs	r0, s19
 2059 00c6 FFF7FEFF 		bl	__aeabi_f2d
 2060              	.LVL331:
 2061 00ca CDE90001 		strd	r0, [sp]
 2062 00ce FFF7FEFF 		bl	sinh
 2063              	.LVL332:
 2064              	.LBB41:
 2065              	.LBB36:
 341:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2066              		.loc 1 341 0
 2067 00d2 F1EE6A7A 		fnegs	s15, s21
 2068 00d6 C7EE897A 		fdivs	s15, s15, s18
 2069              	.LVL333:
 2070              	.LBE36:
 2071              	.LBE41:
 2072              		.loc 1 347 0
 2073 00da 8046     		mov	r8, r0
 2074 00dc 8946     		mov	r9, r1
 2075              	.LBB42:
 2076              	.LBB37:
 341:math/pprz_geodetic_float.c ****     CScal(serie_coeff_proj_mercator_inverse[k], z_);
 2077              		.loc 1 341 0
 2078 00de D9EE2A7A 		vfnms.f32	s15, s18, s21
 2079              	.LVL334:
 2080 00e2 68EEA77A 		fmuls	s15, s17, s15
 2081              	.LBE37:
 2082              	.LBE42:
 2083              		.loc 1 347 0
 2084 00e6 A7EE8A8A 		vfma.f32	s16, s15, s20
 2085              	.LVL335:
 2086 00ea 18EE100A 		fmrs	r0, s16
 2087 00ee FFF7FEFF 		bl	__aeabi_f2d
 2088              	.LVL336:
 2089 00f2 0446     		mov	r4, r0
 2090 00f4 0D46     		mov	r5, r1
 2091 00f6 FFF7FEFF 		bl	cos
 2092              	.LVL337:
 2093 00fa 0246     		mov	r2, r0
 2094 00fc 0B46     		mov	r3, r1
 2095 00fe 4046     		mov	r0, r8
 2096 0100 4946     		mov	r1, r9
 2097 0102 FFF7FEFF 		bl	__aeabi_ddiv
 2098              	.LVL338:
 2099 0106 FFF7FEFF 		bl	atan
 2100              	.LVL339:
 2101 010a 0246     		mov	r2, r0
 2102 010c 0B46     		mov	r3, r1
 2103 010e 3046     		mov	r0, r6
 2104 0110 3946     		mov	r1, r7
 2105 0112 FFF7FEFF 		bl	__aeabi_dadd
 2106              	.LVL340:
 2107 0116 FFF7FEFF 		bl	__aeabi_d2f
 2108              	.LVL341:
 348:math/pprz_geodetic_float.c ****   float phi_ = asin(sin(z.re) / cosh(z.im));
 2109              		.loc 1 348 0
 2110 011a 2946     		mov	r1, r5
 347:math/pprz_geodetic_float.c ****   lla->lon = lambda_c + atan(sinh(z.im) / cos(z.re));
 2111              		.loc 1 347 0
 2112 011c CBF80400 		str	r0, [fp, #4]	@ float
 2113              		.loc 1 348 0
 2114 0120 2046     		mov	r0, r4
 2115 0122 FFF7FEFF 		bl	sin
 2116              	.LVL342:
 2117 0126 0446     		mov	r4, r0
 2118 0128 0D46     		mov	r5, r1
 2119 012a DDE90001 		ldrd	r0, [sp]
 2120 012e FFF7FEFF 		bl	cosh
 2121              	.LVL343:
 2122 0132 0246     		mov	r2, r0
 2123 0134 0B46     		mov	r3, r1
 2124 0136 2046     		mov	r0, r4
 2125 0138 2946     		mov	r1, r5
 2126 013a FFF7FEFF 		bl	__aeabi_ddiv
 2127              	.LVL344:
 2128 013e FFF7FEFF 		bl	asin
 2129              	.LVL345:
 2130 0142 FFF7FEFF 		bl	__aeabi_d2f
 2131              	.LVL346:
 349:math/pprz_geodetic_float.c ****   float il = isometric_latitude_fast_f(phi_);
 2132              		.loc 1 349 0
 2133 0146 00EE100A 		fmsr	s0, r0
 2134 014a FFF7FEFF 		bl	isometric_latitude_fast_f
 2135              	.LVL347:
 2136              	.LBB43:
 2137              	.LBB44:
 290:math/pprz_geodetic_float.c ****   float phi0 = 2 * atan(exp_l) - M_PI_2;
 2138              		.loc 1 290 0
 2139 014e 10EE100A 		fmrs	r0, s0
 2140 0152 FFF7FEFF 		bl	__aeabi_f2d
 2141              	.LVL348:
 2142 0156 FFF7FEFF 		bl	exp
 2143              	.LVL349:
 2144 015a FFF7FEFF 		bl	__aeabi_d2f
 2145              	.LVL350:
 291:math/pprz_geodetic_float.c ****   float phi_;
 2146              		.loc 1 291 0
 2147 015e FFF7FEFF 		bl	__aeabi_f2d
 2148              	.LVL351:
 2149 0162 0646     		mov	r6, r0
 2150 0164 0F46     		mov	r7, r1
 2151 0166 FFF7FEFF 		bl	atan
 2152              	.LVL352:
 2153 016a 0246     		mov	r2, r0
 2154 016c 0B46     		mov	r3, r1
 2155 016e FFF7FEFF 		bl	__aeabi_dadd
 2156              	.LVL353:
 2157 0172 3BA3     		adr	r3, .L34+24
 2158 0174 D3E90023 		ldrd	r2, [r3]
 2159 0178 FFF7FEFF 		bl	__aeabi_dsub
 2160              	.LVL354:
 2161 017c FFF7FEFF 		bl	__aeabi_d2f
 2162              	.LVL355:
 2163 0180 08EE100A 		fmsr	s16, r0
 2164              	.LVL356:
 2165 0184 4FF00308 		mov	r8, #3
 2166              	.LVL357:
 2167              	.L30:
 2168              	.LBB45:
 297:math/pprz_geodetic_float.c ****     phi0 = 2 * atan(pow((1 + sin_phi) / (1. - sin_phi), e / 2.) * exp_l) - M_PI_2;
 2169              		.loc 1 297 0
 2170 0188 18EE100A 		fmrs	r0, s16
 2171 018c FFF7FEFF 		bl	__aeabi_f2d
 2172              	.LVL358:
 2173 0190 FFF7FEFF 		bl	sin
 2174              	.LVL359:
 2175 0194 34A3     		adr	r3, .L34+32
 2176 0196 D3E90023 		ldrd	r2, [r3]
 2177 019a FFF7FEFF 		bl	__aeabi_dmul
 2178              	.LVL360:
 2179 019e FFF7FEFF 		bl	__aeabi_d2f
 2180              	.LVL361:
 2181 01a2 08EE900A 		fmsr	s17, r0
 2182              	.LVL362:
 298:math/pprz_geodetic_float.c ****     max_iter--;
 2183              		.loc 1 298 0
 2184 01a6 F7EE007A 		fconsts	s15, #112
 2185 01aa 78EEA77A 		fadds	s15, s17, s15
 2186 01ae 08F1FF38 		add	r8, r8, #-1
 2187              	.LVL363:
 2188 01b2 17EE900A 		fmrs	r0, s15
 2189              	.LVL364:
 2190 01b6 FFF7FEFF 		bl	__aeabi_f2d
 2191              	.LVL365:
 2192 01ba 0446     		mov	r4, r0
 2193 01bc 18EE900A 		fmrs	r0, s17
 2194 01c0 0D46     		mov	r5, r1
 2195 01c2 FFF7FEFF 		bl	__aeabi_f2d
 2196              	.LVL366:
 2197 01c6 0246     		mov	r2, r0
 2198 01c8 0B46     		mov	r3, r1
 2199 01ca 0020     		movs	r0, #0
 2200 01cc 2C49     		ldr	r1, .L34+56
 2201 01ce FFF7FEFF 		bl	__aeabi_dsub
 2202              	.LVL367:
 2203 01d2 0246     		mov	r2, r0
 2204 01d4 0B46     		mov	r3, r1
 2205 01d6 2046     		mov	r0, r4
 2206 01d8 2946     		mov	r1, r5
 2207 01da FFF7FEFF 		bl	__aeabi_ddiv
 2208              	.LVL368:
 2209 01de 24A3     		adr	r3, .L34+40
 2210 01e0 D3E90023 		ldrd	r2, [r3]
 2211 01e4 FFF7FEFF 		bl	pow
 2212              	.LVL369:
 2213 01e8 3246     		mov	r2, r6
 2214 01ea 3B46     		mov	r3, r7
 2215 01ec FFF7FEFF 		bl	__aeabi_dmul
 2216              	.LVL370:
 2217 01f0 FFF7FEFF 		bl	atan
 2218              	.LVL371:
 2219 01f4 0246     		mov	r2, r0
 2220 01f6 0B46     		mov	r3, r1
 2221 01f8 FFF7FEFF 		bl	__aeabi_dadd
 2222              	.LVL372:
 2223 01fc 18A3     		adr	r3, .L34+24
 2224 01fe D3E90023 		ldrd	r2, [r3]
 2225 0202 FFF7FEFF 		bl	__aeabi_dsub
 2226              	.LVL373:
 2227 0206 FFF7FEFF 		bl	__aeabi_d2f
 2228              	.LVL374:
 2229              	.LBE45:
 300:math/pprz_geodetic_float.c ****   return phi0;
 2230              		.loc 1 300 0
 2231 020a 18F0FF08 		ands	r8, r8, #255
 2232              	.LBB46:
 298:math/pprz_geodetic_float.c ****     max_iter--;
 2233              		.loc 1 298 0
 2234 020e 07EE900A 		fmsr	s15, r0
 2235              	.LVL375:
 2236              	.LBE46:
 300:math/pprz_geodetic_float.c ****   return phi0;
 2237              		.loc 1 300 0
 2238 0212 0AD1     		bne	.L29
 2239              	.LVL376:
 2240              	.L31:
 2241              	.LBE44:
 2242              	.LBE43:
 350:math/pprz_geodetic_float.c ****   lla->lat = inverse_isometric_latitude_f(il, E, 1e-8);
 351:math/pprz_geodetic_float.c **** 
 352:math/pprz_geodetic_float.c ****   // copy alt above reference ellipsoid
 353:math/pprz_geodetic_float.c ****   lla->alt = utm->alt;
 2243              		.loc 1 353 0
 2244 0214 DAF80830 		ldr	r3, [r10, #8]	@ float
 350:math/pprz_geodetic_float.c ****   lla->lat = inverse_isometric_latitude_f(il, E, 1e-8);
 2245              		.loc 1 350 0
 2246 0218 CBED007A 		fsts	s15, [fp]
 2247              		.loc 1 353 0
 2248 021c CBF80830 		str	r3, [fp, #8]	@ float
 354:math/pprz_geodetic_float.c **** }
 2249              		.loc 1 354 0
 2250 0220 03B0     		add	sp, sp, #12
 2251              		.cfi_remember_state
 2252              		.cfi_def_cfa_offset 60
 2253              		@ sp needed
 2254 0222 BDEC068B 		fldmfdd	sp!, {d8-d10}
 2255              		.cfi_restore 84
 2256              		.cfi_restore 85
 2257              		.cfi_restore 82
 2258              		.cfi_restore 83
 2259              		.cfi_restore 80
 2260              		.cfi_restore 81
 2261              		.cfi_def_cfa_offset 36
 2262              	.LVL377:
 2263 0226 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2264              	.LVL378:
 2265              	.L29:
 2266              		.cfi_restore_state
 2267              	.LBB49:
 2268              	.LBB48:
 300:math/pprz_geodetic_float.c ****   return phi0;
 2269              		.loc 1 300 0
 2270 022a 38EE678A 		fsubs	s16, s16, s15
 2271              	.LVL379:
 2272 022e 9FED157A 		flds	s14, .L34+60
 2273 0232 F0EEC86A 		fabss	s13, s16
 2274 0236 F4EEC76A 		fcmpes	s13, s14
 2275 023a F1EE10FA 		fmstat
 2276              	.LBB47:
 298:math/pprz_geodetic_float.c ****     max_iter--;
 2277              		.loc 1 298 0
 2278 023e 08EE100A 		fmsr	s16, r0
 2279              	.LBE47:
 300:math/pprz_geodetic_float.c ****   return phi0;
 2280              		.loc 1 300 0
 2281 0242 A1DC     		bgt	.L30
 2282 0244 E6E7     		b	.L31
 2283              	.L35:
 2284 0246 00BF     		.align	3
 2285              	.L34:
 2286 0248 00000000 		.word	0
 2287 024c 80841E41 		.word	1092519040
 2288 0250 00000060 		.word	1610612736
 2289 0254 5016853E 		.word	1048909392
 2290 0258 399D52A2 		.word	-1571644103
 2291 025c 46DF913F 		.word	1066524486
 2292 0260 182D4454 		.word	1413754136
 2293 0264 FB21F93F 		.word	1073291771
 2294 0268 00000040 		.word	1073741824
 2295 026c 1AF2B43F 		.word	1068823066
 2296 0270 00000040 		.word	1073741824
 2297 0274 1AF2A43F 		.word	1067774490
 2298 0278 83B22834 		.word	875082371
 2299 027c 419B5B3A 		.word	979082049
 2300 0280 0000F03F 		.word	1072693248
 2301 0284 77CC2B32 		.word	841731191
 2302              	.LBE48:
 2303              	.LBE49:
 2304              		.cfi_endproc
 2305              	.LFE58:
 2307              		.section	.rodata.serie_coeff_proj_mercator,"a",%progbits
 2308              		.align	2
 2309              		.set	.LANCHOR0,. + 0
 2312              	serie_coeff_proj_mercator:
 2313 0000 2E927F3F 		.word	1065325102
 2314 0004 063D5B3A 		.word	979057926
 2315 0008 CBE54B35 		.word	894166475
 2316 000c 8A53A430 		.word	816075658
 2317 0010 19A5292C 		.word	740926745
 2318              		.text
 2319              	.Letext0:
 2320              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 2321              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 2322              		.file 4 "math/pprz_algebra_float.h"
 2323              		.file 5 "math/pprz_geodetic_float.h"
 2324              		.file 6 "math/pprz_algebra_double.h"
 2325              		.file 7 "math/pprz_geodetic_double.h"
 2326              		.file 8 "./math/pprz_geodetic_utm.h"
 2327              		.file 9 "/usr/arm-none-eabi/include/math.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pprz_geodetic_float.c
     /tmp/ccnsUZaS.s:24     .text.isometric_latitude_fast_f:00000000 $t
     /tmp/ccnsUZaS.s:28     .text.isometric_latitude_fast_f:00000000 isometric_latitude_fast_f
     /tmp/ccnsUZaS.s:64     .text.isometric_latitude_fast_f:00000030 $d
     /tmp/ccnsUZaS.s:71     .text.enu_of_ecef_point_f:00000000 $t
     /tmp/ccnsUZaS.s:76     .text.enu_of_ecef_point_f:00000000 enu_of_ecef_point_f
     /tmp/ccnsUZaS.s:127    .text.ned_of_ecef_point_f:00000000 $t
     /tmp/ccnsUZaS.s:132    .text.ned_of_ecef_point_f:00000000 ned_of_ecef_point_f
     /tmp/ccnsUZaS.s:167    .text.enu_of_ecef_vect_f:00000000 $t
     /tmp/ccnsUZaS.s:172    .text.enu_of_ecef_vect_f:00000000 enu_of_ecef_vect_f
     /tmp/ccnsUZaS.s:210    .text.ned_of_ecef_vect_f:00000000 $t
     /tmp/ccnsUZaS.s:215    .text.ned_of_ecef_vect_f:00000000 ned_of_ecef_vect_f
     /tmp/ccnsUZaS.s:250    .text.ecef_of_enu_point_f:00000000 $t
     /tmp/ccnsUZaS.s:255    .text.ecef_of_enu_point_f:00000000 ecef_of_enu_point_f
     /tmp/ccnsUZaS.s:487    .text.ecef_of_ned_point_f:00000000 $t
     /tmp/ccnsUZaS.s:492    .text.ecef_of_ned_point_f:00000000 ecef_of_ned_point_f
     /tmp/ccnsUZaS.s:526    .text.ecef_of_enu_vect_f:00000000 $t
     /tmp/ccnsUZaS.s:531    .text.ecef_of_enu_vect_f:00000000 ecef_of_enu_vect_f
     /tmp/ccnsUZaS.s:752    .text.ecef_of_ned_vect_f:00000000 $t
     /tmp/ccnsUZaS.s:757    .text.ecef_of_ned_vect_f:00000000 ecef_of_ned_vect_f
     /tmp/ccnsUZaS.s:791    .text.lla_of_ecef_f:00000000 $t
     /tmp/ccnsUZaS.s:796    .text.lla_of_ecef_f:00000000 lla_of_ecef_f
     /tmp/ccnsUZaS.s:1023   .text.lla_of_ecef_f:000001a8 $d
     /tmp/ccnsUZaS.s:1039   .text.ltp_def_from_ecef_f:00000000 $t
     /tmp/ccnsUZaS.s:1044   .text.ltp_def_from_ecef_f:00000000 ltp_def_from_ecef_f
     /tmp/ccnsUZaS.s:1160   .text.ecef_of_lla_f:00000000 $t
     /tmp/ccnsUZaS.s:1165   .text.ecef_of_lla_f:00000000 ecef_of_lla_f
     /tmp/ccnsUZaS.s:1310   .text.ecef_of_lla_f:000000c8 $d
     /tmp/ccnsUZaS.s:1318   .text.ltp_def_from_lla_f:00000000 $t
     /tmp/ccnsUZaS.s:1323   .text.ltp_def_from_lla_f:00000000 ltp_def_from_lla_f
     /tmp/ccnsUZaS.s:1437   .text.enu_of_lla_point_f:00000000 $t
     /tmp/ccnsUZaS.s:1442   .text.enu_of_lla_point_f:00000000 enu_of_lla_point_f
     /tmp/ccnsUZaS.s:1481   .text.ned_of_lla_point_f:00000000 $t
     /tmp/ccnsUZaS.s:1486   .text.ned_of_lla_point_f:00000000 ned_of_lla_point_f
     /tmp/ccnsUZaS.s:1528   .text.utm_of_lla_f:00000000 $t
     /tmp/ccnsUZaS.s:1533   .text.utm_of_lla_f:00000000 utm_of_lla_f
     /tmp/ccnsUZaS.s:1888   .text.utm_of_lla_f:00000218 $d
     /tmp/ccnsUZaS.s:1908   .text.lla_of_utm_f:00000000 $t
     /tmp/ccnsUZaS.s:1913   .text.lla_of_utm_f:00000000 lla_of_utm_f
     /tmp/ccnsUZaS.s:2286   .text.lla_of_utm_f:00000248 $d
     /tmp/ccnsUZaS.s:2308   .rodata.serie_coeff_proj_mercator:00000000 $d
     /tmp/ccnsUZaS.s:2312   .rodata.serie_coeff_proj_mercator:00000000 serie_coeff_proj_mercator
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.0.7f506cdee5614e5fae524d20989ad8c8
                           .group:00000000 wm4.pprz_geodetic.h.35.f7fdb5d11659b92d11c7ce67b6317005
                           .group:00000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:00000000 wm4.newlib.h.8.2702bca278809460f0af6fba1d84eb68
                           .group:00000000 wm4.features.h.22.2e382148a0560adabf236cddd4e880f4
                           .group:00000000 wm4.config.h.220.a09b0b0de3c25be3f39d71990e617bff
                           .group:00000000 wm4._ansi.h.23.9f8fcfa20193763fcf364fb91705c94b
                           .group:00000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:00000000 wm4._default_types.h.6.35ee9e747940367bf2a634907d1c2382
                           .group:00000000 wm4.lock.h.2.9bc98482741e5e2a9450b12934a684ea
                           .group:00000000 wm4._types.h.54.d3d34a3b7f3cc230cd159baf022b4b08
                           .group:00000000 wm4.stddef.h.158.61317cdbfb4026324507d123a50b0fd6
                           .group:00000000 wm4.reent.h.17.8bd9e4098e0428508c282cad794fae43
                           .group:00000000 wm4.cdefs.h.47.3052445825803de6c3a3b68ec8193866
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.158.a7efb00f6cbc6f43213b50e183c9830c
                           .group:00000000 wm4._intsup.h.10.b2832a532eae49c14d45880be6d4ca65
                           .group:00000000 wm4._stdint.h.10.f76354baea1c7088202064e6f3d4f5e3
                           .group:00000000 wm4.stdint.h.23.373a9d32a9e4c2e88fd347156532d281
                           .group:00000000 wm4.inttypes.h.23.a096771aacee9aba4b33c2d04aacc9b1
                           .group:00000000 wm4.stdbool.h.29.1c9ee6859ce8145f7838a4f2549ccec2
                           .group:00000000 wm4.math.h.35.1ee5c20b09553bed5d7eb3c445ef70bd
                           .group:00000000 wm4.message_pragmas.h.2.a703592919ab94db061a475289156c21
                           .group:00000000 wm4.std.h.37.c94f17957e155d4dda789b7ad0549a32
                           .group:00000000 wm4.pprz_algebra.h.47.d249264ea6bacf2198e290d461cf6dbe
                           .group:00000000 wm4.pprz_algebra_float.h.98.bb035bcbfa66bb186e7ea81143fd64bc
                           .group:00000000 wm4.pprz_algebra_double.h.32.ffddb69f4b2468d251e675e232b5bba1
                           .group:00000000 wm4.pprz_geodetic_utm.h.31.62f7b8d6a14b5a86d16c21424652c0cf

UNDEFINED SYMBOLS
__aeabi_f2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2f
tan
log
sqrtf
powf
atanf
atan2f
sinf
cosf
__aeabi_i2d
__aeabi_dsub
__aeabi_ddiv
sin
cosh
asin
sinh
cos
atan
exp
pow
